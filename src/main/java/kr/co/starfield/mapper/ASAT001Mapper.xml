<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.starfield.mapper.ASAT001Mapper">
	
	<!-- 가입자 목록 조회 (오늘) -->
	<select id="getToDayJoinCount" parameterType="String" resultType="Int">
		SELECT
			COUNT(*)
		FROM
			SMBR001
		WHERE
			STS = 1
		AND
			BCN_CD = #{bcn_cd}
		AND
			TO_CHAR(REG_DTTM, 'YYYY.MM.DD') = TO_CHAR(SYSDATE, 'YYYY.MM.DD')
	</select>
	
	<!-- 가입자 목록 조회 (월) -->
	<select id="getMonthJoinCount" parameterType="String" resultType="Int">
		SELECT
			COUNT(*)
		FROM
			SMBR001
		WHERE
			STS = 1
		AND
			BCN_CD = #{bcn_cd}
		AND
			TO_CHAR(REG_DTTM, 'YYYY.MM') = TO_CHAR(SYSDATE, 'YYYY.MM')
	</select>
	
	<!-- 가입자 목록 조회 (누적) -->
	<select id="getTotalJoinCount" parameterType="String" resultType="Int">
		SELECT
			COUNT(*)
		FROM
			SMBR001
		WHERE
			STS = 1
		AND
			BCN_CD = #{bcn_cd}
	</select>
	
	
	<!-- 가입자 목록 조회 -->
	<select id="getJoinCount" parameterType="JoinStats" resultType="JoinStatsFilter">
		SELECT 
			JOIN_DATE
			, COUNT(*) AS COUNT
			, SUM(COUNT(*)) OVER(ORDER BY JOIN_DATE ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ACC_COUNT
		FROM
			(SELECT TO_CHAR(REG_DTTM, '${date_type}') AS JOIN_DATE, REG_DTTM FROM SMBR001 WHERE STS = 1 AND BCN_CD = #{bcn_cd}) T1
		WHERE
			TO_DATE(#{start_date}, 'YYYY.MM.DD') <![CDATA[<=]]> TO_DATE(TO_CHAR(REG_DTTM, 'YYYY.MM.DD'), 'YYYY.MM.DD')
		AND
			TO_DATE(#{end_date}, 'YYYY.MM.DD') >= TO_DATE(TO_CHAR(REG_DTTM, 'YYYY.MM.DD'), 'YYYY.MM.DD')
		GROUP BY JOIN_DATE
		ORDER BY JOIN_DATE
	</select>
	
	<!-- 앱다운로드 현황 조회 (누적) -->
	<select id="getTotalAppDownCount" parameterType="String" resultType="Int">
		SELECT
			COUNT(*)
		FROM SAML001
	</select>
	
	<!-- 앱다운로드 목록 조회 -->
	<select id="getAppDownCount" parameterType="JoinStats" resultType="JoinStatsFilter">
		SELECT 
			   JOIN_DATE
			, SUM(IOS_COUNT) AS IOS_COUNT
      		, SUM(AND_COUNT) AS AND_COUNT
      		, SUM(IOS_COUNT) + SUM(AND_COUNT) AS ACC_COUNT
      		, SUM(COUNT(*)) OVER() AS TOT_COUNT
		FROM
			(SELECT TO_CHAR(REG_DTTM, '${date_type}') AS JOIN_DATE,
              DECODE(INSTR(DVIC_MODEL,'iPh'),0,0,1) IOS_COUNT,
              DECODE(INSTR(DVIC_MODEL,'iPh'),0,1,0) AND_COUNT,
             REG_DTTM 
       FROM SAML001) T1
		WHERE
			TO_DATE(#{start_date}, 'YYYY.MM.DD') <![CDATA[<=]]> TO_DATE(TO_CHAR(REG_DTTM, 'YYYY.MM.DD'), 'YYYY.MM.DD')
		AND
			TO_DATE(#{end_date}, 'YYYY.MM.DD') <![CDATA[>=]]> TO_DATE(TO_CHAR(REG_DTTM, 'YYYY.MM.DD'), 'YYYY.MM.DD')
		GROUP BY JOIN_DATE
		ORDER BY JOIN_DATE
		<!-- SELECT 
			JOIN_DATE
			, COUNT(*) AS ACC_COUNT
			, SUM(COUNT(*)) OVER(ORDER BY JOIN_DATE ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS COUNT
		FROM
			(SELECT TO_CHAR(REG_DTTM, '${date_type}') AS JOIN_DATE, REG_DTTM FROM SAML001) T1
		WHERE
			TO_DATE(#{start_date}, 'YYYY.MM.DD') <![CDATA[<=]]> TO_DATE(TO_CHAR(REG_DTTM, 'YYYY.MM.DD'), 'YYYY.MM.DD')
		AND
			TO_DATE(#{end_date}, 'YYYY.MM.DD') <![CDATA[>=]]> TO_DATE(TO_CHAR(REG_DTTM, 'YYYY.MM.DD'), 'YYYY.MM.DD')
		GROUP BY JOIN_DATE
		ORDER BY JOIN_DATE 
		  SELECT 
			 '2016-10-10' JOIN_DATE
			, 11 AS ACC_COUNT
	      , 12 AS IOS_COUNT
	      , 13 AS AND_COUNT
				, 1 COUNT
			FROM dual
	    UNION ALL
	    SELECT 
				 '2016-10-11' JOIN_DATE
				, 15 AS ACC_COUNT
	      , 16 AS IOS_COUNT
	      , 18 AS AND_COUNT
				, 10 COUNT
			FROM dual
		-->
	</select>
	<!-- 앱사용자현황 목록 조회 --> 

	<select id="SP_APP_USER_SUM" statementType="CALLABLE"  parameterType="JoinStatsFilter">
		call SP_APP_USER_SUM(#{date_type, mode=IN, jdbcType=VARCHAR},#{start_date, mode=IN, jdbcType=VARCHAR}
						    ,#{end_date, mode=IN, jdbcType=VARCHAR})
	</select>
	<select id="getAppUserCount" parameterType="JoinStats" resultType="JoinStatsFilter">
		
		SELECT SUM_DT join_date,MAP_USER_CNT,LOC_AGGR_CNT, MKT_AGGR_CNT, TOT_CNT acc_count
			 , SUM(TOT_CNT) OVER() AS TOT_COUNT
		FROM MAIN
		ORDER BY SUM_DT
		<!-- 		
		SELECT 
			    JOIN_DATE
			   ,SUM(MAP_USER_CNT) MAP_USER_CNT, SUM(LOC_AGGR_CNT) LOC_AGGR_CNT, SUM(MKT_AGGR_CNT) MKT_AGGR_CNT, SUM(TOT_CNT) acc_count
			   , SUM(TOT_COUNT) AS TOT_COUNT
		FROM
			(SELECT TO_CHAR(TO_DATE(REPLACE(SUM_DT,',','')), '${date_type}') AS JOIN_DATE, TO_DATE(REPLACE(SUM_DT,',','')) SUM_DT, MAP_USER_CNT, LOC_AGGR_CNT, MKT_AGGR_CNT, TOT_CNT
			        ,SUM(TOT_CNT) OVER() AS TOT_COUNT  
			 FROM MAIN
			 WHERE
			TO_DATE(#{start_date}, 'YYYY.MM.DD') <![CDATA[<=]]> TO_DATE(TO_CHAR(TO_DATE(REPLACE(SUM_DT,',','')), 'YYYY.MM.DD'), 'YYYY.MM.DD')
		AND
			TO_DATE(#{end_date}, 'YYYY.MM.DD')  <![CDATA[>=]]> TO_DATE(TO_CHAR(TO_DATE(REPLACE(SUM_DT,',','')), 'YYYY.MM.DD'), 'YYYY.MM.DD')
			 
			) T1
		
		GROUP BY JOIN_DATE
		ORDER BY JOIN_DATE -->
	</select>
	<select id="getHeatmapList" parameterType="HeatMapFilter" resultType="HeatMap">
		WITH R AS (
			SELECT 
				X_CTN_CORD, Y_CTN_CORD, COUNT(*) CNT
			FROM V_LOC_INFO V
			WHERE FL = #{sh_floor}
			AND REG_DTTM = #{sh_dt}
			GROUP BY X_CTN_CORD, Y_CTN_CORD
		)
		SELECT 
			X_CTN_CORD X
			, Y_CTN_CORD Y
			, CNT VALUE
			, '10' RADIUS
			<!-- , (SELECT MAX(CNT) FROM R) MAX -->
		FROM R
	</select>


	<select id="getHeatmapMax" parameterType="HeatMap" resultType="string">
		WITH R AS (
			SELECT 
				X_CTN_CORD, Y_CTN_CORD, COUNT(*) CNT
			FROM V_LOC_INFO V
			WHERE FL = #{sh_floor}
			AND REG_DTTM = #{sh_dt}
			GROUP BY X_CTN_CORD, Y_CTN_CORD
		)
		SELECT
	    	*
	    FROM
	    (
	    SELECT 
			(SELECT MAX(CNT) FROM R) MAX
		FROM R
	    )
	    GROUP BY MAX
	</select>
</mapper>
