<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
			<value>/WEB-INF/conf/common.properties</value>
			<value>/WEB-INF/conf/jdbc.properties</value>
			</list>
		</property>
	</bean> -->
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- TODO : properties 필요 여부 재 확인. 위 설정과 중복. -->
	<context:property-placeholder location="/WEB-INF/conf/*.properties"/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- @ResponceBody String 의 캐릭터셋 처리 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
						<value>application/xml;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- Enables transaction -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/images/**" location="/resources/images/" />
	<mvc:resources mapping="/js/**" location="/resources/js/" />
	<mvc:resources mapping="/json/**" location="/resources/json/" />
	<mvc:resources mapping="/css/**" location="/resources/css/" />
	<mvc:resources mapping="/font/**" location="/resources/font/" />
	<mvc:resources mapping="/html/**" location="/resources/html/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="atom" value="application/atom+xml" />
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />	
				<entry key="file" value="multipart/form-data" />
				<entry key="xls"  value="application/vnd.ms-excel" />
			</map>
		</property>

		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.XmlViewResolver">
	                <property name="location" value="/WEB-INF/excel/excelView.xml"/>
	            </bean>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>

		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
			</list>
		</property>
	</bean>
	
	<!-- <context:component-scan base-package="kr.co.starfield*"  use-default-filters="false"> -->
	<context:component-scan base-package="kr.co.starfield*">
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	    <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
<!-- 	<bean class="org.springframework.mock.web.MockServletContext"/> -->
	
 	<bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize" value="70971520" />
	</bean>
	
	
    
    <!-- Redis jedis -->
	<bean id="jedisConnFactory" 
    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
    p:use-pool="true" p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}" p:poolConfig-ref="jedisPoolConfig"/>
    
	<bean id="stringRedisTemplate" 
	    class="org.springframework.data.redis.core.StringRedisTemplate"
	    p:connection-factory-ref="jedisConnFactory" p:enableTransactionSupport="false" />
	  
	<!-- session Redis jedis -->
	<bean id="sessionJedisConnFactory" 
    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
    p:use-pool="true" p:host-name="${redis.session.host}" p:port="${redis.session.port}" p:password="${redis.session.pass}" p:poolConfig-ref="jedisPoolConfig"/>
    
	<bean id="stringSessionRedisTemplate" 
	    class="org.springframework.data.redis.core.StringRedisTemplate"
	    p:connection-factory-ref="sessionJedisConnFactory" p:enableTransactionSupport="false" />
	  

	  <mvc:interceptors>
		<mvc:interceptor>
			<!-- 인터셉터 적용 -->
			<mvc:mapping path="/**" /><!-- 전체대상 -->
			<!-- <mvc:mapping path="/coupon/**" /> -->
			<!-- <mvc:mapping path="" /> -->
			
			<!-- 인터셉터 제외 -->
			<mvc:exclude-mapping path="/**" />
			<!-- <mvc:exclude-mapping path="/login?returnURI**" /> -->
			<mvc:exclude-mapping path="/01/coupon/**" />
			<mvc:exclude-mapping path="/01/styleSets/**" />
			<mvc:exclude-mapping path="/01/map/**" />
			<mvc:exclude-mapping path="/01/stats/**" />
			<mvc:exclude-mapping path="/login" />
			<mvc:exclude-mapping path="/logout" />
			<mvc:exclude-mapping path="/rest/auth/loginCheck" />
			<mvc:exclude-mapping path="/images/**" />
			<mvc:exclude-mapping path="/js/**" />
			<mvc:exclude-mapping path="/css/**" />
			<mvc:exclude-mapping path="/font/**" />
			<mvc:exclude-mapping path="/html/**" />
			
			<bean class="kr.co.starfield.common.Interceptor" />
		</mvc:interceptor>
    </mvc:interceptors> 
	  
	  
	  
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" p:maxTotal="100" p:blockWhenExhausted="true" p:maxWaitMillis="1000"/>
	
<!-- 	<bean id="authInterceptor" class="kr.co.starfield.common.Interceptor" />
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="useSuffixPatternMatch" value="true" />
		<property name="alwaysUseFullPath" value="true" />
		<property name="order" value="1" />
		<property name="interceptors">
			<list>
				<ref bean="authInterceptor"/>
			</list>
		</property>
	</bean> -->
	<!-- method loging -->
	<!-- <aop:config>
    <aop:advisor advice-ref="loggingAdvisor"
        pointcut="execution(public * kr.co.starfield.*.*(..))" />
	</aop:config>
	<bean id="loggingAdvisor"
	    class="org.springframework.aop.interceptor.CustomizableTraceInterceptor">
	    <property name="loggerName" value="logger-name" />
	    <property name="enterMessage" value="Entering $[methodName]($[arguments])" />
	    <property name="exitMessage" value="Leaving $[methodName](): $[returnValue]" />
	</bean>    -->
</beans>

