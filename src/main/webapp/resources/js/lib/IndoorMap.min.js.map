{"version":3,"sources":["webpack:///sample/js/IndoorMap.min.js","webpack:///webpack/bootstrap de6a919c340bdd9e11f8?dcba","webpack:///./src/IndoorMap.js?14b1","webpack:///./src/requestAnimationFramePolyfill.js?d7cb","webpack:///./src/IndoorMapStyle.scss?9d77*","webpack:///./src/IndoorMapStyle.scss?bcfd","webpack:///./~/css-loader/lib/css-base.js?da04","webpack:///./~/style-loader/addStyles.js?b980","webpack:///./~/promise/index.js?2167","webpack:///./~/promise/lib/index.js?d0e4","webpack:///./~/promise/lib/core.js?fed0","webpack:///./~/asap/browser-raw.js?6368","webpack:///./~/promise/lib/done.js?24cc","webpack:///./~/promise/lib/finally.js?1c58","webpack:///./~/promise/lib/es6-extensions.js?5bdc","webpack:///./~/promise/lib/node-extensions.js?001f","webpack:///./~/asap/browser-asap.js?4264","webpack:///./~/promise/lib/synchronous.js?70fd","webpack:///./~/detector-webgl/index.js?57eb","webpack:///./src/IndoorMap_core.js?9979","webpack:///./src/three.min.js?521b","webpack:///./~/tween.js/src/Tween.js?ecf4","webpack:///./~/process/browser.js?82e4","webpack:///./src/IndoorMap_spray.js?170c","webpack:///./src/IndoorMap_block.js?f96e","webpack:///./src/IndoorMap_preprocessor.js?0b72","webpack:///./~/polygon-offset/src/offset.js?cfbb","webpack:///./~/polygon-offset/src/edge.js?fc8a","webpack:///./~/martinez-polygon-clipping/index.js?fd34","webpack:///./~/martinez-polygon-clipping/src/index.js?cfe3","webpack:///./~/martinez-polygon-clipping/src/edge_type.js?ec65","webpack:///./~/tinyqueue/index.js?af52","webpack:///./~/bintrees/index.js?8e2c","webpack:///./~/bintrees/lib/rbtree.js?7449","webpack:///./~/bintrees/lib/treebase.js?038c","webpack:///./~/bintrees/lib/bintree.js?e89d","webpack:///./~/martinez-polygon-clipping/src/sweep_event.js?7994","webpack:///./~/martinez-polygon-clipping/src/signed_area.js?dac2","webpack:///./~/martinez-polygon-clipping/src/compare_events.js?29e0","webpack:///./~/martinez-polygon-clipping/src/compare_segments.js?aa55","webpack:///./~/martinez-polygon-clipping/src/equals.js?654e","webpack:///./~/martinez-polygon-clipping/src/segment_intersection.js?b707","webpack:///./~/polygon-offset/src/utils.js?2c70","webpack:///./src/IndoorMap_icon.js?c85a","webpack:///./src/IndoorMap_marker.js?45a9"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","$","window","Promise","IndoorMap","$parent","userOpts","fallBack","load","mapData","loadPromise","resolve","reject","constructor","String","getJSON","done","data","loadMapData","fail","statusText","printErrType","console","error","chainObjFactory","cb","IMC","opts","floorController","$floorController","css","controllerPositionCss","floorControllerPosition","floorControllerCustomClass","addClass","$container","append","$floorBtn","i","floors","length","targetFloor","$newFloorBtn","clone","text","name","on","floor","e","changeFloor","dragging","tabPossibility","INITIAL_TAB_POSSIBILITY","$zoomInBtn","stepZoom","zoomStep","zoomAnimation","$zoomOutBtn","markerLayer","isPointInMap","pageX","pageY","mapPoint","pagePoint2Map","interaction","init","preventDefault","interact","interactionWithBlocks","zoomOnMouseWheel","event","originalEvent","wheelDelta","prevFingersNum","mapPoints","pageTouches2Maps","touches","currFingersNum","log","setMarker","position","getCurrentMap","scaleFactor","newMarker","marker","addMarker","removeMarker","removeMarkersOn","removeAllMarkers","setSpray","removeSpraysOn","removeAllSprays","setPolyline","points","removePolyline","polyline","removePolylinesOn","removeAllPolylines","getBlock","getBlocksOn","getAllBlocks","setView","_zoomLevel","_center","_animation","centerVector","Point","multiplyScalar","setTiltAngle","_tiltAngle","rotate","rotationAngle","center","animation","externalRotate","type","promise","chainingObj","chainableMethods","methodName","args","arguments","chainingPromise","then","nextPromise","self","apply","delay","delayTime","setTimeout","defaultOpts","backgroundColor","tiltAngle","zoomValue","minZoom","maxZoom","pinchZoom","twoFingerRotation","zoomController","zoomControllerCustomClass","zoomControllerPosition","autoFit","limitTranslation","markerClustering","markerClusteringAnimation","onFloorChanged","onBlockMouseOver","onBlockMouseOut","onBlockClick","parseInt","optionCheckMap","positionCheckMap","topleft","topright","bottomleft","bottomright","key","extend","controllerOffset","top","left","right","bottom","width","height","background-color","toString","$zoomController","$zoomBtn","display","icon","defaultIcon","jQuery","lastTime","vendors","x","requestAnimationFrame","cancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","Math","max","clearTimeout","content","locals","push","list","result","this","item","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","createLinkElement","linkElement","rel","obj","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","fn","memo","isOldIE","test","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","noop","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","a","tryCallTwo","b","TypeError","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","res","handle","Handler","deferred","_10","handleResolved","asap","ret","newValue","finale","_97","value","reason","_61","prototype","global","rawAsap","task","queue","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","node","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","MutationObserver","WebKitMutationObserver","err","f","valuePromise","TRUE","FALSE","NULL","UNDEFINED","undefined","ZERO","EMPTYSTRING","all","arr","Array","slice","val","remaining","race","values","forEach","denodeifyWithCount","argumentCount","body","concat","callbackFn","Function","denodeifyWithoutCount","fnLength","map","_","denodeify","Infinity","nodeify","pop","ctx","throwFirstError","pendingErrors","shift","rawTask","freeTasks","RawTask","requestErrorThrow","onerror","enableSynchronous","isPending","getState","isFulfilled","isRejected","getValue","getReason","disableSynchronous","WebGLRenderingContext","getContext","spray","block","THREE","TWEEN","sprayFactory","blockFactory","cancelTweens","zoomTween","stop","translationTween","zoomTranTween","rotationTween","fitCanvas","cWidth","cHeight","renderer","setSize","$canvas","cOffset","offset","camera","aspect","needRepositionMarkers","updateProjectionMatrix","preProcessor","floorData","polylines","sprays","blocksWithId","markers","markerContainer","$markerLayer","hide","boundary","minX","minZ","maxX","maxZ","maps","mapObjects","Object3D","blocksObject","add","spraysObject","polylinesObject","blockDatas","blocks","blockData","newBlock","newSpray","blockW","blockH","blockCenterX","blockCenterZ","sprayX","sprayOffset","sprayZ","sprayScale","defaultSprayScale","originalHeight","image","size","currentFloor","initialCameraDistance","getInitialCameraDistance","basePlate","basePlateWidth","basePlateOffset","basePlateHeight","basePlateGeom","BoxGeometry","basePlateMaterial","MeshLambertMaterial","color","basePlateColor","Mesh","set","defaultFloor","resetCameraToInitialState","render","show","resize","floorBoundary","w","h","r","theta","fov","PI","tan","cos","floorCenterVector","newFloor","scene","currentBlocksObject","getObjectByName","resetDLight","_lookAtVector","_cameraViewVector","dLightVector","applyAxisAngle","yAxis","dLight","y","z","limitZoomValue","newZoomValue","newLookAtVector","Tween","lookAtVector","to","onUpdate","Vector3","cameraViewVector","onComplete","onStop","start","cameraDistance","setLength","newTiltAngle","initialUnitVector","rotationVector","cameraViewVectorInv","cameraViewVectorLength","normalize","newCameraViewVector","tiltTween","lookAt","translate","prev","curr","sub","cameraPositionVector","centerX","centerZ","rad","NDC2Intersection","rotationCenter","offsetVector","offsetVector_","degree","prevRad","deltaRad","zoom","scaleCenterVector","zoomCenter","map2NDC","eventType","raycaster","setFromCamera","intersects","intersectObject","newMouseOveredBlock","NULL_BLOCK","object","prevMouseOveredBlock","blockObject","onMouseOut","onMouseOver","clickedBlock","onClick","resultBlock","intersection2NDC","intersection","intersectionVector","NDCVector","project","point","ray","intersectPlane","intersectionPlane","markerOpts","elem","targetMarkers","priority","wasMarkerInserted","resetAlign","repositionElem","reclusteringMarkers","markerElem","repositionMarkers","currentMarkers","targetMarker","overlapCount","fill","tm","forceToShow","hidden","fadeOut","fadeIn","tb","getBoundary","cm","x2","x1","y2","y1","removeSpray","sprayMesh","polylineOpts","lineMaterial","LineBasicMaterial","linewidth","linecap","linejoin","lineGeom","Geometry","vertices","lineMesh","Line","getCanvasDOM","pageTouches","getMaps","WebGLRenderer","setClearColor","domElement","overflow","Scene","PerspectiveCamera","sin","aLight","AmbientLight","DirectionalLight","prevPagePoints","min","currPagePoints","prevIntersections","currIntersections","prevCenter","currCenter","aLength","bLength","na","nb","cosab","dot","acos","rotationAxis","cross","Raycaster","Plane","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","REVISION","Number","EPSILON","pow","sign","Object","defineProperty","get","match","assign","d","hasOwnProperty","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","Color","setRGB","g","copy","setHex","setStyle","setScalar","setHSL","euclideanModulo","clamp","parseFloat","warn","exec","charAt","ColorKeywords","copyGammaToLinear","copyLinearToGamma","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","getHSL","s","l","k","getStyle","offsetHSL","addColors","addScalar","multiply","lerp","equals","fromArray","toArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","_x","_y","_z","_w","onChangeCallback","setFromEuler","Euler","order","setFromAxisAngle","setFromRotationMatrix","elements","setFromUnitVectors","abs","crossVectors","inverse","conjugate","lengthSq","multiplyQuaternions","premultiply","slerp","atan2","onChange","slerpFlat","n","q","Vector2","setX","setY","setComponent","getComponent","addVectors","addScaledVector","subVectors","subScalar","isFinite","divide","divideScalar","clampScalar","clampLength","ceil","round","roundToZero","negate","lengthManhattan","angle","distanceTo","distanceToSquared","lerpVectors","fromAttribute","itemSize","array","rotateAround","setZ","multiplyVectors","applyEuler","applyQuaternion","applyMatrix3","applyMatrix4","applyProjection","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","projectOnVector","projectOnPlane","reflect","angleTo","setFromSpherical","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","_order","DefaultOrder","RotationOrders","split","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","toVector3","Line3","end","delta","distanceSq","distance","at","closestPointToPointParameter","closestPointToPoint","Box2","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","isEmpty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","intersect","union","Box3","setFromArray","setFromObject","updateMatrixWorld","traverse","geometry","BufferGeometry","attributes","intersectsSphere","intersectsPlane","normal","constant","getBoundingSphere","Sphere","Matrix3","Float32Array","identity","setFromMatrix4","applyToVector3Array","applyToBuffer","getX","getY","getZ","setXYZ","determinant","transpose","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","t","copyPosition","extractBasis","makeBasis","extractRotation","makeRotationFromEuler","u","v","C","E","A","I","B","F","K","P","M","H","L","O","N","multiplyToArray","getPosition","setPosition","scale","getMaxScaleOnAxis","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","compose","decompose","makeFrustum","makePerspective","DEG2RAD","makeOrthographic","Ray","origin","direction","recast","distanceSqToPoint","distanceSqToSegment","intersectSphere","distanceToPlane","intersectBox","intersectTriangle","empty","getBoundingBox","Frustum","planes","setFromMatrix","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","distanceToSphere","projectPoint","orthoPoint","intersectLine","intersectsLine","coplanarPoint","Spherical","makeSafe","RAD2DEG","generateUUID","random","mapLinear","smoothstep","smootherstep","random16","randInt","randFloat","randFloatSpread","degToRad","radToDeg","isPowerOfTwo","nearestPowerOfTwo","LN2","nextPowerOfTwo","Spline","initFromArray","getPoint","getControlPointsArray","getLength","chunks","total","reparametrizeByArcLength","Triangle","barycoordFromPoint","setFromPointsAndIndices","area","midpoint","plane","Interpolant","parameterPositions","_cachedIndex","resultBuffer","sampleValues","valueSize","evaluate","afterEnd_","beforeStart_","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","CubicInterpolant","_offsetNext","_weightNext","_offsetPrev","_weightPrev","create","endingStart","endingEnd","DiscreteInterpolant","LinearInterpolant","QuaternionLinearInterpolant","Clock","autoStart","elapsedTime","oldTime","startTime","running","performance","now","getElapsedTime","getDelta","EventDispatcher","addEventListener","_listeners","hasEventListener","removeEventListener","dispatchEvent","target","Layers","mask","enable","disable","visible","raycast","children","near","far","params","LOD","Points","threshold","Sprite","defineProperties","PointCloud","linePrecision","OrthographicCamera","sort","intersectObjects","isArray","Object3DIdCount","uuid","parent","up","DefaultUp","enumerable","rotation","quaternion","modelViewMatrix","normalMatrix","matrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","layers","receiveShadow","castShadow","frustumCulled","renderOrder","userData","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getObjectById","getObjectByProperty","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","toJSON","metadata","geometries","materials","textures","images","version","generator","material","parse","Face3","vertexNormals","vertexColors","materialIndex","BufferAttribute","dynamic","updateRange","count","normalized","needsUpdate","setDynamic","copyAt","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","GeometryIdCount","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","groupsNeedUpdate","lineDistancesNeedUpdate","colorsNeedUpdate","normalsNeedUpdate","uvsNeedUpdate","elementsNeedUpdate","verticesNeedUpdate","computeBoundingBox","fromBufferGeometry","uv","uv2","groups","computeFaceNormals","computeVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","faceNormals","computeTangents","computeLineDistances","merge","mergeMesh","mergeVertices","sortFacesByMaterialIndex","_id","parameters","normals","uvs","dispose","DirectGeometry","indices","uvs2","computeGroups","fromGeometry","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","updateFromObject","__directGeometry","lineDistance","fromDirectGeometry","isNaN","normalizeNormals","toNonIndexed","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Uniform","onUpdateCallback","AnimationAction","_new","_mixer","_clip","_localRoot","tracks","createInterpolant","_interpolantSettings","_interpolants","_propertyBindings","_weightInterpolant","_timeScaleInterpolant","_byClipCacheIndex","_cacheIndex","loop","_loopCount","_startTime","time","_effectiveWeight","weight","_effectiveTimeScale","timeScale","repetitions","paused","enabled","clampWhenFinished","zeroSlopeAtEnd","zeroSlopeAtStart","play","_activateAction","_deactivateAction","reset","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setLoop","setEffectiveWeight","getEffectiveWeight","_scheduleFading","crossFadeFrom","duration","warp","crossFadeTo","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","_lendControlInterpolant","getMixer","getClip","getRoot","_root","_update","_updateTimeScale","_updateTime","_updateWeight","accumulate","loopCount","_setEndings","action","loopDelta","AnimationClip","resetDuration","trim","optimize","times","fps","KeyframeTrack","CreateFromMorphTargetSequence","AnimationUtils","getKeyframeOrder","sortedArray","NumberKeyframeTrack","findByName","animations","CreateClipsFromMorphTargetSequences","parseAnimation","flattenJSON","hierarchy","keys","morphTarget","VectorKeyframeTrack","QuaternionKeyframeTrack","AnimationMixer","_initMemoryManager","_accuIndex","clipAction","_actionsByClip","actionByRoot","knownActions","_Action","_bindAction","_addInactiveAction","existingAction","stopAllAction","_actions","_nActiveActions","_bindings","_nActiveBindings","useCount","uncacheClip","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","_bindingsByRootAndName","restoreOriginalState","_removeInactiveBinding","uncacheAction","referenceCount","_addInactiveBinding","PropertyMixer","PropertyBinding","binding","parsedPath","ValueTypeName","getValueSize","buffer","_lendBinding","saveOriginalState","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","stats","actions","inUse","bindings","controlInterpolants","rootNode","path","_controlInterpolantsResultBuffer","__cacheIndex","AnimationObjectGroup","_objects","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","objects","bindingsPerObject","uncache","subscribe_","unsubscribe_","arraySlice","isTypedArray","subarray","convertArray","BYTES_PER_ELEMENT","ArrayBuffer","isView","DataView","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","getInterpolation","_getTrackTypeForValueTypeName","interpolation","ColorKeyframeTrack","BooleanKeyframeTrack","StringKeyframeTrack","parseTrackName","findNode","nodeName","setValue","objectName","propertyName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","skeleton","bones","Versioning","None","NeedsUpdate","targetObject","MatrixWorldNeedsUpdate","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_getValue_unbound","_setValue_unbound","Composite","_targetGroup","lastIndex","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","Audio","context","source","createBufferSource","onended","onEnded","gain","createGain","connect","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","setBuffer","pause","currentTime","disconnect","getFilters","setFilters","getFilter","setFilter","setPlaybackRate","getPlaybackRate","getLoop","getVolume","setVolume","AudioAnalyser","analyser","createAnalyser","fftSize","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","AudioContext","webkitAudioContext","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","AudioListener","destination","removeFilter","getMasterVolume","setMasterVolume","listener","setOrientation","Camera","matrixWorldInverse","CubeCamera","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","texture","generateMipmaps","activeCubeFace","setRenderTarget","view","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","focus","filmGauge","filmOffset","setFocalLength","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","StereoCamera","cameraL","cameraR","Light","intensity","groundColor","decay","penumbra","LightShadow","bias","mapSize","shadow","DirectionalLightShadow","HemisphereLight","PointLight","SpotLight","SpotLightShadow","AudioLoader","manager","DefaultLoadingManager","XHRLoader","setResponseType","decodeAudioData","Cache","files","clear","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","initMaterials","createMaterial","Handlers","setCrossOrigin","repeat","wrapS","wrapT","anisotropy","TextureLoader","MaterialLoader","blending","specular","emissive","shininess","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","emissiveMap","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","lightMap","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","aoMap","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","bumpMap","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","bumpScale","normalMap","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","normalScale","specularMap","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","metalnessMap","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","roughnessMap","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","alphaMap","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","side","opacity","transparent","setTextures","handlers","XMLHttpRequest","overrideMimeType","open","response","status","itemEnd","itemError","responseType","withCredentials","send","itemStart","setPath","setWithCredentials","FontLoader","substring","Font","ImageLoader","createElementNS","onload","src","JSONLoader","texturePath","setTexturePath","influencesPerVertex","morphColors","LoadingManager","onStart","onLoad","onProgress","onError","BufferGeometryLoader","drawcalls","offsets","getTexture","roughness","metalness","uniforms","vertexShader","fragmentShader","shading","alphaTest","depthTest","depthWrite","colorWrite","wireframe","wireframeLinewidth","sizeAttenuation","displacementMap","displacementScale","displacementBias","emissiveIntensity","envMap","combine","reflectivity","lightMapIntensity","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","widthSegments","heightSegments","depth","depthSegments","segments","thetaStart","thetaLength","radiusTop","radiusBottom","radialSegments","openEnded","phiStart","phiLength","detail","innerRadius","outerRadius","thetaSegments","phiSegments","tube","tubularSegments","arc","url","Texture","mapping","wrap","SkinnedMesh","mode","Group","levels","addLevel","CubeTextureLoader","CubeTexture","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","isCubemap","Material","MaterialIdCount","lights","fog","blendSrc","blendDst","blendEquation","blendEquationAlpha","blendDstAlpha","blendSrcAlpha","depthFunc","clippingPlanes","clipShadows","precision","polygonOffset","polygonOffsetUnits","polygonOffsetFactor","premultipliedAlpha","overdraw","_needsUpdate","setValues","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinejoin","wireframeLinecap","skinning","MeshDepthMaterial","depthPacking","MeshNormalMaterial","MeshPhongMaterial","MeshStandardMaterial","defines","STANDARD","envMapIntensity","MeshPhysicalMaterial","PHYSICAL","clearCoatRoughness","clearCoat","MultiMaterial","PointsMaterial","ShaderMaterial","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","ShadowMaterial","UniformsLib","ShaderChunk","shadow_vert","shadow_frag","TextureIdCount","sourceFile","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","encoding","toDataURL","drawImage","transformUv","DepthTexture","CanvasTexture","VideoTexture","readyState","HAVE_CURRENT_DATA","distanceToRay","face","LineSegments","faceIndex","drawMode","updateMorphTargets","setDrawMode","morphTargetBase","morphTargetInfluences","morphTargetDictionary","getMorphTargetIndexByName","Q","J","D","G","Bone","skin","Skeleton","useVertexTexture","identityMatrix","boneTextureHeight","boneTextureWidth","boneMatrices","boneTexture","calculateInverses","boneInverses","pose","bindMode","bindMatrix","bindMatrixInverse","pos","rotq","scl","normalizeSkinWeights","skinWeight","getObjectForDistance","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","wantedRotation","overrideMaterial","background","autoUpdate","Fog","FogExp2","density","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_vertex","displacementmap_pars_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_pars_fragment","encodings_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_flip","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLights","properties","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotShadowMap","spotShadowMatrix","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","ShaderLib","basic","lambert","phong","standard","dashed","totalSize","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","lightPos","physical","R","clearColor","scissor","X","ua","viewport","ba","ma","V","Y","T","aa","Z","program","releaseProgram","W","group","wa","ca","numPlanes","ha","ImmediateRenderObject","sortObjects","pa","ea","renderBufferImmediate","renderBufferDirect","CULL_FACE","setFlipSided","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","ia","qa","va","setState","numClippingPlanes","lightsHash","S","hash","getParameters","getProgramCode","code","shaderID","__webglShader","acquireProgram","getAttributes","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniform","ambient","directional","spot","hemi","getUniforms","WebGLUniforms","seqWithValue","seq","uniformsList","dynamicUniforms","splitDynamic","useProgram","da","logarithmicDepthBuffer","cameraPosition","setOptional","floatVertexTextures","WebGLRenderTarget","clientHeight","upload","evalDynamic","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","NEAREST","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","U","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","canvas","alpha","stencil","antialias","preserveDrawingBuffer","autoClearStencil","autoClearDepth","autoClearColor","autoClear","localClippingEnabled","gammaFactor","physicallyCorrectLights","gammaOutput","gammaInput","toneMapping","toneMappingWhitePoint","toneMappingExposure","ja","ra","sa","xa","WebGLClipping","shadows","fa","calls","info","memory","programs","getShaderPrecisionFormat","rangeMin","rangeMax","za","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","ka","WebGLTextures","WebGLObjects","WebGLPrograms","ta","WebGLLights","Aa","WebGLBufferRenderer","Ba","WebGLIndexedBufferRenderer","Ca","la","oa","PlaneBufferGeometry","ga","BoxBufferGeometry","capabilities","state","ya","WebGLShadowMap","shadowMap","Da","SpritePlugin","Ea","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","getMaxAnisotropy","getPrecision","getPixelRatio","setPixelRatio","getSize","style","setViewport","setScissor","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","resetGLState","initAttributes","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","bindBuffer","ARRAY_BUFFER","bufferData","positionArray","DYNAMIC_DRAW","enableAttribute","vertexAttribPointer","normalArray","uvArray","colorArray","disableUnusedAttributes","drawArrays","TRIANGLES","getWireframeAttribute","getAttributeBuffer","enableAttributeAndDivisor","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","ELEMENT_ARRAY_BUFFER","setLineWidth","setMode","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","LINE_STRIP","POINTS","renderInstances","beginShadows","endShadows","updateRenderTargetMipmap","setFaceCulling","setCullFace","allocTextureUnit","maxTextures","setTexture2D","setTexture","setTextureCube","setTextureCubeDynamic","getCurrentRenderTarget","__webglFramebuffer","setupRenderTarget","scissorTest","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_CUBE_MAP_POSITIVE_X","__webglTexture","activeMipMapLevel","readRenderTargetPixels","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","depthBuffer","stencilBuffer","depthTexture","drawArraysInstancedANGLE","clippingState","drawElements","drawElementsInstancedANGLE","getExtension","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","WebGLGeometries","__webglBuffer","deleteBuffer","_bufferGeometry","STATIC_DRAW","bufferSubData","WebGLProgram","envMapCubeUV","flatShading","replace","numDirLights","numSpotLights","numPointLights","numHemiLights","shadowMapType","createProgram","supportsVertexTextures","maxBones","doubleSided","flipSided","shadowMapEnabled","useFog","fogExp","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","WebGLShader","attachShader","bindAttribLocation","linkProgram","getProgramInfoLog","getShaderInfoLog","getProgramParameter","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","runnable","programLog","prefix","deleteShader","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","destroy","deleteProgram","usedTimes","envMapMode","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","customDepthMaterial","customDistanceMaterial","renderSingleSided","renderReverseSided","USE_SHADOWMAP","BLEND","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","texImage2D","buffers","WebGLColorBuffer","WebGLDepthBuffer","WebGLStencilBuffer","TEXTURE_2D","TEXTURE_CUBE_MAP","DEPTH_TEST","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","getCompressedTextureFormats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","blendFunc","setMask","setTest","setFunc","setStencilTest","setStencilWrite","setStencilFunc","setStencilOp","setOp","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","lineWidth","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","activeTexture","TEXTURE0","compressedTexImage2D","setClear","colorMask","setLocked","depthMask","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","STENCIL_TEST","stencilMask","stencilFunc","stencilOp","__image__webglTextureCube","deleteTexture","__webglInit","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__version","complete","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","HTMLImageElement","HTMLCanvasElement","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","generateMipmap","TEXTURE_WRAP_S","TEXTURE_WRAP_T","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","WebGL2RenderingContext","createFramebuffer","createRenderbuffer","uniform1f","addr","uniform1i","uniform2fv","uniform2f","uniform3f","uniform3fv","uniform4fv","uniform4f","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniform2iv","uniform3iv","uniform4iv","uniform1fv","uniform1iv","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","TEXTURE1","copyTexImage2D","fillStyle","fillRect","Face4","LineStrip","LinePieces","MeshFaceMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","getData","GeometryUtils","ImageUtils","loadTexture","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","interpolate","SceneUtils","createMultiMaterialObject","detach","attach","ShapeUtils","triangulate","triangulateShape","isClockWise","b2","b3","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","getLengths","__arcLengthDivisions","cacheArcLengths","updateArcLengths","getTangent","getTangentAt","CurvePath","curves","autoClose","closePath","LineCurve","getCurveLengths","cacheLengths","createPointsGeometry","createGeometry","createSpacedPointsGeometry","generateShapes","resolution","glyphs","Path","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","toShapes","fromPoints","QuadraticBezierCurve","CubicBezierCurve","splineThru","SplineCurve","absarc","absellipse","ellipse","EllipseCurve","Shape","froms","tos","hole","holes","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","extractAllPoints","shape","extractPoints","v1","v2","v0","v3","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","c0","c1","c2","c3","initNonuniformCatmullRom","initCatmullRom","calc","closed","tension","ClosedSplineCurve3","CubeGeometry","CircleGeometry","CircleBufferGeometry","CylinderBufferGeometry","CylinderGeometry","ConeBufferGeometry","ConeGeometry","EdgesGeometry","vert1","vert2","face1","face2","addShapeList","addShape","generateSideWallUV","generateTopUV","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","curveSegments","steps","extrudePath","UVGenerator","WorldUVGenerator","frames","TubeGeometry","FrenetFrames","reverse","binormals","LatheBufferGeometry","LatheGeometry","PlaneGeometry","RingBufferGeometry","RingGeometry","SphereGeometry","SphereBufferGeometry","TextGeometry","font","TorusBufferGeometry","TorusGeometry","TorusKnotBufferGeometry","TorusKnotGeometry","taper","NoTaper","tangents","SinusoidalTaper","MAX_VALUE","PolyhedronGeometry","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","func","slices","stacks","WireframeGeometry","AxisHelper","ArrowHelper","line","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","box","CameraHelper","pointMap","DirectionalLightHelper","light","EdgesHelper","FaceNormalsHelper","GridHelper","setColors","HemisphereLightHelper","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","root","SpotLightHelper","VertexNormalsHelper","WireframeHelper","MorphBlendMesh","animationsMap","animationsList","createAnimation","setAnimationWeight","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","__WEBPACK_AMD_DEFINE_ARRAY__","process","_tweens","getAll","removeAll","tween","preserve","hrtime","_object","_valuesStart","_valuesEnd","_valuesStartRepeat","_duration","_repeat","_yoyo","_isPlaying","_reversed","_delayTime","_easingFunction","Easing","Linear","_interpolationFunction","Interpolation","_chainedTweens","_onStartCallback","_onStartCallbackFired","_onUpdateCallback","_onCompleteCallback","_onStopCallback","field","property","stopChainedTweens","numChainedTweens","yoyo","easing","chain","elapsed","tmp","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","Exponential","Circular","Elastic","Back","Bounce","Utils","Bezier","pw","bn","Bernstein","CatmullRom","p0","p1","fc","Factorial","p2","p3","t2","t3","runTimeout","fun","cachedSetTimeout","runClearTimeout","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","len","run","Item","nextTick","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","cwd","chdir","dir","umask","usedForLoad","applyTexture","iw","ih","ir","anchor","sprayGeom","sprayMaterial","$ghostCanvas","ghostCanvas","img","Image","blockIdx","floorId","setMouseOverHandler","handler","setMouseOutHandler","setClickHandler","rerenderBlock","parentObject","blockMesh","createBlockMesh","shouldResetBoundary","blockShape","extrudeSettings","x0","z0","resetBoundary","blockGeom","blockMaterial","sliceColorCode","hexNum","mergeColorCode","sliced","defaultBlockHeight","originalColor","defaultBlockColor","originalOpacity","defaultBlockOpacity","parentFloor","heightTween","colorTween","opacityTween","setData","setOpacity","restoreOpacity","restoreColor","setHeight","blockHeight","restoreHeight","eventName","Offset","indexesToBeRemoved","nextPoint","maxBoundaryDist","defaultBlockPadding","padding","toBeRemovedBlocks","toBeAddedBlocks","pointsClone","paddedPoints","toBeAddedBlock","arcSegments","edges","_closed","_distance","_arcSegments","Edge","martinez","utils","orientRings","_edges","_processContour","contour","createArc","startVertex","endVertex","outwards","PI2","startAngle","endAngle","segmentAngle","dist","units","degreesToUnits","degrees","ensureLastPoint","margin","_offsetSegment","e1","_inNormal","inverseOffset","_outNormal","thisEdge","prevEdge","next","current","offsetPoint","offsetLines","diff","offsetLine","offsetContour","curve","segment","inwardsNormal","outwardsNormal","inwards","dx","dy","edgeLength","offsetEdge","processSegment","s1","s2","isSubject","eventQueue","bbox","SweepEvent","e2","otherEvent","contourId","compareEvents","processPolygon","polygon","fillQueue","subject","sbbox","cbbox","Queue","computeFields","sweepLine","operation","inOut","otherInOut","isVertical","prevInResult","inResult","edgeType","NORMAL","INTERSECTION","UNION","DIFFERENCE","XOR","SAME_TRANSITION","DIFFERENT_TRANSITION","NON_CONTRIBUTING","possibleIntersection","se1","se2","inter","nintersections","divideSegment","events","leftCoincide","rightCoincide","se","subdivideSegments","sortedEvents","Tree","compareSegments","rightbound","insert","findIter","iterator","iterators","findIterBrute","prevprev","it","swap","temp","changeOrientation","addHole","orderEvents","resultEvents","sorted","connectEdges","processed","holeOf","isHole","ringId","lowerContourId","resultInOut","initial","nextPos","newPos","trivialOperation","EMPTY","compareBBoxes","boolean","trivial","RBTree","xor","operations","TinyQueue","compare","defaultCompare","_down","_up","peek","BinTree","Node","comparator","_comparator","is_red","single_rotate","save","get_child","set_child","double_rotate","TreeBase","last","gp","ggp","dir2","cmp","found","sr","sibling","gpc","Iterator","tree","_tree","_ancestors","_cursor","find","iter","lowerBound","cur","upperBound","each","reach","_minNode","_maxNode","EdgeType","signedArea","isBelow","isAbove","specialCases","le1","le2","krossProduct","dotProduct","a1","a2","b1","noEndpointTouch","toPoint","vb","kross","sqrKross","sqrLenA","sqrLenB","sqrLenE","sb","smin","smax","coordinates","ring","pt1","pt2","background-image","background-repeat","background-size","appendIcon","$marker","$icon","$iconElem","appendHTML","htmlStr","$htmlElem","user-select","-moz-user-select","webkit-user-select","-ms-user-select","cursor","resetRelativeBoundary","relativeBoundary","recalculateRelativeBoundary","rb","html","align","className","mouseover","mouseout","click","elemPosition","whiteSpace","attr","horizontalAlign","verticalAlign","htmlElemW","htmlElemH","iconSize","iconAnchor","splittedAlign","setClustering"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,qBAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,qBAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,qBAAAQ,EAAAT,EAGAC,oBAAAS,EAAAP,EAGAF,oBAAAU,EAAA,GAGAV,oBAAA,KDMM,SAASI,EAAQD,EAASH,GE3ChCA,EAAA,GACAA,EAAA,GACA,SAAAW,EAAAC,GACA,GAAAC,GAAAb,EAAA,EACAY,GAAAE,UAAA,SAAAC,EAAAC,EAAAC,GA2JA,QAAAC,MAAAC,GACA,GAAAC,GAAA,GAAAP,GAAA,SAAAQ,EAAAC,GACAH,EAAAI,aAAAC,OACAb,EAAAc,QAAAN,GACAO,KAAA,SAAAC,GACAP,EAAAQ,YAAAD,EAAA,WAAsEN,QAEtEQ,KAAA,SAAAF,GACA,MAAAA,EAAAG,YACAC,aAAA,QACAC,QAAAC,MAAA,uDAEAF,aAAA,QACAC,QAAAC,MAAA,IAAAd,EAAA,sBAIAS,YAAAD,KAAAN,IAGA,OAAAa,iBAAAd,GAIA,QAAAQ,aAAAT,EAAAgB,GAGA,GAFAC,EAAAlB,KAAAC,GAEAkB,EAAAC,gBAAA,CACAD,EAAAC,kBACAC,EAAA5B,EAAA,eAAA6B,IAAAC,EAAAJ,EAAAK,0BACAL,EAAAM,4BAAAJ,EAAAK,SAAAP,EAAAM,4BACAE,EAAAC,OAAAP,GAGA,QADAQ,GAAApC,EAAA,0CACAqC,EAAA,EAA4BA,EAAA7B,EAAA8B,OAAAC,OAAwBF,IAAA,CACpD,GAAAG,GAAAhC,EAAA8B,OAAAD,GACAI,EAAAL,EAAAM,QAAAC,KAAAH,EAAAI,KACAhB,GAAAO,OAAAM,GACAA,EAAAI,GAAA,YACA,SAAAC,GACA,gBAAAC,GACAtB,EAAAuB,YAAAF,KAEyBN,EAAAM,SAKzB,GAAAG,IAAA,EACAC,EAAA,EACAC,EAAA,CAEAC,GAAAP,GAAA,qBAAAE,GACAtB,EAAA4B,SAAA,KAAA3B,EAAA4B,SAAA5B,EAAA6B,iBAEAC,EAAAX,GAAA,qBAAAE,GACAtB,EAAA4B,SAAA,MAAA3B,EAAA4B,SAAA5B,EAAA6B,iBAGA9B,EAAAgC,YAAAZ,GAAA,qBAAAE,GACA,GAAAtB,EAAAiC,aAAAX,EAAAY,MAAAZ,EAAAa,OAAA,CACAV,EAAAC,EACAF,GAAA,CACA,IAAAY,GAAApC,EAAAqC,cAAAf,EAAAY,MAAAZ,EAAAa,MAEAnC,GAAAsC,YAAAC,MAAAH,IACAd,EAAAkB,oBAGAxC,EAAAgC,YAAAZ,GAAA,qBAAAE,GACA,GAAAE,EAAA,CACAC,GACA,IAAAW,GAAApC,EAAAqC,cAAAf,EAAAY,MAAAZ,EAAAa,MACAnC,GAAAsC,YAAAG,UAAAL,IACAd,EAAAkB,qBAGAxC,GAAA0C,sBAAA,YAAA1C,EAAAqC,cAAAf,EAAAY,MAAAZ,EAAAa,UAGA5D,EAAAC,GAAA4C,GAAA,mBAAAE,GACAE,IACAA,GAAA,EACAC,EAAA,GAAAzB,EAAA0C,sBAAA,QAAA1C,EAAAqC,cAAAf,EAAAY,MAAAZ,EAAAa,WAIAlC,EAAA0C,kBACA3C,EAAAgC,YAAAZ,GAAA,sBAAAE,GACA,GAAAsB,GAAAtB,EAAAuB,aACAD,GAAAE,aACA9C,EAAA4B,SAAA5B,EAAAqC,cAAAf,EAAAY,MAAAZ,EAAAa,OAAAS,EAAAE,WAAA,IACAxB,EAAAkB,mBAKA,IAAAO,GAAA,CACA/C,GAAAgC,YAAAZ,GAAA,sBAAAE,GACA,GAAAsB,GAAAtB,EAAAuB,cACAG,EAAAhD,EAAAiD,iBAAAL,EAAAM,SAGAC,EAAAH,EAAAlC,MACA,IAAAiC,IAAAtB,EAAAC,GACAyB,EAAA,IAAA1B,EAAA,GACAsB,EAAAI,EAEAnD,EAAAsC,YAAAC,KAAAS,GACAA,EAAAlC,OAAA,IAAAW,EAAA,GACAH,EAAAkB,mBAEAxC,EAAAgC,YAAAZ,GAAA,qBAAAE,GACA,GAAAsB,GAAAtB,EAAAuB,cACAG,EAAAhD,EAAAiD,iBAAAL,EAAAM,QAGAzB,KAEAzB,EAAAsC,YAAAG,SAAAO,GACA1B,EAAAkB,mBAEAxC,EAAAgC,YAAAZ,GAAA,oBAAAE,GACA,GAAAsB,GAAAtB,EAAAuB,cACAG,EAAAhD,EAAAiD,iBAAAL,EAAAM,SAGAC,EAAAH,EAAAlC,MACAlB,SAAAwD,IAAA3B,GACAA,EAAA,GAAAzB,EAAA0C,sBAAA,QAAA1C,EAAAqC,cAAAf,EAAAY,MAAAZ,EAAAa,QACAY,EAAAI,EAEAnD,EAAAsC,YAAAC,KAAAS,GACA1B,EAAAkB,mBAEAzC,IAGA,QAAAsD,WAAAC,EAAArD,GAEA,OAAAW,GAAA,EAAwBA,EAAA0C,EAAAxC,OAAkBF,IAC1C0C,EAAA1C,IAAAZ,EAAAuD,gBAAAC,WAEA,IAAAC,GAAAC,EAAAJ,EAAArD,EAEA,OADAD,GAAA2D,UAAAF,EAAAxD,GACAwD,EAEA,QAAAG,cAAAF,GACA1D,EAAA4D,aAAAF,GAEA,QAAAG,iBAAAxC,GACArB,EAAA6D,gBAAAxC,GAEA,QAAAyC,oBACA9D,EAAA8D,mBAEA,QAAAC,UAAAT,EAAArD,GACAD,EAAA+D,SAAAT,EAAArD,GAEA,QAAA+D,gBAAA3C,GACArB,EAAAgE,eAAA3C,GAEA,QAAA4C,mBACAjE,EAAAiE,kBAEA,QAAAC,aAAAC,EAAAlE,GAEA,MAAAD,GAAAkE,YAAAC,EAAAlE,GAEA,QAAAmE,gBAAAC,GACArE,EAAAoE,eAAAC,GAEA,QAAAC,mBAAAjD,GACArB,EAAAsE,kBAAAjD,GAEA,QAAAkD,sBACAvE,EAAAuE,qBAEA,QAAAC,UAAAvG,EAAAoD,GACA,MAAArB,GAAAwE,SAAAvG,EAAAoD,GAEA,QAAAoD,aAAApD,GACA,MAAArB,GAAAyE,YAAApD,GAEA,QAAAqD,gBACA,MAAA1E,GAAA0E,eAEA,QAAAC,SAAAC,EAAAC,EAAAC,GACA,UAAArG,GAAA,SAAAQ,EAAAC,GACA,GAAA6F,GAAA,IACAF,KACAE,EAAA/E,EAAAgF,MAAAH,EAAA,GAAAA,EAAA,IAEAE,EAAAE,eAAA,EAAAjF,EAAAuD,gBAAAC,cAEAxD,EAAA2E,QAAAC,EAAAG,EAAAD,EAAA7F,KAGA,QAAAiG,cAAAC,EAAAL,GACA,UAAArG,GAAA,SAAAQ,EAAAC,GACAc,EAAAkF,aAAAC,EAAAL,EAAA7F,KAGA,QAAAmG,QAAAC,EAAAC,EAAAC,GACA,GAAAD,EACA,OAAA1E,GAAA,EAA4BA,EAAA0E,EAAAxE,OAAgBF,IAC5C0E,EAAA1E,IAAAZ,EAAAuD,gBAAAC,gBAGA8B,IAAA,UAEA,WAAA7G,GAAA,SAAAQ,EAAAC,GACAc,EAAAwF,eAAAH,EAAAC,EAAAC,EAAAtG,KAIA,QAAAU,cAAA8F,GACA,OAAAA,GACA,aACA7F,QAAAC,MAAA,4BACA,MACA,YACAD,QAAAC,MAAA,uBAyBA,QAAAC,iBAAA4F,GAGA,OAFAC,MACAC,GAAA,0CACAhF,EAAA,EAAwBA,EAAAgF,EAAA9E,OAA0BF,IAClD+E,EAAAC,EAAAhF,IAAA,SAAAiF,GACA,kBACA,GAAAC,GAAAC,UACAC,EAAA,GAAAvH,GAAA,SAAAQ,EAAAC,GACAwG,EAAAO,KAAA,WACA,GAAAC,GAAAC,EAAAN,GAAAO,MAAAD,EAAAL,EACAI,GAAAD,KAAA,WACAhH,SAIA,OAAAa,iBAAAkG,KAEiBJ,EAAAhF,GAkBjB,OAhBA+E,GAAArG,KAAA,SAAAS,GACA,GAAAiG,GAAA,GAAAvH,GAAA,SAAAQ,EAAAC,GACAwG,EAAAO,KAAA,WACAlG,EAAAqG,MAAAD,GAAAlH,OAGA,OAAAa,iBAAAkG,IAEAL,EAAAU,MAAA,SAAAC,GACA,GAAAN,GAAA,GAAAvH,GAAA,SAAAQ,EAAAC,GACAwG,EAAAO,KAAA,WACAM,WAAA,WAA8CtH,KAAWqH,MAGzD,OAAAxG,iBAAAkG,IAEAL,EAnbA,IAAA/H,EAAA,MACAgC,QAAAwD,IAAA,6BACAvE,GAAA,MAAAA,IAIAF,GAAAJ,EAAAI,EAEA,IAAA6H,IACAC,gBAAA,SACAC,UAAA,GACAC,UAAA,IACA9E,SAAA,GACA+E,QAAA,GACAC,QAAA,IACA/E,cAAA,IACAa,kBAAA,EACAmE,WAAA,EACAC,mBAAA,EACAC,gBAAA,EACAC,0BAAA,KACAC,uBAAA,WACAC,SAAA,EACAjH,iBAAA,EACAK,2BAAA,KACAD,wBAAA,cACA8G,kBAAA,EACAC,kBAAA,EACAC,0BAAA,IACAC,eAAA,KACAC,iBAAA,KACAC,gBAAA,KACAC,aAAA,MAEAzH,EAAAuG,CAEA,IAAA5H,EAAA,CACAA,EAAA6H,iBAAA,gBAAA7H,GAAA6H,kBACA7H,EAAA6H,gBAAAkB,SAAA/I,EAAA6H,gBAAA,IAIA,IAAAmB,IACAnB,gBAAA,SACAC,UAAA,SACAC,UAAA,SACA9E,SAAA,SACA+E,QAAA,SACAC,QAAA,SACA/E,cAAA,SACAa,iBAAA,UACAmE,UAAA,UACAC,kBAAA,UACAC,eAAA,UACAC,0BAAA,SACAC,uBAAA,SACAC,QAAA,UACAjH,gBAAA,UACAK,2BAAA,SACAD,wBAAA,SACA8G,iBAAA,UACAC,iBAAA,UACAC,0BAAA,SACAC,eAAA,WACAC,iBAAA,WACAC,gBAAA,WACAC,aAAA,YAEAG,GAAoCC,SAAA,EAAAC,UAAA,EAAAC,YAAA,EAAAC,aAAA,EACpC,QAAAC,KAAAtJ,GAWA,OAVAgJ,EAAAM,SACAtJ,GAAAsJ,IAAAN,EAAAM,KACAvI,aAAA,UACAC,QAAAC,MAAA,YAAAqI,EAAA,wBACAtJ,GAAAsJ,GAAA,KAAAN,EAAAM,GAAA,cAGAvI,aAAA,UACAC,QAAAC,MAAA,mBAAAqI,EAAA,kBAEAA,GACA,gBACA,GAAAtJ,EAAA,WAAAA,EAAA,gBACAe,aAAA,UACAC,QAAAC,MAAA,0CAAAjB,EAAA,WAEA,MACA,+BACA,6BACAiJ,EAAAjJ,EAAAsJ,MACAtI,QAAAwD,IAAA,uBACAzD,aAAA,UACAC,QAAAC,MAAAqI,EAAA,WAAAtJ,EAAAsJ,GAAA,oBAMA3J,EAAA4J,OAAAlI,EAAArB,GAGA,GAAAwJ,GAAA,GACA/H,GACAyH,SACAxE,SAAA,WACA+E,IAAAD,EACAE,KAAAF,GAEAL,UACAzE,SAAA,WACA+E,IAAAD,EACAG,MAAAH,GAEAJ,YACA1E,SAAA,WACAkF,OAAAJ,EACAE,KAAAF,GAEAH,aACA3E,SAAA,WACAkF,OAAAJ,EACAG,MAAAH,IAIA3H,EAAAlC,EAAA,cACAkC,GAAAL,KAAwBkD,SAAA,WAAAmF,MAAA,OAAAC,OAAA,OACxBC,mBAAA,IAAA1I,EAAAwG,gBAAAmC,SAAA,MACAjK,EAAA+B,OAAAD,EAEA,IAAAT,GAAApC,EAAA,IAAAW,EAAAC,EAAAiC,EAAAR,GAGA4I,EAAA,KACAlH,EAAA,KACAI,EAAA,IACA,IAAA9B,EAAA+G,eAAA,CACA,GAAA8B,GAAAvK,EAAA,yCAAA6B,KAA2E2I,QAAA,SAC3EpH,GAAAmH,EAAA7H,QAAAC,KAAA,KAAAV,SAAA,uBACAuB,EAAA+G,EAAA7H,QAAAC,KAAA,KAAAV,SAAA,wBACAqI,EAAAtK,EAAA,eAAAmC,OAAAiB,GAAAjB,OAAAqB,GACA9B,EAAAgH,4BACAtF,EAAAnB,SAAAP,EAAAgH,2BACAlF,EAAAvB,SAAAP,EAAAgH,4BAEA4B,EAAAzI,IAAAC,EAAAJ,EAAAiH,yBACAzG,EAAAC,OAAAmI,GAGA,GAAAG,GAAApL,EAAA,IAAAW,EAAAC,GACAyK,EAAAD,IACAtF,EAAA9F,EAAA,IAAAW,EAAAC,EAAAyK,GAyBA9I,EAAA,KA2MAgG,GACArH,UACA6F,gBACAO,0BACAE,cACA4D,OACA9E,wBACAE,8BACAG,sCACAD,oCACAP,kBACAC,8BACAC,gCACAZ,oBACAO,0BACAC,gCACAC,kCACAU,kBACAC,wBACAC,0BAuCA,OAAAyB,KAEC+C,OAAA1K,SFmDK,SAASR,EAAQD,IGjfvB,WAGA,OAFAoL,GAAA,EACAC,GAAA,yBACAC,EAAA,EAAkBA,EAAAD,EAAAtI,SAAAtC,OAAA8K,wBAAqDD,EACvE7K,OAAA8K,sBAAA9K,OAAA4K,EAAAC,GAAA,yBACA7K,OAAA+K,qBAAA/K,OAAA4K,EAAAC,GAAA,yBACA7K,OAAA4K,EAAAC,GAAA,8BAGA7K,QAAA8K,wBACA9K,OAAA8K,sBAAA,SAAAE,EAAAC,GACA,GAAAC,IAAA,GAAAC,OAAAC,UACAC,EAAAC,KAAAC,IAAA,MAAAL,EAAAP,IACAlL,EAAAO,OAAA+H,WAAA,WAAmDiD,EAAAE,EAAAG,IACnDA,EAEA,OADAV,GAAAO,EAAAG,EACA5L,IAGAO,OAAA+K,uBACA/K,OAAA+K,qBAAA,SAAAtL,GACA+L,aAAA/L,SHyfM,SAASD,EAAQD,EAASH,GI3gBhC,GAAAqM,GAAArM,EAAA,EACA,iBAAAqM,SAAAjM,EAAAC,GAAAgM,EAAA,KAEArM,GAAA,GAAAqM,KACAA,GAAAC,SAAAlM,EAAAD,QAAAkM,EAAAC,SJiiBM,SAASlM,EAAQD,EAASH,GKxiBhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAAoM,MAAAnM,EAAAC,GAAA,gpCAAuqC,MLijBjqC,SAASD,EAAQD,GMjjBvBC,EAAAD,QAAA,WACA,GAAAqM,KA0CA,OAvCAA,GAAAxB,SAAA,WAEA,OADAyB,MACAzJ,EAAA,EAAgBA,EAAA0J,KAAAxJ,OAAiBF,IAAA,CACjC,GAAA2J,GAAAD,KAAA1J,EACA2J,GAAA,GACAF,EAAAF,KAAA,UAAAI,EAAA,OAAwCA,EAAA,QAExCF,EAAAF,KAAAI,EAAA,IAGA,MAAAF,GAAAG,KAAA,KAIAJ,EAAAxJ,EAAA,SAAAjD,EAAA8M,GACA,gBAAA9M,KACAA,IAAA,KAAAA,EAAA,KAEA,QADA+M,MACA9J,EAAA,EAAgBA,EAAA0J,KAAAxJ,OAAiBF,IAAA,CACjC,GAAA3C,GAAAqM,KAAA1J,GAAA,EACA,iBAAA3C,KACAyM,EAAAzM,IAAA,GAEA,IAAA2C,EAAA,EAAYA,EAAAjD,EAAAmD,OAAoBF,IAAA,CAChC,GAAA2J,GAAA5M,EAAAiD,EAKA,iBAAA2J,GAAA,IAAAG,EAAAH,EAAA,MACAE,IAAAF,EAAA,GACAA,EAAA,GAAAE,EACKA,IACLF,EAAA,OAAAA,EAAA,aAAAE,EAAA,KAEAL,EAAAD,KAAAI,MAIAH,IN8jBM,SAASpM,EAAQD,EAASH,GOjjBhC,QAAA+M,gBAAAC,EAAAC,GACA,OAAAjK,GAAA,EAAeA,EAAAgK,EAAA9J,OAAmBF,IAAA,CAClC,GAAA2J,GAAAK,EAAAhK,GACAkK,EAAAC,EAAAR,EAAAtM,GACA,IAAA6M,EAAA,CACAA,EAAAE,MACA,QAAAC,GAAA,EAAiBA,EAAAH,EAAAI,MAAApK,OAA2BmK,IAC5CH,EAAAI,MAAAD,GAAAV,EAAAW,MAAAD,GAEA,MAAQA,EAAAV,EAAAW,MAAApK,OAAuBmK,IAC/BH,EAAAI,MAAAf,KAAAgB,SAAAZ,EAAAW,MAAAD,GAAAJ,QAEG,CAEH,OADAK,MACAD,EAAA,EAAiBA,EAAAV,EAAAW,MAAApK,OAAuBmK,IACxCC,EAAAf,KAAAgB,SAAAZ,EAAAW,MAAAD,GAAAJ,GAEAE,GAAAR,EAAAtM,KAA2BA,GAAAsM,EAAAtM,GAAA+M,KAAA,EAAAE,WAK3B,QAAAE,cAAAhB,GAGA,OAFAQ,MACAS,KACAzK,EAAA,EAAeA,EAAAwJ,EAAAtJ,OAAiBF,IAAA,CAChC,GAAA2J,GAAAH,EAAAxJ,GACA3C,EAAAsM,EAAA,GACAnK,EAAAmK,EAAA,GACAe,EAAAf,EAAA,GACAgB,EAAAhB,EAAA,GACAiB,GAAcpL,MAAAkL,QAAAC,YACdF,GAAApN,GAGAoN,EAAApN,GAAAiN,MAAAf,KAAAqB,GAFAZ,EAAAT,KAAAkB,EAAApN,IAAgCA,KAAAiN,OAAAM,KAIhC,MAAAZ,GAGA,QAAAa,oBAAAZ,EAAAa,GACA,GAAAC,GAAAC,IACAC,EAAAC,IAAAhL,OAAA,EACA,YAAA+J,EAAAkB,SACAF,EAEGA,EAAAG,YACHL,EAAAM,aAAAP,EAAAG,EAAAG,aAEAL,EAAAO,YAAAR,GAJAC,EAAAM,aAAAP,EAAAC,EAAAQ,YAMAL,EAAA3B,KAAAuB,OACE,eAAAb,EAAAkB,SAGF,SAAAK,OAAA,qEAFAT,GAAAO,YAAAR,IAMA,QAAAW,oBAAAX,GACAA,EAAAY,WAAAC,YAAAb,EACA,IAAAc,GAAAV,EAAAW,QAAAf,EACAc,IAAA,GACAV,EAAAY,OAAAF,EAAA,GAIA,QAAAG,oBAAA9B,GACA,GAAAa,GAAAkB,SAAAC,cAAA,QAGA,OAFAnB,GAAAjG,KAAA,WACAgG,mBAAAZ,EAAAa,GACAA,EAGA,QAAAoB,mBAAAjC,GACA,GAAAkC,GAAAH,SAAAC,cAAA,OAGA,OAFAE,GAAAC,IAAA,aACAvB,mBAAAZ,EAAAkC,GACAA,EAGA,QAAA5B,UAAA8B,EAAApC,GACA,GAAAa,GAAAwB,EAAAC,CAEA,IAAAtC,EAAAuC,UAAA,CACA,GAAAC,GAAAC,GACA5B,GAAA6B,MAAAZ,mBAAA9B,IACAqC,EAAAM,oBAAAC,KAAA,KAAA/B,EAAA2B,GAAA,GACAF,EAAAK,oBAAAC,KAAA,KAAA/B,EAAA2B,GAAA,OACEJ,GAAA1B,WACF,kBAAAmC,MACA,kBAAAA,KAAAC,iBACA,kBAAAD,KAAAE,iBACA,kBAAAC,OACA,kBAAAC,OACApC,EAAAoB,kBAAAjC,GACAqC,EAAAa,WAAAN,KAAA,KAAA/B,GACAyB,EAAA,WACAd,mBAAAX,GACAA,EAAAsC,MACAN,IAAAE,gBAAAlC,EAAAsC,SAGAtC,EAAAiB,mBAAA9B,GACAqC,EAAAe,WAAAR,KAAA,KAAA/B,GACAyB,EAAA,WACAd,mBAAAX,IAMA,OAFAwB,GAAAD,GAEA,SAAAiB,GACA,GAAAA,EAAA,CACA,GAAAA,EAAA9N,MAAA6M,EAAA7M,KAAA8N,EAAA5C,QAAA2B,EAAA3B,OAAA4C,EAAA3C,YAAA0B,EAAA1B,UACA,MACA2B,GAAAD,EAAAiB,OAEAf,MAcA,QAAAK,qBAAA9B,EAAAyC,EAAAhB,EAAAF,GACA,GAAA7M,GAAA+M,EAAA,GAAAF,EAAA7M,GAEA,IAAAsL,EAAA0C,WACA1C,EAAA0C,WAAAC,QAAAC,EAAAH,EAAA/N,OACE,CACF,GAAAmO,GAAA3B,SAAA4B,eAAApO,GACAqO,EAAA/C,EAAA+C,UACAA,GAAAN,IAAAzC,EAAAa,YAAAkC,EAAAN,IACAM,EAAA3N,OACA4K,EAAAO,aAAAsC,EAAAE,EAAAN,IAEAzC,EAAAQ,YAAAqC,IAKA,QAAAN,YAAAvC,EAAAuB,GACA,GAAA7M,GAAA6M,EAAA7M,IACAkL,EAAA2B,EAAA3B,KAMA,IAJAA,GACAI,EAAAgD,aAAA,QAAApD,GAGAI,EAAA0C,WACA1C,EAAA0C,WAAAC,QAAAjO,MACE,CACF,KAAAsL,EAAAS,YACAT,EAAAa,YAAAb,EAAAS,WAEAT,GAAAQ,YAAAU,SAAA4B,eAAApO,KAIA,QAAA2N,YAAAhB,EAAAE,GACA,GAAA7M,GAAA6M,EAAA7M,IACAmL,EAAA0B,EAAA1B,SAEAA,KAEAnL,GAAA,uDAAuD0N,KAAAa,SAAAC,mBAAAC,KAAAC,UAAAvD,MAAA,MAGvD,IAAAwD,GAAA,GAAAlB,OAAAzN,IAA6BqF,KAAA,aAE7BuJ,EAAAjC,EAAAiB,IAEAjB,GAAAiB,KAAAN,IAAAC,gBAAAoB,GAEAC,GACAtB,IAAAE,gBAAAoB,GAhPA,GAAAjE,MACAkE,EAAA,SAAAC,GACA,GAAAC,EACA,mBAEA,MADA,mBAAAA,OAAAD,EAAA9I,MAAAkE,KAAAvE,YACAoJ,IAGAC,EAAAH,EAAA,WACA,qBAAAI,KAAA7Q,OAAA8Q,UAAAC,UAAAC,iBAEA5D,EAAAqD,EAAA,WACA,MAAArC,UAAAjB,MAAAiB,SAAA6C,qBAAA,aAEAlC,EAAA,KACAD,EAAA,EACAxB,IAEA9N,GAAAD,QAAA,SAAAqM,EAAAS,GAKAA,QAGA,mBAAAA,GAAAuC,YAAAvC,EAAAuC,UAAAgC,KAGA,mBAAAvE,GAAAkB,WAAAlB,EAAAkB,SAAA,SAEA,IAAAnB,GAAAQ,aAAAhB,EAGA,OAFAO,gBAAAC,EAAAC,GAEA,SAAA6E,GAEA,OADAC,MACA/O,EAAA,EAAgBA,EAAAgK,EAAA9J,OAAmBF,IAAA,CACnC,GAAA2J,GAAAK,EAAAhK,GACAkK,EAAAC,EAAAR,EAAAtM,GACA6M,GAAAE,OACA2E,EAAAxF,KAAAW,GAEA,GAAA4E,EAAA,CACA,GAAArE,GAAAD,aAAAsE,EACA/E,gBAAAU,EAAAR,GAEA,OAAAjK,GAAA,EAAgBA,EAAA+O,EAAA7O,OAAsBF,IAAA,CACtC,GAAAkK,GAAA6E,EAAA/O,EACA,QAAAkK,EAAAE,KAAA,CACA,OAAAC,GAAA,EAAkBA,EAAAH,EAAAI,MAAApK,OAA2BmK,IAC7CH,EAAAI,MAAAD,WACAF,GAAAD,EAAA7M,OAiIA,IAAAqQ,GAAA,WACA,GAAAsB,KAEA,iBAAAzB,EAAA0B,GAEA,MADAD,GAAAzB,GAAA0B,EACAD,EAAAE,OAAAC,SAAAvF,KAAA,WP6qBM,SAASxM,EAAQD,EAASH,GQ12BhC,YAEAI,GAAAD,QAAAH,EAAA,IRi3BM,SAASI,EAAQD,EAASH,GSn3BhC,YAEAI,GAAAD,QAAAH,EAAA,GACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,KT03BM,SAASI,EAAQD,EAASH,GUj4BhC,YAIA,SAAAoS,SAqBA,QAAAC,SAAAhD,GACA,IACA,MAAAA,GAAAhH,KACG,MAAAiK,GAEH,MADAC,GAAAD,EACAE,GAIA,QAAAC,YAAAnB,EAAAoB,GACA,IACA,MAAApB,GAAAoB,GACG,MAAAJ,GAEH,MADAC,GAAAD,EACAE,GAGA,QAAAG,YAAArB,EAAAoB,EAAAE,GACA,IACAtB,EAAAoB,EAAAE,GACG,MAAAN,GAEH,MADAC,GAAAD,EACAE,GAMA,QAAA3R,SAAAyQ,GACA,mBAAA5E,MACA,SAAAmG,WAAA,uCAEA,sBAAAvB,GACA,SAAAuB,WAAA,iBAEAnG,MAAAoG,IAAA,EACApG,KAAAqG,IAAA,EACArG,KAAAsG,IAAA,KACAtG,KAAAuG,IAAA,KACA3B,IAAAc,MACAc,UAAA5B,EAAA5E,MAeA,QAAAyG,UAAA5K,EAAA6K,EAAAC,GACA,UAAA9K,GAAAhH,YAAA,SAAAF,EAAAC,GACA,GAAAgS,GAAA,GAAAzS,SAAAuR,KACAkB,GAAAjL,KAAAhH,EAAAC,GACAiS,OAAAhL,EAAA,GAAAiL,SAAAJ,EAAAC,EAAAC,MAGA,QAAAC,QAAAhL,EAAAkL,GACA,SAAAlL,EAAAwK,KACAxK,IAAAyK,GAKA,OAHAnS,SAAA6S,KACA7S,QAAA6S,IAAAnL,GAEA,IAAAA,EAAAwK,IACA,IAAAxK,EAAAuK,KACAvK,EAAAuK,IAAA,OACAvK,EAAA0K,IAAAQ,IAGA,IAAAlL,EAAAuK,KACAvK,EAAAuK,IAAA,OACAvK,EAAA0K,KAAA1K,EAAA0K,IAAAQ,SAGAlL,GAAA0K,IAAA1G,KAAAkH,OAGAE,gBAAApL,EAAAkL,GAGA,QAAAE,gBAAApL,EAAAkL,GACAG,EAAA,WACA,GAAAzR,GAAA,IAAAoG,EAAAwK,IAAAU,EAAAL,YAAAK,EAAAJ,UACA,WAAAlR,EAMA,YALA,IAAAoG,EAAAwK,IACA1R,QAAAoS,EAAA3L,QAAAS,EAAAyK,KAEA1R,OAAAmS,EAAA3L,QAAAS,EAAAyK,KAIA,IAAAa,GAAApB,WAAAtQ,EAAAoG,EAAAyK,IACAa,KAAArB,EACAlR,OAAAmS,EAAA3L,QAAAyK,GAEAlR,QAAAoS,EAAA3L,QAAA+L,KAIA,QAAAxS,SAAAkH,EAAAuL,GAEA,GAAAA,IAAAvL,EACA,MAAAjH,QACAiH,EACA,GAAAsK,WAAA,6CAGA,IACAiB,IACA,gBAAAA,IAAA,kBAAAA,IACA,CACA,GAAAzL,GAAAgK,QAAAyB,EACA,IAAAzL,IAAAmK,EACA,MAAAlR,QAAAiH,EAAAgK,EAEA,IACAlK,IAAAE,EAAAF,MACAyL,YAAAjT,SAKA,MAHA0H,GAAAwK,IAAA,EACAxK,EAAAyK,IAAAc,MACAC,QAAAxL,EAEK,sBAAAF,GAEL,WADA6K,WAAA7K,EAAAwH,KAAAiE,GAAAvL,GAIAA,EAAAwK,IAAA,EACAxK,EAAAyK,IAAAc,EACAC,OAAAxL,GAGA,QAAAjH,QAAAiH,EAAAuL,GACAvL,EAAAwK,IAAA,EACAxK,EAAAyK,IAAAc,EACAjT,QAAAmT,KACAnT,QAAAmT,IAAAzL,EAAAuL,GAEAC,OAAAxL,GAEA,QAAAwL,QAAAxL,GAKA,GAJA,IAAAA,EAAAuK,MACAS,OAAAhL,IAAA0K,KACA1K,EAAA0K,IAAA,MAEA,IAAA1K,EAAAuK,IAAA,CACA,OAAA9P,GAAA,EAAmBA,EAAAuF,EAAA0K,IAAA/P,OAAqBF,IACxCuQ,OAAAhL,IAAA0K,IAAAjQ,GAEAuF,GAAA0K,IAAA,MAIA,QAAAO,SAAAJ,EAAAC,EAAAvL,GACA4E,KAAA0G,YAAA,kBAAAA,KAAA,KACA1G,KAAA2G,WAAA,kBAAAA,KAAA,KACA3G,KAAA5E,UASA,QAAAoL,WAAA5B,EAAAxJ,GACA,GAAApG,IAAA,EACA4R,EAAAX,WAAArB,EAAA,SAAA2C,GACAvS,IACAA,GAAA,EACAL,QAAAyG,EAAAmM,KACG,SAAAC,GACHxS,IACAA,GAAA,EACAJ,OAAAwG,EAAAoM,KAEAxS,IAAA4R,IAAAd,IACA9Q,GAAA,EACAJ,OAAAwG,EAAAyK,IAhNA,GAAAqB,GAAA5T,EAAA,GAqBAuS,EAAA,KACAC,IA2BApS,GAAAD,QAAAU,QAgBAA,QAAA6S,IAAA,KACA7S,QAAAmT,IAAA,KACAnT,QAAAsT,IAAA/B,KAEAvR,QAAAuT,UAAA/L,KAAA,SAAA+K,EAAAC,GACA,GAAA3G,KAAAnL,cAAAV,QACA,MAAAsS,UAAAzG,KAAA0G,EAAAC,EAEA,IAAAC,GAAA,GAAAzS,SAAAuR,KAEA,OADAmB,QAAA7G,KAAA,GAAA8G,SAAAJ,EAAAC,EAAAC,IACAA,IV+gCM,SAASlT,EAAQD,IW5lCvB,SAAAkU,GAAA,YAaA,SAAAC,SAAAC,GACAC,EAAAtR,SACAuR,IACAC,GAAA,GAGAF,IAAAtR,QAAAqR,EA0BA,QAAAI,SACA,KAAApE,EAAAiE,EAAAtR,QAAA,CACA,GAAA0R,GAAArE,CAUA,IAPAA,GAAA,EACAiE,EAAAI,GAAArU,OAMAgQ,EAAAsE,EAAA,CAGA,OAAAC,GAAA,EAAAC,EAAAP,EAAAtR,OAAAqN,EAAgEuE,EAAAC,EAAkBD,IAClFN,EAAAM,GAAAN,EAAAM,EAAAvE,EAEAiE,GAAAtR,QAAAqN,EACAA,EAAA,GAGAiE,EAAAtR,OAAA,EACAqN,EAAA,EACAmE,GAAA,EAmEA,QAAAM,qCAAApJ,GACA,GAAAqJ,GAAA,EACAC,EAAA,GAAAC,GAAAvJ,GACAwJ,EAAApG,SAAA4B,eAAA,GAEA,OADAsE,GAAAG,QAAAD,GAA4BE,eAAA,IAC5B,WACAL,KACAG,EAAAzT,KAAAsT,GA4CA,QAAAM,0BAAA3J,GACA,kBAWA,QAAA4J,eAGApJ,aAAAqJ,GACAC,cAAAC,GACA/J,IAXA,GAAA6J,GAAA9M,WAAA6M,YAAA,GAIAG,EAAAC,YAAAJ,YAAA,KAzLApV,EAAAD,QAAAmU,OAUA,IAOAG,GAPAD,KAGAE,GAAA,EAQAnE,EAAA,EAIAsE,EAAA,KA2CAM,EAAAd,EAAAwB,kBAAAxB,EAAAyB,sBAcArB,GADA,kBAAAU,GACAH,oCAAAL,OA8BAY,yBAAAZ,OAQAL,QAAAG,eAgFAH,QAAAiB,oDXumC8BhV,KAAKJ,EAAU,WAAa,MAAOuM,WAI3D,SAAStM,EAAQD,EAASH,GY/zChC,YAEA,IAAAa,GAAAb,EAAA,EAEAI,GAAAD,QAAAU,EACAA,EAAAuT,UAAA1S,KAAA,SAAA0R,EAAAC,GACA,GAAA9K,GAAAJ,UAAAjF,OAAAwJ,KAAArE,KAAAG,MAAAkE,KAAAvE,WAAAuE,IACAnE,GAAAF,KAAA,cAAA0N,GACApN,WAAA,WACA,KAAAoN,IACK,OZw0CC,SAAS3V,EAAQD,EAASH,Gal1ChC,YAEA,IAAAa,GAAAb,EAAA,EAEAI,GAAAD,QAAAU,EACAA,EAAAuT,UAAA,oBAAA4B,GACA,MAAAtJ,MAAArE,KAAA,SAAA4L,GACA,MAAApT,GAAAQ,QAAA2U,KAAA3N,KAAA,WACA,MAAA4L,MAEG,SAAA8B,GACH,MAAAlV,GAAAQ,QAAA2U,KAAA3N,KAAA,WACA,KAAA0N,Sb41CM,SAAS3V,EAAQD,EAASH,Gcx2ChC,YAiBA,SAAAiW,cAAAhC,GACA,GAAAvT,GAAA,GAAAG,KAAAsT,IAGA,OAFAzT,GAAAqS,IAAA,EACArS,EAAAsS,IAAAiB,EACAvT,EAjBA,GAAAG,GAAAb,EAAA,EAEAI,GAAAD,QAAAU,CAIA,IAAAqV,GAAAD,cAAA,GACAE,EAAAF,cAAA,GACAG,EAAAH,aAAA,MACAI,EAAAJ,aAAAK,QACAC,EAAAN,aAAA,GACAO,EAAAP,aAAA,GAQApV,GAAAQ,QAAA,SAAA4S,GACA,GAAAA,YAAApT,GAAA,MAAAoT,EAEA,WAAAA,EAAA,MAAAmC,EACA,IAAAE,SAAArC,EAAA,MAAAoC,EACA,IAAApC,KAAA,QAAAiC,EACA,IAAAjC,KAAA,QAAAkC,EACA,QAAAlC,EAAA,MAAAsC,EACA,SAAAtC,EAAA,MAAAuC,EAEA,oBAAAvC,IAAA,kBAAAA,GACA,IACA,GAAA5L,GAAA4L,EAAA5L,IACA,sBAAAA,GACA,UAAAxH,GAAAwH,EAAAwH,KAAAoE,IAEK,MAAA3B,GACL,UAAAzR,GAAA,SAAAQ,EAAAC,GACAA,EAAAgR,KAIA,MAAA2D,cAAAhC,IAGApT,EAAA4V,IAAA,SAAAC,GACA,GAAAxO,GAAAyO,MAAAvC,UAAAwC,MAAArW,KAAAmW,EAEA,WAAA7V,GAAA,SAAAQ,EAAAC,GAGA,QAAAgS,KAAAtQ,EAAA6T,GACA,GAAAA,IAAA,gBAAAA,IAAA,kBAAAA,IAAA,CACA,GAAAA,YAAAhW,IAAAgW,EAAAxO,OAAAxH,EAAAuT,UAAA/L,KAAA,CACA,SAAAwO,EAAA9D,KACA8D,IAAA7D,GAEA,YAAA6D,EAAA9D,IAAAO,IAAAtQ,EAAA6T,EAAA7D,MACA,IAAA6D,EAAA9D,KAAAzR,EAAAuV,EAAA7D,SACA6D,GAAAxO,KAAA,SAAAwO,GACAvD,IAAAtQ,EAAA6T,IACWvV,IAGX,GAAA+G,GAAAwO,EAAAxO,IACA,sBAAAA,GAAA,CACA,GAAA3H,GAAA,GAAAG,GAAAwH,EAAAwH,KAAAgH,GAIA,YAHAnW,GAAA2H,KAAA,SAAAwO,GACAvD,IAAAtQ,EAAA6T,IACavV,IAKb4G,EAAAlF,GAAA6T,EACA,MAAAC,GACAzV,EAAA6G,GA3BA,OAAAA,EAAAhF,OAAA,MAAA7B,MA8BA,QA7BAyV,GAAA5O,EAAAhF,OA6BAF,EAAA,EAAmBA,EAAAkF,EAAAhF,OAAiBF,IACpCsQ,IAAAtQ,EAAAkF,EAAAlF,OAKAnC,EAAAS,OAAA,SAAA2S,GACA,UAAApT,GAAA,SAAAQ,EAAAC,GACAA,EAAA2S,MAIApT,EAAAkW,KAAA,SAAAC,GACA,UAAAnW,GAAA,SAAAQ,EAAAC,GACA0V,EAAAC,QAAA,SAAAhD,GACApT,EAAAQ,QAAA4S,GAAA5L,KAAAhH,EAAAC,QAOAT,EAAAuT,UAAA,kBAAAf,GACA,MAAA3G,MAAArE,KAAA,KAAAgL,Kdg3CM,SAASjT,EAAQD,EAASH,Gez9ChC,YA2BA,SAAAkX,oBAAA5F,EAAA6F,GAEA,OADAjP,MACAlF,EAAA,EAAiBA,EAAAmU,EAAmBnU,IACpCkF,EAAAqE,KAAA,IAAAvJ,EAEA,IAAAoU,IACA,oBAAAlP,EAAA0E,KAAA,WACA,mBACA,yCACA,sBACA,QAAAyK,OAAAnP,GAAAmP,QAAAC,IAAA1K,KAAA,KACA,KACA,aACA,4DACA,iCACA,eACA,MACA,MACAA,KAAA,GACA,OAAA2K,WAAA,gBAAAH,GAAAvW,EAAAyQ,GAEA,QAAAkG,uBAAAlG,GAGA,OAFAmG,GAAAvL,KAAAC,IAAAmF,EAAApO,OAAA,KACAgF,KACAlF,EAAA,EAAiBA,EAAAyU,EAAczU,IAC/BkF,EAAAqE,KAAA,IAAAvJ,EAEA,IAAAoU,IACA,oBAAAlP,EAAA0E,KAAA,WACA,mBACA,YACA,oCACA,0BAAA6K,EAAA,MACA,0CACA,+CACA,0BACA,IACA,IACA,yCACA,YAAAH,EAAA,IACA,WACA,uBACApP,EAAAmP,QAAA,UAAAK,IAAA,SAAAC,EAAApH,GACA,MACA,6BACA,QAAA8G,OAAAnP,EAAA0O,MAAA,EAAArG,IAAA8G,OAAA,MAAAzK,KAAA,kBAGKA,KAAA,IACL,WACA,wBACA,8BACA,IAEA,aACA,4DACA,iCACA,eACA,MACA,MACAA,KAAA,GAEA,OAAA2K,WACA,gBACAH,GACAvW,EAAAyQ,GAvFA,GAAAzQ,GAAAb,EAAA,GACA4T,EAAA5T,EAAA,GAEAI,GAAAD,QAAAU,EAIAA,EAAA+W,UAAA,SAAAtG,EAAA6F,GACA,MACA,gBAAAA,QAAAU,IAEAX,mBAAA5F,EAAA6F,GAEAK,sBAAAlG,GAIA,IAAAgG,GAAA,+DAyEAzW,GAAAiX,QAAA,SAAAxG,GACA,kBACA,GAAApJ,GAAAyO,MAAAvC,UAAAwC,MAAArW,KAAA4H,WACAyD,EACA,kBAAA1D,KAAAhF,OAAA,GAAAgF,EAAA6P,MAAA,KACAC,EAAAtL,IACA,KACA,MAAA4E,GAAA9I,MAAAkE,KAAAvE,WAAA2P,QAAAlM,EAAAoM,GACK,MAAA1F,GACL,UAAA1G,GAAA,mBAAAA,GACA,UAAA/K,GAAA,SAAAQ,EAAAC,GACAA,EAAAgR,IAGAsB,GAAA,WACAhI,EAAArL,KAAAyX,EAAA1F,QAOAzR,EAAAuT,UAAA0D,QAAA,SAAAlM,EAAAoM,GACA,wBAAApM,GAAAc,SAEAA,MAAArE,KAAA,SAAA4L,GACAL,EAAA,WACAhI,EAAArL,KAAAyX,EAAA,KAAA/D,MAEG,SAAA8B,GACHnC,EAAA,WACAhI,EAAArL,KAAAyX,EAAAjC,Sfm+CM,SAAS3V,EAAQD,EAASH,GgBjmDhC,YAWA,SAAAiY,mBACA,GAAAC,EAAAhV,OACA,KAAAgV,GAAAC,QAaA,QAAAvE,MAAAW,GACA,GAAA6D,EAEAA,GADAC,EAAAnV,OACAmV,EAAAN,MAEA,GAAAO,SAEAF,EAAA7D,OACAD,EAAA8D,GAKA,QAAAE,WACA5L,KAAA6H,KAAA,KArCA,GAAAD,GAAAtU,EAAA,GAEAqY,KAGAH,KACAK,EAAAjE,EAAAiB,yBAAA0C,gBAgBA7X,GAAAD,QAAAyT,KAoBA0E,QAAAlE,UAAA7T,KAAA,WACA,IACAmM,KAAA6H,KAAAhU,OACK,MAAA0B,GACL2R,KAAA4E,QAIA5E,KAAA4E,QAAAvW,IAKAiW,EAAA3L,KAAAtK,GACAsW,KAEK,QACL7L,KAAA6H,KAAA,KACA8D,IAAAnV,QAAAwJ,QhB0mDM,SAAStM,EAAQD,EAASH,GiBzqDhC,YAEA,IAAAa,GAAAb,EAAA,EAEAI,GAAAD,QAAAU,EACAA,EAAA4X,kBAAA,WACA5X,EAAAuT,UAAAsE,UAAA,WACA,UAAAhM,KAAAiM,YAGA9X,EAAAuT,UAAAwE,YAAA,WACA,UAAAlM,KAAAiM,YAGA9X,EAAAuT,UAAAyE,WAAA,WACA,UAAAnM,KAAAiM,YAGA9X,EAAAuT,UAAA0E,SAAA,WACA,OAAApM,KAAAqG,IACA,MAAArG,MAAAsG,IAAA8F,UAGA,KAAApM,KAAAkM,cACA,SAAApK,OAAA,gDAGA,OAAA9B,MAAAsG,KAGAnS,EAAAuT,UAAA2E,UAAA,WACA,OAAArM,KAAAqG,IACA,MAAArG,MAAAsG,IAAA+F,WAGA,KAAArM,KAAAmM,aACA,SAAArK,OAAA,2DAGA,OAAA9B,MAAAsG,KAGAnS,EAAAuT,UAAAuE,SAAA,WACA,WAAAjM,KAAAqG,IACArG,KAAAsG,IAAA2F,WAEAjM,KAAAqG,UAAArG,KAAAqG,SACA,EAGArG,KAAAqG,MAIAlS,EAAAmY,mBAAA,WACAnY,EAAAuT,UAAAsE,UAAApC,OACAzV,EAAAuT,UAAAwE,YAAAtC,OACAzV,EAAAuT,UAAAyE,WAAAvC,OACAzV,EAAAuT,UAAA0E,SAAAxC,OACAzV,EAAAuT,UAAA2E,UAAAzC,OACAzV,EAAAuT,UAAAuE,SAAArC,SjBirDM,SAASlW,EAAQD,GkB7uDvB,YAEAC,GAAAD,QAAA,WACA,GAAAM,GAAAuO,SAAAC,cAAA,SACA,KACA,SAAArO,OAAAqY,wBACAxY,EAAAyY,WAAA,wBAAAzY,EAAAyY,WAAA,UACG,MAAAxV,GACH,iBlBsvDM,SAAStD,EAAQD,EAASH,GmB7vDhC,GAMAmZ,GAEAC,EARAC,EAAArZ,EAAA,IACAsZ,EAAAtZ,EAAA,IAIAuZ,GAHAvZ,EAAA,GAGAA,EAAA,KAEAwZ,EAAAxZ,EAAA,GAIAI,GAAAD,QAAA,SAAAQ,EAAAC,EAAAiC,EAAAR,GAOA,QAAAoX,gBACAC,EAAAC,OACAC,EAAAD,OACAE,EAAAF,OACAG,EAAAH,OAYA,QAAAI,aACAC,EAAAnX,EAAAgI,QACAoP,EAAApX,EAAAiI,SACAoP,EAAAC,QAAA,EAAAH,EAAA,EAAAC,GACAG,EAAA5X,IAAA,QAAAwX,GACAI,EAAA5X,IAAA,SAAAyX,GACAI,EAAAD,EAAAE,SACAC,EAAAC,OAAAR,EAAAC,EACAQ,GAAA,EACAF,EAAAG,yBAmDA,QAAAxZ,MAAAC,GAEA6Y,EAAAnX,EAAAgI,QACAoP,EAAApX,EAAAiI,SACAuP,EAAAxX,EAAAyX,SAEAnZ,EAAAwZ,EAAAxZ,EAAAR,EACA,QAAAqC,GAAA,EAAoBA,EAAA7B,EAAA8B,OAAAC,OAAwBF,IAAA,CAC5C,GAAA4X,GAAAzZ,EAAA8B,OAAAD,EACA4X,GAAAC,aACAD,EAAAE,UACAF,EAAAG,gBACAH,EAAAI,WACAJ,EAAAK,gBAAAC,EAAA7X,QACAuX,EAAAK,gBAAAE,OACAP,EAAAQ,UAAkCC,KAAA,WAAAC,KAAA,WAAAC,KAAA,EAAAC,KAAA,GAElCN,EAAApY,OAAA8X,EAAAK,iBAEAQ,EAAAb,EAAAnX,OAAAmX,EAEAc,EAAAd,EAAAnX,OAAA,GAAA4V,GAAAsC,QAEA,IAAAC,GAAA,GAAAvC,GAAAsC,QACAC,GAAArY,KAAA,SACAmY,EAAAd,EAAAnX,OAAAoY,IAAAD,EAEA,IAAAE,GAAA,GAAAzC,GAAAsC,QACAG,GAAAvY,KAAA,SACAmY,EAAAd,EAAAnX,OAAAoY,IAAAC,EAEA,IAAAC,GAAA,GAAA1C,GAAAsC,QACAI,GAAAxY,KAAA,YACAmY,EAAAd,EAAAnX,OAAAoY,IAAAE,EAWA,QATAC,GAAApB,EAAAqB,OASA5O,EAAA,EAAwBA,EAAA2O,EAAA9Y,OAAoBmK,IAAA,CAC5C,GAAA6O,GAAAF,EAAA3O,GACA8O,EAAA/C,EAAA/L,EAAA6O,EAAAtB,EAAAnX,MAAAmX,GAGAwB,EAAA,IACA,IAAAF,EAAA/C,MAAA,CACA,GAAAkD,GAAAF,EAAAf,SAAAG,KAAAY,EAAAf,SAAAC,KACAiB,EAAAH,EAAAf,SAAAI,KAAAW,EAAAf,SAAAE,KACAiB,EAAAJ,EAAAf,SAAAC,KAAAgB,EAAA,EACAG,EAAAL,EAAAf,SAAAE,KAAAgB,EAAA,EACAG,EAAAP,EAAA,YAAAK,EAAAL,EAAAQ,YAAA,GAAAH,EACAI,EAAAT,EAAA,YAAAM,EAAAN,EAAAQ,YAAA,GAAAF,EAEAI,EAAA,EACAhC,GAAAiC,oBAAAD,EAAAhC,EAAAiC,mBACAX,EAAAU,eAAAV,EAAAU,YAEAR,EAAAjD,GAAAsD,EAAAE,EAAAR,EAAAW,iBACAC,MAAAb,EAAA/C,MACA6D,MAAAX,EAAAO,GACAnZ,MAAAmX,EAAAnX,OACqBwZ,GAAA,GAErBd,EAAAhW,SAAAiW,GACAxB,EAAAE,OAAAvO,KAAA6P,GAGAxB,EAAAG,aAAAxO,KAAA4P,GAIA,GAFAvB,EAAAsC,sBAAAC,yBAAAvC,EAAAQ,UAEAR,EAAAwC,UAAA,CACA,GAAAhC,GAAAR,EAAAQ,SACAiC,EAAAjC,EAAAG,KAAAH,EAAAC,KACA,EAAAT,EAAA0C,gBACAC,EAAAnC,EAAAI,KAAAJ,EAAAE,KACA,EAAAV,EAAA0C,gBACAE,EAAA,GAAAnE,GAAAoE,YAAAJ,EAAAzC,EAAA2C,mBACAG,EAAA,GAAArE,GAAAsE,qBAAuEC,MAAA7T,SAAA6Q,EAAAiD,eAAA,MACvET,EAAA,GAAA/D,GAAAyE,KAAAN,EAAAE,EACAN,GAAA1X,SAAAqY,IAAAV,EAAA,EAAAjC,EAAAC,KAAAT,EAAA0C,iBACA1C,EAAA2C,gBAAA,EACAA,EAAA,EAAAnC,EAAAE,KAAAV,EAAA0C,iBACA5B,EAAAd,EAAAnX,OAAAoY,IAAAuB,IAGAY,EAAA7c,EAAA6c,aACAra,YAAAqa,GAEAC,4BAEAC,SACA9D,EAAA+D,OACApE,YACA1X,EAAAkH,SAAA5I,EAAAC,GAAAwd,OAAA,SAAA1a,GAAsDqW,cAEtD,QAAAoD,0BAAAkB,GACA,GAAAC,GAAAD,EAAA9C,KAAA8C,EAAAhD,KACAkD,EAAAF,EAAA7C,KAAA6C,EAAA/C,KACAkD,EAAAxE,EAAAC,EACAwE,EAAAC,EAAAxS,KAAAyS,GAAA,GACA,OAAAL,IAAA,EAAAE,EAAAtS,KAAA0S,IAAAH,EAAA,IAAAF,EAAA,EAAArS,KAAA2S,IAAA/V,GAGA,QAAAmV,6BACA,GAAAI,GAAA5C,EAAAwB,GAAA7B,SACA0D,EAAA1X,OAAAiX,EAAAhD,KAAAgD,EAAA9C,MAAA,GACA8C,EAAA/C,KAAA+C,EAAA7C,MAAA,EACAzS,GAAA,IACAhC,QAAAgC,EAAA+V,GAGA,QAAAnb,aAAAob,GACA9B,GAAA8B,IACA9B,IACA+B,EAAAzP,OAAAmM,EAAAuB,IACAxB,EAAAwB,GAAAhC,gBAAAE,QAEA8B,EAAA8B,EACAE,EAAAvD,EAAAuB,GAAAiC,gBAAA,UACAjB,4BACAe,EAAAnD,IAAAH,EAAAuB,IACAxB,EAAAwB,GAAAhC,gBAAAkD,OACA9b,EAAAsH,gBAAAtH,EAAAsH,eAAAsT,GACAxC,GAAA,GAKA,QAAA0E,aAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAhc,QAAAgE,kBACAiY,GAAAC,eAAAC,GAAAtT,KAAAyS,GAAA,GACAc,EAAA/Z,SAAAqY,IAAAuB,EAAA7T,EAAA6T,EAAAI,EAAAJ,EAAAK,GAGA,QAAAC,gBAAAC,GAQA,MAPAA,GAAAxd,EAAA2G,QACA6W,EAAAxd,EAAA2G,QACS6W,EAAAxd,EAAA4G,UACT4W,EAAAxd,EAAA4G,SAIA4W,EAEA,QAAA9Y,SAAA8Y,EAAAC,EAAAnY,EAAAxF,GACA,GAAAwF,EAgCA,GADA8R,eACAoG,GAAAC,EAAA,CAEA,GAAAD,GAAAD,eAAAC,EACAhG,GAAA,GAAAP,GACAyG,OACAhX,YACA0C,EAAAuU,EAAAvU,EAAAiU,EAAAM,EAAAN,EAAAC,EAAAK,EAAAL,IAEAM,IACAlX,UAAA8W,EACApU,EAAAqU,EAAArU,EAAAiU,EAAAI,EAAAJ,EAAAC,EAAAG,EAAAH,GACqBhY,GACrBuY,SAAA,WACAnZ,QAAA2F,KAAA3D,UAAA,GAAAsQ,GAAA8G,QAAAzT,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAiT,IACAR,YAAAa,EAAAI,GACA3F,GAAA,IAEAtY,GAAA0X,EAAAwG,WAAAle,GACAA,GAAA0X,EAAAyG,OAAAne,GACA0X,EAAA0G,YACaV,IAEbA,EAAAD,eAAAC,GACAnG,EAAA,GAAAJ,GAAAyG,OAA6ChX,cAC7CkX,IAAyBlX,UAAA8W,GAAuBlY,GAChDuY,SAAA,WACAnZ,QAAA2F,KAAA3D,WACAoW,YAAAa,EAAAI,GACA3F,GAAA,IAEAtY,GAAAuX,EAAA2G,WAAAle,GACAA,GAAAuX,EAAA4G,OAAAne,GACAuX,EAAA6G,SACaT,IAEbtW,iBAAAsW,EAAA7C,GACArD,EAAA,GAAAN,GAAAyG,OAAoDtU,EAAAuU,EAAAvU,EAAAiU,EAAAM,EAAAN,EAAAC,EAAAK,EAAAL,IACpDM,IACAxU,EAAAqU,EAAArU,EACAiU,EAAAI,EAAAJ,EACAC,EAAAG,EAAAH,GACqBhY,GACrBuY,SAAA,WACAnZ,QAAA,QAAAsS,GAAA8G,QAAAzT,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAiT,IACAR,YAAAa,EAAAI,GACA3F,GAAA,IAEAtY,GAAAyX,EAAAyG,WAAAle,GACAA,GAAAyX,EAAA0G,OAAAne,GACAyX,EAAA2G,aA/EAV,KAEAA,EAAAD,eAAAC,GACA9W,EAAA8W,EACAW,EAAA/E,EAAAwB,GAAAC,uBAAAnU,EAAA,KACAqX,EAAAK,UAAAD,GACArB,YAAAa,EAAAI,GACA3F,GAAA,EACAF,EAAA7U,SAAAqY,IACAiC,EAAAvU,EAAA2U,EAAA3U,EACAuU,EAAAN,EAAAU,EAAAV,EACAM,EAAAL,EAAAS,EAAAT,IAGAG,IAEAE,EAAAF,EACAtW,iBAAAwW,EAAA/C,GACAkC,YAAAa,EAAAI,GACA3F,GAAA,EACAF,EAAA7U,SAAAqY,IACAiC,EAAAvU,EAAA2U,EAAA3U,EACAuU,EAAAN,EAAAU,EAAAV,EACAM,EAAAL,EAAAS,EAAAT,IAGAxd,OA0DA,QAAAmF,cAAAoZ,EAAA/Y,EAAAxF,GACAsX,cACA,IAAAkH,GAAA,KACAC,EAAA,KACAC,EAAAT,EAAA/c,QAAAgE,mBACAyZ,EAAAD,EAAA3d,QAEA,OAAAwd,MAAA,GAUA,GATA,IAAAA,MAAA,OACA,GAAAA,MAAA,KACA,IAAA5X,GACA6X,EAAA,GAAAtH,GAAA8G,QAAA,OACAS,EAAAD,EAAAtd,QAAAkc,eAAAC,GAAAtT,KAAAyS,GAAA,KAEAgC,EAAA,GAAAtH,GAAA8G,QAAAU,EAAApV,EAAA,EAAAoV,EAAAlB,GAAAoB,YACAH,EAAAD,EAAAtd,QAAAkc,eAAAC,GAAAtT,KAAAyS,GAAA,IAEAhX,EAca,CACbkZ,EAAAF,EACAtd,QACAkc,eAAAqB,EAAAF,EAAAxU,KAAAyS,GAAA,KACA8B,UAAAK,EACA,IAAAE,GAAAH,EAAAxZ,kBACA4Z,GAAA,GAAA3H,GACAyG,OACAtU,EAAA2U,EAAA3U,EACAiU,EAAAU,EAAAV,EACAC,EAAAS,EAAAT,IAEAM,IACAxU,EAAAuV,EAAAvV,EACAiU,EAAAsB,EAAAtB,EACAC,EAAAqB,EAAArB,GACqBhY,GACrBuY,SAAA,WACAE,EAAArC,IAAArR,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAiT,GACApF,EAAA7U,SAAAqY,IACAiC,EAAAvU,EAAAiB,KAAAjB,EACAuU,EAAAN,EAAAhT,KAAAgT,EACAM,EAAAL,EAAAjT,KAAAiT,GAEApF,EAAA2G,OAAAlB,GACAb,YAAAa,EAAAI,GACA3F,GAAA,IAEAtY,GAAA8e,EAAAZ,WAAAle,GACAA,GAAA8e,EAAAX,OAAAne,GACA8e,EAAAV,YA3CAM,GAAAF,EACAtd,QACAkc,eAAAqB,EAAAF,EAAAxU,KAAAyS,GAAA,KACA8B,UAAAK,GACAV,EAAAS,EAAAxZ,mBACAkT,EAAA7U,SAAAqY,IACAiC,EAAAvU,EAAA2U,EAAA3U,EACAuU,EAAAN,EAAAU,EAAAV,EACAM,EAAAL,EAAAS,EAAAT,GAEApF,EAAA2G,OAAAlB,GACAb,YAAAa,EAAAI,GACA3F,GAAA,MAkCAzY,SAAAC,MAAA,qDAKA,QAAAkf,WAAAC,EAAAC,GACA,GAAA/G,GAAA8G,EAAA/d,QAAAie,IAAAD,EAAAhe,QACA2c,KAAA3c,QAAAwY,IAAAvB,GAEA9Q,iBAAAwW,EAAA/C,EAEA,IAAAsE,GAAAvB,EAAA3c,QAAAie,IAAAlB,EACAjB,aAAAa,EAAAI,GACA7F,EAAA7U,SAAA+F,EAAA8V,EAAA9V,EACA8O,EAAA7U,SAAAia,EAAA4B,EAAA5B,EACAlF,GAAA,EAKA,QAAAjT,QAAAga,EAAAC,EAAAC,GACA,IAAAF,IAAAC,EAAA,CACA,GAAAta,GAAAwa,kBAAiDlW,EAAA,EAAAiU,EAAA,GACjD8B,GAAAra,EAAAsE,EACAgW,EAAAta,EAAAwY,EAEA,GAAAiC,GAAA,GAAAvI,GAAA8G,QAAAqB,EAAA,EAAAC,GACAI,EAAA7B,EAAA3c,QAAAie,IAAAM,GACAE,EAAAD,EAAAxe,QAAAkc,eAAAC,GAAAkC,EACAtB,GAAAb,eAAAC,GAAAkC,GACA1B,EAAAnE,IAAAgG,EAAAxa,oBAAAwU,IAAAiG,GACAvH,EAAA7U,SAAA+F,EAAAuU,EAAAvU,EAAA2U,EAAA3U,EACA8O,EAAA7U,SAAAia,EAAAK,EAAAL,EAAAS,EAAAT,EACApF,EAAA2G,OAAAlB,GACAb,YAAAa,EAAAI,GACA3F,GAAA,EAEA,QAAA7S,gBAAAma,EAAAra,EAAAC,EAAAxF,GACA,GACAqf,GAAAC,EADAC,EAAAK,EAAA7V,KAAAyS,GAAA,GAOA,IALAjX,GACA8Z,EAAA9Z,EAAA,GAAgC+Z,EAAA/Z,EAAA,KAEhC8Z,EAAA,KAA2BC,EAAA,MAE3B9Z,KAAA,GACA,GAAAqa,GAAA,CACAlI,GAAA,GAAAR,GACAyG,OACA2B,IAAA,IAEAzB,IACAyB,OACiB/Z,GACjBuY,SAAA,WACA,GAAA+B,GAAAvV,KAAAgV,IAAAM,CACAA,IAAAC,EACAza,OAAAga,EAAAC,EAAAQ,KAEA9f,GAAA2X,EAAAuG,WAAAle,GACAA,GAAA2X,EAAAwG,OAAAne,GACA2X,EAAAyG,YAEA/Y,QAAAga,EAAAC,EAAAC,GACAvf,OAKA,QAAA+f,MAAAV,EAAAC,EAAAjhB,GACA,GAAAqf,GAAArf,EAAAuI,CACA8W,GAAAD,eAAAC,GACArf,EAAAqf,EAAA9W,EACAA,EAAA8W,CACA,IAAAsC,GAAA,GAAA9I,GAAA8G,QAAAqB,EAAA,EAAAC,GACAI,EAAA7B,EAAA3c,QAAAie,IAAAa,EACAnC,GAAAnE,IAAAgG,EAAAxa,eAAA,EAAA7G,EAAA,IAEAgJ,iBAAAwW,EAAA/C,GAEAmD,EAAA/Y,eAAA,EAAA7G,GACA2e,YAAAa,EAAAI,GACA7F,EAAA7U,SAAAqY,IAAAiC,EAAAvU,EAAA2U,EAAA3U,EAAAuU,EAAAN,EAAAU,EAAAV,EAAAM,EAAAL,EAAAS,EAAAT,GACApF,EAAA2G,OAAAlB,GACAvF,GAAA,EAIA,QAAAjR,kBAAA4V,EAAA3b,GAEA,GAAApB,EAAAmH,iBAAA,CACA,GAAA6U,GAAA5C,EAAAhY,GAAA2X,QACAgE,GAAA3T,EAAA4S,EAAAhD,OAAA+D,EAAA3T,EAAA4S,EAAAhD,MACA+D,EAAA3T,EAAA4S,EAAA9C,OAAA6D,EAAA3T,EAAA4S,EAAA9C,MACA6D,EAAAO,EAAAtB,EAAA/C,OAAA8D,EAAAO,EAAAtB,EAAA/C,MACA8D,EAAAO,EAAAtB,EAAA7C,OAAA4D,EAAAO,EAAAtB,EAAA7C,OAKA,QAAAxX,UAAAQ,EAAAP,EAAA0D,GAIA,GAHAnD,IACAA,GAAA6V,EAAA3P,KAAAsP,EAAA,EAAAK,EAAA5P,IAAAwP,EAAA,IAEAtS,EACA8R,eACAC,EAAA,GAAAJ,GAAAyG,OAAyChX,cACzCkX,IAAqBlX,YAAA9E,GAA6B0D,GAClDuY,SAAA,WACAnZ,QAAA2F,KAAA3D,aACiBwX,YACR,CACT,GAAAV,GAAA9W,EAAA9E,EACAzD,EAAAqf,EAAA9W,EACAqZ,EAAAT,iBAAAU,QAAA7d,GACA0d,MAAAE,EAAA3W,EAAA2W,EAAAzC,EAAAnf,IA2FA,QAAAsE,uBAAAwd,EAAA9d,GACA+d,EAAAC,cAAAH,QAAA7d,GAAA+V,EACA,IAAAkI,GAAAF,EAAAG,gBAAAzD,GAAA,EAEA,QAAAqD,GACA,gBACAK,oBAAAC,EACAH,EAAAvf,OAAA,IACAyf,oBAAAF,EAAA,GAAAI,QAGAC,EAAAC,aAAAD,EAAAC,cAAAJ,oBAAAI,cAEA1gB,EAAAwH,iBACAxH,EAAAwH,gBAAArB,MAAAsa,EAAAC,aAAAD,EAAAnhB,OAEAmhB,EAAAC,YAAAC,YACAF,EAAAC,YAAAC,cAIAL,oBAAAI,aAAAJ,oBAAAI,cAAAD,EAAAC,cACA1gB,EAAAuH,kBACAvH,EAAAuH,iBAAApB,MAAAma,oBAAAI,aAAAJ,oBAAAhhB,OAEAghB,oBAAAI,YAAAE,aACAN,oBAAAI,YAAAE,eAGAH,EAAAH,mBACA,MACA,aACA,GAAAF,EAAAvf,OAAA,GACA,GAAAggB,GAAAT,EAAA,GAAAI,MACAxgB,GAAAyH,cACAzH,EAAAyH,aAAAtB,MAAA0a,EAAAH,aAAAG,EAAAvhB,OAEAuhB,EAAAH,YAAAI,SACAD,EAAAH,YAAAI,YAOA,QAAAvc,UAAAvG,EAAAoD,GACAA,EAAA,EAAAA,EAAAwZ,CAEA,QADAmG,GAAA,KACApgB,EAAA,EAAoBA,EAAAyY,EAAAhY,GAAAsX,aAAA7X,OAAmCF,IACvD,GAAAyY,EAAAhY,GAAAsX,aAAA/X,GAAA3C,MAAA,CACA+iB,EAAA3H,EAAAhY,GAAAsX,aAAA/X,EACA,OAGA,MAAAogB,GAEA,QAAAvc,aAAApD,GAEA,MADAA,GAAA,EAAAA,EAAAwZ,EACAxB,EAAAhY,GAAAsX,aAEA,QAAAjU,gBACA,GAAA2F,KACA,QAAAhJ,KAAAgY,GACAhP,EAAAhJ,GAAAgY,EAAAhY,GAAAsX,YAEA,OAAAtO,GAMA,QAAA4W,kBAAAC,GACA,GAAA3D,GAAA2D,EAAA,GAAAA,EAAA,KACAC,EAAA,GAAAlK,GAAA8G,QAAAmD,EAAA,GAAA3D,EAAA2D,EAAA,IACAE,EAAAD,EAAAE,QAAAlJ,EACA,SACAiJ,EAAA/X,EAAA,KAAAuO,IACAwJ,EAAA9D,EAAA,KAAAzF,GAMA,QAAA5V,cAAAC,EAAAC,GACA,MAAA8V,GAAA3P,MAAApG,MAAA+V,EAAA3P,KAAAsP,GACAK,EAAA5P,KAAAlG,MAAA8V,EAAA5P,IAAAwP,EAEA,QAAAoI,SAAAqB,GACA,OACAjY,EAAA,GAAAiY,EAAA,GAAA1J,GAAA,EACA0F,EAAA,KAAAgE,EAAA,GAAAzJ,IAGA,QAAA0H,kBAAA+B,GAEA,MADAnB,GAAAC,cAAAkB,EAAAnJ,GACAgI,EAAAoB,IAAAC,eAAAC,GAGA,QAAA9d,WAAAD,EAAAge,GACAhe,EAAAie,KAAAvhB,IAAA,uBACAshB,EAAA,EAAAA,IACA,IAAA3gB,GAAA2gB,EAAArgB,OAAAwZ,EACA+G,EAAAvI,EAAAtY,GAAA6X,OACA,OAAAgJ,EAAA9gB,QAAA8gB,IAAA9gB,OAAA,GAAA+gB,UAAAne,EAAAme,SACAD,EAAAzX,KAAAzG,OAEA,QAAA9C,GAAA,EAAwBA,EAAAghB,EAAA9gB,OAAuBF,IAAA,CAC/C,GAAAkhB,IAAA,CACA,IAAApe,EAAAme,SAAAD,EAAAhhB,GAAAihB,SAAA,CACAD,EAAAlV,OAAA9L,EAAA,EAAA8C,GACAoe,GAAA,CACA,QAIAzI,EAAAtY,GAAA8X,gBAAAnY,OAAAgD,EAAAie,MACAje,EAAAqe,aACAre,EAAAse,eAAAf,iBAAAvd,EAAAJ,WACA2e,sBACA1b,WAAA,SAAA2b,GACA,kBACAA,EAAA9hB,IAAA,0BAESsD,EAAAie,MAAA,KAET,QAAAQ,qBAEA,OADAC,GAAA/I,EAAAwB,GAAAjC,QACAhY,EAAA,EAAoBA,EAAAwhB,EAAAthB,OAAwBF,IAAA,CAC5C,GAAAyhB,GAAAD,EAAAxhB,EACAyhB,GAAAL,eAAAf,iBAAAoB,EAAA/e,WAEA2e,sBACA5J,GAAA,EAEA,QAAA4J,uBACA,GAAAhiB,EAAAoH,iBAAA,CACA,GAAA+a,GAAA/I,EAAAwB,GAAAjC,QACA0J,EAAA,GAAA/N,OAAA6N,EAAAthB,OACAwhB,GAAAC,KAAA,EACA,QAAA3hB,GAAA,EAAwBA,EAAAwhB,EAAAthB,OAAwBF,IAAA,CAChD,GAAA4hB,GAAAJ,EAAAxhB,EACA,IAAA0hB,EAAA1hB,GAAA,IAAA4hB,EAAAC,YACAD,EAAAE,SACA,GAAAziB,EAAAqH,0BACAkb,EAAAb,KAAA5I,OAEAyJ,EAAAb,KAAAgB,QAAA1iB,EAAAqH,2BAEAkb,EAAAE,QAAA,OAPA,CAWAF,EAAAE,SACA,GAAAziB,EAAAqH,0BACAkb,EAAAb,KAAA5F,OAEAyG,EAAAb,KAAAiB,OAAA3iB,EAAAqH,2BAEAkb,EAAAE,QAAA,EAIA,QADAG,GAAAL,EAAAM,cACA7X,EAAArK,EAAA,EAAkCqK,EAAAmX,EAAAthB,OAAwBmK,IAAA,CAC1D,GAAA8X,GAAAX,EAAAnX,GACAlL,EAAAgjB,EAAAD,aACA/iB,GAAAijB,GAAAH,EAAAI,IAAAJ,EAAAG,GAAAjjB,EAAAkjB,IAAAljB,EAAAmjB,GAAAL,EAAAM,IAAAN,EAAAK,GAAAnjB,EAAAojB,IACAb,EAAArX,SAOA,QAAArH,cAAAF,GACA,OAAA9C,KAAAyY,GAEA,OADAT,GAAAS,EAAAzY,GAAAgY,QACA3N,EAAA,EAAwBA,EAAA2N,EAAA9X,OAAiBmK,IACzC,GAAA2N,EAAA3N,KAAAvH,EAGA,MAFAkV,GAAA3N,GAAA0W,KAAAxU,aACAyL,GAAAlM,OAAAzB,EAAA,GAMA,QAAApH,iBAAAxC,GAEA,GADAA,EAAA,EAAAA,EAAAwZ,EACAxB,EAAAhY,GAEA,IADA,GAAAuX,GAAAS,EAAAhY,GAAAuX,QACA,GAAAA,EAAA9X,QAAA,CACA,GAAA4C,GAAAkV,EAAAjD,KACAjS,GAAAie,KAAAxU,aAGAvN,SAAAC,MAAA,yBAAAwB,EAAA,iBAGA,QAAAyC,oBACA,OAAAlD,KAAAyY,GAEA,IADA,GAAAT,GAAAS,EAAAzY,GAAAgY,QACA,GAAAA,EAAA9X,QAAA,CACA,GAAA4C,GAAAkV,EAAAjD,KACAjS,GAAAie,KAAAxU,UAKA,QAAApJ,UAAAT,EAAA1E,GACA,GAAAyC,GAAAzC,EAAA,MAAAA,EAAAyC,MAAAwZ,EACAb,EAAAjD,EAAAzT,EAAA1E,EAAAic,EAEA,OADAxB,GAAAhY,GAAAqX,OAAAvO,KAAA6P,GACAA,EAEA,QAAAoJ,aAAArM,GACA,GAAAA,KAAAsM,UACA,OAAAziB,KAAA0Y,GACAA,EAAA1Y,GAAAkc,gBAAA,UAAA3P,OAAA4J,EAAAsM,WAIA,QAAArf,gBAAA3C,GACAA,EAAA,EAAAA,EAAAwZ,CAEA,QADAnC,GAAAW,EAAAhY,GAAAqX,OACA9X,EAAA,EAAoBA,EAAA8X,EAAA5X,OAAgBF,IACpC0Y,EAAAjY,GAAAyb,gBAAA,UAAA3P,OAAAuL,EAAA9X,GAAAyiB,WAGA,QAAApf,mBACA,OAAArD,KAAA0Y,GAEA,OADAZ,GAAAW,EAAAzY,GAAA8X,OACAzN,EAAA,EAAwBA,EAAAyN,EAAA5X,OAAiBmK,IACzCqO,EAAA1Y,GAAAkc,gBAAA,UAAA3P,OAAAuL,EAAAzN,GAAAoY,WAKA,QAAAnf,aAAAC,EAAAvF,GACA,GAAA4H,IACAiC,MAAA,EACA+S,MAAA,SACAna,MAAAwZ,GAEAyI,EAAA9c,CACA5H,IACAL,EAAA4J,OAAAmb,EAAA1kB,GAEA,gBAAA0kB,GAAA9H,QAAA8H,EAAA9H,MAAA7T,SAAA2b,EAAA9H,OASA,QARA+H,GAAA,GAAAtM,GAAAuM,mBACAhI,MAAA8H,EAAA9H,MACAiI,UAAAH,EAAA7a,MACAib,QAAA,QACAC,SAAA,UAEAC,EAAA,GAAA3M,GAAA4M,SACArgB,EAAA6V,EAAAiK,EAAAjiB,OAAAmC,YACA5C,EAAA,EAAoBA,EAAAuD,EAAArD,OAAgBF,IAAA,CACpC,GAAA0gB,GAAAnd,EAAAvD,GACA8H,EAAA,GAEA4Y,GAAA,IAAAA,EAAA,OAAA5Y,EAAA4Y,EAAA,GAAA9d,EAAA,KACAogB,EAAAE,SAAA3Z,KAAA,GAAA8M,GAAA8G,QAAAuD,EAAA,GAAA9d,EAAAkF,EAAA4Y,EAAA,GAAA9d,IAEA,GAAAugB,GAAA,GAAA9M,GAAA+M,KAAAJ,EAAAL,EAIA,OAHAjK,GAAAgK,EAAAjiB,OAAAyb,gBAAA,aAAArD,IAAAsK,GACA1K,EAAAiK,EAAAjiB,OAAAoX,UAAAtO,KAAA4Z,GAEAA,EAEA,QAAA3f,gBAAAC,GACA,OAAAzD,KAAA0Y,GACAA,EAAA1Y,GAAAkc,gBAAA,aAAA3P,OAAA9I,GAGA,QAAAC,mBAAAjD,GACAA,EAAA,EAAAA,EAAAwZ,CAEA,QADApC,GAAAY,EAAAhY,GAAAoX,UACA7X,EAAA,EAAoBA,EAAA6X,EAAA3X,OAAoBF,IACxC0Y,EAAAjY,GAAAyb,gBAAA,aAAA3P,OAAAsL,EAAA7X;CAGA,QAAA2D,sBACA,OAAA3D,KAAA0Y,GAEA,OADAb,GAAAY,EAAAzY,GAAA6X,UACAxN,EAAA,EAAwBA,EAAAwN,EAAA3X,OAAoBmK,IAC5CqO,EAAA1Y,GAAAkc,gBAAA,aAAA3P,OAAAsL,EAAAxN,IAKA,QAAA6Q,UACA5E,EAAAhK,SACA4K,EAAAgE,OAAAc,EAAAzE,GACAE,GACA8J,oBAEA7Y,sBAAAwS,QAEA,QAAA9W,OAAAqE,EAAAkU,GACA,UAAAtG,GAAA8G,QAAA1U,EAAA,EAAAkU,GAEA,QAAA0G,gBACA,MAAAjM,GAEA,QAAA3V,eAAAH,EAAAC,GACA,OAAAD,EAAA+V,EAAA3P,KAAAnG,EAAA8V,EAAA5P,KAEA,QAAApF,kBAAAihB,GAEA,OADAlhB,MACApC,EAAA,EAAoBA,EAAAsjB,EAAApjB,OAAqBF,IACzCoC,EAAAmH,KAAA9H,cAAA6hB,EAAAtjB,GAAAsB,MAAAgiB,EAAAtjB,GAAAuB,OAEA,OAAAa,GAEA,QAAAmhB,WACA,MAAA9K,GAEA,QAAA9V,iBACA,MAAA8V,GAAAwB,GAz4BA,GAAAvD,GAAA,GAAAJ,GAAAyG,MACAnG,EAAA,GAAAN,GAAAyG,MACAjG,EAAA,GAAAR,GAAAyG,MACAlG,EAAA,GAAAP,GAAAyG,MACAkB,EAAA,GAAA3H,GAAAyG,MASA7F,EAAA,GAAAb,GAAAmN,aACAtM,GAAAuM,cAAApkB,EAAAwG,gBAAA,EAEA,IAAAuR,GAAAzZ,EAAAuZ,EAAAwM,WACAtM,GAAAe,OACAtY,EAAAC,OAAAsX,GACAA,EAAAxX,SAAA,mBACA,IAAAyX,GAAAL,EAAAC,EAaAiB,EAAAva,EAAA,eAAA6B,KACAkD,SAAA,WACA+E,IAAA,IACAC,KAAA,IACAG,MAAA,OACAC,OAAA,OACA6b,SAAA,UAEA9jB,GAAAC,OAAAoY,EAGA,IAAA8D,GAAA,GAAA3F,GAAAuN,MAGAlI,EAAA,GACA3V,EAAA1G,EAAA0G,UACAwR,EAAA,GAAAlB,GAAAwN,kBAAAnI,EAAA,YACA5V,EAAAzG,EAAAyG,UAAAoD,KAAAyS,GAAA,IACA6B,EAAA,IACAR,EAAA,GAAA3G,GAAA8G,QAAA,OACAC,EAAA,GAAA/G,GAAA8G,QAAA,GACAK,EAAAtU,KAAA4a,IAAAhe,IACA0X,EAAAtU,KAAA2S,IAAA/V,GACAyR,GAAA7U,SAAAqY,IACAiC,EAAAvU,EAAA2U,EAAA3U,EACAuU,EAAAN,EAAAU,EAAAV,EACAM,EAAAL,EAAAS,EAAAT,GAEApF,EAAA2G,OAAAlB,EAGA,IAAA+G,GAAA,GAAA1N,GAAA2N,aAAA,YACAhI,GAAAnD,IAAAkL,EACA,IAAAtH,GAAA,GAAApG,GAAA4N,iBAAA,YACAxH,GAAA/Z,SAAAqY,IAAA,QACAiB,EAAAnD,IAAA4D,EAGA,IAAAhE,MACAC,KACAuB,EAAA,KACAgC,EAAA,KACAjB,EAAA,KACArD,EAAA3a,EAAA,GAEAmZ,GAAAI,EAAAkC,EAAAC,EAAA/a,GACAyY,EAAAI,EAAAiC,EAAAC,EAAApC,EAuIA,IAAAmB,IAAA,EA2LA+E,EAAA,GAAAnG,GAAA8G,QAAA,OAqGAzb,EAAA,WAGA,QAAAC,MAAA4B,GACA2gB,IACA,QAAAlkB,GAAA,EAAwBA,EAAAkJ,KAAAib,IAAA,EAAA5gB,EAAArD,QAA4BF,IACpDkkB,EAAA3a,KAAAhG,EAAAvD,IAIA,QAAA6B,UAAA0B,GACA,GAAA2gB,EAAAhkB,QAAAqD,EAAArD,OAAA,CAEA,OADAkkB,MACApkB,EAAA,EAA4BA,EAAAuD,EAAArD,OAAgBF,IAC5CokB,EAAA7a,KAAAhG,EAAAvD,GAKA,QAFAqkB,MACAC,KACAtkB,EAAA,EAA4BA,EAAAkkB,EAAAhkB,OAAwBF,IACpDqkB,EAAA9a,KAAAoV,iBAAAU,QAAA6E,EAAAlkB,MACAskB,EAAA/a,KAAAoV,iBAAAU,QAAA+E,EAAApkB,KAGA,QADAkkB,EAAAE,EACAF,EAAAhkB,QACA,OACAie,UAAAkG,EAAA,GAAAC,EAAA,GACA,MACA,QAEA,GAAAC,GAAAF,EAAA,GAAAhkB,QACAwY,IAAAwL,EAAA,IAAAhgB,eAAA,IACAmgB,EAAAF,EAAA,GAAAjkB,QACAwY,IAAAyL,EAAA,IAAAjgB,eAAA,GAEA8Z,WAAAoG,EAAAC,EAEA,IAAA9U,GAAA2U,EAAA,GAAAhkB,QAAAie,IAAA+F,EAAA,IACAzU,EAAA0U,EAAA,GAAAjkB,QAAAie,IAAAgG,EAAA,IACAG,EAAA/U,EAAAxP,SACAwkB,EAAA9U,EAAA1P,QAEA,OAAAukB,GAAA,GAAAC,EAAA,CAEA,GAAArlB,EAAA8G,kBAAA,CACA,GAAAwe,GAAAjV,EAAArP,QAAA0d,YACA6G,EAAAhV,EAAAvP,QAAA0d,YACA8G,EAAAF,EAAAG,IAAAF,EACAC,GAAA,EAAAA,EAAA,EACAA,YACA,IAAApJ,EACA,OAAAoJ,EACApJ,EAAA,MACiC,IAAAoJ,MACjCpJ,EAAAvS,KAAAyS,OACiC,CACjCF,EAAAvS,KAAA6b,KAAAF,EACA,IAAAG,GAAAL,EAAAM,MAAAL,EAEAnJ,IADAuJ,EAAAtI,EAAA,EACA,KAKAlY,OAAA+f,EAAA9b,EAAA8b,EAAA5H,EAAAlB,GAIApc,EAAA6G,WACAgZ,KAAAqF,EAAA9b,EAAA8b,EAAA5H,EAAA+H,EAAAD,MApEA,GAAAP,KA4EA,QACAviB,UACAE,sBAIA+d,GAAsBG,YAAA,MACtBD,EAAAF,EAuEAL,EAAA,GAAAlJ,GAAA6O,UAaArE,EAAA,GAAAxK,GAAA8O,MAAA,GAAA9O,GAAA8G,QAAA,SA8OA,QACAjf,UACAmD,0BACAK,cACAI,4CACAiC,gBACAO,0BACA6Z,oBACA3Z,cACAI,8BACAsa,UACAle,kBACAqiB,0BACAjiB,YAAA8W,EACAzW,4BACAY,kCACA1B,wBACAoC,oBACAI,kBACAqf,wBACApf,8BACAC,gCACAC,wBACAE,8BACAE,oCACAC,sCACAX,0BACAC,gCACAC,kCACAU,kBACAC,wBACAC,0BACAM,YACAmf,gBACA5gB,+BnBuwDM,SAASvF,EAAQD,EAASH,GoBnsFhC,GAAAooB,GAAAC,EACahP,GAAWiP,SAAA,KAAeF,GAAA,EAAAC,EAAA,kBAAAD,KAAA7nB,KAAAJ,EAAAH,EAAAG,EAAAC,GAAAgoB,IAAA9R,SAAA+R,IAAAjoB,EAAAD,QAAAkoB,IAA+I,SAAAE,OAAAC,UAAAD,OAAAC,QAAAtc,KAAAuc,IAAA,QAA0D,SAAAvc,KAAAwc,OAAAxc,KAAAwc,KAAA,SAAAhW,GAA2C,SAAAA,KAAA,EAAAA,EAAA,GAAAA,IAAyB,SAAA6E,SAAAnD,UAAA7Q,MAAAolB,OAAAC,eAAArR,SAAAnD,UAAA,QAAmFyU,IAAA,WAAe,MAAAnc,MAAA1B,WAAA8d,MAAA,mCACtZ,SAAAH,OAAAI,QAAA,WAAmCJ,OAAAI,OAAA,SAAArW,GAA0B,YAAAA,GAAA,OAAAA,EAAA,SAAAG,WAAA,6CAA0F,QAAAD,GAAA+V,OAAAjW,GAAAjS,EAAA,EAAwBA,EAAA0H,UAAAjF,OAAmBzC,IAAA,CAAK,GAAAuoB,GAAA7gB,UAAA1H,EAAmB,aAAAuoB,GAAA,OAAAA,EAAA,OAAAtlB,KAAAslB,GAAAL,OAAAvU,UAAA6U,eAAA1oB,KAAAyoB,EAAAtlB,KAAAkP,EAAAlP,GAAAslB,EAAAtlB,IAA8F,MAAAkP,OACxT+V,OAAAI,OAAA1P,GAAqB6P,OAAOC,KAAA,EAAAC,OAAA,EAAAC,MAAA,GAAwBC,aAAA,EAAAC,aAAA,EAAAC,cAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,eAAA,EAAAC,aAAA,EAAAC,iBAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,cAAA,EAAAC,SAAA,EAAAC,WAAA,EAAAC,aAAA,EAAAC,WAAA,EAAAC,eAAA,EAAAC,iBAAA,EAAAC,oBAAA,EAAAC,iBAAA,EAAAC,eAAA,EAAAC,YAAA,IAAAC,iBAAA,IAAAC,wBAAA,IAAAC,YAAA,IACpDC,YAAA,IAAAC,WAAA,IAAAC,UAAA,IAAAC,eAAA,IAAAC,uBAAA,IAAAC,eAAA,IAAAC,uBAAA,IAAAC,eAAA,IAAAC,uBAAA,IAAAC,eAAA,IAAAC,uBAAA,IAAAC,uBAAA,IAAAC,WAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,eAAA,EAAAC,WAAA,EAAAC,kBAAA,EAAAC,aAAA,EAAAC,cAAA,EAAAC,kBAAA,EAAAC,aAAA,EAAAC,aAAA,EAAAC,cAAA,EAAAC,kBAAA,EAAAC,oBAAA,EAAAC,sBAAA,EACAC,kBAAA,EAAAC,UAAA,IAAAC,sBAAA,IAAAC,sBAAA,IAAAC,iCAAA,IAAAC,iCAAA,IAAAC,2BAAA,IAAAC,wBAAA,IAAAC,wBAAA,IAAAC,eAAA,IAAAC,oBAAA,KAAAC,uBAAA,KAAAC,cAAA,KAAAC,2BAAA,KAAAC,0BAAA,KAAAC,aAAA,KAAAC,0BAAA,KAAAC,yBAAA,KAAAC,iBAAA,KACAC,SAAA,KAAAC,UAAA,KAAAC,kBAAA,KAAAC,QAAA,KAAAC,gBAAA,KAAAC,UAAA,KAAAC,cAAA,KAAAC,sBAAA,KAAAC,sBAAA,KAAAC,qBAAA,KAAAC,YAAA,KAAAC,UAAA,KAAAC,WAAA,KAAAC,gBAAA,KAAAC,qBAAA,KAAAC,WAAAzV,EAAAsV,WAAAI,YAAA,KAAAC,qBAAA,KAAAC,sBAAA,KAAAC,sBAAA,KAAAC,sBAAA,KAAAC,wBAAA,KAAAC,wBAAA,KACAC,yBAAA,KAAAC,yBAAA,KAAAC,gBAAA,KAAAC,SAAA,KAAAC,WAAA,KAAAC,aAAA,KAAAC,oBAAA,KAAAC,kBAAA,KAAAC,kBAAA,KAAAC,oBAAA,KAAAC,gBAAA,KAAAC,iBAAA,KAAAC,kBAAA,EAAAC,sBAAA,EAAAC,oBAAA,EAAAC,eAAA,IAAAC,aAAA,KAAAC,cAAA,KAAAC,aAAA,KAAAC,eAAA,KAAAC,cAAA,KAAAC,eAAA,KAAAC,aAAA,KAAAC,kBAAA,KACAC,iBAAA,OAAwBzX,EAAA0X,MAAA,SAAAre,EAAAE,EAAAnS,GAA4B,gBAAAmS,GAAA,SAAAnS,EAAAiM,KAAAqR,IAAArL,GAAAhG,KAAAskB,OAAAte,EAAAE,EAAAnS,IACpD4Y,EAAA0X,MAAA3c,WAAuB7S,YAAA8X,EAAA0X,MAAAvS,EAAA,EAAAyS,EAAA,EAAAre,EAAA,EAAAmL,IAAA,SAAArL,GAAmK,MAA/GA,aAAA2G,GAAA0X,MAAArkB,KAAAwkB,KAAAxe,GAAA,gBAAAA,GAAAhG,KAAAykB,OAAAze,GAAA,gBAAAA,IAAAhG,KAAA0kB,SAAA1e,GAA+GhG,MAAY2kB,UAAA,SAAA3e,GAAuBhG,KAAAkG,EAAAlG,KAAAukB,EAAAvkB,KAAA8R,EAAA9L,GAAuBye,OAAA,SAAAze,GAAoG,MAAhFA,GAAAxG,KAAAzI,MAAAiP,GAAgBhG,KAAA8R,GAAA9L,GAAA,YAAuBhG,KAAAukB,GAAAve,GAAA,WAAsBhG,KAAAkG,GAAA,IAAAF,GAAA,IAAmBhG,MAAYskB,OAAA,SAAAte,EAAAE,EAAAnS,GAAmD,MAA3BiM,MAAA8R,EAAA9L,EAAShG,KAAAukB,EAAAre,EAASlG,KAAAkG,EAAAnS,EAASiM,MAAY4kB,OAAA,WAAmB,QAAA5e,KAAAjS,EAAAuoB,GAA0C,MAAxB,GAAAA,OAAA,GAAY,EAAAA,OAAA,GAAYA,EAAA,IAAAtW,EAAA,GAAAjS,EAAAiS,GAChesW,EAAA,GAAAA,EAAAvoB,EAAAuoB,EAAA,IAAAtW,EAAA,GAAAjS,EAAAiS,IAAA,IAAAsW,GAAAtW,EAAmC,gBAAAE,EAAAnS,EAAAuoB,GAAoO,MAA7MpW,GAAAyG,EAAAnN,KAAAqlB,gBAAA3e,EAAA,GAAkCnS,EAAA4Y,EAAAnN,KAAAslB,MAAA/wB,EAAA,KAA0BuoB,EAAA3P,EAAAnN,KAAAslB,MAAAxI,EAAA,KAA0B,IAAAvoB,EAAAiM,KAAA8R,EAAA9R,KAAAukB,EAAAvkB,KAAAkG,EAAAoW,GAAAvoB,EAAA,IAAAuoB,KAAA,EAAAvoB,GAAAuoB,EAAAvoB,EAAAuoB,EAAAvoB,EAAAuoB,EAAA,EAAAA,EAAAvoB,EAAAiM,KAAA8R,EAAA9L,EAAAsW,EAAAvoB,EAAAmS,EAAA,KAAAlG,KAAAukB,EAAAve,EAAAsW,EAAAvoB,EAAAmS,GAAAlG,KAAAkG,EAAAF,EAAAsW,EAAAvoB,EAAAmS,EAAA,MAAuHlG,SAAa0kB,SAAA,SAAA1e,GAAwB,QAAAE,MAAc,SAAAA,GAAA,EAAA6e,WAAA7e,IAAA5Q,QAAA0vB,KAAA,mCAAAhf,EAAA,qBAAoG,GAAAjS,EAAM,IAAAA,EAAA,kCAAAkxB,KAAAjf,GAAA,CAAgD,GAAAsW,GAAAvoB,EAAA,EAAW,QAAAA,EAAA,IAAa,wBAAAA,EAC5e,gEAAAkxB,KAAA3I,GAAA,MAAAtc,MAAA8R,EAAAtS,KAAAib,IAAA,IAAApd,SAAAtJ,EAAA,YAAAiM,KAAAukB,EAAA/kB,KAAAib,IAAA,IAAApd,SAAAtJ,EAAA,YAAAiM,KAAAkG,EAAA1G,KAAAib,IAAA,IAAApd,SAAAtJ,EAAA,YAAAmS,EAAAnS,EAAA,IAAAiM,IAA6N,IAAAjM,EAAA,sEAAAkxB,KAAA3I,GAAA,MAAAtc,MAAA8R,EAAAtS,KAAAib,IAAA,IAAApd,SAAAtJ,EAAA,YAAAiM,KAAAukB,EAAA/kB,KAAAib,IAAA,IAAApd,SAAAtJ,EAAA,YAAAiM,KAAAkG,EAAA1G,KAAAib,IAAA,IAAApd,SAAAtJ,EAAA,YAAAmS,EAAAnS,EAAA,IAAAiM,IAAwO,MAAM,yBAAAjM,EAAA,gFAAAkxB,KAAA3I,GAAA,CAAqH,GAAAA,GAChkByI,WAAAhxB,EAAA,QAAAiD,EAAAqG,SAAAtJ,EAAA,WAAAuV,EAAAjM,SAAAtJ,EAAA,UAA6E,OAARmS,GAAAnS,EAAA,IAAQiM,KAAA4kB,OAAAtI,EAAAtlB,EAAAsS,SAA4B,IAAAvV,EAAA,qBAAAkxB,KAAAjf,GAAA,CAA0D,GAAlBjS,IAAA,GAAOuoB,EAAAvoB,EAAAyC,OAAW,IAAA8lB,EAAA,MAAAtc,MAAA8R,EAAAzU,SAAAtJ,EAAAmxB,OAAA,GAAAnxB,EAAAmxB,OAAA,WAAAllB,KAAAukB,EAAAlnB,SAAAtJ,EAAAmxB,OAAA,GAAAnxB,EAAAmxB,OAAA,WAAAllB,KAAAkG,EAAA7I,SAAAtJ,EAAAmxB,OAAA,GAAAnxB,EAAAmxB,OAAA,WAAAllB,IAAqK,QAAAsc,EAAA,MAAAtc,MAAA8R,EAAAzU,SAAAtJ,EAAAmxB,OAAA,GAAAnxB,EAAAmxB,OAAA,WAAAllB,KAAAukB,EAAAlnB,SAAAtJ,EAAAmxB,OAAA,GAAAnxB,EAAAmxB,OAAA,WAAAllB,KAAAkG,EAAA7I,SAAAtJ,EAAAmxB,OAAA,GAAAnxB,EAAAmxB,OAAA,WAAAllB,KACrO,MAD0YgG,IAAA,EAAAA,EAAAxP,SAC7ezC,EAAA4Y,EAAAwY,cAAAnf,GAAA,SAAAjS,EAAAiM,KAAAykB,OAAA1wB,GAAAuB,QAAA0vB,KAAA,8BAAAhf,IAAmGhG,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,YAAAmL,KAAA8R,EAAA9R,KAAAukB,EAAAvkB,KAAAkG,IAAkDse,KAAA,SAAAxe,GAAmD,MAAjChG,MAAA8R,EAAA9L,EAAA8L,EAAW9R,KAAAukB,EAAAve,EAAAue,EAAWvkB,KAAAkG,EAAAF,EAAAE,EAAWlG,MAAYolB,kBAAA,SAAApf,EAAAE,GAAwH,MAAvF,UAAAA,MAAA,GAAkBlG,KAAA8R,EAAAtS,KAAAuc,IAAA/V,EAAA8L,EAAA5L,GAAuBlG,KAAAukB,EAAA/kB,KAAAuc,IAAA/V,EAAAue,EAAAre,GAAuBlG,KAAAkG,EAAA1G,KAAAuc,IAAA/V,EAAAE,KAAuBlG,MAAYqlB,kBAAA,SAAArf,EAAAE,GAAiC,SAAAA,MAAA,EAAkB,IAAAnS,GAAA,EAAAmS,EAAA,EAAAA,EAAA,CACta,OADsblG,MAAA8R,EAAAtS,KAAAuc,IAAA/V,EAAA8L,EAAA/d,GAAuBiM,KAAAukB,EAAA/kB,KAAAuc,IAAA/V,EAAAue,EAAAxwB,GAAuBiM,KAAAkG,EAAA1G,KAAAuc,IAAA/V,EAAAE,EACvenS,GAAGiM,MAAYslB,qBAAA,WAAiC,GAAAtf,GAAAhG,KAAA8R,EAAA5L,EAAAlG,KAAAukB,EAAAxwB,EAAAiM,KAAAkG,CAAgE,OAAjClG,MAAA8R,EAAA9L,IAAWhG,KAAAukB,EAAAre,IAAWlG,KAAAkG,EAAAnS,IAAWiM,MAAYulB,qBAAA,WAA4G,MAA3EvlB,MAAA8R,EAAAtS,KAAAgmB,KAAAxlB,KAAA8R,GAAyB9R,KAAAukB,EAAA/kB,KAAAgmB,KAAAxlB,KAAAukB,GAAyBvkB,KAAAkG,EAAA1G,KAAAgmB,KAAAxlB,KAAAkG,GAAyBlG,MAAYylB,OAAA,WAAmB,WAAAzlB,KAAA8R,GAAA,OAAA9R,KAAAukB,GAAA,MAAAvkB,KAAAkG,GAAA,GAAkDwf,aAAA,WAAyB,gBAAA1lB,KAAAylB,SAAAnnB,SAAA,KAAA4L,WAAsDyb,OAAA,SAAA3f,GAAoBA,MAAM6L,EAAA,EAAA+T,EAAA,EAAAC,EAAA,EAAa,IAAAtB,GAAAre,EAAAlG,KAAA8R,EAAA/d,EAAAiM,KAAAukB,EAAAjI,EAAAtc,KAAAkG,EAAAlP,EAAAwI,KAAAC,IAAAyG,EAAAnS,EAAAuoB,GAAAhT,EAAA9J,KAAAib,IAAAvU,EAAAnS,EAAAuoB,GAAAzK,GAC/avI,EAAAtS,GAAA,CAAQ,IAAAsS,IAAAtS,EAAAsS,EAAAib,EAAA,MAAe,CAAK,GAAAuB,GAAA9uB,EAAAsS,IAAA,IAAAuI,EAAAiU,GAAA9uB,EAAAsS,GAAAwc,GAAA,EAAA9uB,EAAAsS,EAAoC,QAAAtS,GAAU,IAAAkP,GAAAqe,GAAAxwB,EAAAuoB,GAAAwJ,GAAA/xB,EAAAuoB,EAAA,IAA2B,MAAM,KAAAvoB,GAAAwwB,GAAAjI,EAAApW,GAAA4f,EAAA,CAAmB,MAAM,KAAAxJ,GAAAiI,GAAAre,EAAAnS,GAAA+xB,EAAA,EAAmBvB,GAAA,EAAuB,MAAlBve,GAAA6L,EAAA0S,EAAMve,EAAA4f,EAAAtc,EAAMtD,EAAA6f,EAAAhU,EAAM7L,GAAS+f,SAAA,WAAqB,kBAAA/lB,KAAA8R,EAAA,YAAA9R,KAAAukB,EAAA,YAAAvkB,KAAAkG,EAAA,QAAsE8f,UAAA,SAAAhgB,EAAAE,EAAAnS,GAA2B,GAAAuoB,GAAAtc,KAAA2lB,QAAkE,OAA9CrJ,GAAAzK,GAAA7L,EAAOsW,EAAAsJ,GAAA1f,EAAOoW,EAAAuJ,GAAA9xB,EAAOiM,KAAA4kB,OAAAtI,EAAAzK,EAAAyK,EAAAsJ,EAAAtJ,EAAAuJ,GAAyB7lB,MAAYmP,IAAA,SAAAnJ,GAAqD,MAApChG,MAAA8R,GAAA9L,EAAA8L,EAAY9R,KAAAukB,GAAAve,EAAAue,EAAYvkB,KAAAkG,GAAAF,EAAAE,EAAYlG,MAAYimB,UAAA,SAAAjgB,EAAAE,GACpb,MAD6clG,MAAA8R,EAAA9L,EAAA8L,EAAA5L,EAAA4L,EAAe9R,KAAAukB,EAAAve,EAAAue,EAAAre,EAAAqe,EAAevkB,KAAAkG,EACnfF,EAAAE,MAAQlG,MAAYkmB,UAAA,SAAAlgB,GAAqD,MAA9BhG,MAAA8R,GAAA9L,EAAUhG,KAAAukB,GAAAve,EAAUhG,KAAAkG,GAAAF,EAAUhG,MAAYmmB,SAAA,SAAAngB,GAA0D,MAApChG,MAAA8R,GAAA9L,EAAA8L,EAAY9R,KAAAukB,GAAAve,EAAAue,EAAYvkB,KAAAkG,GAAAF,EAAAE,EAAYlG,MAAYrF,eAAA,SAAAqL,GAA0D,MAA9BhG,MAAA8R,GAAA9L,EAAUhG,KAAAukB,GAAAve,EAAUhG,KAAAkG,GAAAF,EAAUhG,MAAYomB,KAAA,SAAApgB,EAAAE,GAAyF,MAArElG,MAAA8R,IAAA9L,EAAA8L,EAAA9R,KAAA8R,GAAA5L,EAAuBlG,KAAAukB,IAAAve,EAAAue,EAAAvkB,KAAAukB,GAAAre,EAAuBlG,KAAAkG,IAAAF,EAAAE,EAAAlG,KAAAkG,KAAuBlG,MAAYqmB,OAAA,SAAArgB,GAAoB,MAAAA,GAAA8L,IAAA9R,KAAA8R,GAAA9L,EAAAue,IAAAvkB,KAAAukB,GAAAve,EAAAE,IAAAlG,KAAAkG,GAAgDogB,UAAA,SAAAtgB,EAAAE,GAAmF,MAA1D,UAAAA,MAAA,GAAkBlG,KAAA8R,EAAA9L,EAAAE,GAAYlG,KAAAukB,EAAAve,EAAAE,EAAA,GAAclG,KAAAkG,EAAAF,EAAAE,EAAA,GAAclG,MAAYumB,QAAA,SAAAvgB,EACzeE,GAAgF,MAA7E,UAAAF,UAAmB,SAAAE,MAAA,GAAkBF,EAAAE,GAAAlG,KAAA8R,EAAY9L,EAAAE,EAAA,GAAAlG,KAAAukB,EAAcve,EAAAE,EAAA,GAAAlG,KAAAkG,EAAcF,IAChF2G,EAAAwY,eAAqBqB,UAAA,SAAAC,aAAA,SAAAC,KAAA,MAAAC,WAAA,QAAAC,MAAA,SAAAC,MAAA,SAAAC,OAAA,SAAAC,MAAA,EAAAC,eAAA,SAAAC,KAAA,IAAAC,WAAA,QAAAC,MAAA,SAAAC,UAAA,SAAAC,UAAA,QAAAC,WAAA,QAAAC,UAAA,SAAAC,MAAA,SAAAC,eAAA,QAAAC,SAAA,SAAAC,QAAA,SAAAC,KAAA,MAAAC,SAAA,IAAAC,SAAA,MAAAC,cAAA,SAAAC,SAAA,SAAAC,UAAA,MAAAC,SAAA,SAAAC,UAAA,SAAAC,YAAA,QACrBC,eAAA,QAAAC,WAAA,SAAAC,WAAA,SAAAC,QAAA,QAAAC,WAAA,SAAAC,aAAA,QAAAC,cAAA,QAAAC,cAAA,QAAAC,cAAA,QAAAC,cAAA,MAAAC,WAAA,QAAAC,SAAA,SAAAC,YAAA,MAAAC,QAAA,QAAAC,QAAA,QAAAC,WAAA,QAAAC,UAAA,SAAAC,YAAA,SAAAC,YAAA,QAAAC,QAAA,SAAAC,UAAA,SAAAC,WAAA,SAAAC,KAAA,SAAAC,UAAA,SAAAC,KAAA,QAAAC,MAAA,MAAAC,YAAA,SACAC,KAAA,QAAAC,SAAA,SAAAC,QAAA,SAAAC,UAAA,SAAAC,OAAA,QAAAC,MAAA,SAAAC,MAAA,SAAAC,SAAA,SAAAC,cAAA,SAAAC,UAAA,QAAAC,aAAA,SAAAC,UAAA,SAAAC,WAAA,SAAAC,UAAA,SAAAC,qBAAA,SAAAC,UAAA,SAAAC,WAAA,QAAAC,UAAA,SAAAC,UAAA,SAAAC,YAAA,SAAAC,cAAA,QAAAC,aAAA,QAAAC,eAAA,QAAAC,eAAA,QAAAC,eAAA,SAAAC,YAAA,SACAC,KAAA,MAAAC,UAAA,QAAAC,MAAA,SAAAC,QAAA,SAAAC,OAAA,QAAAC,iBAAA,QAAAC,WAAA,IAAAC,aAAA,SAAAC,aAAA,QAAAC,eAAA,QAAAC,gBAAA,QAAAC,kBAAA,MAAAC,gBAAA,QAAAC,gBAAA,SAAAC,aAAA,QAAAC,UAAA,SAAAC,UAAA,SAAAC,SAAA,SAAAC,YAAA,SAAAC,KAAA,IAAAC,QAAA,SAAAC,MAAA,QAAAC,UAAA,QAAAC,OAAA,SAAAC,UAAA,SAAAC,OAAA,SAAAC,cAAA,SACAC,UAAA,SAAAC,cAAA,SAAAC,cAAA,SAAAC,WAAA,SAAAC,UAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,SAAAC,OAAA,QAAAC,IAAA,SAAAC,UAAA,SAAAC,UAAA,QAAAC,YAAA,QAAAC,OAAA,SAAAC,WAAA,SAAAC,SAAA,QAAAC,SAAA,SAAAC,OAAA,SAAAC,OAAA,SAAAC,QAAA,QAAAC,UAAA,QAAAC,UAAA,QAAAC,UAAA,QAAAC,KAAA,SAAAC,YAAA,MAAAC,UAAA,QAAA7c,IAAA,SAAA8c,KAAA,MAAAC,QAAA,SACAC,OAAA,SAAAC,UAAA,QAAAC,OAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,WAAA,SAAAC,OAAA,SAAAC,YAAA,UAA0I9iB,EAAA+iB,WAAA,SAAA1pB,EAAAE,EAAAnS,EAAAuoB,GAAmCtc,KAAA2vB,GAAA3pB,GAAA,EAAahG,KAAA4vB,GAAA1pB,GAAA,EAAalG,KAAA6vB,GAAA97B,GAAA,EAAaiM,KAAA8vB,GAAA,SAAAxT,IAAA,GACpN3P,EAAA+iB,WAAAhoB,WAA4B7S,YAAA8X,EAAA+iB,WAAA3wB,QAAqC,MAAAiB,MAAA2vB,IAAe5wB,MAAAiH,GAAUhG,KAAA2vB,GAAA3pB,EAAUhG,KAAA+vB,oBAAwB/c,QAAS,MAAAhT,MAAA4vB,IAAe5c,MAAAhN,GAAUhG,KAAA4vB,GAAA5pB,EAAUhG,KAAA+vB,oBAAwB9c,QAAS,MAAAjT,MAAA6vB,IAAe5c,MAAAjN,GAAUhG,KAAA6vB,GAAA7pB,EAAUhG,KAAA+vB,oBAAwBne,QAAS,MAAA5R,MAAA8vB,IAAele,MAAA5L,GAAUhG,KAAA8vB,GAAA9pB,EAAUhG,KAAA+vB,oBAAwB1e,IAAA,SAAArL,EAAAE,EAAAnS,EAAAuoB,GAAuF,MAAhEtc,MAAA2vB,GAAA3pB,EAAUhG,KAAA4vB,GAAA1pB,EAAUlG,KAAA6vB,GAAA97B,EAAUiM,KAAA8vB,GAAAxT,EAAUtc,KAAA+vB,mBAAwB/vB,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,YAAAmL,KAAA2vB,GAAA3vB,KAAA4vB,GAAA5vB,KAAA6vB,GAAA7vB,KAAA8vB,KAC7btL,KAAA,SAAAxe,GAAyF,MAAxEhG,MAAA2vB,GAAA3pB,EAAAjH,EAAYiB,KAAA4vB,GAAA5pB,EAAAgN,EAAYhT,KAAA6vB,GAAA7pB,EAAAiN,EAAYjT,KAAA8vB,GAAA9pB,EAAA4L,EAAY5R,KAAA+vB,mBAAwB/vB,MAAYgwB,aAAA,SAAAhqB,EAAAE,GAA4B,OAAAF,YAAA2G,GAAAsjB,MAAA,KAAAnuB,OAAA,kGAAgJ,IAAA/N,GAAAyL,KAAA2S,IAAAnM,EAAA2pB,GAAA,GAAArT,EAAA9c,KAAA2S,IAAAnM,EAAA4pB,GAAA,GAAA54B,EAAAwI,KAAA2S,IAAAnM,EAAA6pB,GAAA,GAAAvmB,EAAA9J,KAAA4a,IAAApU,EAAA2pB,GAAA,GAAApL,EAAA/kB,KAAA4a,IAAApU,EAAA4pB,GAAA,GAAA/d,EAAArS,KAAA4a,IAAApU,EAAA6pB,GAAA,GAAA/J,EAAA9f,EAAAkqB,KACsN,OADtF,QAAApK,GAAA9lB,KAAA2vB,GAAArmB,EAAAgT,EAAAtlB,EAAAjD,EAAAwwB,EAAA1S,EAAA7R,KAAA4vB,GAAA77B,EAAAwwB,EAAAvtB,EAAAsS,EAAAgT,EAAAzK,EAAA7R,KAAA6vB,GAAA97B,EAAAuoB,EAAAzK,EAAAvI,EAAAib,EAAAvtB,EAAAgJ,KAAA8vB,GAAA/7B,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAA,QACjZiU,GAAA9lB,KAAA2vB,GAAArmB,EAAAgT,EAAAtlB,EAAAjD,EAAAwwB,EAAA1S,EAAA7R,KAAA4vB,GAAA77B,EAAAwwB,EAAAvtB,EAAAsS,EAAAgT,EAAAzK,EAAA7R,KAAA6vB,GAAA97B,EAAAuoB,EAAAzK,EAAAvI,EAAAib,EAAAvtB,EAAAgJ,KAAA8vB,GAAA/7B,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAA,QAAAiU,GAAA9lB,KAAA2vB,GAAArmB,EAAAgT,EAAAtlB,EAAAjD,EAAAwwB,EAAA1S,EAAA7R,KAAA4vB,GAAA77B,EAAAwwB,EAAAvtB,EAAAsS,EAAAgT,EAAAzK,EAAA7R,KAAA6vB,GAAA97B,EAAAuoB,EAAAzK,EAAAvI,EAAAib,EAAAvtB,EAAAgJ,KAAA8vB,GAAA/7B,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAA,QAAAiU,GAAA9lB,KAAA2vB,GAAArmB,EAAAgT,EAAAtlB,EAAAjD,EAAAwwB,EAAA1S,EAAA7R,KAAA4vB,GAAA77B,EAAAwwB,EAAAvtB,EAAAsS,EAAAgT,EAAAzK,EAAA7R,KAAA6vB,GAAA97B,EAAAuoB,EAAAzK,EAAAvI,EAAAib,EAAAvtB,EAAAgJ,KAAA8vB,GAAA/7B,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAA,QAAAiU,GAAA9lB,KAAA2vB,GAAArmB,EAAAgT,EAAAtlB,EAAAjD,EAAAwwB,EAAA1S,EAAA7R,KAAA4vB,GAAA77B,EAAAwwB,EAAAvtB,EAAAsS,EAAAgT,EAAAzK,EAAA7R,KAAA6vB,GAAA97B,EAAAuoB,EAAAzK,EAAAvI,EAAAib,EAAAvtB,EAAAgJ,KAAA8vB,GAAA/7B,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAA,QAAAiU,IAAA9lB,KAAA2vB,GAAArmB,EAAAgT,EAAAtlB,EAAAjD,EAAAwwB,EAAA1S,EAAA7R,KAAA4vB,GAAA77B,EAAAwwB,EAAAvtB,EAAAsS,EAAAgT,EAAAzK,EAAA7R,KAAA6vB,GAAA97B,EAAAuoB,EAAAzK,EAAAvI,EAAAib,EAAAvtB,EAAAgJ,KAAA8vB,GAAA/7B,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,IAAqc,IAAA3L,GAAAlG,KAAA+vB,mBAAkC/vB,MAAYmwB,iBAAA,SAAAnqB,EACnfE,GAAG,GAAAnS,GAAAmS,EAAA,EAAAoW,EAAA9c,KAAA4a,IAAArmB,EAA8G,OAAtFiM,MAAA2vB,GAAA3pB,EAAAjH,EAAAud,EAActc,KAAA4vB,GAAA5pB,EAAAgN,EAAAsJ,EAActc,KAAA6vB,GAAA7pB,EAAAiN,EAAAqJ,EAActc,KAAA8vB,GAAAtwB,KAAA2S,IAAApe,GAAoBiM,KAAA+vB,mBAAwB/vB,MAAYowB,sBAAA,SAAApqB,GAAmC,GAAAE,GAAAF,EAAAqqB,SAAAt8B,EAAAmS,EAAA,EAAwBF,GAAAE,EAAA,EAAO,IAAAoW,GAAApW,EAAA,GAAAlP,EAAAkP,EAAA,GAAAoD,EAAApD,EAAA,GAAAqe,EAAAre,EAAA,GAAA2L,EAAA3L,EAAA,GAAA4f,EAAA5f,EAAA,GAAAA,IAAA,IAAA2f,EAAA9xB,EAAAuV,EAAApD,CACzD,OADuH,GAAA2f,GAAA9xB,EAAA,GAAAyL,KAAAgmB,KAAAK,EAAA,GAAA7lB,KAAA8vB,GAAA,IAAA/7B,EAAAiM,KAAA2vB,IAAA7J,EAAAvB,GAAAxwB,EAAAiM,KAAA4vB,IAAAtT,EAAAzK,GAAA9d,EAAAiM,KAAA6vB,IAAA74B,EAAAgP,GAAAjS,KAAAuV,GAAAvV,EAAAmS,GAAAnS,EAAA,EAAAyL,KAAAgmB,KAAA,EAAAzxB,EAAAuV,EAAApD,GAAAlG,KAAA8vB,IAAAhK,EAAAvB,GAAAxwB,EAAAiM,KAAA2vB,GAAA,IAAA57B,EAAAiM,KAAA4vB,IAAA5pB,EAAAhP,GAAAjD,EAAAiM,KAAA6vB,IAAAvT,EAAAzK,GAAA9d,GAAAuV,EAAApD,GAAAnS,EAAA,EAAAyL,KAAAgmB,KAAA,EAAAlc,EAAAvV,EAAAmS,GAAAlG,KAAA8vB,IAAAxT,EAAAzK,GAAA9d,EAAAiM,KAAA2vB,IAAA3pB,EAAAhP,GAAAjD,EAAAiM,KAAA4vB,GAC7P,IAAA77B,EAAAiM,KAAA6vB,IAAAtL,EAAAuB,GAAA/xB,MAAA,EAAAyL,KAAAgmB,KAAA,EAAAtf,EAAAnS,EAAAuV,GAAAtJ,KAAA8vB,IAAA94B,EAAAgP,GAAAjS,EAAAiM,KAAA2vB,IAAArT,EAAAzK,GAAA9d,EAAAiM,KAAA4vB,IAAArL,EAAAuB,GAAA/xB,EAAAiM,KAAA6vB,GAAA,IAAA97B,GAA8GiM,KAAA+vB,mBAAwB/vB,MAAYswB,mBAAA,WAA+B,GAAAtqB,GAAAE,CAAQ,iBAAAnS,EAAAuoB,GAAmN,MAA9L,UAAAtW,MAAA,GAAA2G,GAAA8G,SAAkCvN,EAAAnS,EAAAqnB,IAAAkB,GAAA,EAAa,KAAApW,KAAA,EAAA1G,KAAA+wB,IAAAx8B,EAAAgL,GAAAS,KAAA+wB,IAAAx8B,EAAAkf,GAAAjN,EAAAqL,KAAAtd,EAAAif,EAAAjf,EAAAgL,EAAA,GAAAiH,EAAAqL,IAAA,GAAAtd,EAAAkf,EAAAlf,EAAAif,IAAAhN,EAAAwqB,aAAAz8B,EAAAuoB,GAAiGtc,KAAA2vB,GAAA3pB,EAAAjH,EAAYiB,KAAA4vB,GAAA5pB,EAAAgN,EAAYhT,KAAA6vB,GAAA7pB,EAAAiN,EAAYjT,KAAA8vB,GAAA5pB,EAAUlG,KAAAqU,gBAAyBoc,QAAA,WAAsB,MAAAzwB,MAAA0wB,YAAArc,aAAoCqc,UAAA,WAC5a,MADkc1wB,MAAA2vB,OAClf3vB,KAAA4vB,OAAY5vB,KAAA6vB,OAAY7vB,KAAA+vB,mBAAwB/vB,MAAYob,IAAA,SAAApV,GAAiB,MAAAhG,MAAA2vB,GAAA3pB,EAAA2pB,GAAA3vB,KAAA4vB,GAAA5pB,EAAA4pB,GAAA5vB,KAAA6vB,GAAA7pB,EAAA6pB,GAAA7vB,KAAA8vB,GAAA9pB,EAAA8pB,IAA2Da,SAAA,WAAqB,MAAA3wB,MAAA2vB,GAAA3vB,KAAA2vB,GAAA3vB,KAAA4vB,GAAA5vB,KAAA4vB,GAAA5vB,KAAA6vB,GAAA7vB,KAAA6vB,GAAA7vB,KAAA8vB,GAAA9vB,KAAA8vB,IAAuEt5B,OAAA,WAAmB,MAAAgJ,MAAAgmB,KAAAxlB,KAAA2vB,GAAA3vB,KAAA2vB,GAAA3vB,KAAA4vB,GAAA5vB,KAAA4vB,GAAA5vB,KAAA6vB,GAAA7vB,KAAA6vB,GAAA7vB,KAAA8vB,GAAA9vB,KAAA8vB,KAAkFzb,UAAA,WAAsB,GAAArO,GAAAhG,KAAAxJ,QAA4I,OAAxH,KAAAwP,GAAAhG,KAAA6vB,GAAA7vB,KAAA4vB,GAAA5vB,KAAA2vB,GAAA,EAAA3vB,KAAA8vB,GAAA,IAAA9pB,EAAA,EAAAA,EAAAhG,KAAA2vB,IAAA3pB,EAAAhG,KAAA4vB,IAAA5pB,EAAAhG,KAAA6vB,IAAA7pB,EAAAhG,KAAA8vB,IAAA9pB,GAAgGhG,KAAA+vB,mBAAwB/vB,MAC9emmB,SAAA,SAAAngB,EAAAE,GAAuB,gBAAAA,GAAA5Q,QAAA0vB,KAAA,0GAAAhlB,KAAA4wB,oBAAA5qB,EAAAE,IAAAlG,KAAA4wB,oBAAA5wB,KAAAgG,IAA0M6qB,YAAA,SAAA7qB,GAAyB,MAAAhG,MAAA4wB,oBAAA5qB,EAAAhG,OAAwC4wB,oBAAA,SAAA5qB,EAAAE,GAAmC,GAAAnS,GAAAiS,EAAA2pB,GAAArT,EAAAtW,EAAA4pB,GAAA54B,EAAAgP,EAAA6pB,GAAAvmB,EAAAtD,EAAA8pB,GAAAvL,EAAAre,EAAAypB,GAAA9d,EAAA3L,EAAA0pB,GAAA9J,EAAA5f,EAAA2pB,GAAAhK,EAAA3f,EAAA4pB,EACrU,OADiY9vB,MAAA2vB,GAAA57B,EAAA8xB,EAAAvc,EAAAib,EAAAjI,EAAAwJ,EAAA9uB,EAAA6a,EAAwB7R,KAAA4vB,GAAAtT,EAAAuJ,EAAAvc,EAAAuI,EAAA7a,EAAAutB,EAAAxwB,EAAA+xB,EAAwB9lB,KAAA6vB,GAAA74B,EAAA6uB,EAAAvc,EAAAwc,EAAA/xB,EAAA8d,EAAAyK,EAAAiI,EAAwBvkB,KAAA8vB,GAAAxmB,EAAAuc,EAAA9xB,EAAAwwB,EAAAjI,EAAAzK,EAAA7a,EAAA8uB,EAAwB9lB,KAAA+vB,mBACje/vB,MAAY8wB,MAAA,SAAA9qB,EAAAE,GAAqB,OAAAA,EAAA,MAAAlG,KAAqB,QAAAkG,EAAA,MAAAlG,MAAAwkB,KAAAxe,EAA6B,IAAAjS,GAAAiM,KAAA2vB,GAAArT,EAAAtc,KAAA4vB,GAAA54B,EAAAgJ,KAAA6vB,GAAAvmB,EAAAtJ,KAAA8vB,GAAAvL,EAAAjb,EAAAtD,EAAA8pB,GAAA/7B,EAAAiS,EAAA2pB,GAAArT,EAAAtW,EAAA4pB,GAAA54B,EAAAgP,EAAA6pB,EAA0J,IAAhF,EAAAtL,GAAAvkB,KAAA8vB,IAAA9pB,EAAA8pB,GAAA9vB,KAAA2vB,IAAA3pB,EAAA2pB,GAAA3vB,KAAA4vB,IAAA5pB,EAAA4pB,GAAA5vB,KAAA6vB,IAAA7pB,EAAA6pB,GAAAtL,MAAAvkB,KAAAwkB,KAAAxe,GAAgF,GAAAue,EAAA,MAAAvkB,MAAA8vB,GAAAxmB,EAAAtJ,KAAA2vB,GAAA57B,EAAAiM,KAAA4vB,GAAAtT,EAAAtc,KAAA6vB,GAAA74B,EAAAgJ,IAA4D,IAAA6R,GAAArS,KAAAgmB,KAAA,EAAAjB,IAAuB,SAAA/kB,KAAA+wB,IAAA1e,GAAA,MAAA7R,MAAA8vB,GAAA,IAAAxmB,EAAAtJ,KAAA8vB,IAAA9vB,KAAA2vB,GAAA,IAAA57B,EAAAiM,KAAA2vB,IAAA3vB,KAAA4vB,GAAA,IAAAtT,EAAAtc,KAAA4vB,IAAA5vB,KAAA6vB,GAAA,IAAA74B,EAAAgJ,KAAA6vB,IAAA7vB,IAA4H,IAAA8lB,GAAAtmB,KAAAuxB,MAAAlf,EAAA0S,KAAA/kB,KAAA4a,KAAA,EAAAlU,GAAA4f,GAAAjU,IAAArS,KAAA4a,IAAAlU,EAC5b4f,GAAAjU,CAAqH,OAAhH7R,MAAA8vB,GAAAxmB,EAAAib,EAAAvkB,KAAA8vB,GAAAje,EAAsB7R,KAAA2vB,GAAA57B,EAAAwwB,EAAAvkB,KAAA2vB,GAAA9d,EAAsB7R,KAAA4vB,GAAAtT,EAAAiI,EAAAvkB,KAAA4vB,GAAA/d,EAAsB7R,KAAA6vB,GAAA74B,EAAAutB,EAAAvkB,KAAA6vB,GAAAhe,EAAsB7R,KAAA+vB,mBAAwB/vB,MAAYqmB,OAAA,SAAArgB,GAAoB,MAAAA,GAAA2pB,KAAA3vB,KAAA2vB,IAAA3pB,EAAA4pB,KAAA5vB,KAAA4vB,IAAA5pB,EAAA6pB,KAAA7vB,KAAA6vB,IAAA7pB,EAAA8pB,KAAA9vB,KAAA8vB,IAAsExJ,UAAA,SAAAtgB,EAAAE,GAA6H,MAApG,UAAAA,MAAA,GAAkBlG,KAAA2vB,GAAA3pB,EAAAE,GAAalG,KAAA4vB,GAAA5pB,EAAAE,EAAA,GAAelG,KAAA6vB,GAAA7pB,EAAAE,EAAA,GAAelG,KAAA8vB,GAAA9pB,EAAAE,EAAA,GAAelG,KAAA+vB,mBAAwB/vB,MAAYumB,QAAA,SAAAvgB,EAAAE,GAAsH,MAA/F,UAAAF,UAAmB,SAAAE,MAAA,GAAkBF,EAAAE,GAAAlG,KAAA2vB,GAAa3pB,EAAAE,EAAA,GAAAlG,KAAA4vB,GAAe5pB,EAAAE,EAAA,GAAAlG,KAAA6vB,GAAe7pB,EAAAE,EAAA,GAAAlG,KAAA8vB,GAAe9pB,GAASgrB,SAAA,SAAAhrB,GACje,MADufhG,MAAA+vB,iBACzf/pB,EAAEhG,MAAY+vB,iBAAA,cACd9T,OAAAI,OAAA1P,EAAA+iB,YAAgCoB,MAAA,SAAA9qB,EAAAE,EAAAnS,EAAAuoB,GAAwB,MAAAvoB,GAAAywB,KAAAxe,GAAA8qB,MAAA5qB,EAAAoW,IAA4B2U,UAAA,SAAAjrB,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAAmC,GAAA1S,GAAA9d,EAAAuoB,EAAA,GAAAwJ,EAAA/xB,EAAAuoB,EAAA,GAAAuJ,EAAA9xB,EAAAuoB,EAAA,EAA+BvoB,KAAAuoB,EAAA,GAASA,EAAAtlB,EAAAsS,EAAA,EAAS,IAAA4nB,GAAAl6B,EAAAsS,EAAA,GAAAtV,EAAAgD,EAAAsS,EAAA,EAA+B,IAATtS,IAAAsS,EAAA,GAASvV,IAAAiD,GAAA6a,IAAAyK,GAAAwJ,IAAAoL,GAAArL,IAAA7xB,EAAA,CAA+BsV,EAAA,EAAAib,CAAM,IAAAzwB,GAAA+d,EAAAyK,EAAAwJ,EAAAoL,EAAArL,EAAA7xB,EAAAD,EAAAiD,EAAAm6B,EAAA,GAAAr9B,EAAA,KAAAge,EAAA,EAAAhe,GAA0Cge,GAAA+J,OAAAC,UAAAhK,EAAAtS,KAAAgmB,KAAA1T,GAAAhe,EAAA0L,KAAAuxB,MAAAjf,EAAAhe,EAAAq9B,GAAA7nB,EAAA9J,KAAA4a,IAAA9Q,EAAAxV,GAAAge,EAAAyS,EAAA/kB,KAAA4a,IAAAmK,EAAAzwB,GAAAge,GAA2Fqf,GAAA5M,EAAK1S,IAAAvI,EAAAgT,EAAA6U,EAAUrL,IAAAxc,EAAA4nB,EAAAC,EAAUtL,IAAAvc,EAAAtV,EAAAm9B,EAAUp9B,IAAAuV,EAAAtS,EAAAm6B,EAAU7nB,IAAA,EAAAib,MAAA,EAAA/kB,KAAAgmB,KAAA3T,IAAAiU,IAAAD,IAAA9xB,KAAA8d,GAAA0S,EAAAuB,GAAAvB,EAAAsB,GAAAtB,EAAAxwB,GAAAwwB,GAA8Dve,EAAAE,GAAA2L,EAAO7L,EAAAE,EAAA,GAAA4f,EAAS9f,EAAAE,EAAA,GAAA2f,EAC5e7f,EAAAE,EAAA,GAAAnS,KAAY4Y,EAAAykB,QAAA,SAAAprB,EAAAE,GAA4BlG,KAAAjB,EAAAiH,GAAA,EAAYhG,KAAAgT,EAAA9M,GAAA,GACpDyG,EAAAykB,QAAA1pB,WAAyB7S,YAAA8X,EAAAykB,QAAAjzB,YAAsC,MAAA6B,MAAAjB,GAAcZ,UAAA6H,GAAchG,KAAAjB,EAAAiH,GAAS5H,aAAc,MAAA4B,MAAAgT,GAAc5U,WAAA4H,GAAehG,KAAAgT,EAAAhN,GAASqL,IAAA,SAAArL,EAAAE,GAAqC,MAAlBlG,MAAAjB,EAAAiH,EAAShG,KAAAgT,EAAA9M,EAASlG,MAAY2kB,UAAA,SAAA3e,GAAuC,MAAhBhG,MAAAgT,EAAAhT,KAAAjB,EAAAiH,EAAgBhG,MAAYqxB,KAAA,SAAArrB,GAA2B,MAAThG,MAAAjB,EAAAiH,EAAShG,MAAYsxB,KAAA,SAAAtrB,GAA2B,MAAThG,MAAAgT,EAAAhN,EAAShG,MAAYuxB,aAAA,SAAAvrB,EAAAE,GAA4B,OAAAF,GAAU,OAAAhG,KAAAjB,EAAAmH,CAAgB,MAAM,QAAAlG,KAAAgT,EAAA9M,CAAgB,MAAM,cAAApE,OAAA,0BAAAkE,KAAmDwrB,aAAA,SAAAxrB,GAA0B,OAAAA,GAAU,aAAAhG,MAAAjB,CACnf,cAAAiB,MAAAgT,CAAqB,cAAAlR,OAAA,0BAAAkE,KAAmDrP,MAAA,WAAkB,UAAAqJ,MAAAnL,YAAAmL,KAAAjB,EAAAiB,KAAAgT,IAA2CwR,KAAA,SAAAxe,GAAwC,MAAtBhG,MAAAjB,EAAAiH,EAAAjH,EAAWiB,KAAAgT,EAAAhN,EAAAgN,EAAWhT,MAAYmP,IAAA,SAAAnJ,EAAAE,GAAmB,gBAAAA,GAAA5Q,QAAA0vB,KAAA,yFAAAhlB,KAAAyxB,WAAAzrB,EAAAE,KAAgJlG,KAAAjB,GAAAiH,EAAAjH,EAAYiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,OAAYkmB,UAAA,SAAAlgB,GAA2C,MAApBhG,MAAAjB,GAAAiH,EAAUhG,KAAAgT,GAAAhN,EAAUhG,MAAYyxB,WAAA,SAAAzrB,EAAAE,GAAwD,MAA9BlG,MAAAjB,EAAAiH,EAAAjH,EAAAmH,EAAAnH,EAAeiB,KAAAgT,EAAAhN,EAAAgN,EAAA9M,EAAA8M,EAAehT,MAC/e0xB,gBAAA,SAAA1rB,EAAAE,GAA0D,MAA5BlG,MAAAjB,GAAAiH,EAAAjH,EAAAmH,EAAclG,KAAAgT,GAAAhN,EAAAgN,EAAA9M,EAAclG,MAAY4U,IAAA,SAAA5O,EAAAE,GAAmB,gBAAAA,GAAA5Q,QAAA0vB,KAAA,yFAAAhlB,KAAA2xB,WAAA3rB,EAAAE,KAAgJlG,KAAAjB,GAAAiH,EAAAjH,EAAYiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,OAAY4xB,UAAA,SAAA5rB,GAA2C,MAApBhG,MAAAjB,GAAAiH,EAAUhG,KAAAgT,GAAAhN,EAAUhG,MAAY2xB,WAAA,SAAA3rB,EAAAE,GAAwD,MAA9BlG,MAAAjB,EAAAiH,EAAAjH,EAAAmH,EAAAnH,EAAeiB,KAAAgT,EAAAhN,EAAAgN,EAAA9M,EAAA8M,EAAehT,MAAYmmB,SAAA,SAAAngB,GAA8C,MAAxBhG,MAAAjB,GAAAiH,EAAAjH,EAAYiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,MAAYrF,eAAA,SAAAqL,GACva,MADmc6rB,UAAA7rB,IAAAhG,KAAAjB,GAAAiH,EAC9dhG,KAAAgT,GAAAhN,GAAAhG,KAAAgT,EAAAhT,KAAAjB,EAAA,EAA2BiB,MAAY8xB,OAAA,SAAA9rB,GAA4C,MAAxBhG,MAAAjB,GAAAiH,EAAAjH,EAAYiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,MAAY+xB,aAAA,SAAA/rB,GAA0B,MAAAhG,MAAArF,eAAA,EAAAqL,IAAgCyU,IAAA,SAAAzU,GAAyE,MAAxDhG,MAAAjB,EAAAS,KAAAib,IAAAza,KAAAjB,EAAAiH,EAAAjH,GAA4BiB,KAAAgT,EAAAxT,KAAAib,IAAAza,KAAAgT,EAAAhN,EAAAgN,GAA4BhT,MAAYP,IAAA,SAAAuG,GAAyE,MAAxDhG,MAAAjB,EAAAS,KAAAC,IAAAO,KAAAjB,EAAAiH,EAAAjH,GAA4BiB,KAAAgT,EAAAxT,KAAAC,IAAAO,KAAAgT,EAAAhN,EAAAgN,GAA4BhT,MAAY8kB,MAAA,SAAA9e,EAAAE,GAAyG,MAApFlG,MAAAjB,EAAAS,KAAAC,IAAAuG,EAAAjH,EAAAS,KAAAib,IAAAvU,EAAAnH,EAAAiB,KAAAjB,IAA0CiB,KAAAgT,EAAAxT,KAAAC,IAAAuG,EAAAgN,EAAAxT,KAAAib,IAAAvU,EAAA8M,EAAAhT,KAAAgT,IAA0ChT,MAAYgyB,YAAA,WAAwB,GAAAhsB,GAAAE,CAAQ,iBAAAnS,EAAAuoB,GACrZ,MAD0a,UAC7etW,MAAA,GAAA2G,GAAAykB,QAAAlrB,EAAA,GAAAyG,GAAAykB,SAA6CprB,EAAAqL,IAAAtd,KAAWmS,EAAAmL,IAAAiL,KAAWtc,KAAA8kB,MAAA9e,EAAAE,OAAwB+rB,YAAA,SAAAjsB,EAAAE,GAA6B,GAAAnS,GAAAiM,KAAAxJ,QAAoB,OAAAwJ,MAAArF,eAAA6E,KAAAC,IAAAuG,EAAAxG,KAAAib,IAAAvU,EAAAnS,QAAwDgD,MAAA,WAAsE,MAApDiJ,MAAAjB,EAAAS,KAAAzI,MAAAiJ,KAAAjB,GAA0BiB,KAAAgT,EAAAxT,KAAAzI,MAAAiJ,KAAAgT,GAA0BhT,MAAYkyB,KAAA,WAAmE,MAAlDlyB,MAAAjB,EAAAS,KAAA0yB,KAAAlyB,KAAAjB,GAAyBiB,KAAAgT,EAAAxT,KAAA0yB,KAAAlyB,KAAAgT,GAAyBhT,MAAYmyB,MAAA,WAAsE,MAApDnyB,MAAAjB,EAAAS,KAAA2yB,MAAAnyB,KAAAjB,GAA0BiB,KAAAgT,EAAAxT,KAAA2yB,MAAAnyB,KAAAgT,GAA0BhT,MAAYoyB,YAAA,WAClY,MAD0ZpyB,MAAAjB,EAAA,EAAAiB,KAAAjB,EAAAS,KAAA0yB,KAAAlyB,KAAAjB,GAAAS,KAAAzI,MAAAiJ,KAAAjB,GAC/ciB,KAAAgT,EAAA,EAAAhT,KAAAgT,EAAAxT,KAAA0yB,KAAAlyB,KAAAgT,GAAAxT,KAAAzI,MAAAiJ,KAAAgT,GAAqDhT,MAAYqyB,OAAA,WAAiD,MAA9BryB,MAAAjB,GAAAiB,KAAAjB,EAAeiB,KAAAgT,GAAAhT,KAAAgT,EAAehT,MAAYob,IAAA,SAAApV,GAAiB,MAAAhG,MAAAjB,EAAAiH,EAAAjH,EAAAiB,KAAAgT,EAAAhN,EAAAgN,GAA6B2d,SAAA,WAAqB,MAAA3wB,MAAAjB,EAAAiB,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAgT,GAAmCxc,OAAA,WAAmB,MAAAgJ,MAAAgmB,KAAAxlB,KAAAjB,EAAAiB,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAgT,IAA8Csf,gBAAA,WAA4B,MAAA9yB,MAAA+wB,IAAAvwB,KAAAjB,GAAAS,KAAA+wB,IAAAvwB,KAAAgT,IAAyCqB,UAAA,WAAsB,MAAArU,MAAA+xB,aAAA/xB,KAAAxJ,WAAwC+7B,MAAA,WAAkB,GAAAvsB,GAAAxG,KAAAuxB,MAAA/wB,KAAAgT,EAAAhT,KAAAjB,EAAoD,OAApB,GAAAiH,OAAA,EAAAxG,KAAAyS,IAAoBjM,GAC9ewsB,WAAA,SAAAxsB,GAAuB,MAAAxG,MAAAgmB,KAAAxlB,KAAAyyB,kBAAAzsB,KAA4CysB,kBAAA,SAAAzsB,GAA+B,GAAAE,GAAAlG,KAAAjB,EAAAiH,EAAAjH,CAA8B,OAAbiH,GAAAhG,KAAAgT,EAAAhN,EAAAgN,EAAa9M,IAAAF,KAAe+N,UAAA,SAAA/N,GAAuB,MAAAhG,MAAArF,eAAAqL,EAAAhG,KAAAxJ,WAA4C4vB,KAAA,SAAApgB,EAAAE,GAAkE,MAA9ClG,MAAAjB,IAAAiH,EAAAjH,EAAAiB,KAAAjB,GAAAmH,EAAuBlG,KAAAgT,IAAAhN,EAAAgN,EAAAhT,KAAAgT,GAAA9M,EAAuBlG,MAAY0yB,YAAA,SAAA1sB,EAAAE,EAAAnS,GAA6B,MAAAiM,MAAA2xB,WAAAzrB,EAAAF,GAAArL,eAAA5G,GAAAob,IAAAnJ,IAAqDqgB,OAAA,SAAArgB,GAAoB,MAAAA,GAAAjH,IAAAiB,KAAAjB,GAAAiH,EAAAgN,IAAAhT,KAAAgT,GAAkCsT,UAAA,SAAAtgB,EAAAE,GAAqE,MAA5C,UAAAA,MAAA,GAAkBlG,KAAAjB,EAAAiH,EAAAE,GAAYlG,KAAAgT,EAAAhN,EAAAE,EAAA,GAAclG,MAC7eumB,QAAA,SAAAvgB,EAAAE,GAAqF,MAA/D,UAAAF,UAAmB,SAAAE,MAAA,GAAkBF,EAAAE,GAAAlG,KAAAjB,EAAYiH,EAAAE,EAAA,GAAAlG,KAAAgT,EAAchN,GAAS2sB,cAAA,SAAA3sB,EAAAE,EAAAnS,GAAwG,MAAzE,UAAAA,MAAA,GAAkBmS,IAAAF,EAAA4sB,SAAA7+B,EAAiBiM,KAAAjB,EAAAiH,EAAA6sB,MAAA3sB,GAAkBlG,KAAAgT,EAAAhN,EAAA6sB,MAAA3sB,EAAA,GAAoBlG,MAAY8yB,aAAA,SAAA9sB,EAAAE,GAA4B,GAAAnS,GAAAyL,KAAA2S,IAAAjM,GAAAoW,EAAA9c,KAAA4a,IAAAlU,GAAAlP,EAAAgJ,KAAAjB,EAAAiH,EAAAjH,EAAAuK,EAAAtJ,KAAAgT,EAAAhN,EAAAgN,CAAgG,OAAtChT,MAAAjB,EAAA/H,EAAAjD,EAAAuV,EAAAgT,EAAAtW,EAAAjH,EAAmBiB,KAAAgT,EAAAhc,EAAAslB,EAAAhT,EAAAvV,EAAAiS,EAAAgN,EAAmBhT,OAAc2M,EAAA8G,QAAA,SAAAzN,EAAAE,EAAAnS,GAA8BiM,KAAAjB,EAAAiH,GAAA,EAAYhG,KAAAgT,EAAA9M,GAAA,EAAYlG,KAAAiT,EAAAlf,GAAA,GAClZ4Y,EAAA8G,QAAA/L,WAAyB7S,YAAA8X,EAAA8G,QAAApC,IAAA,SAAArL,EAAAE,EAAAnS,GAAyE,MAA3BiM,MAAAjB,EAAAiH,EAAShG,KAAAgT,EAAA9M,EAASlG,KAAAiT,EAAAlf,EAASiM,MAAY2kB,UAAA,SAAA3e,GAA8C,MAAvBhG,MAAAiT,EAAAjT,KAAAgT,EAAAhT,KAAAjB,EAAAiH,EAAuBhG,MAAYqxB,KAAA,SAAArrB,GAA2B,MAAThG,MAAAjB,EAAAiH,EAAShG,MAAYsxB,KAAA,SAAAtrB,GAA2B,MAAThG,MAAAgT,EAAAhN,EAAShG,MAAY+yB,KAAA,SAAA/sB,GAA2B,MAAThG,MAAAiT,EAAAjN,EAAShG,MAAYuxB,aAAA,SAAAvrB,EAAAE,GAA4B,OAAAF,GAAU,OAAAhG,KAAAjB,EAAAmH,CAAgB,MAAM,QAAAlG,KAAAgT,EAAA9M,CAAgB,MAAM,QAAAlG,KAAAiT,EAAA/M,CAAgB,MAAM,cAAApE,OAAA,0BAAAkE,KAAmDwrB,aAAA,SAAAxrB,GAA0B,OAAAA,GAAU,aAAAhG,MAAAjB,CAAqB,cAAAiB,MAAAgT,CACjf,cAAAhT,MAAAiT,CAAqB,cAAAnR,OAAA,0BAAAkE,KAAmDrP,MAAA,WAAkB,UAAAqJ,MAAAnL,YAAAmL,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAiT,IAAkDuR,KAAA,SAAAxe,GAAmD,MAAjChG,MAAAjB,EAAAiH,EAAAjH,EAAWiB,KAAAgT,EAAAhN,EAAAgN,EAAWhT,KAAAiT,EAAAjN,EAAAiN,EAAWjT,MAAYmP,IAAA,SAAAnJ,EAAAE,GAAmB,gBAAAA,GAAA5Q,QAAA0vB,KAAA,yFAAAhlB,KAAAyxB,WAAAzrB,EAAAE,KAAgJlG,KAAAjB,GAAAiH,EAAAjH,EAAYiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,KAAAiT,GAAAjN,EAAAiN,EAAYjT,OAAYkmB,UAAA,SAAAlgB,GAAqD,MAA9BhG,MAAAjB,GAAAiH,EAAUhG,KAAAgT,GAAAhN,EAAUhG,KAAAiT,GAAAjN,EAAUhG,MAAYyxB,WAAA,SAAAzrB,EAC/dE,GAAgD,MAA7ClG,MAAAjB,EAAAiH,EAAAjH,EAAAmH,EAAAnH,EAAeiB,KAAAgT,EAAAhN,EAAAgN,EAAA9M,EAAA8M,EAAehT,KAAAiT,EAAAjN,EAAAiN,EAAA/M,EAAA+M,EAAejT,MAAY0xB,gBAAA,SAAA1rB,EAAAE,GAAyE,MAA1ClG,MAAAjB,GAAAiH,EAAAjH,EAAAmH,EAAclG,KAAAgT,GAAAhN,EAAAgN,EAAA9M,EAAclG,KAAAiT,GAAAjN,EAAAiN,EAAA/M,EAAclG,MAAY4U,IAAA,SAAA5O,EAAAE,GAAmB,gBAAAA,GAAA5Q,QAAA0vB,KAAA,yFAAAhlB,KAAA2xB,WAAA3rB,EAAAE,KAAgJlG,KAAAjB,GAAAiH,EAAAjH,EAAYiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,KAAAiT,GAAAjN,EAAAiN,EAAYjT,OAAY4xB,UAAA,SAAA5rB,GAAqD,MAA9BhG,MAAAjB,GAAAiH,EAAUhG,KAAAgT,GAAAhN,EAAUhG,KAAAiT,GAAAjN,EAAUhG,MAAY2xB,WAAA,SAAA3rB,EAAAE,GAAuE,MAA7ClG,MAAAjB,EAAAiH,EAAAjH,EAAAmH,EAAAnH,EAAeiB,KAAAgT,EAAAhN,EAAAgN,EAAA9M,EAAA8M,EAAehT,KAAAiT,EAAAjN,EAAAiN,EAAA/M,EAAA+M,EAAejT,MAC5emmB,SAAA,SAAAngB,EAAAE,GAAuB,gBAAAA,GAAA5Q,QAAA0vB,KAAA,mGAAAhlB,KAAAgzB,gBAAAhtB,EAAAE,KAA+JlG,KAAAjB,GAAAiH,EAAAjH,EAAYiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,KAAAiT,GAAAjN,EAAAiN,EAAYjT,OAAYrF,eAAA,SAAAqL,GAA+F,MAAnE6rB,UAAA7rB,IAAAhG,KAAAjB,GAAAiH,EAAAhG,KAAAgT,GAAAhN,EAAAhG,KAAAiT,GAAAjN,GAAAhG,KAAAiT,EAAAjT,KAAAgT,EAAAhT,KAAAjB,EAAA,EAAmEiB,MAAYgzB,gBAAA,SAAAhtB,EAAAE,GAA4E,MAA7ClG,MAAAjB,EAAAiH,EAAAjH,EAAAmH,EAAAnH,EAAeiB,KAAAgT,EAAAhN,EAAAgN,EAAA9M,EAAA8M,EAAehT,KAAAiT,EAAAjN,EAAAiN,EAAA/M,EAAA+M,EAAejT,MAAYizB,WAAA,WAAuB,GAAAjtB,EAAM,iBAAAE,GACpT,OADuU,GAAAA,YAAAyG,GAAAsjB,OACzd36B,QAAAC,MAAA,+FAA6G,SAAAyQ,MAAA,GAAA2G,GAAA+iB,YAAqC1vB,KAAAkzB,gBAAAltB,EAAAgqB,aAAA9pB,QAAgD2M,eAAA,WAA6B,GAAA7M,EAAM,iBAAAE,EAAAnS,GAA0D,MAArC,UAAAiS,MAAA,GAAA2G,GAAA+iB,YAAqC1vB,KAAAkzB,gBAAAltB,EAAAmqB,iBAAAjqB,EAAAnS,QAAsDo/B,aAAA,SAAAntB,GAA4B,GAAAE,GAAAlG,KAAAjB,EAAAhL,EAAAiM,KAAAgT,EAAAsJ,EAAAtc,KAAAiT,CAAgI,OAAjGjN,KAAAqqB,SAAarwB,KAAAjB,EAAAiH,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAA4Btc,KAAAgT,EAAAhN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAA4Btc,KAAAiT,EAAAjN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAA4Btc,MACjfozB,aAAA,SAAAptB,GAAyB,GAAAE,GAAAlG,KAAAjB,EAAAhL,EAAAiM,KAAAgT,EAAAsJ,EAAAtc,KAAAiT,CAAmJ,OAApHjN,KAAAqqB,SAAarwB,KAAAjB,EAAAiH,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAAAtW,EAAA,IAAkChG,KAAAgT,EAAAhN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAAAtW,EAAA,IAAkChG,KAAAiT,EAAAjN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,IAAAsW,EAAAtW,EAAA,IAAmChG,MAAYqzB,gBAAA,SAAArtB,GAA6B,GAAAE,GAAAlG,KAAAjB,EAAAhL,EAAAiM,KAAAgT,EAAAsJ,EAAAtc,KAAAiT,CAA+BjN,KAAAqqB,QAAa,IAAAr5B,GAAA,GAAAgP,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,IAAAsW,EAAAtW,EAAA,IAAyJ,OAAnHhG,MAAAjB,GAAAiH,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAAAtW,EAAA,KAAAhP,EAAsCgJ,KAAAgT,GAAAhN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAAAtW,EAAA,KAAAhP,EAAsCgJ,KAAAiT,GAAAjN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,IAAAsW,EAAAtW,EAAA,KAAAhP,EAAuCgJ,MAAYkzB,gBAAA,SAAAltB,GAA6B,GAAAE,GAAAlG,KAAAjB,EAAAhL,EAAAiM,KAAAgT,EAAAsJ,EAAAtc,KAAAiT,EAAAjc,EAAAgP,EAAAjH,EAAAuK,EAAAtD,EAAAgN,EAAAuR,EAAAve,EAAAiN,CAAiDjN,GACpfA,EAAA4L,CAAI,IAAAC,GAAA7L,EAAAE,EAAAoD,EAAAgT,EAAAiI,EAAAxwB,EAAA+xB,EAAA9f,EAAAjS,EAAAwwB,EAAAre,EAAAlP,EAAAslB,EAAAuJ,EAAA7f,EAAAsW,EAAAtlB,EAAAjD,EAAAuV,EAAApD,KAAAlP,EAAAkP,EAAAoD,EAAAvV,EAAAwwB,EAAAjI,CAA2I,OAA9Etc,MAAAjB,EAAA8S,EAAA7L,EAAAE,GAAAlP,EAAA8uB,GAAAvB,EAAAsB,GAAAvc,EAA0BtJ,KAAAgT,EAAA8S,EAAA9f,EAAAE,GAAAoD,EAAAuc,GAAA7uB,EAAA6a,GAAA0S,EAA0BvkB,KAAAiT,EAAA4S,EAAA7f,EAAAE,GAAAqe,EAAA1S,GAAAvI,EAAAwc,GAAA9uB,EAA0BgJ,MAAY+W,QAAA,WAAoB,GAAA/Q,EAAM,iBAAAE,GAAwH,MAArG,UAAAF,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAutB,iBAAArtB,EAAAstB,iBAAAxtB,EAAAytB,WAAAvtB,EAAAwtB,cAAmE1zB,KAAAqzB,gBAAArtB,OAAgC2tB,UAAA,WAAwB,GAAA3tB,EAAM,iBAAAE,GAAwH,MAArG,UAAAF,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAutB,iBAAArtB,EAAAwtB,YAAA1tB,EAAAytB,WAAAvtB,EAAAstB,mBAAmExzB,KAAAqzB,gBAAArtB,OACne4tB,mBAAA,SAAA5tB,GAA+B,GAAAE,GAAAlG,KAAAjB,EAAAhL,EAAAiM,KAAAgT,EAAAsJ,EAAAtc,KAAAiT,CAAiI,OAAlGjN,KAAAqqB,SAAarwB,KAAAjB,EAAAiH,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAA4Btc,KAAAgT,EAAAhN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAA4Btc,KAAAiT,EAAAjN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,IAAAsW,EAA6Btc,KAAAqU,aAAwByd,OAAA,SAAA9rB,GAAwD,MAApChG,MAAAjB,GAAAiH,EAAAjH,EAAYiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,KAAAiT,GAAAjN,EAAAiN,EAAYjT,MAAY+xB,aAAA,SAAA/rB,GAA0B,MAAAhG,MAAArF,eAAA,EAAAqL,IAAgCyU,IAAA,SAAAzU,GAAqG,MAApFhG,MAAAjB,EAAAS,KAAAib,IAAAza,KAAAjB,EAAAiH,EAAAjH,GAA4BiB,KAAAgT,EAAAxT,KAAAib,IAAAza,KAAAgT,EAAAhN,EAAAgN,GAA4BhT,KAAAiT,EAAAzT,KAAAib,IAAAza,KAAAiT,EAAAjN,EAAAiN,GAA4BjT,MAAYP,IAAA,SAAAuG,GAClZ,MADmahG,MAAAjB,EAAAS,KAAAC,IAAAO,KAAAjB,EAAAiH,EAAAjH,GAA4BiB,KAAAgT,EAAAxT,KAAAC,IAAAO,KAAAgT,EAAAhN,EAAAgN,GAA4BhT,KAAAiT,EAChfzT,KAAAC,IAAAO,KAAAiT,EAAAjN,EAAAiN,GAAqBjT,MAAY8kB,MAAA,SAAA9e,EAAAE,GAAmJ,MAA9HlG,MAAAjB,EAAAS,KAAAC,IAAAuG,EAAAjH,EAAAS,KAAAib,IAAAvU,EAAAnH,EAAAiB,KAAAjB,IAA0CiB,KAAAgT,EAAAxT,KAAAC,IAAAuG,EAAAgN,EAAAxT,KAAAib,IAAAvU,EAAA8M,EAAAhT,KAAAgT,IAA0ChT,KAAAiT,EAAAzT,KAAAC,IAAAuG,EAAAiN,EAAAzT,KAAAib,IAAAvU,EAAA+M,EAAAjT,KAAAiT,IAA0CjT,MAAYgyB,YAAA,WAAwB,GAAAhsB,GAAAE,CAAQ,iBAAAnS,EAAAuoB,GAAqG,MAAhF,UAAAtW,MAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,SAAsDzN,EAAAqL,IAAAtd,OAAamS,EAAAmL,IAAAiL,OAAatc,KAAA8kB,MAAA9e,EAAAE,OAAwB+rB,YAAA,SAAAjsB,EAAAE,GAA6B,GAAAnS,GAAAiM,KAAAxJ,QAAoB,OAAAwJ,MAAArF,eAAA6E,KAAAC,IAAAuG,EAAAxG,KAAAib,IAAAvU,EAAAnS,QAAwDgD,MAAA,WACzZ,MAD2aiJ,MAAAjB,EAAAS,KAAAzI,MAAAiJ,KAAAjB,GAA0BiB,KAAAgT,EAClfxT,KAAAzI,MAAAiJ,KAAAgT,GAAmBhT,KAAAiT,EAAAzT,KAAAzI,MAAAiJ,KAAAiT,GAA0BjT,MAAYkyB,KAAA,WAA4F,MAA3ElyB,MAAAjB,EAAAS,KAAA0yB,KAAAlyB,KAAAjB,GAAyBiB,KAAAgT,EAAAxT,KAAA0yB,KAAAlyB,KAAAgT,GAAyBhT,KAAAiT,EAAAzT,KAAA0yB,KAAAlyB,KAAAiT,GAAyBjT,MAAYmyB,MAAA,WAAgG,MAA9EnyB,MAAAjB,EAAAS,KAAA2yB,MAAAnyB,KAAAjB,GAA0BiB,KAAAgT,EAAAxT,KAAA2yB,MAAAnyB,KAAAgT,GAA0BhT,KAAAiT,EAAAzT,KAAA2yB,MAAAnyB,KAAAiT,GAA0BjT,MAAYoyB,YAAA,WAAuL,MAA/JpyB,MAAAjB,EAAA,EAAAiB,KAAAjB,EAAAS,KAAA0yB,KAAAlyB,KAAAjB,GAAAS,KAAAzI,MAAAiJ,KAAAjB,GAAqDiB,KAAAgT,EAAA,EAAAhT,KAAAgT,EAAAxT,KAAA0yB,KAAAlyB,KAAAgT,GAAAxT,KAAAzI,MAAAiJ,KAAAgT,GAAqDhT,KAAAiT,EAAA,EAAAjT,KAAAiT,EAAAzT,KAAA0yB,KAAAlyB,KAAAiT,GAAAzT,KAAAzI,MAAAiJ,KAAAiT,GAAqDjT,MAAYqyB,OAAA,WACzb,MAD4cryB,MAAAjB,GAAAiB,KAAAjB,EAAeiB,KAAAgT,GAClfhT,KAAAgT,EAAQhT,KAAAiT,GAAAjT,KAAAiT,EAAejT,MAAYob,IAAA,SAAApV,GAAiB,MAAAhG,MAAAjB,EAAAiH,EAAAjH,EAAAiB,KAAAgT,EAAAhN,EAAAgN,EAAAhT,KAAAiT,EAAAjN,EAAAiN,GAAwC0d,SAAA,WAAqB,MAAA3wB,MAAAjB,EAAAiB,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAgT,EAAAhT,KAAAiT,EAAAjT,KAAAiT,GAAiDzc,OAAA,WAAmB,MAAAgJ,MAAAgmB,KAAAxlB,KAAAjB,EAAAiB,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAgT,EAAAhT,KAAAiT,EAAAjT,KAAAiT,IAA4Dqf,gBAAA,WAA4B,MAAA9yB,MAAA+wB,IAAAvwB,KAAAjB,GAAAS,KAAA+wB,IAAAvwB,KAAAgT,GAAAxT,KAAA+wB,IAAAvwB,KAAAiT,IAA0DoB,UAAA,WAAsB,MAAArU,MAAA+xB,aAAA/xB,KAAAxJ,WAAwCud,UAAA,SAAA/N,GAAuB,MAAAhG,MAAArF,eAAAqL,EAAAhG,KAAAxJ,WAA4C4vB,KAAA,SAAApgB,EAAAE,GACla,MADsblG,MAAAjB,IAAAiH,EAAAjH,EAAAiB,KAAAjB,GAAAmH,EAAuBlG,KAAAgT,IACnfhN,EAAAgN,EAAAhT,KAAAgT,GAAA9M,EAAelG,KAAAiT,IAAAjN,EAAAiN,EAAAjT,KAAAiT,GAAA/M,EAAuBlG,MAAY0yB,YAAA,SAAA1sB,EAAAE,EAAAnS,GAA6B,MAAAiM,MAAA2xB,WAAAzrB,EAAAF,GAAArL,eAAA5G,GAAAob,IAAAnJ,IAAqDuV,MAAA,SAAAvV,EAAAE,GAAqB,YAAAA,EAAA,MAAA5Q,SAAA0vB,KAAA,6FAAAhlB,KAAAwwB,aAAAxqB,EAAAE,EAAsJ,IAAAnS,GAAAiM,KAAAjB,EAAAud,EAAAtc,KAAAgT,EAAAhc,EAAAgJ,KAAAiT,CAAwF,OAAzDjT,MAAAjB,EAAAud,EAAAtW,EAAAiN,EAAAjc,EAAAgP,EAAAgN,EAAmBhT,KAAAgT,EAAAhc,EAAAgP,EAAAjH,EAAAhL,EAAAiS,EAAAiN,EAAmBjT,KAAAiT,EAAAlf,EAAAiS,EAAAgN,EAAAsJ,EAAAtW,EAAAjH,EAAmBiB,MAAYwwB,aAAA,SAAAxqB,EAAAE,GAA4B,GAAAnS,GAAAiS,EAAAjH,EAAAud,EAAAtW,EAAAgN,EAAAhc,EAAAgP,EAAAiN,EAAA3J,EAAApD,EAAAnH,EAAAwlB,EAAAre,EAAA8M,EAAAnB,EAAA3L,EAAA+M,CACha,OADwcjT,MAAAjB,EAAAud,EAAAzK,EAAA7a,EAAAutB,EAAevkB,KAAAgT,EAAAhc,EAAAsS,EAAAvV,EAAA8d,EACte7R,KAAAiT,EAAAlf,EAAAwwB,EAAAjI,EAAAhT,EAAetJ,MAAY6zB,gBAAA,SAAA7tB,GAA6B,GAAAE,GAAAF,EAAAoV,IAAApb,MAAAgG,EAAA2qB,UAA+B,OAAA3wB,MAAAwkB,KAAAxe,GAAArL,eAAAuL,IAAsC4tB,eAAA,WAA2B,GAAA9tB,EAAM,iBAAAE,GAAqF,MAAlE,UAAAF,MAAA,GAAA2G,GAAA8G,SAAkCzN,EAAAwe,KAAAxkB,MAAA6zB,gBAAA3tB,GAAgClG,KAAA4U,IAAA5O,OAAoB+tB,QAAA,WAAsB,GAAA/tB,EAAM,iBAAAE,GAAqD,MAAlC,UAAAF,MAAA,GAAA2G,GAAA8G,SAAkCzT,KAAA4U,IAAA5O,EAAAwe,KAAAte,GAAAvL,eAAA,EAAAqF,KAAAob,IAAAlV,SAA0D8tB,QAAA,SAAAhuB,GAA6E,MAAtDA,GAAAhG,KAAAob,IAAApV,GAAAxG,KAAAgmB,KAAAxlB,KAAA2wB,WAAA3qB,EAAA2qB,YAAsDnxB,KAAA6b,KAAA1O,EAAAnN,KAAAslB,MAAA9e,KAC/d,KAAOwsB,WAAA,SAAAxsB,GAAwB,MAAAxG,MAAAgmB,KAAAxlB,KAAAyyB,kBAAAzsB,KAA4CysB,kBAAA,SAAAzsB,GAA+B,GAAAE,GAAAlG,KAAAjB,EAAAiH,EAAAjH,EAAAhL,EAAAiM,KAAAgT,EAAAhN,EAAAgN,CAA2C,OAAbhN,GAAAhG,KAAAiT,EAAAjN,EAAAiN,EAAa/M,IAAAnS,IAAAiS,KAAmBiuB,iBAAA,SAAAjuB,GAA8B,GAAAE,GAAA1G,KAAA4a,IAAApU,EAAAkuB,KAAAluB,EAAAmuB,MAAqH,OAAtFn0B,MAAAjB,EAAAmH,EAAA1G,KAAA4a,IAAApU,EAAA+L,OAA2B/R,KAAAgT,EAAAxT,KAAA2S,IAAAnM,EAAAkuB,KAAAluB,EAAAmuB,OAAgCn0B,KAAAiT,EAAA/M,EAAA1G,KAAA2S,IAAAnM,EAAA+L,OAA2B/R,MAAYo0B,sBAAA,SAAApuB,GAAmC,MAAAhG,MAAAq0B,oBAAAruB,EAAA,IAAqCsuB,mBAAA,SAAAtuB,GAAgC,GAAAE,GAAAlG,KAAAq0B,oBAAAruB,EAAA,GAAAxP,SAAAzC,EAAAiM,KAAAq0B,oBAAAruB,EAC/a,GAAAxP,QAAgF,OAApEwP,GAAAhG,KAAAq0B,oBAAAruB,EAAA,GAAAxP,SAAyCwJ,KAAAjB,EAAAmH,EAASlG,KAAAgT,EAAAjf,EAASiM,KAAAiT,EAAAjN,EAAShG,MAAYq0B,oBAAA,SAAAruB,EAAAE,GAAmC,mBAAAF,GAAA,CAAwB1Q,QAAA0vB,KAAA,oEAAkF,IAAAjxB,GAAAiS,CAAQA,GAAAE,EAAIA,EAAAnS,EAAI,MAAAiM,MAAAsmB,UAAAtgB,EAAAqqB,SAAA,EAAAnqB,IAAsCmgB,OAAA,SAAArgB,GAAoB,MAAAA,GAAAjH,IAAAiB,KAAAjB,GAAAiH,EAAAgN,IAAAhT,KAAAgT,GAAAhN,EAAAiN,IAAAjT,KAAAiT,GAAgDqT,UAAA,SAAAtgB,EAAAE,GAAmF,MAA1D,UAAAA,MAAA,GAAkBlG,KAAAjB,EAAAiH,EAAAE,GAAYlG,KAAAgT,EAAAhN,EAAAE,EAAA,GAAclG,KAAAiT,EAAAjN,EAAAE,EAAA,GAAclG,MAAYumB,QAAA,SAAAvgB,EAAAE,GACjZ,MADwa,UAAAF,UAAmB,SAC5eE,MAAA,GAASF,EAAAE,GAAAlG,KAAAjB,EAAYiH,EAAAE,EAAA,GAAAlG,KAAAgT,EAAchN,EAAAE,EAAA,GAAAlG,KAAAiT,EAAcjN,GAAS2sB,cAAA,SAAA3sB,EAAAE,EAAAnS,GAA4H,MAA7F,UAAAA,MAAA,GAAkBmS,IAAAF,EAAA4sB,SAAA7+B,EAAiBiM,KAAAjB,EAAAiH,EAAA6sB,MAAA3sB,GAAkBlG,KAAAgT,EAAAhN,EAAA6sB,MAAA3sB,EAAA,GAAoBlG,KAAAiT,EAAAjN,EAAA6sB,MAAA3sB,EAAA,GAAoBlG,OAAc2M,EAAA4nB,QAAA,SAAAvuB,EAAAE,EAAAnS,EAAAuoB,GAAgCtc,KAAAjB,EAAAiH,GAAA,EAAYhG,KAAAgT,EAAA9M,GAAA,EAAYlG,KAAAiT,EAAAlf,GAAA,EAAYiM,KAAA4R,EAAA,SAAA0K,IAAA,GACxQ3P,EAAA4nB,QAAA7sB,WAAyB7S,YAAA8X,EAAA4nB,QAAAljB,IAAA,SAAArL,EAAAE,EAAAnS,EAAAuoB,GAAoF,MAApCtc,MAAAjB,EAAAiH,EAAShG,KAAAgT,EAAA9M,EAASlG,KAAAiT,EAAAlf,EAASiM,KAAA4R,EAAA0K,EAAStc,MAAY2kB,UAAA,SAAA3e,GAAqD,MAA9BhG,MAAA4R,EAAA5R,KAAAiT,EAAAjT,KAAAgT,EAAAhT,KAAAjB,EAAAiH,EAA8BhG,MAAYqxB,KAAA,SAAArrB,GAA2B,MAAThG,MAAAjB,EAAAiH,EAAShG,MAAYsxB,KAAA,SAAAtrB,GAA2B,MAAThG,MAAAgT,EAAAhN,EAAShG,MAAY+yB,KAAA,SAAA/sB,GAA2B,MAAThG,MAAAiT,EAAAjN,EAAShG,MAAYw0B,KAAA,SAAAxuB,GAA2B,MAAThG,MAAA4R,EAAA5L,EAAShG,MAAYuxB,aAAA,SAAAvrB,EAAAE,GAA4B,OAAAF,GAAU,OAAAhG,KAAAjB,EAAAmH,CAAgB,MAAM,QAAAlG,KAAAgT,EAAA9M,CAAgB,MAAM,QAAAlG,KAAAiT,EAAA/M,CAAgB,MAAM,QAAAlG,KAAA4R,EAAA1L,CAAgB,MAAM,cAAApE,OAAA,0BACpdkE,KAAKwrB,aAAA,SAAAxrB,GAA0B,OAAAA,GAAU,aAAAhG,MAAAjB,CAAqB,cAAAiB,MAAAgT,CAAqB,cAAAhT,MAAAiT,CAAqB,cAAAjT,MAAA4R,CAAqB,cAAA9P,OAAA,0BAAAkE,KAAmDrP,MAAA,WAAkB,UAAAqJ,MAAAnL,YAAAmL,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAiT,EAAAjT,KAAA4R,IAAyD4S,KAAA,SAAAxe,GAA6E,MAA3DhG,MAAAjB,EAAAiH,EAAAjH,EAAWiB,KAAAgT,EAAAhN,EAAAgN,EAAWhT,KAAAiT,EAAAjN,EAAAiN,EAAWjT,KAAA4R,EAAA,SAAA5L,EAAA4L,EAAA5L,EAAA4L,EAAA,EAA0B5R,MAAYmP,IAAA,SAAAnJ,EAAAE,GAAmB,gBAAAA,GAAA5Q,QAAA0vB,KAAA,yFAAAhlB,KAAAyxB,WAAAzrB,EAAAE,KACvWlG,KAAAjB,GAAAiH,EAAAjH,EAAYiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,KAAAiT,GAAAjN,EAAAiN,EAAYjT,KAAA4R,GAAA5L,EAAA4L,EAAY5R,OAAYkmB,UAAA,SAAAlgB,GAA+D,MAAxChG,MAAAjB,GAAAiH,EAAUhG,KAAAgT,GAAAhN,EAAUhG,KAAAiT,GAAAjN,EAAUhG,KAAA4R,GAAA5L,EAAUhG,MAAYyxB,WAAA,SAAAzrB,EAAAE,GAAsF,MAA5DlG,MAAAjB,EAAAiH,EAAAjH,EAAAmH,EAAAnH,EAAeiB,KAAAgT,EAAAhN,EAAAgN,EAAA9M,EAAA8M,EAAehT,KAAAiT,EAAAjN,EAAAiN,EAAA/M,EAAA+M,EAAejT,KAAA4R,EAAA5L,EAAA4L,EAAA1L,EAAA0L,EAAe5R,MAAY0xB,gBAAA,SAAA1rB,EAAAE,GAAuF,MAAxDlG,MAAAjB,GAAAiH,EAAAjH,EAAAmH,EAAclG,KAAAgT,GAAAhN,EAAAgN,EAAA9M,EAAclG,KAAAiT,GAAAjN,EAAAiN,EAAA/M,EAAclG,KAAA4R,GAAA5L,EAAA4L,EAAA1L,EAAclG,MAAY4U,IAAA,SAAA5O,EAAAE,GAAmB,gBAAAA,GAAA5Q,QAAA0vB,KAAA,yFAAAhlB,KAAA2xB,WAAA3rB,EAAAE,KAAgJlG,KAAAjB,GAC/eiH,EAAAjH,EAAIiB,KAAAgT,GAAAhN,EAAAgN,EAAYhT,KAAAiT,GAAAjN,EAAAiN,EAAYjT,KAAA4R,GAAA5L,EAAA4L,EAAY5R,OAAY4xB,UAAA,SAAA5rB,GAA+D,MAAxChG,MAAAjB,GAAAiH,EAAUhG,KAAAgT,GAAAhN,EAAUhG,KAAAiT,GAAAjN,EAAUhG,KAAA4R,GAAA5L,EAAUhG;AAAY2xB,WAAA,SAAA3rB,EAAAE,GAAsF,MAA5DlG,MAAAjB,EAAAiH,EAAAjH,EAAAmH,EAAAnH,EAAeiB,KAAAgT,EAAAhN,EAAAgN,EAAA9M,EAAA8M,EAAehT,KAAAiT,EAAAjN,EAAAiN,EAAA/M,EAAA+M,EAAejT,KAAA4R,EAAA5L,EAAA4L,EAAA1L,EAAA0L,EAAe5R,MAAYrF,eAAA,SAAAqL,GAAgH,MAApF6rB,UAAA7rB,IAAAhG,KAAAjB,GAAAiH,EAAAhG,KAAAgT,GAAAhN,EAAAhG,KAAAiT,GAAAjN,EAAAhG,KAAA4R,GAAA5L,GAAAhG,KAAA4R,EAAA5R,KAAAiT,EAAAjT,KAAAgT,EAAAhT,KAAAjB,EAAA,EAAoFiB,MAAYozB,aAAA,SAAAptB,GAA0B,GAAAE,GAAAlG,KAAAjB,EAAAhL,EAAAiM,KAAAgT,EAAAsJ,EAAAtc,KAAAiT,EAAAjc,EAAAgJ,KAAA4R,CACpT,OAD4V5L,KAAAqqB,SAAarwB,KAAAjB,EAAAiH,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAAAtW,EAAA,IAAAhP,EAAoCgJ,KAAAgT,EAAAhN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAAAtW,EAAA,IAAAhP,EAAoCgJ,KAAAiT,EACpfjN,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,IAAAsW,EAAAtW,EAAA,IAAAhP,EAA8BgJ,KAAA4R,EAAA5L,EAAA,GAAAE,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,IAAAsW,EAAAtW,EAAA,IAAAhP,EAAqCgJ,MAAY+xB,aAAA,SAAA/rB,GAA0B,MAAAhG,MAAArF,eAAA,EAAAqL,IAAgCyuB,2BAAA,SAAAzuB,GAAwChG,KAAA4R,EAAA,EAAApS,KAAA6b,KAAArV,EAAA4L,EAAwB,IAAA1L,GAAA1G,KAAAgmB,KAAA,EAAAxf,EAAA4L,EAAA5L,EAAA4L,EAAsG,OAA3E,MAAA1L,GAAAlG,KAAAjB,EAAA,EAAAiB,KAAAiT,EAAAjT,KAAAgT,EAAA,IAAAhT,KAAAjB,EAAAiH,EAAAjH,EAAAmH,EAAAlG,KAAAgT,EAAAhN,EAAAgN,EAAA9M,EAAAlG,KAAAiT,EAAAjN,EAAAiN,EAAA/M,GAA2ElG,MAAY00B,+BAAA,SAAA1uB,GAA4C,GAAAE,GAAAnS,EAAAuoB,CAAUtW,KAAAqqB,QAAa,IAAAr5B,GAAAgP,EAAA,EAAWsW,GAAAtW,EAAA,EAAO,IAAAsD,GAAAtD,EAAA,GAAAue,EAAAve,EAAA,GAAA6L,EAAA7L,EAAA,GAAA8f,EAAA9f,EAAA,EAAgCjS,GAAAiS,EAAA,GAAOE,EAAAF,EAAA,EAAO,IAAA6f,GAAA7f,EAAA,GAAY,WAAAxG,KAAA+wB,IAAAjU,EAAAiI,IAAA,IAAA/kB,KAAA+wB,IAAAjnB,EAAAvV,IAAA,IAC1cyL,KAAA+wB,IAAAzK,EAAA5f,GAAe,GAAA1G,KAAA+wB,IAAAjU,EAAAiI,IAAA,GAAA/kB,KAAA+wB,IAAAjnB,EAAAvV,IAAA,GAAAyL,KAAA+wB,IAAAzK,EAAA5f,IAAA,GAAA1G,KAAA+wB,IAAAv5B,EAAA6a,EAAAgU,EAAA,IAAA7lB,KAAAqR,IAAA,SAAArR,OAA4GgG,EAAAxG,KAAAyS,GAAUjb,KAAA,KAAU6a,KAAA,KAAUgU,KAAA,KAAUvJ,KAAAiI,GAAA,EAAUjb,KAAAvV,GAAA,EAAU+xB,KAAA5f,GAAA,EAAUlP,EAAA6a,GAAA7a,EAAA6uB,EAAA,IAAA7uB,GAAAkP,EAAA,EAAAoW,EAAAvoB,EAAA,aAAAmS,EAAA1G,KAAAgmB,KAAAxuB,GAAAjD,EAAAuoB,EAAApW,EAAAoW,EAAAhT,EAAApD,GAAA2L,EAAAgU,EAAA,IAAAhU,GAAA3L,EAAA,WAAAnS,EAAA,EAAAuoB,EAAA,aAAAvoB,EAAAyL,KAAAgmB,KAAA3T,GAAA3L,EAAAoW,EAAAvoB,EAAAuoB,EAAAwJ,EAAA/xB,GAAA,IAAA8xB,GAAA9xB,EAAAmS,EAAA,WAAAoW,EAAA,IAAAA,EAAA9c,KAAAgmB,KAAAK,GAAA3f,EAAAoD,EAAAgT,EAAAvoB,EAAA+xB,EAAAxJ,GAAgMtc,KAAAqR,IAAAnL,EAAAnS,EAAAuoB,EAAAtW,GAAkBhG,OAAYgG,EAAAxG,KAAAgmB,MAAAtf,EAAA4f,IAAA5f,EAAA4f,IAAAxc,EAAAvV,IAAAuV,EAAAvV,IAAAwwB,EAAAjI,IAAAiI,EAAAjI,IAAiD,KAAA9c,KAAA+wB,IAAAvqB,OAAA,GAAwBhG,KAAAjB,GAAAmH,EAAA4f,GACxe9f,EAAEhG,KAAAgT,GAAA1J,EAAAvV,GAAAiS,EAAehG,KAAAiT,GAAAsR,EAAAjI,GAAAtW,EAAehG,KAAA4R,EAAApS,KAAA6b,MAAArkB,EAAA6a,EAAAgU,EAAA,MAA8B7lB,OAAYya,IAAA,SAAAzU,GAAiI,MAAhHhG,MAAAjB,EAAAS,KAAAib,IAAAza,KAAAjB,EAAAiH,EAAAjH,GAA4BiB,KAAAgT,EAAAxT,KAAAib,IAAAza,KAAAgT,EAAAhN,EAAAgN,GAA4BhT,KAAAiT,EAAAzT,KAAAib,IAAAza,KAAAiT,EAAAjN,EAAAiN,GAA4BjT,KAAA4R,EAAApS,KAAAib,IAAAza,KAAA4R,EAAA5L,EAAA4L,GAA4B5R,MAAYP,IAAA,SAAAuG,GAAiI,MAAhHhG,MAAAjB,EAAAS,KAAAC,IAAAO,KAAAjB,EAAAiH,EAAAjH,GAA4BiB,KAAAgT,EAAAxT,KAAAC,IAAAO,KAAAgT,EAAAhN,EAAAgN,GAA4BhT,KAAAiT,EAAAzT,KAAAC,IAAAO,KAAAiT,EAAAjN,EAAAiN,GAA4BjT,KAAA4R,EAAApS,KAAAC,IAAAO,KAAA4R,EAAA5L,EAAA4L,GAA4B5R,MAAY8kB,MAAA,SAAA9e,EAAAE,GAC1T,MAD+UlG,MAAAjB,EAAAS,KAAAC,IAAAuG,EAAAjH,EAAAS,KAAAib,IAAAvU,EAAAnH,EAAAiB,KAAAjB,IAA0CiB,KAAAgT,EAAAxT,KAAAC,IAAAuG,EAAAgN,EAAAxT,KAAAib,IAAAvU,EAAA8M,EAAAhT,KAAAgT,IAA0ChT,KAAAiT,EAAAzT,KAAAC,IAAAuG,EAAAiN,EAAAzT,KAAAib,IAAAvU,EAAA+M,EAAAjT,KAAAiT,IAC7cjT,KAAA4R,EAAApS,KAAAC,IAAAuG,EAAA4L,EAAApS,KAAAib,IAAAvU,EAAA0L,EAAA5R,KAAA4R,IAA0C5R,MAAYgyB,YAAA,WAAwB,GAAAhsB,GAAAE,CAAQ,iBAAAnS,EAAAuoB,GAAyG,MAApF,UAAAtW,MAAA,GAAA2G,GAAA4nB,QAAAruB,EAAA,GAAAyG,GAAA4nB,SAAsDvuB,EAAAqL,IAAAtd,SAAemS,EAAAmL,IAAAiL,SAAetc,KAAA8kB,MAAA9e,EAAAE,OAAwBnP,MAAA,WAA4H,MAAxGiJ,MAAAjB,EAAAS,KAAAzI,MAAAiJ,KAAAjB,GAA0BiB,KAAAgT,EAAAxT,KAAAzI,MAAAiJ,KAAAgT,GAA0BhT,KAAAiT,EAAAzT,KAAAzI,MAAAiJ,KAAAiT,GAA0BjT,KAAA4R,EAAApS,KAAAzI,MAAAiJ,KAAA4R,GAA0B5R,MAAYkyB,KAAA,WAAqH,MAApGlyB,MAAAjB,EAAAS,KAAA0yB,KAAAlyB,KAAAjB,GAAyBiB,KAAAgT,EAAAxT,KAAA0yB,KAAAlyB,KAAAgT,GAAyBhT,KAAAiT,EAAAzT,KAAA0yB,KAAAlyB,KAAAiT,GAAyBjT,KAAA4R,EAAApS,KAAA0yB,KAAAlyB,KAAA4R,GAAyB5R,MAAYmyB,MAAA,WAC/X,MADiZnyB,MAAAjB,EAClfS,KAAA2yB,MAAAnyB,KAAAjB,GAAmBiB,KAAAgT,EAAAxT,KAAA2yB,MAAAnyB,KAAAgT,GAA0BhT,KAAAiT,EAAAzT,KAAA2yB,MAAAnyB,KAAAiT,GAA0BjT,KAAA4R,EAAApS,KAAA2yB,MAAAnyB,KAAA4R,GAA0B5R,MAAYoyB,YAAA,WAA4O,MAApNpyB,MAAAjB,EAAA,EAAAiB,KAAAjB,EAAAS,KAAA0yB,KAAAlyB,KAAAjB,GAAAS,KAAAzI,MAAAiJ,KAAAjB,GAAqDiB,KAAAgT,EAAA,EAAAhT,KAAAgT,EAAAxT,KAAA0yB,KAAAlyB,KAAAgT,GAAAxT,KAAAzI,MAAAiJ,KAAAgT,GAAqDhT,KAAAiT,EAAA,EAAAjT,KAAAiT,EAAAzT,KAAA0yB,KAAAlyB,KAAAiT,GAAAzT,KAAAzI,MAAAiJ,KAAAiT,GAAqDjT,KAAA4R,EAAA,EAAA5R,KAAA4R,EAAApS,KAAA0yB,KAAAlyB,KAAA4R,GAAApS,KAAAzI,MAAAiJ,KAAA4R,GAAqD5R,MAAYqyB,OAAA,WAA+E,MAA5DryB,MAAAjB,GAAAiB,KAAAjB,EAAeiB,KAAAgT,GAAAhT,KAAAgT,EAAehT,KAAAiT,GAAAjT,KAAAiT,EAAejT,KAAA4R,GAAA5R,KAAA4R,EAAe5R,MAAYob,IAAA,SAAApV,GAAiB,MAAAhG,MAAAjB,EAAAiH,EAAAjH,EAAAiB,KAAAgT,EAAAhN,EAAAgN,EAAAhT,KAAAiT,EACjdjN,EAAAiN,EAAAjT,KAAA4R,EAAA5L,EAAA4L,GAAe+e,SAAA,WAAqB,MAAA3wB,MAAAjB,EAAAiB,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAgT,EAAAhT,KAAAiT,EAAAjT,KAAAiT,EAAAjT,KAAA4R,EAAA5R,KAAA4R,GAA+Dpb,OAAA,WAAmB,MAAAgJ,MAAAgmB,KAAAxlB,KAAAjB,EAAAiB,KAAAjB,EAAAiB,KAAAgT,EAAAhT,KAAAgT,EAAAhT,KAAAiT,EAAAjT,KAAAiT,EAAAjT,KAAA4R,EAAA5R,KAAA4R,IAA0E0gB,gBAAA,WAA4B,MAAA9yB,MAAA+wB,IAAAvwB,KAAAjB,GAAAS,KAAA+wB,IAAAvwB,KAAAgT,GAAAxT,KAAA+wB,IAAAvwB,KAAAiT,GAAAzT,KAAA+wB,IAAAvwB,KAAA4R,IAA2EyC,UAAA,WAAsB,MAAArU,MAAA+xB,aAAA/xB,KAAAxJ,WAAwCud,UAAA,SAAA/N,GAAuB,MAAAhG,MAAArF,eAAAqL,EAAAhG,KAAAxJ,WAA4C4vB,KAAA,SAAApgB,EAAAE,GACvY,MAD2ZlG,MAAAjB,IAAAiH,EAAAjH,EAAAiB,KAAAjB,GAAAmH,EAAuBlG,KAAAgT,IAAAhN,EAAAgN,EAAAhT,KAAAgT,GAAA9M,EAAuBlG,KAAAiT,IAAAjN,EAAAiN,EAC1ejT,KAAAiT,GAAA/M,EAAUlG,KAAA4R,IAAA5L,EAAA4L,EAAA5R,KAAA4R,GAAA1L,EAAuBlG,MAAY0yB,YAAA,SAAA1sB,EAAAE,EAAAnS,GAA6B,MAAAiM,MAAA2xB,WAAAzrB,EAAAF,GAAArL,eAAA5G,GAAAob,IAAAnJ,IAAqDqgB,OAAA,SAAArgB,GAAoB,MAAAA,GAAAjH,IAAAiB,KAAAjB,GAAAiH,EAAAgN,IAAAhT,KAAAgT,GAAAhN,EAAAiN,IAAAjT,KAAAiT,GAAAjN,EAAA4L,IAAA5R,KAAA4R,GAA8D0U,UAAA,SAAAtgB,EAAAE,GAAiG,MAAxE,UAAAA,MAAA,GAAkBlG,KAAAjB,EAAAiH,EAAAE,GAAYlG,KAAAgT,EAAAhN,EAAAE,EAAA,GAAclG,KAAAiT,EAAAjN,EAAAE,EAAA,GAAclG,KAAA4R,EAAA5L,EAAAE,EAAA,GAAclG,MAAYumB,QAAA,SAAAvgB,EAAAE,GAAkH,MAA3F,UAAAF,UAAmB,SAAAE,MAAA,GAAkBF,EAAAE,GAAAlG,KAAAjB,EAAYiH,EAAAE,EAAA,GAAAlG,KAAAgT,EAAchN,EAAAE,EAAA,GAAAlG,KAAAiT,EAAcjN,EAAAE,EAAA,GAAAlG,KAAA4R,EAAc5L,GAAS2sB,cAAA,SAAA3sB,EAAAE,EAAAnS,GACzW,MADwY,UAAAA,MAAA,GAAkBmS,IAAAF,EAAA4sB,SAC1e7+B,EAAEiM,KAAAjB,EAAAiH,EAAA6sB,MAAA3sB,GAAkBlG,KAAAgT,EAAAhN,EAAA6sB,MAAA3sB,EAAA,GAAoBlG,KAAAiT,EAAAjN,EAAA6sB,MAAA3sB,EAAA,GAAoBlG,KAAA4R,EAAA5L,EAAA6sB,MAAA3sB,EAAA,GAAoBlG,OAAc2M,EAAAsjB,MAAA,SAAAjqB,EAAAE,EAAAnS,EAAAuoB,GAA8Btc,KAAA2vB,GAAA3pB,GAAA,EAAahG,KAAA4vB,GAAA1pB,GAAA,EAAalG,KAAA6vB,GAAA97B,GAAA,EAAaiM,KAAA20B,OAAArY,GAAA3P,EAAAsjB,MAAA2E,cAAyCjoB,EAAAsjB,MAAA4E,eAAA,0BAAAC,MAAA,KAAgEnoB,EAAAsjB,MAAA2E,aAAA,MAC5QjoB,EAAAsjB,MAAAvoB,WAAuB7S,YAAA8X,EAAAsjB,MAAAlxB,QAAgC,MAAAiB,MAAA2vB,IAAe5wB,MAAAiH,GAAUhG,KAAA2vB,GAAA3pB,EAAUhG,KAAA+vB,oBAAwB/c,QAAS,MAAAhT,MAAA4vB,IAAe5c,MAAAhN,GAAUhG,KAAA4vB,GAAA5pB,EAAUhG,KAAA+vB,oBAAwB9c,QAAS,MAAAjT,MAAA6vB,IAAe5c,MAAAjN,GAAUhG,KAAA6vB,GAAA7pB,EAAUhG,KAAA+vB,oBAAwBG,YAAa,MAAAlwB,MAAA20B,QAAmBzE,UAAAlqB,GAAchG,KAAA20B,OAAA3uB,EAAchG,KAAA+vB,oBAAwB1e,IAAA,SAAArL,EAAAE,EAAAnS,EAAAuoB,GAAwG,MAAjFtc,MAAA2vB,GAAA3pB,EAAUhG,KAAA4vB,GAAA1pB,EAAUlG,KAAA6vB,GAAA97B,EAAUiM,KAAA20B,OAAArY,GAAAtc,KAAA20B,OAA2B30B,KAAA+vB,mBAAwB/vB,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,YAAAmL,KAAA2vB,GACpd3vB,KAAA4vB,GAAA5vB,KAAA6vB,GAAA7vB,KAAA20B,SAA6BnQ,KAAA,SAAAxe,GAAsG,MAApFhG,MAAA2vB,GAAA3pB,EAAA2pB,GAAa3vB,KAAA4vB,GAAA5pB,EAAA4pB,GAAa5vB,KAAA6vB,GAAA7pB,EAAA6pB,GAAa7vB,KAAA20B,OAAA3uB,EAAA2uB,OAAqB30B,KAAA+vB,mBAAwB/vB,MAAYowB,sBAAA,SAAApqB,EAAAE,EAAAnS,GAAuC,GAAAuoB,GAAA3P,EAAAnN,KAAAslB,MAAA9tB,EAAAgP,EAAAqqB,QAAoCrqB,GAAAhP,EAAA,EAAO,IAAAsS,GAAAtS,EAAA,GAAAutB,EAAAvtB,EAAA,GAAA6a,EAAA7a,EAAA,GAAA8uB,EAAA9uB,EAAA,GAAA6uB,EAAA7uB,EAAA,GAAAk6B,EAAAl6B,EAAA,GAAAhD,EAAAgD,EAAA,GAAAA,IAAA,GAEiF,OAFpBkP,MAAAlG,KAAA20B,OAAiB,QAAAzuB,GAAAlG,KAAA4vB,GAAApwB,KAAAu1B,KAAAzY,EAAAiI,KAAA,WAAA/kB,KAAA+wB,IAAAhM,IAAAvkB,KAAA2vB,GAAAnwB,KAAAuxB,OAAAlL,EAAA7uB,GAAAgJ,KAAA6vB,GAAArwB,KAAAuxB,OAAAznB,EAAAtD,KAAAhG,KAAA2vB,GAAAnwB,KAAAuxB,MAAA/8B,EAAA8xB,GAAA9lB,KAAA6vB,GAAA,YAAA3pB,GAAAlG,KAAA2vB,GAAAnwB,KAAAu1B,MAAAzY,EAAAuJ,KAAA,WAAArmB,KAAA+wB,IAAA1K,IAC/S7lB,KAAA4vB,GAAApwB,KAAAuxB,MAAAxM,EAAAvtB,GAAAgJ,KAAA6vB,GAAArwB,KAAAuxB,MAAAlf,EAAAiU,KAAA9lB,KAAA4vB,GAAApwB,KAAAuxB,OAAAG,EAAAlrB,GAAAhG,KAAA6vB,GAAA,YAAA3pB,GAAAlG,KAAA2vB,GAAAnwB,KAAAu1B,KAAAzY,EAAAtoB,KAAA,WAAAwL,KAAA+wB,IAAAv8B,IAAAgM,KAAA4vB,GAAApwB,KAAAuxB,OAAAG,EAAAl6B,GAAAgJ,KAAA6vB,GAAArwB,KAAAuxB,OAAAznB,EAAAwc,KAAA9lB,KAAA4vB,GAAA,EAAA5vB,KAAA6vB,GAAArwB,KAAAuxB,MAAAlf,EAAA7L,KAAA,QAAAE,GAAAlG,KAAA4vB,GAAApwB,KAAAu1B,MAAAzY,EAAA4U,KAAA,WAAA1xB,KAAA+wB,IAAAW,IAAAlxB,KAAA2vB,GAAAnwB,KAAAuxB,MAAA/8B,EAAAgD,GAAAgJ,KAAA6vB,GAAArwB,KAAAuxB,MAAAlf,EAAA7L,KAAAhG,KAAA2vB,GAAA,EAAA3vB,KAAA6vB,GAAArwB,KAAAuxB,OAAAznB,EAAAwc,KAAA,QAAA5f,GAAAlG,KAAA6vB,GAAArwB,KAAAu1B,KAAAzY,EAAAzK,KAAA,WAAArS,KAAA+wB,IAAA1e,IAAA7R,KAAA2vB,GAAAnwB,KAAAuxB,OAAAlL,EAAAC,GAAA9lB,KAAA4vB,GAAApwB,KAAAuxB,OAAAG,EAAAlrB,KAAAhG,KAAA2vB,GACA,EAAA3vB,KAAA4vB,GAAApwB,KAAAuxB,MAAAxM,EAAAvtB,KAAA,QAAAkP,GAAAlG,KAAA6vB,GAAArwB,KAAAu1B,MAAAzY,EAAAhT,KAAA,WAAA9J,KAAA+wB,IAAAjnB,IAAAtJ,KAAA2vB,GAAAnwB,KAAAuxB,MAAA/8B,EAAA8xB,GAAA9lB,KAAA4vB,GAAApwB,KAAAuxB,MAAAxM,EAAAve,KAAAhG,KAAA2vB,GAAAnwB,KAAAuxB,OAAAlL,EAAA7uB,GAAAgJ,KAAA4vB,GAAA,IAAAt6B,QAAA0vB,KAAA,kEAAA9e,GAAkQlG,KAAA20B,OAAAzuB,GAAc,IAAAnS,GAAAiM,KAAA+vB,mBAAkC/vB,MAAYg1B,kBAAA,WAA8B,GAAAhvB,EAAM,iBAAAE,EAAAnS,EAAAuoB,GAAyF,MAAlE,UAAAtW,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAivB,2BAAA/uB,GAAgClG,KAAAowB,sBAAApqB,EAAAjS,EAAAuoB,OAA0C4Y,eAAA,SAAAlvB,EACreE,GAAG,MAAAlG,MAAAqR,IAAArL,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,EAAA/M,GAAAlG,KAAA20B,SAA4CQ,QAAA,WAAoB,GAAAnvB,GAAA,GAAA2G,GAAA+iB,UAA2B,iBAAAxpB,GAAwC,MAArBF,GAAAgqB,aAAAhwB,MAAqBA,KAAAg1B,kBAAAhvB,EAAAE,OAAoCmgB,OAAA,SAAArgB,GAAsB,MAAAA,GAAA2pB,KAAA3vB,KAAA2vB,IAAA3pB,EAAA4pB,KAAA5vB,KAAA4vB,IAAA5pB,EAAA6pB,KAAA7vB,KAAA6vB,IAAA7pB,EAAA2uB,SAAA30B,KAAA20B,QAA8ErO,UAAA,SAAAtgB,GAAwH,MAAjGhG,MAAA2vB,GAAA3pB,EAAA,GAAahG,KAAA4vB,GAAA5pB,EAAA,GAAahG,KAAA6vB,GAAA7pB,EAAA,GAAa,SAAAA,EAAA,KAAAhG,KAAA20B,OAAA3uB,EAAA,IAAkChG,KAAA+vB,mBAAwB/vB,MAAYumB,QAAA,SAAAvgB,EAAAE,GAC/X,MADsZ,UAAAF,UAAmB,SAAAE,MAAA,GAAkBF,EAAAE,GAAAlG,KAAA2vB,GAAa3pB,EAAAE,EAAA,GAAAlG,KAAA4vB,GAAe5pB,EAAAE,EAAA,GAAAlG,KAAA6vB,GAC1e7pB,EAAAE,EAAA,GAAAlG,KAAA20B,OAAmB3uB,GAASovB,UAAA,SAAApvB,GAAuB,MAAAA,KAAAqL,IAAArR,KAAA2vB,GAAA3vB,KAAA4vB,GAAA5vB,KAAA6vB,IAAA,GAAAljB,GAAA8G,QAAAzT,KAAA2vB,GAAA3vB,KAAA4vB,GAAA5vB,KAAA6vB,KAAmFmB,SAAA,SAAAhrB,GAA8C,MAAxBhG,MAAA+vB,iBAAA/pB,EAAwBhG,MAAY+vB,iBAAA,cAAgCpjB,EAAA0oB,MAAA,SAAArvB,EAAAE,GAA0BlG,KAAA6T,MAAA,SAAA7N,IAAA,GAAA2G,GAAA8G,QAA0CzT,KAAAs1B,IAAA,SAAApvB,IAAA,GAAAyG,GAAA8G,SACpS9G,EAAA0oB,MAAA3tB,WAAuB7S,YAAA8X,EAAA0oB,MAAAhkB,IAAA,SAAArL,EAAAE,GAA8E,MAApClG,MAAA6T,MAAA2Q,KAAAxe,GAAmBhG,KAAAs1B,IAAA9Q,KAAAte,GAAiBlG,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAAgE,MAA9ChG,MAAA6T,MAAA2Q,KAAAxe,EAAA6N,OAAyB7T,KAAAs1B,IAAA9Q,KAAAxe,EAAAsvB,KAAqBt1B,MAAYhF,OAAA,SAAAgL,GAAoB,OAAAA,GAAA,GAAA2G,GAAA8G,SAAAge,WAAAzxB,KAAA6T,MAAA7T,KAAAs1B,KAAA36B,eAAA,KAAgF46B,MAAA,SAAAvvB,GAAmB,OAAAA,GAAA,GAAA2G,GAAA8G,SAAAke,WAAA3xB,KAAAs1B,IAAAt1B,KAAA6T,QAA6D2hB,WAAA,WAAuB,MAAAx1B,MAAA6T,MAAA4e,kBAAAzyB,KAAAs1B,MAA8CG,SAAA,WAAqB,MAAAz1B,MAAA6T,MAAA2e,WAAAxyB,KAAAs1B,MACrgBI,GAAA,SAAA1vB,EAAAE,GAAiB,GAAAnS,GAAAmS,GAAA,GAAAyG,GAAA8G,OAA2B,OAAAzT,MAAAu1B,MAAAxhC,GAAA4G,eAAAqL,GAAAmJ,IAAAnP,KAAA6T,QAAuD8hB,6BAAA,WAAyC,GAAA3vB,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,OAA4C,iBAAA1f,EAAAuoB,GAAqBtW,EAAA2rB,WAAA59B,EAAAiM,KAAA6T,OAA2B3N,EAAAyrB,WAAA3xB,KAAAs1B,IAAAt1B,KAAA6T,MAAkC,IAAA7c,GAAAkP,EAAAkV,IAAAlV,GAAAlP,EAAAkP,EAAAkV,IAAApV,GAAAhP,CAA2D,OAA/BslB,KAAAtlB,EAAA2V,EAAAnN,KAAAslB,MAAA9tB,EAAA,MAA+BA,MAAU4+B,oBAAA,SAAA5vB,EAAAE,EAAAnS,GAAuG,MAAhEiS,GAAAhG,KAAA21B,6BAAA3vB,EAAAE,GAAyCnS,KAAA,GAAA4Y,GAAA8G,QAAuBzT,KAAAu1B,MAAAxhC,GAAA4G,eAAAqL,GAAAmJ,IAAAnP,KAAA6T,QAAuDuf,aAAA,SAAAptB,GACpd,MAD8ehG,MAAA6T,MAAAuf,aAAAptB,GACvgBhG,KAAAs1B,IAAAlC,aAAAptB,GAAyBhG,MAAYqmB,OAAA,SAAArgB,GAAoB,MAAAA,GAAA6N,MAAAwS,OAAArmB,KAAA6T,QAAA7N,EAAAsvB,IAAAjP,OAAArmB,KAAAs1B,OAA4D3oB,EAAAkpB,KAAA,SAAA7vB,EAAAE,GAAyBlG,KAAAya,IAAA,SAAAzU,IAAA,GAAA2G,GAAAykB,QAAAjmB,SAA2DnL,KAAAP,IAAA,SAAAyG,IAAA,GAAAyG,GAAAykB,WAAAjmB,iBACzMwB,EAAAkpB,KAAAnuB,WAAsB7S,YAAA8X,EAAAkpB,KAAAxkB,IAAA,SAAArL,EAAAE,GAA2E,MAAlClG,MAAAya,IAAA+J,KAAAxe,GAAiBhG,KAAAP,IAAA+kB,KAAAte,GAAiBlG,MAAY81B,cAAA,SAAA9vB,GAA2BhG,KAAA+1B,WAAiB,QAAA7vB,GAAA,EAAAnS,EAAAiS,EAAAxP,OAAuB0P,EAAAnS,EAAImS,IAAAlG,KAAAg2B,cAAAhwB,EAAAE,GAA6B,OAAAlG,OAAYi2B,qBAAA,WAAiC,GAAAjwB,GAAA,GAAA2G,GAAAykB,OAAwB,iBAAAlrB,EAAAnS,GAAqB,GAAAuoB,GAAAtW,EAAAwe,KAAAzwB,GAAA4G,eAAA,GAAmF,OAAhDqF,MAAAya,IAAA+J,KAAAte,GAAA0O,IAAA0H,GAAwBtc,KAAAP,IAAA+kB,KAAAte,GAAAiJ,IAAAmN,GAAwBtc,SAAarJ,MAAA,WAAoB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GACvc,MADydhG,MAAAya,IAAA+J,KAAAxe,EAAAyU,KAAqBza,KAAAP,IAAA+kB,KAAAxe,EAAAvG,KAC9eO,MAAY+1B,UAAA,WAAqF,MAA/D/1B,MAAAya,IAAA1b,EAAAiB,KAAAya,IAAAzH,EAAA7H,IAA+BnL,KAAAP,IAAAV,EAAAiB,KAAAP,IAAAuT,IAAA7H,KAAgCnL,MAAYk2B,QAAA,WAAoB,MAAAl2B,MAAAP,IAAAV,EAAAiB,KAAAya,IAAA1b,GAAAiB,KAAAP,IAAAuT,EAAAhT,KAAAya,IAAAzH,GAAoDhY,OAAA,SAAAgL,GAAoB,OAAAA,GAAA,GAAA2G,GAAAykB,SAAAK,WAAAzxB,KAAAya,IAAAza,KAAAP,KAAA9E,eAAA,KAA8E2V,KAAA,SAAAtK,GAAkB,OAAAA,GAAA,GAAA2G,GAAAykB,SAAAO,WAAA3xB,KAAAP,IAAAO,KAAAya,MAA2Dub,cAAA,SAAAhwB,GAA2D,MAAhChG,MAAAya,QAAAzU,GAAgBhG,KAAAP,QAAAuG,GAAgBhG,MAAYm2B,eAAA,SAAAnwB,GAA4D,MAAhChG,MAAAya,IAAA7F,IAAA5O,GAAgBhG,KAAAP,IAAA0P,IAAAnJ,GAAgBhG,MAAYo2B,eAAA,SAAApwB,GAC7d,MADyfhG,MAAAya,IAAAyL,WAAAlgB,GAC/gBhG,KAAAP,IAAAymB,UAAAlgB,GAAsBhG,MAAYq2B,cAAA,SAAArwB,GAA2B,QAAAA,EAAAjH,EAAAiB,KAAAya,IAAA1b,GAAAiH,EAAAjH,EAAAiB,KAAAP,IAAAV,GAAAiH,EAAAgN,EAAAhT,KAAAya,IAAAzH,GAAAhN,EAAAgN,EAAAhT,KAAAP,IAAAuT,IAA4EsjB,YAAA,SAAAtwB,GAAyB,MAAAhG,MAAAya,IAAA1b,GAAAiH,EAAAyU,IAAA1b,GAAAiH,EAAAvG,IAAAV,GAAAiB,KAAAP,IAAAV,GAAAiB,KAAAya,IAAAzH,GAAAhN,EAAAyU,IAAAzH,GAAAhN,EAAAvG,IAAAuT,GAAAhT,KAAAP,IAAAuT,GAAgGujB,aAAA,SAAAvwB,EAAAE,GAA4B,OAAAA,GAAA,GAAAyG,GAAAykB,SAAA/f,KAAArL,EAAAjH,EAAAiB,KAAAya,IAAA1b,IAAAiB,KAAAP,IAAAV,EAAAiB,KAAAya,IAAA1b,IAAAiH,EAAAgN,EAAAhT,KAAAya,IAAAzH,IAAAhT,KAAAP,IAAAuT,EAAAhT,KAAAya,IAAAzH,KAAoHwjB,cAAA,SAAAxwB,GAA2B,QAAAA,EAAAvG,IAAAV,EAAAiB,KAAAya,IAAA1b,GAAAiH,EAAAyU,IAAA1b,EAAAiB,KAAAP,IAAAV,GAAAiH,EAAAvG,IAAAuT,EAAAhT,KAAAya,IAAAzH,GAAAhN,EAAAyU,IAAAzH,EAC7ahT,KAAAP,IAAAuT,IAAiByjB,WAAA,SAAAzwB,EAAAE,GAA0B,OAAAA,GAAA,GAAAyG,GAAAykB,SAAA5M,KAAAxe,GAAA8e,MAAA9kB,KAAAya,IAAAza,KAAAP,MAA8Di3B,gBAAA,WAA4B,GAAA1wB,GAAA,GAAA2G,GAAAykB,OAAwB,iBAAAlrB,GAAmB,MAAAF,GAAAwe,KAAAte,GAAA4e,MAAA9kB,KAAAya,IAAAza,KAAAP,KAAAmV,IAAA1O,GAAA1P,aAA2DmgC,UAAA,SAAA3wB,GAAiE,MAAxChG,MAAAya,IAAAhb,IAAAuG,EAAAyU,KAAoBza,KAAAP,IAAAgb,IAAAzU,EAAAvG,KAAoBO,MAAY42B,MAAA,SAAA5wB,GAA2D,MAAxChG,MAAAya,QAAAzU,EAAAyU,KAAoBza,KAAAP,QAAAuG,EAAAvG,KAAoBO,MAAYyU,UAAA,SAAAzO,GAAuD,MAAhChG,MAAAya,IAAAtL,IAAAnJ,GAAgBhG,KAAAP,IAAA0P,IAAAnJ,GAAgBhG,MAAYqmB,OAAA,SAAArgB,GAAoB,MAAAA,GAAAyU,IAAA4L,OAAArmB,KAAAya,MACtdzU,EAAAvG,IAAA4mB,OAAArmB,KAAAP,OAAyBkN,EAAAkqB,KAAA,SAAA7wB,EAAAE,GAAyBlG,KAAAya,IAAA,SAAAzU,IAAA,GAAA2G,GAAA8G,QAAAtI,aAAoEnL,KAAAP,IAAA,SAAAyG,IAAA,GAAAyG,GAAA8G,WAAAtI,0BACtHwB,EAAAkqB,KAAAnvB,WAAsB7S,YAAA8X,EAAAkqB,KAAAxlB,IAAA,SAAArL,EAAAE,GAA2E,MAAlClG,MAAAya,IAAA+J,KAAAxe,GAAiBhG,KAAAP,IAAA+kB,KAAAte,GAAiBlG,MAAY82B,aAAA,SAAA9wB,GAA0B,OAAAE,GAAAiF,IAAApX,EAAAoX,IAAAmR,EAAAnR,IAAAnU,IAAAmU,KAAA7B,IAAA6B,KAAAoZ,IAAApZ,KAAA0G,EAAA,EAAAiU,EAAA9f,EAAAxP,OAA4Fqb,EAAAiU,EAAIjU,GAAA,GAAM,GAAAgU,GAAA7f,EAAA6L,GAAAqf,EAAAlrB,EAAA6L,EAAA,GAAA7d,EAAAgS,EAAA6L,EAAA,EAA6BgU,GAAA3f,MAAA2f,GAAWqL,EAAAn9B,MAAAm9B,GAAWl9B,EAAAsoB,MAAAtoB,GAAW6xB,EAAA7uB,MAAA6uB,GAAWqL,EAAA5nB,MAAA4nB,GAAWl9B,EAAAuwB,MAAAvwB,GAAWgM,KAAAya,IAAApJ,IAAAnL,EAAAnS,EAAAuoB,GAAoBtc,KAAAP,IAAA4R,IAAAra,EAAAsS,EAAAib,IAAoBuR,cAAA,SAAA9vB,GAA2BhG,KAAA+1B,WAAiB,QAAA7vB,GAAA,EAAAnS,EAAAiS,EAAAxP,OAAuB0P,EAAAnS,EAAImS,IAAAlG,KAAAg2B,cAAAhwB,EAAAE,GAA6B,OAAAlG,OAAYi2B,qBAAA,WAAiC,GAAAjwB,GACrgB,GAAA2G,GAAA8G,OAAkB,iBAAAvN,EAAAnS,GAAqB,GAAAuoB,GAAAtW,EAAAwe,KAAAzwB,GAAA4G,eAAA,GAAmF,OAAhDqF,MAAAya,IAAA+J,KAAAte,GAAA0O,IAAA0H,GAAwBtc,KAAAP,IAAA+kB,KAAAte,GAAAiJ,IAAAmN,GAAwBtc,SAAa+2B,cAAA,WAA4B,GAAA/wB,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,GAAmB,GAAAnS,GAAAiM,IAC1D,OADqEkG,GAAA8wB,mBAAA,GAAwBh3B,KAAA+1B,YAAiB7vB,EAAA+wB,SAAA,SAAA/wB,GAAuB,GAAAlP,GAAAkP,EAAAgxB,QAAiB,aAAAlgC,EAAA,GAAAA,YAAA2V,GAAA4M,SAAA,OAAAjQ,GAAAtS,EAAAwiB,SAAAxiB,EAAA,EAAAutB,EAAAjb,EAAA9S,OAAiFQ,EAAAutB,EAAIvtB,IAAAgP,EAAAwe,KAAAlb,EAAAtS,IAAAgP,EAAAotB,aAAAltB,EAAAwtB,aAAA3/B,EAAAiiC,cAAAhwB,OAAkE,IAAAhP,YAAA2V,GAAAwqB,gBAAA,SACjcngC,EAAAogC,WAAAp+B,SAAA,IAAAsQ,EAAAtS,EAAAogC,WAAAp+B,SAAA65B,MAAA77B,EAAA,EAAAutB,EAAAjb,EAAA9S,OAAuEQ,EAAAutB,EAAIvtB,GAAA,EAAAgP,EAAAsgB,UAAAhd,EAAAtS,GAAAgP,EAAAotB,aAAAltB,EAAAwtB,aAAA3/B,EAAAiiC,cAAAhwB,KAAyEhG,SAAarJ,MAAA,WAAoB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAA4D,MAA1ChG,MAAAya,IAAA+J,KAAAxe,EAAAyU,KAAqBza,KAAAP,IAAA+kB,KAAAxe,EAAAvG,KAAqBO,MAAY+1B,UAAA,WAA2G,MAArF/1B,MAAAya,IAAA1b,EAAAiB,KAAAya,IAAAzH,EAAAhT,KAAAya,IAAAxH,EAAA9H,IAA0CnL,KAAAP,IAAAV,EAAAiB,KAAAP,IAAAuT,EAAAhT,KAAAP,IAAAwT,IAAA9H,KAA2CnL,MAAYk2B,QAAA,WAAoB,MAAAl2B,MAAAP,IAAAV,EAAAiB,KAAAya,IAAA1b,GAAAiB,KAAAP,IAAAuT,EAAAhT,KAAAya,IAAAzH,GAAAhT,KAAAP,IAAAwT,EAAAjT,KAAAya,IAAAxH,GAChbjY,OAAA,SAAAgL,GAAmB,OAAAA,GAAA,GAAA2G,GAAA8G,SAAAge,WAAAzxB,KAAAya,IAAAza,KAAAP,KAAA9E,eAAA,KAA8E2V,KAAA,SAAAtK,GAAkB,OAAAA,GAAA,GAAA2G,GAAA8G,SAAAke,WAAA3xB,KAAAP,IAAAO,KAAAya,MAA2Dub,cAAA,SAAAhwB,GAA2D,MAAhChG,MAAAya,QAAAzU,GAAgBhG,KAAAP,QAAAuG,GAAgBhG,MAAYm2B,eAAA,SAAAnwB,GAA4D,MAAhChG,MAAAya,IAAA7F,IAAA5O,GAAgBhG,KAAAP,IAAA0P,IAAAnJ,GAAgBhG,MAAYo2B,eAAA,SAAApwB,GAAyE,MAA7ChG,MAAAya,IAAAyL,WAAAlgB,GAAuBhG,KAAAP,IAAAymB,UAAAlgB,GAAsBhG,MAAYq2B,cAAA,SAAArwB,GAA2B,QAAAA,EAAAjH,EAAAiB,KAAAya,IAAA1b,GAAAiH,EAAAjH,EAAAiB,KAAAP,IAAAV,GAAAiH,EAAAgN,EAAAhT,KAAAya,IAAAzH,GAAAhN,EAAAgN,EAAAhT,KAAAP,IAAAuT,GAAAhN,EAAAiN,EAC7ajT,KAAAya,IAAAxH,GAAAjN,EAAAiN,EAAAjT,KAAAP,IAAAwT,IAAiCqjB,YAAA,SAAAtwB,GAAyB,MAAAhG,MAAAya,IAAA1b,GAAAiH,EAAAyU,IAAA1b,GAAAiH,EAAAvG,IAAAV,GAAAiB,KAAAP,IAAAV,GAAAiB,KAAAya,IAAAzH,GAAAhN,EAAAyU,IAAAzH,GAAAhN,EAAAvG,IAAAuT,GAAAhT,KAAAP,IAAAuT,GAAAhT,KAAAya,IAAAxH,GAAAjN,EAAAyU,IAAAxH,GAAAjN,EAAAvG,IAAAwT,GAAAjT,KAAAP,IAAAwT,GAA0IsjB,aAAA,SAAAvwB,EAAAE,GAA4B,OAAAA,GAAA,GAAAyG,GAAA8G,SAAApC,KAAArL,EAAAjH,EAAAiB,KAAAya,IAAA1b,IAAAiB,KAAAP,IAAAV,EAAAiB,KAAAya,IAAA1b,IAAAiH,EAAAgN,EAAAhT,KAAAya,IAAAzH,IAAAhT,KAAAP,IAAAuT,EAAAhT,KAAAya,IAAAzH,IAAAhN,EAAAiN,EAAAjT,KAAAya,IAAAxH,IAAAjT,KAAAP,IAAAwT,EAAAjT,KAAAya,IAAAxH,KAA6JujB,cAAA,SAAAxwB,GAA2B,QAAAA,EAAAvG,IAAAV,EAAAiB,KAAAya,IAAA1b,GAAAiH,EAAAyU,IAAA1b,EAAAiB,KAAAP,IAAAV,GAAAiH,EAAAvG,IAAAuT,EAAAhT,KAAAya,IAAAzH,GAAAhN,EAAAyU,IAAAzH,EAAAhT,KAAAP,IAAAuT,GAAAhN,EAAAvG,IAAAwT,EACxZjT,KAAAya,IAAAxH,GAAAjN,EAAAyU,IAAAxH,EAAAjT,KAAAP,IAAAwT,IAAqCokB,iBAAA,WAA6B,GAAArxB,EAAM,iBAAAE,GAAiF,MAA9D,UAAAF,MAAA,GAAA2G,GAAA8G,SAAkCzT,KAAAy2B,WAAAvwB,EAAAlL,OAAAgL,GAA4BA,EAAAysB,kBAAAvsB,EAAAlL,SAAAkL,EAAAiuB,OAAAjuB,EAAAiuB,WAAyDmD,gBAAA,SAAAtxB,GAA+B,GAAAE,GAAAnS,CACxJ,OADgK,GAAAiS,EAAAuxB,OAAAx4B,GAAAmH,EAAAF,EAAAuxB,OAAAx4B,EAAAiB,KAAAya,IAAA1b,EAAAhL,EAAAiS,EAAAuxB,OAAAx4B,EAAAiB,KAAAP,IAAAV,IAAAmH,EAAAF,EAAAuxB,OAAAx4B,EAAAiB,KAAAP,IAAAV,EAAAhL,EAAAiS,EAAAuxB,OAAAx4B,EAAAiB,KAAAya,IAAA1b,GAAiH,EAAAiH,EAAAuxB,OAAAvkB,GAAA9M,GAAAF,EAAAuxB,OAAAvkB,EAAAhT,KAAAya,IAAAzH,EAAAjf,GAAAiS,EAAAuxB,OAAAvkB,EAAAhT,KAAAP,IAAAuT,IAAA9M,GAAAF,EAAAuxB,OAAAvkB,EAAAhT,KAAAP,IAAAuT,EAAAjf,GAAAiS,EAAAuxB,OAAAvkB,EAAAhT,KAAAya,IAAAzH,GAAqH,EAAAhN,EAAAuxB,OAAAtkB,GAAA/M,GAAAF,EAAAuxB,OAAAtkB,EAC/djT,KAAAya,IAAAxH,EAAAlf,GAAAiS,EAAAuxB,OAAAtkB,EAAAjT,KAAAP,IAAAwT,IAAA/M,GAAAF,EAAAuxB,OAAAtkB,EAAAjT,KAAAP,IAAAwT,EAAAlf,GAAAiS,EAAAuxB,OAAAtkB,EAAAjT,KAAAya,IAAAxH,GAAyF/M,GAAAF,EAAAwxB,UAAAzjC,GAAAiS,EAAAwxB,UAAoCf,WAAA,SAAAzwB,EAAAE,GAA0B,OAAAA,GAAA,GAAAyG,GAAA8G,SAAA+Q,KAAAxe,GAAA8e,MAAA9kB,KAAAya,IAAAza,KAAAP,MAA8Di3B,gBAAA,WAA4B,GAAA1wB,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,GAAmB,MAAAF,GAAAwe,KAAAte,GAAA4e,MAAA9kB,KAAAya,IAAAza,KAAAP,KAAAmV,IAAA1O,GAAA1P,aAA2DihC,kBAAA,WAAgC,GAAAzxB,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,GAAkG,MAA/EA,MAAA,GAAAyG,GAAA+qB,OAAsBxxB,EAAAlL,OAAAgF,KAAAhF,SAAuBkL,EAAAiuB,OAAA,GAAAn0B,KAAAsQ,KAAAtK,GAAAxP,SAAkC0P,MACjfywB,UAAA,SAAA3wB,GAA+F,MAAzEhG,MAAAya,IAAAhb,IAAAuG,EAAAyU,KAAoBza,KAAAP,IAAAgb,IAAAzU,EAAAvG,KAAoBO,KAAAk2B,WAAAl2B,KAAA+1B,YAAiC/1B,MAAY42B,MAAA,SAAA5wB,GAA2D,MAAxChG,MAAAya,QAAAzU,EAAAyU,KAAoBza,KAAAP,QAAAuG,EAAAvG,KAAoBO,MAAYozB,aAAA,WAAyB,GAAAptB,IAAA,GAAA2G,GAAA8G,QAAA,GAAA9G,GAAA8G,QAAA,GAAA9G,GAAA8G,QAAA,GAAA9G,GAAA8G,QAAA,GAAA9G,GAAA8G,QAAA,GAAA9G,GAAA8G,QAAA,GAAA9G,GAAA8G,QAAA,GAAA9G,GAAA8G,QAAwJ,iBAAAvN,GAAmB,MAAAlG,MAAAk2B,UAAAl2B,MAA8BgG,EAAA,GAAAqL,IAAArR,KAAAya,IAAA1b,EAAAiB,KAAAya,IAAAzH,EAAAhT,KAAAya,IAAAxH,GAAAmgB,aAAAltB,GAA2DF,EAAA,GAAAqL,IAAArR,KAAAya,IAAA1b,EAAAiB,KAAAya,IAAAzH,EAAAhT,KAAAP,IAAAwT,GAAAmgB,aAAAltB,GAC/cF,EAAA,GAAAqL,IAAArR,KAAAya,IAAA1b,EAAAiB,KAAAP,IAAAuT,EAAAhT,KAAAya,IAAAxH,GAAAmgB,aAAAltB,GAA2DF,EAAA,GAAAqL,IAAArR,KAAAya,IAAA1b,EAAAiB,KAAAP,IAAAuT,EAAAhT,KAAAP,IAAAwT,GAAAmgB,aAAAltB,GAA2DF,EAAA,GAAAqL,IAAArR,KAAAP,IAAAV,EAAAiB,KAAAya,IAAAzH,EAAAhT,KAAAya,IAAAxH,GAAAmgB,aAAAltB,GAA2DF,EAAA,GAAAqL,IAAArR,KAAAP,IAAAV,EAAAiB,KAAAya,IAAAzH,EAAAhT,KAAAP,IAAAwT,GAAAmgB,aAAAltB,GAA2DF,EAAA,GAAAqL,IAAArR,KAAAP,IAAAV,EAAAiB,KAAAP,IAAAuT,EAAAhT,KAAAya,IAAAxH,GAAAmgB,aAAAltB,GAA2DF,EAAA,GAAAqL,IAAArR,KAAAP,IAAAV,EAAAiB,KAAAP,IAAAuT,EAAAhT,KAAAP,IAAAwT,GAAAmgB,aAAAltB,GAA2DlG,KAAA81B,cAAA9vB,GAAsBhG,UAAayU,UAAA,SAAAzO,GAAyD,MAAhChG,MAAAya,IAAAtL,IAAAnJ,GAAgBhG,KAAAP,IAAA0P,IAAAnJ,GAAgBhG,MAAYqmB,OAAA,SAAArgB,GAAoB,MAAAA,GAAAyU,IAAA4L,OAAArmB,KAAAya,MAC9dzU,EAAAvG,IAAA4mB,OAAArmB,KAAAP,OAAyBkN,EAAAgrB,QAAA,WAAyB33B,KAAAqwB,SAAA,GAAAuH,eAAA,oBAAoD,EAAAn8B,UAAAjF,QAAAlB,QAAAC,MAAA,kFACtGoX,EAAAgrB,QAAAjwB,WAAyB7S,YAAA8X,EAAAgrB,QAAAtmB,IAAA,SAAArL,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,GAA0D,GAAAD,GAAA7lB,KAAAqwB,QAAmF,OAA/DxK,GAAA,GAAA7f,EAAO6f,EAAA,GAAAvJ,EAAOuJ,EAAA,GAAAtB,EAAOsB,EAAA,GAAA3f,EAAO2f,EAAA,GAAA7uB,EAAO6uB,EAAA,GAAAhU,EAAOgU,EAAA,GAAA9xB,EAAO8xB,EAAA,GAAAvc,EAAOuc,EAAA,GAAAC,EAAO9lB,MAAY63B,SAAA,WAAiD,MAA5B73B,MAAAqR,IAAA,mBAA4BrR,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAAyxB,UAAAtmB,KAAAqwB,WAAsD7L,KAAA,SAAAxe,GAAsF,MAApEA,KAAAqqB,SAAarwB,KAAAqR,IAAArL,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAuDhG,MAAY83B,eAAA,SAAA9xB,GACzZ,MADqbA,KAAAqqB,SAAarwB,KAAAqR,IAAArL,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAClchG,MAAY+3B,oBAAA,WAAgC,GAAA/xB,EAAM,iBAAAE,EAAAnS,EAAAuoB,GAAuB,SAAAtW,MAAA,GAAA2G,GAAA8G,SAAkC,SAAA1f,MAAA,GAAkB,SAAAuoB,MAAApW,EAAA1P,OAAyB,QAAAQ,GAAA,EAAYA,EAAAslB,EAAItlB,GAAA,EAAAjD,GAAA,EAAAiS,EAAAsgB,UAAApgB,EAAAnS,GAAAiS,EAAAmtB,aAAAnzB,MAAAgG,EAAAugB,QAAArgB,EAAAnS,EAA+D,OAAAmS,OAAU8xB,cAAA,WAA4B,GAAAhyB,EAAM,iBAAAE,EAAAnS,EAAAuoB,GAAuB,SAAAtW,MAAA,GAAA2G,GAAA8G,SAAkC,SAAA1f,MAAA,GAAkB,SAAAuoB,MAAApW,EAAA1P,OAAA0P,EAAA0sB,SAAoC,QAAA57B,GAAA,EAAYA,EAAAslB,EAAItlB,IAAAjD,IAAAiS,EAAAjH,EAAAmH,EAAA+xB,KAAAlkC,GAAAiS,EAAAgN,EAAA9M,EAAAgyB,KAAAnkC,GAAAiS,EAAAiN,EAAA/M,EAAAiyB,KAAApkC,GAAAiS,EAAAmtB,aAAAnzB,MAAAkG,EAAAkyB,OAAApyB,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,EAA6F,OAAA/M,OAC7evL,eAAA,SAAAqL,GAA2B,GAAAE,GAAAlG,KAAAqwB,QAA4F,OAAxEnqB,GAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQhG,MAAYq4B,YAAA,WAAwB,GAAAryB,GAAAhG,KAAAqwB,SAAAnqB,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAAAtW,EAAA,GAAAhP,EAAAgP,EAAA,GAAAsD,EAAAtD,EAAA,GAAAue,EAAAve,EAAA,GAAA6L,EAAA7L,EAAA,GAAA8f,EAAA9f,EAAA,GAAAA,IAAA,EAAmF,OAAAE,GAAAoD,EAAAtD,EAAAE,EAAAqe,EAAAuB,EAAA/xB,EAAAiD,EAAAgP,EAAAjS,EAAAwwB,EAAA1S,EAAAyK,EAAAtlB,EAAA8uB,EAAAxJ,EAAAhT,EAAAuI,GAA2C4hB,WAAA,SAAAztB,EAAAE,GAA0BF,YAAA2G,GAAA2mB,SAAAh+B,QAAAC,MAAA,+DAA0G,IAAAxB,GAAAiS,EAAAqqB,SAAA/T,EAAAtc,KAAAqwB,SAAAr5B,EAAAjD,EAAA,GAAAuV,EAAAvV,EAAA,GAAAwwB,EAAAxwB,EAAA,GAAA8d,EAAA9d,EAAA,GAAA+xB,EAAA/xB,EAAA,GAAA8xB,EAAA9xB,EAAA,GAAAm9B,EAAAn9B,EAAA,GAAAC,EAAAD,EAAA,GAC7ZA,IAAA,GAAAD,EAAAC,EAAA+xB,EAAAD,EAAA7xB,EAAAm9B,EAAAtL,EAAAqL,EAAAn9B,EAAA8d,EAAAC,EAAA9d,EAAA6d,EAAAiU,EAAAoL,EAAAtL,EAAA5uB,EAAAlD,EAAAwV,EAAA6nB,EAAA5M,EAAAzS,CAAmD,QAAA8T,EAAA,CAAU,GAAA1f,EAAA,KAAApE,OAAA,oEAAwK,OAAlFxM,SAAA0vB,KAAA,qEAAkFhlB,KAAA63B,WAA8J,MAAvIjS,GAAA,EAAAA,EAAMtJ,EAAA,GAAAxoB,EAAA8xB,EAAStJ,EAAA,IAAAiI,EAAAvwB,EAAAD,EAAAuV,GAAAsc,EAAiBtJ,EAAA,IAAAuJ,EAAAvc,EAAAib,EAAAuB,GAAAF,EAAiBtJ,EAAA,GAAA6U,EAAAvL,EAAStJ,EAAA,IAAAvoB,EAAAiD,EAAAutB,EAAA2M,GAAAtL,EAAiBtJ,EAAA,IAAAiI,EAAA1S,EAAAgU,EAAA7uB,GAAA4uB,EAAiBtJ,EAAA,GAAAxK,EAAA8T,EAAStJ,EAAA,IAAAhT,EAAA4nB,EAAAl9B,EAAAgD,GAAA4uB,EAAiBtJ,EAAA,IAAAwJ,EAAA9uB,EAAAsS,EAAAuI,GAAA+T,EAAiB5lB,MAAYs4B,UAAA,WAAsB,GAAAtyB,GAAAE,EAAAlG,KAAAqwB,QACzZ,OAD+arqB,GAAAE,EAAA,GAAOA,EAAA,GAAAA,EAAA,GAAUA,EAAA,GAAAF,EAAOA,EAAAE,EAAA,GAAOA,EAAA,GAAAA,EAAA,GAAUA,EAAA,GAAAF,EAAOA,EAAAE,EAAA,GAAOA,EAAA,GAClfA,EAAA,GAAKA,EAAA,GAAAF,EAAOhG,MAAYu4B,qBAAA,SAAAvyB,EAAAE,GAAoI,MAAhG5Q,SAAA0vB,KAAA,mFAAgGhlB,KAAAumB,QAAAvgB,EAAAE,IAAyBsyB,gBAAA,SAAAxyB,GAA6B,MAAAhG,MAAA83B,eAAA9xB,GAAAytB,WAAAzzB,MAAAs4B,aAA2DG,mBAAA,SAAAzyB,GAAgC,GAAAE,GAAAlG,KAAAqwB,QAA8G,OAA1FrqB,GAAA,GAAAE,EAAA,GAAUF,EAAA,GAAAE,EAAA,GAAUF,EAAA,GAAAE,EAAA,GAAUF,EAAA,GAAAE,EAAA,GAAUF,EAAA,GAAAE,EAAA,GAAUF,EAAA,GAAAE,EAAA,GAAUF,EAAA,GAAAE,EAAA,GAAUF,EAAA,GAAAE,EAAA,GAAUF,EAAA,GAAAE,EAAA,GAAUlG,MAAYsmB,UAAA,SAAAtgB,GAA4C,MAArBhG,MAAAqwB,SAAAhf,IAAArL,GAAqBhG,MAAYumB,QAAA,SAAAvgB,EAAAE,GAAuB,SACtfF,UAAU,SAAAE,MAAA,EAAkB,IAAAnS,GAAAiM,KAAAqwB,QAA8H,OAA1GrqB,GAAAE,GAAAnS,EAAA,GAAUiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,IAAW2G,EAAA2mB,QAAA,WAAyBtzB,KAAAqwB,SAAA,GAAAuH,eAAA,kCAAkE,EAAAn8B,UAAAjF,QAAAlB,QAAAC,MAAA,kFAChQoX,EAAA2mB,QAAA5rB,WAAyB7S,YAAA8X,EAAA2mB,QAAAjiB,IAAA,SAAArL,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,EAAAqL,EAAAl9B,EAAAF,EAAAq9B,EAAArf,EAAA8T,GAAwE,GAAA8S,GAAA14B,KAAAqwB,QAA0I,OAAtHqI,GAAA,GAAA1yB,EAAO0yB,EAAA,GAAAxyB,EAAOwyB,EAAA,GAAA3kC,EAAO2kC,EAAA,IAAApc,EAAQoc,EAAA,GAAA1hC,EAAO0hC,EAAA,GAAApvB,EAAOovB,EAAA,GAAAnU,EAAOmU,EAAA,IAAA7mB,EAAQ6mB,EAAA,GAAA5S,EAAO4S,EAAA,GAAA7S,EAAO6S,EAAA,IAAAxH,EAAQwH,EAAA,IAAA1kC,EAAQ0kC,EAAA,GAAA5kC,EAAO4kC,EAAA,GAAAvH,EAAOuH,EAAA,IAAA5mB,EAAQ4mB,EAAA,IAAA9S,EAAQ5lB,MAAY63B,SAAA,WAA+D,MAA1C73B,MAAAqR,IAAA,iCAA0CrR,MAAYrJ,MAAA,WAAkB,UAAAgW,GAAA2mB,SAAAhN,UAAAtmB,KAAAqwB,WAAmD7L,KAAA,SAAAxe,GAAgD,MAA9BhG,MAAAqwB,SAAAhf,IAAArL,EAAAqqB,UAA8BrwB,MAAY24B,aAAA,SAAA3yB,GAA0B,GAAAE,GAAAlG,KAAAqwB,QACzb,OAD6crqB,KAAAqqB,SACjfnqB,EAAA,IAAAF,EAAA,IAAYE,EAAA,IAAAF,EAAA,IAAYE,EAAA,IAAAF,EAAA,IAAYhG,MAAY44B,aAAA,SAAA5yB,EAAAE,EAAAnS,GAAwH,MAA1FiS,GAAAquB,oBAAAr0B,KAAA,GAA8BkG,EAAAmuB,oBAAAr0B,KAAA,GAA8BjM,EAAAsgC,oBAAAr0B,KAAA,GAA8BA,MAAY64B,UAAA,SAAA7yB,EAAAE,EAAAnS,GAAuF,MAA5DiM,MAAAqR,IAAArL,EAAAjH,EAAAmH,EAAAnH,EAAAhL,EAAAgL,EAAA,EAAAiH,EAAAgN,EAAA9M,EAAA8M,EAAAjf,EAAAif,EAAA,EAAAhN,EAAAiN,EAAA/M,EAAA+M,EAAAlf,EAAAkf,EAAA,WAA4DjT,MAAY84B,gBAAA,WAA4B,GAAA9yB,EAAM,iBAAAE,GAAmB,SAAAF,MAAA,GAAA2G,GAAA8G,QAAkC,IAAA1f,GAAAiM,KAAAqwB,SAAA/T,EAAApW,EAAAmqB,SAAAr5B,EAAA,EAAAgP,EAAAquB,oBAAAnuB,EAAA,GAAA1P,SAAA8S,EAAA,EAAAtD,EAAAquB,oBAAAnuB,EAAA,GAAA1P,QACpP,OADqW0P,GAAA,EAAAF,EAAAquB,oBAAAnuB,EAC/d,GAAA1P,SAAYzC,EAAA,GAAAuoB,EAAA,GAAAtlB,EAAYjD,EAAA,GAAAuoB,EAAA,GAAAtlB,EAAYjD,EAAA,GAAAuoB,EAAA,GAAAtlB,EAAYjD,EAAA,GAAAuoB,EAAA,GAAAhT,EAAYvV,EAAA,GAAAuoB,EAAA,GAAAhT,EAAYvV,EAAA,GAAAuoB,EAAA,GAAAhT,EAAYvV,EAAA,GAAAuoB,EAAA,GAAApW,EAAYnS,EAAA,GAAAuoB,EAAA,GAAApW,EAAYnS,EAAA,IAAAuoB,EAAA,IAAApW,EAAclG,SAAa+4B,sBAAA,SAAA/yB,IAAqC,GAAAA,YAAA2G,GAAAsjB,OAAA36B,QAAAC,MAAA,uGAAqJ,IAAA2Q,GAAAlG,KAAAqwB,SAAAt8B,EAAAiS,EAAAjH,EAAAud,EAAAtW,EAAAgN,EAAAhc,EAAAgP,EAAAiN,EAAA3J,EAAA9J,KAAA2S,IAAApe,KAAAyL,KAAA4a,IAAArmB,GAAAwwB,EAAA/kB,KAAA2S,IAAAmK,KAAA9c,KAAA4a,IAAAkC,GAAAzK,EAAArS,KAAA2S,IAAAnb,KAAAwI,KAAA4a,IAAApjB,EAA0H,YAAAgP,EAAAkqB,MAAA,CAAoBlqB,EAAAsD,EAAAuI,CAAM,IAAAiU,GAAAxc,EAAAtS,EAAA6uB,EAAA9xB,EAAA8d,EAAAqf,EAAAn9B,EAAAiD,CAAsBkP,GAAA,GAAAqe,EAAA1S,EAAS3L,EAAA,IACpfqe,EAAAvtB,EAAKkP,EAAA,GAAAoW,EAAOpW,EAAA,GAAA4f,EAAAD,EAAAvJ,EAAWpW,EAAA,GAAAF,EAAAkrB,EAAA5U,EAAWpW,EAAA,IAAAnS,EAAAwwB,EAAUre,EAAA,GAAAgrB,EAAAlrB,EAAAsW,EAAWpW,EAAA,GAAA2f,EAAAC,EAAAxJ,EAAWpW,EAAA,IAAAoD,EAAAib,MAAU,QAAAve,EAAAkqB,OAAAlqB,EAAAue,EAAA1S,EAAAiU,EAAAvB,EAAAvtB,EAAA6uB,EAAAvJ,EAAAzK,EAAAqf,EAAA5U,EAAAtlB,EAAAkP,EAAA,GAAAF,EAAAkrB,EAAAn9B,EAAAmS,EAAA,GAAA2f,EAAA9xB,EAAA+xB,EAAA5f,EAAA,GAAAoD,EAAAgT,EAAApW,EAAA,GAAAoD,EAAAtS,EAAAkP,EAAA,GAAAoD,EAAAuI,EAAA3L,EAAA,IAAAnS,EAAAmS,EAAA,GAAA4f,EAAA/xB,EAAA8xB,EAAA3f,EAAA,GAAAgrB,EAAAlrB,EAAAjS,EAAAmS,EAAA,IAAAoD,EAAAib,GAAA,QAAAve,EAAAkqB,OAAAlqB,EAAAue,EAAA1S,EAAAiU,EAAAvB,EAAAvtB,EAAA6uB,EAAAvJ,EAAAzK,EAAAqf,EAAA5U,EAAAtlB,EAAAkP,EAAA,GAAAF,EAAAkrB,EAAAn9B,EAAAmS,EAAA,IAAAoD,EAAAtS,EAAAkP,EAAA,GAAA2f,EAAAC,EAAA/xB,EAAAmS,EAAA,GAAA4f,EAAAD,EAAA9xB,EAAAmS,EAAA,GAAAoD,EAAAuI,EAAA3L,EAAA,GAAAgrB,EAAAlrB,EAAAjS,EAAAmS,EAAA,IAAAoD,EAAAgT,EAAApW,EAAA,GAAAnS,EAAAmS,EAAA,IAAAoD,EAAAib,GAAA,QAAAve,EAAAkqB,OAAAlqB,EAAAsD,EAAAuI,EAAAiU,EAAAxc,EAAAtS,EAAA6uB,EAAA9xB,EAAA8d,EAAAqf,EAAAn9B,EAAAiD,EAAAkP,EAAA,GAAAqe,EAAA1S,EAAA3L,EAAA,GAAA2f,EAAAvJ,EAAAwJ,EAAA5f,EAAA,GAAAF,EAAAsW,EAAA4U,EAAAhrB,EAAA,GAAAqe,EAAAvtB,EAAAkP,EAAA,GAAAgrB,EAAA5U,EAAAtW,EAAAE,EAAA,GAAA4f,EAAAxJ,EAAAuJ,EAAA3f,EAAA,IAAAoW,EAAApW,EAAA,GAAAnS,EAAAwwB,EAAAre,EAAA,IAAAoD,EAAAib,GAAA,QAAAve,EAAAkqB,OAAAlqB,EAAAsD,EAAAib,EAAAuB,EAAAxc,EAC5EgT,EAAAuJ,EAAA9xB,EAAAwwB,EAAA2M,EAAAn9B,EAAAuoB,EAAApW,EAAA,GAAAqe,EAAA1S,EAAA3L,EAAA,GAAAgrB,EAAAlrB,EAAAhP,EAAAkP,EAAA,GAAA2f,EAAA7uB,EAAA8uB,EAAA5f,EAAA,GAAAlP,EAAAkP,EAAA,GAAAoD,EAAAuI,EAAA3L,EAAA,IAAAnS,EAAA8d,EAAA3L,EAAA,IAAAoW,EAAAzK,EAAA3L,EAAA,GAAA4f,EAAA9uB,EAAA6uB,EAAA3f,EAAA,IAAAF,EAAAkrB,EAAAl6B,GAAA,QAAAgP,EAAAkqB,QAAAlqB,EAAAsD,EAAAib,EAAAuB,EAAAxc,EAAAgT,EAAAuJ,EAAA9xB,EAAAwwB,EAAA2M,EAAAn9B,EAAAuoB,EAAApW,EAAA,GAAAqe,EAAA1S,EAAA3L,EAAA,IAAAlP,EAAAkP,EAAA,GAAAoW,EAAAzK,EAAA3L,EAAA,GAAAF,EAAAhP,EAAAk6B,EAAAhrB,EAAA,GAAAoD,EAAAuI,EAAA3L,EAAA,GAAA4f,EAAA9uB,EAAA6uB,EAAA3f,EAAA,GAAA2f,EAAA7uB,EAAA8uB,EAAA5f,EAAA,GAAAnS,EAAA8d,EAAA3L,EAAA,IAAAgrB,EAAAl6B,EAAAgP,EAAmS,OAAtDE,GAAA,KAAOA,EAAA,KAAOA,EAAA,MAAQA,EAAA,MAAQA,EAAA,MAAQA,EAAA,MAAQA,EAAA,MAAQlG,MAAYi1B,2BAAA,SAAAjvB,GAAwC,GAAAE,GAAAlG,KAAAqwB,SAAAt8B,EAAAiS,EAAAjH,EAAAud,EAAAtW,EAAAgN,EAAAhc,EAAAgP,EAAAiN,EAAA3J,EAAAtD,EAAA4L,EAAA2S,EAAAxwB,IAAA8d,EAAAyK,IAAAwJ,EAAA9uB,GAA8DgP,GAAAjS,EAAAwwB,CAAM,IAAAsB,GAAA9xB,EAAA8d,EAAA9d,IAAA+xB,EAAAoL,EAAA5U,EAAAzK,EAAAyK,IAAAwJ,EAAA9uB,IAAA8uB,EAAAvB,EAAAjb,EAAAib,EAAA1S,EAAAvI,EAAAuI,EAAAvI,IAAAwc,CAC7S,OADiW5f,GAAA,MAAAgrB,EAAAl6B,GAAakP,EAAA,GAAA2f,EAAAvc,EAASpD,EAAA,GAAAnS,EAAA8d,EAAS3L,EAAA,GAAA2f,EAC9evc,EAAEpD,EAAA,MAAAF,EAAAhP,GAAakP,EAAA,GAAAoW,EAAAiI,EAASre,EAAA,GAAAnS,EAAA8d,EAAS3L,EAAA,GAAAoW,EAAAiI,EAASre,EAAA,OAAAF,EAAAkrB,GAAchrB,EAAA,KAAOA,EAAA,KAAOA,EAAA,MAAQA,EAAA,MAAQA,EAAA,MAAQA,EAAA,MAAQA,EAAA,MAAQlG,MAAYwU,OAAA,WAAmB,GAAAxO,GAAAE,EAAAnS,CAAU,iBAAAuoB,EAAAtlB,EAAAsS,GAAuB,SAAAtD,MAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,GAAA4Y,GAAA8G,QAA0E,IAAA8Q,GAAAvkB,KAAAqwB,QACrO,OADyPt8B,GAAA49B,WAAArV,EAAAtlB,GAAAqd,YAA8B,IAAAtgB,EAAA48B,aAAA58B,EAAAkf,EAAA,GAA0BjN,EAAAwqB,aAAAlnB,EAAAvV,GAAAsgB,YAAgC,IAAArO,EAAA2qB,aAAA58B,EAAAkf,GAAA,KAAAjN,EAAAwqB,aAAAlnB,EAAAvV,GAAAsgB,aAA8DnO,EAAAsqB,aAAAz8B,EAAAiS,GAAoBue,EAAA,GAAAve,EAAAjH,EAASwlB,EAAA,GAAAre,EAAAnH,EAASwlB,EAAA,GAAAxwB,EAAAgL,EAASwlB,EAAA,GAAAve,EAAAgN,EAASuR,EAAA,GAAAre,EAAA8M,EAASuR,EAAA,GAAAxwB,EAAAif,EAASuR,EAAA,GAAAve,EAAAiN,EAC5esR,EAAA,GAAAre,EAAA+M,EAASsR,EAAA,IAAAxwB,EAAAkf,EAAUjT,SAAammB,SAAA,SAAAngB,EAAAE,GAA0B,gBAAAA,GAAA5Q,QAAA0vB,KAAA,oGAAAhlB,KAAAuzB,iBAAAvtB,EAAAE,IAAAlG,KAAAuzB,iBAAAvzB,KAAAgG,IAA8L6qB,YAAA,SAAA7qB,GAAyB,MAAAhG,MAAAuzB,iBAAAvtB,EAAAhG,OAAqCuzB,iBAAA,SAAAvtB,EAAAE,GAAgC,GAAAnS,GAAAiS,EAAAqqB,SAAA/T,EAAApW,EAAAmqB,SAAAr5B,EAAAgJ,KAAAqwB,SAAA/mB,EAAAvV,EAAA,GAAAwwB,EAAAxwB,EAAA,GAAA8d,EAAA9d,EAAA,GAAA+xB,EAAA/xB,EAAA,IAAA8xB,EAAA9xB,EAAA,GAAAm9B,EAAAn9B,EAAA,GAAAC,EAAAD,EAAA,GAAAD,EAAAC,EAAA,IAAAo9B,EAAAp9B,EAAA,GAAA+d,EAAA/d,EAAA,GAAA6xB,EAAA7xB,EAAA,IAAA2kC,EAAA3kC,EAAA,IAAAilC,EAAAjlC,EAAA,GAAAklC,EAAAllC,EAAA,GAAAmlC,EAAAnlC,EAAA,IAAAA,IAAA,IACtV6d,EAAA0K,EAAA,GAAA6c,EAAA7c,EAAA,GAAArJ,EAAAqJ,EAAA,GAAAtJ,EAAAsJ,EAAA,IAAA8c,EAAA9c,EAAA,GAAA+c,EAAA/c,EAAA,GAAAgd,EAAAhd,EAAA,GAAAid,EAAAjd,EAAA,IAAAkd,EAAAld,EAAA,GAAAmd,EAAAnd,EAAA,GAAAod,EAAApd,EAAA,IAAAqd,EAAArd,EAAA,IAAAsd,EAAAtd,EAAA,GAAAud,EAAAvd,EAAA,GAAAwd,EAAAxd,EAAA,IAAAA,IAAA,GAA4c,OAAtVtlB,GAAA,GAAAsS,EAAAsI,EAAA2S,EAAA6U,EAAAvnB,EAAA2nB,EAAA1T,EAAA8T,EAAqB5iC,EAAA,GAAAsS,EAAA6vB,EAAA5U,EAAA8U,EAAAxnB,EAAA4nB,EAAA3T,EAAA+T,EAAqB7iC,EAAA,GAAAsS,EAAA2J,EAAAsR,EAAA+U,EAAAznB,EAAA6nB,EAAA5T,EAAAgU,EAAqB9iC,EAAA,IAAAsS,EAAA0J,EAAAuR,EAAAgV,EAAA1nB,EAAA8nB,EAAA7T,EAAAxJ,EAAsBtlB,EAAA,GAAA6uB,EAAAjU,EAAAsf,EAAAkI,EAAAplC,EAAAwlC,EAAA1lC,EAAA8lC,EAAqB5iC,EAAA,GAAA6uB,EAAAsT,EAAAjI,EAAAmI,EAAArlC,EAAAylC,EAAA3lC,EAAA+lC,EAAqB7iC,EAAA,GAAA6uB,EAAA5S,EAAAie,EAAAoI,EAAAtlC,EAAA0lC,EAAA5lC,EAAAgmC,EAAqB9iC,EAAA,IAAA6uB,EAAA7S,EAAAke,EAAAqI,EAAAvlC,EAAA2lC,EAAA7lC,EAAAwoB,EAAsBtlB,EAAA,GAAAm6B,EAAAvf,EAAAE,EAAAsnB,EAAAxT,EAAA4T,EAAAd,EAAAkB,EAAqB5iC,EAAA,GAAAm6B,EAAAgI,EAAArnB,EAAAunB,EAAAzT,EAAA6T,EAAAf,EAAAmB,EAAqB7iC,EAAA,IAAAm6B,EAAAle,EAAAnB,EAAAwnB,EAAA1T,EAAA8T,EAAAhB,EAAAoB,EAAsB9iC,EAAA,IAAAm6B,EAAAne,EAAAlB,EAAAynB,EAAA3T,EAAA+T,EAAAjB,EAAApc,EAAsBtlB,EAAA,GAAAgiC,EAAApnB,EAAAqnB,EAAAG,EAAAF,EAAAM,EAAAzlC,EAAA6lC,EAAqB5iC,EAAA,GAAAgiC,EAAAG,EAAAF,EAAAI,EAAAH,EAAAO,EAAA1lC,EAAA8lC,EAAqB7iC,EAAA,IAAAgiC,EAAA/lB,EAAAgmB,EAAAK,EAAAJ,EAAAQ,EAAA3lC,EAAA+lC,EAAsB9iC,EAAA,IAAAgiC,EAAAhmB,EAAAimB,EAAAM,EAAAL,EAAAS,EAAA5lC,EAAAuoB,EAAsBtc,MAAY+5B,gBAAA,SAAA/zB,EAAAE,EACxdnS,GAAG,GAAAuoB,GAAAtc,KAAAqwB,QAA2N,OAAvMrwB,MAAAuzB,iBAAAvtB,EAAAE,GAA2BnS,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,GAAAuoB,EAAA,GAAUvoB,EAAA,IAAAuoB,EAAA,IAAYvoB,EAAA,IAAAuoB,EAAA,IAAYvoB,EAAA,IAAAuoB,EAAA,IAAYvoB,EAAA,IAAAuoB,EAAA,IAAYvoB,EAAA,IAAAuoB,EAAA,IAAYvoB,EAAA,IAAAuoB,EAAA,IAAYtc,MAAYrF,eAAA,SAAAqL,GAA4B,GAAAE,GAAAlG,KAAAqwB,QAA0J,OAAtInqB,GAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,KAAAF,EAASE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,KAAAF,EAASE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,KAAAF,EAASE,EAAA,KAAAF,EAASE,EAAA,IAAAF,EAAQE,EAAA,IAAAF,EAAQE,EAAA,KAAAF,EAASE,EAAA,KAAAF,EAAShG,MAAY+3B,oBAAA,WAAgC,GAAA/xB,EAAM,iBAAAE,EAAAnS,EAAAuoB,GAAuB,SAAAtW,IACzeA,EAAA,GAAA2G,GAAA8G,SAAsB,SAAA1f,MAAA,GAAkB,SAAAuoB,MAAApW,EAAA1P,OAAyB,QAAAQ,GAAA,EAAYA,EAAAslB,EAAItlB,GAAA,EAAAjD,GAAA,EAAAiS,EAAAsgB,UAAApgB,EAAAnS,GAAAiS,EAAAotB,aAAApzB,MAAAgG,EAAAugB,QAAArgB,EAAAnS,EAA+D,OAAAmS,OAAU8xB,cAAA,WAA4B,GAAAhyB,EAAM,iBAAAE,EAAAnS,EAAAuoB,GAAuB,SAAAtW,MAAA,GAAA2G,GAAA8G,SAAkC,SAAA1f,MAAA,GAAkB,SAAAuoB,MAAApW,EAAA1P,OAAA0P,EAAA0sB,SAAoC,QAAA57B,GAAA,EAAYA,EAAAslB,EAAItlB,IAAAjD,IAAAiS,EAAAjH,EAAAmH,EAAA+xB,KAAAlkC,GAAAiS,EAAAgN,EAAA9M,EAAAgyB,KAAAnkC,GAAAiS,EAAAiN,EAAA/M,EAAAiyB,KAAApkC,GAAAiS,EAAAotB,aAAApzB,MAAAkG,EAAAkyB,OAAApyB,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,EAA6F,OAAA/M,OAAUmyB,YAAA,WAA0B,GAAAryB,GAAAhG,KAAAqwB,SAAAnqB,EAAAF,EAAA,GAAAjS,EAAAiS,EAAA,GAAAsW,EAAAtW,EAAA,GAAAhP,EAAAgP,EAAA,IAAAsD,EAAAtD,EAAA,GAAAue,EAC5bve,EAAA,GAAA6L,EAAA7L,EAAA,GAAA8f,EAAA9f,EAAA,IAAA6f,EAAA7f,EAAA,GAAAkrB,EAAAlrB,EAAA,GAAAhS,EAAAgS,EAAA,IAAAlS,EAAAkS,EAAA,GAAkD,OAAAA,GAAA,KAAAhP,EAAA6a,EAAAqf,EAAA5U,EAAAwJ,EAAAoL,EAAAl6B,EAAAutB,EAAAvwB,EAAAD,EAAA+xB,EAAA9xB,EAAAsoB,EAAAiI,EAAAzwB,EAAAC,EAAA8d,EAAA/d,GAAAkS,EAAA,KAAAE,EAAA2L,EAAA/d,EAAAoS,EAAA4f,EAAA9xB,EAAAgD,EAAAsS,EAAAtV,EAAAsoB,EAAAhT,EAAAxV,EAAAwoB,EAAAwJ,EAAAD,EAAA7uB,EAAA6a,EAAAgU,GAAA7f,EAAA,MAAAE,EAAA4f,EAAAoL,EAAAhrB,EAAAqe,EAAAzwB,EAAAkD,EAAAsS,EAAA4nB,EAAAn9B,EAAAuV,EAAAxV,EAAAkD,EAAAutB,EAAAsB,EAAA9xB,EAAA+xB,EAAAD,GAAA7f,EAAA,MAAAsW,EAAAiI,EAAAsB,EAAA3f,EAAA2L,EAAAqf,EAAAhrB,EAAAqe,EAAAvwB,EAAAsoB,EAAAhT,EAAA4nB,EAAAn9B,EAAAuV,EAAAtV,EAAAD,EAAA8d,EAAAgU,IAAyLyS,UAAA,WAAsB,GAAApyB,GAAAF,EAAAhG,KAAAqwB,QAA8K,OAAxJnqB,GAAAF,EAAA,GAAOA,EAAA,GAAAA,EAAA,GAAUA,EAAA,GAAAE,EAAOA,EAAAF,EAAA,GAAOA,EAAA,GAAAA,EAAA,GAAUA,EAAA,GAAAE,EAAOA,EAAAF,EAAA,GAAOA,EAAA,GAAAA,EAAA,GAAUA,EAAA,GAAAE,EAAOA,EAAAF,EAAA,GAAOA,EAAA,GAAAA,EAAA,IAAWA,EAAA,IAAAE,EAAQA,EAAAF,EAAA,GAAOA,EAAA,GAAAA,EAAA,IAAWA,EAAA,IAAAE,EAAQA,EAAAF,EAAA,IAAQA,EAAA,IAAAA,EAAA,IAAYA,EAAA,IAAAE,EAAQlG,MAAYu4B,qBAAA,SAAAvyB,EAAAE,GAC3b,MAD+d5Q,SAAA0vB,KAAA,mFAC/dhlB,KAAAumB,QAAAvgB,EAAAE,IAAyB8zB,YAAA,WAAwB,GAAAh0B,EAAM,mBAAyK,MAAvJ,UAAAA,MAAA,GAAA2G,GAAA8G,SAAkCne,QAAA0vB,KAAA,wGAAqHhf,EAAAquB,oBAAAr0B,KAAA,OAAsCi6B,YAAA,SAAAj0B,GAA2B,GAAAE,GAAAlG,KAAAqwB,QAAkD,OAA9BnqB,GAAA,IAAAF,EAAAjH,EAAUmH,EAAA,IAAAF,EAAAgN,EAAU9M,EAAA,IAAAF,EAAAiN,EAAUjT,MAAYyzB,WAAA,SAAAztB,EAAAE,GAA0B,GAAAnS,GAAAiM,KAAAqwB,SAAA/T,EAAAtW,EAAAqqB,SAAAr5B,EAAAslB,EAAA,GAAAhT,EAAAgT,EAAA,GAAAiI,EAAAjI,EAAA,GAAAzK,EAAAyK,EAAA,GAAAwJ,EAAAxJ,EAAA,GAAAuJ,EAAAvJ,EAAA,GAAA4U,EAAA5U,EAAA,GAAAtoB,EAAAsoB,EAAA,GAAAxoB,EAAAwoB,EAAA,GAAA6U,EAAA7U,EAAA,GAAAxK,EAAAwK,EAAA,IAAAsJ,EAAAtJ,EAAA,IAAAoc,EAAApc,EAAA,IACzX0c,EAAA1c,EAAA,IAAA2c,EAAA3c,EAAA,IAAAA,IAAA,IAAA4c,EAAA/H,EAAA8H,EAAAjlC,EAAAglC,EAAAlnB,EAAA9d,EAAAglC,EAAA9H,EAAAtL,EAAAC,EAAAoT,EAAArT,EAAAuL,EAAAD,EAAA5U,EAAAuJ,EAAA/T,EAAAwK,EAAA1K,EAAA8mB,EAAA5mB,EAAA9d,EAAAF,EAAAmlC,EAAAjlC,EAAA0kC,EAAAxH,EAAAtL,EAAAE,EAAAmT,EAAArT,EAAA9xB,EAAAo9B,EAAA5U,EAAAwJ,EAAAhU,EAAAwK,EAAA6c,EAAArlC,EAAAklC,EAAAhlC,EAAA0kC,EAAAvH,EAAAn9B,EAAA0kC,EAAA7S,EAAAD,EAAAE,EAAAkT,EAAApT,EAAA9xB,EAAA+xB,EAAAvJ,EAAAwJ,EAAAqL,EAAA7U,EAAArJ,EAAAylB,EAAAvH,EAAAD,EAAAp9B,EAAAklC,EAAA9H,EAAAwH,EAAA7S,EAAA/T,EAAAgU,EAAAkT,EAAAlnB,EAAAhe,EAAA+xB,EAAAoT,EAAAnT,EAAAqL,EAAA8H,EAAAjmB,EAAAhc,EAAAkiC,EAAA5vB,EAAAsI,EAAA2S,EAAA4U,EAAAtnB,EAAAoB,CAAkM,QAAAD,EAAA,CAAU,GAAA9M,EAAA,KAAApE,OAAA,oEAAwK,OAAlFxM,SAAA0vB,KAAA,qEAAkFhlB,KAAA63B,WAC0G,MADnF7kB,GAAA,EAAAA,EAAMjf,EAAA,GAAAmlC,EAAAlmB,EAASjf,EAAA,IAAAilC,EAAAlnB,EAAAD,EAAAsf,EAAA8H,EAAApnB,EAAAmnB,EAAAzU,EAAAqB,EAAAtc,EAAA2vB,EAAArT,EAAAuL,EAAA5M,EAAAjI,EAAAhT,EAAAwI,EAAAwK,GAAAtJ,EAA6Cjf,EAAA,IAAA8xB,EAAAoT,EAAApnB,EAAAmnB,EAAA9H,EAAArf,EAAAmnB,EAAAzU,EAAAvwB,EAAAsV,EAAA2vB,EAAAjlC,EAAA6xB,EAAAtB,EAAAjI,EAAAhT,EAAA4nB,EAAA5U,GAAAtJ,EAA6Cjf,EAAA,IACpfo9B,EAAAD,EAAArf,EAAAgU,EAAA/T,EAAAD,EAAAsf,EAAA5M,EAAAvwB,EAAAsV,EAAAwI,EAAA9d,EAAA6xB,EAAAtB,EAAAqB,EAAAtc,EAAA4nB,EAAAtL,GAAA5S,EAAwCjf,EAAA,GAAA6d,EAAAoB,EAASjf,EAAA,IAAAD,EAAAmlC,EAAApnB,EAAA6mB,EAAA5mB,EAAAD,EAAA6mB,EAAAnU,EAAAqB,EAAA5uB,EAAAiiC,EAAArT,EAAA9xB,EAAAywB,EAAAjI,EAAAtlB,EAAA8a,EAAAwK,GAAAtJ,EAA6Cjf,EAAA,IAAA2kC,EAAAxH,EAAArf,EAAAiU,EAAAmT,EAAApnB,EAAA6mB,EAAAnU,EAAAvwB,EAAAgD,EAAAiiC,EAAAjlC,EAAA8xB,EAAAvB,EAAAjI,EAAAtlB,EAAAk6B,EAAA5U,GAAAtJ,EAA6Cjf,EAAA,IAAA+xB,EAAAhU,EAAAD,EAAA/d,EAAAo9B,EAAArf,EAAA/d,EAAAywB,EAAAvwB,EAAAgD,EAAA8a,EAAA9d,EAAA8xB,EAAAvB,EAAAqB,EAAA5uB,EAAAk6B,EAAAtL,GAAA5S,EAA6Cjf,EAAA,GAAAolC,EAAAnmB,EAASjf,EAAA,IAAA2kC,EAAAvH,EAAAtf,EAAA/d,EAAAklC,EAAAnnB,EAAA6mB,EAAApvB,EAAAsc,EAAA5uB,EAAAgiC,EAAApT,EAAA9xB,EAAAwV,EAAAgT,EAAAtlB,EAAAm6B,EAAA7U,GAAAtJ,EAA6Cjf,EAAA,KAAA+xB,EAAAkT,EAAAnnB,EAAA6mB,EAAA7S,EAAAhU,EAAA6mB,EAAApvB,EAAAtV,EAAAgD,EAAAgiC,EAAAhlC,EAAA8xB,EAAAxc,EAAAgT,EAAAtlB,EAAA6uB,EAAAvJ,GAAAtJ,EAA8Cjf,EAAA,KAAAD,EAAA+xB,EAAAhU,EAAAiU,EAAAqL,EAAAtf,EAAA/d,EAAAwV,EAAAtV,EAAAgD,EAAAm6B,EAAAn9B,EAAA8xB,EAAAxc,EAAAsc,EAAA5uB,EAAA6uB,EAAAD,GAAA5S,EAA8Cjf,EAAA,IAAAkf,EAAAD,EAAUjf,EAAA,KAAAD,EAAAklC,EAAAzU,EAAAmU,EAAAvH,EAAA5M,EAAAmU,EAAApvB,EAAAwI,EAAA9a,EAAAgiC,EAAAlnB,EAAAhe,EAAAwV,EAAA2vB,EAAAjiC,EAAAm6B,EAAA8H,GAAAjmB,EAA8Cjf,EAAA,KAAA2kC,EAAA7S,EAAAtB,EAAAuB,EAAAkT,EAAAzU,EAAAmU,EAAApvB,EAAA4nB,EAAAl6B,EAAAgiC,EAAA9H,EAAApL,EAAAxc,EAAA2vB,EAAAjiC,EAAA6uB,EAAAoT,GAAAjmB,EAA8Cjf,EAAA,KAAA+xB,EAAAqL,EAAA5M,EAAAzwB,EAAA+xB,EAAAtB,EAAAzwB,EAAAwV,EAAA4nB,EAAAl6B,EAAAm6B,EAAAD,EAAApL,EAAAxc,EAAAwI,EAAA9a,EAAA6uB,EAAA/T,GAAAkB,EAA8ChT,MAAYk6B,MAAA,SAAAl0B,GAAmB,GAAAE,GAC7flG,KAAAqwB,SAAAt8B,EAAAiS,EAAAjH,EAAAud,EAAAtW,EAAAgN,CAAkI,OAAxGhN,KAAAiN,EAAM/M,EAAA,IAAAnS,EAAQmS,EAAA,IAAAoW,EAAQpW,EAAA,IAAAF,EAAQE,EAAA,IAAAnS,EAAQmS,EAAA,IAAAoW,EAAQpW,EAAA,IAAAF,EAAQE,EAAA,IAAAnS,EAAQmS,EAAA,IAAAoW,EAAQpW,EAAA,KAAAF,EAASE,EAAA,IAAAnS,EAAQmS,EAAA,IAAAoW,EAAQpW,EAAA,KAAAF,EAAShG,MAAYm6B,kBAAA,WAA8B,GAAAn0B,GAAAhG,KAAAqwB,QAAoB,OAAA7wB,MAAAgmB,KAAAhmB,KAAAC,IAAAuG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,OAAwHo0B,gBAAA,SAAAp0B,EAAAE,EAAAnS,GAA2E,MAA1CiM,MAAAqR,IAAA,MAAArL,EAAA,MAAAE,EAAA,MAAAnS,EAAA,SAA0CiM,MAAYq6B,cAAA,SAAAr0B,GAA2B,GAAAE,GAAA1G,KAAA2S,IAAAnM,EAC1a,OAD4bA,GAAAxG,KAAA4a,IAAApU,GAAchG,KAAAqR,IAAA,UAAAnL,GAAAF,EAAA,IAAAA,EAAAE,EAAA,WAC1clG,MAAYs6B,cAAA,SAAAt0B,GAA2B,GAAAE,GAAA1G,KAAA2S,IAAAnM,EAA2E,OAAzDA,GAAAxG,KAAA4a,IAAApU,GAAchG,KAAAqR,IAAAnL,EAAA,EAAAF,EAAA,WAAAA,EAAA,EAAAE,EAAA,WAA2ClG,MAAYu6B,cAAA,SAAAv0B,GAA2B,GAAAE,GAAA1G,KAAA2S,IAAAnM,EAA2E,OAAzDA,GAAAxG,KAAA4a,IAAApU,GAAchG,KAAAqR,IAAAnL,GAAAF,EAAA,IAAAA,EAAAE,EAAA,qBAA2ClG,MAAYw6B,iBAAA,SAAAx0B,EAAAE,GAAgC,GAAAnS,GAAAyL,KAAA2S,IAAAjM,GAAAoW,EAAA9c,KAAA4a,IAAAlU,GAAAlP,EAAA,EAAAjD,EAAAuV,EAAAtD,EAAAjH,EAAAwlB,EAAAve,EAAAgN,EAAAnB,EAAA7L,EAAAiN,EAAA6S,EAAA9uB,EAAAsS,EAAAuc,EAAA7uB,EAAAutB,CAAgK,OAA5FvkB,MAAAqR,IAAAyU,EAAAxc,EAAAvV,EAAA+xB,EAAAvB,EAAAjI,EAAAzK,EAAAiU,EAAAjU,EAAAyK,EAAAiI,EAAA,EAAAuB,EAAAvB,EAAAjI,EAAAzK,EAAAgU,EAAAtB,EAAAxwB,EAAA8xB,EAAAhU,EAAAyK,EAAAhT,EAAA,EAAAwc,EAAAjU,EAAAyK,EAAAiI,EAAAsB,EAAAhU,EAAAyK,EAAAhT,EAAAtS,EAAA6a,IAAA9d,EAAA,WAA4FiM,MAAYy6B,UAAA,SAAAz0B,EAAAE,EAAAnS,GACjb,MAD4ciM,MAAAqR,IAAArL,EAAA,QAAAE,EAAA,QAAAnS,EACvd,WAAWiM,MAAY06B,QAAA,SAAA10B,EAAAE,EAAAnS,GAA8F,MAArEiM,MAAAi1B,2BAAA/uB,GAAmClG,KAAAk6B,MAAAnmC,GAAciM,KAAAi6B,YAAAj0B,GAAoBhG,MAAY26B,UAAA,WAAsB,GAAA30B,GAAAE,CAAQ,iBAAAnS,EAAAuoB,EAAAtlB,GAAuB,SAAAgP,MAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA2mB,QAAsD,IAAAhqB,GAAAtJ,KAAAqwB,SAAA9L,EAAAve,EAAAqL,IAAA/H,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAA9S,SAAAqb,EAAA7L,EAAAqL,IAAA/H,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAA9S,SAAAsvB,EAAA9f,EAAAqL,IAAA/H,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAA9S,QAAwH,GAAAwJ,KAAAq4B,gBAAA9T,MAA6BxwB,EAAAgL,EAAAuK,EAAA,IAAUvV,EAAAif,EAAA1J,EAAA,IAAUvV,EAAAkf,EAAA3J,EAAA,IAAUpD,EAAAmqB,SAAAhf,IAAArR,KAAAqwB,UAA8Bt8B,EAAA,EAAAwwB,CAAM,IAAAjb,GAAA,EAAAuI,EAAAgU,EAAA,EAAAC,CAC9R,OAD8S5f,GAAAmqB,SAAA,IAAAt8B,EAAiBmS,EAAAmqB,SAAA,IAAAt8B,EACpemS,EAAAmqB,SAAA,IAAAt8B,EAAiBmS,EAAAmqB,SAAA,IAAA/mB,EAAiBpD,EAAAmqB,SAAA,IAAA/mB,EAAiBpD,EAAAmqB,SAAA,IAAA/mB,EAAiBpD,EAAAmqB,SAAA,IAAAxK,EAAiB3f,EAAAmqB,SAAA,IAAAxK,EAAiB3f,EAAAmqB,SAAA,KAAAxK,EAAkBvJ,EAAA8T,sBAAAlqB,GAA2BlP,EAAA+H,EAAAwlB,EAAMvtB,EAAAgc,EAAAnB,EAAM7a,EAAAic,EAAA6S,EAAM9lB,SAAa46B,YAAA,SAAA50B,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAqC,GAAAib,GAAAvkB,KAAAqwB,QAAqM,OAAjL9L,GAAA,KAAAvtB,GAAAkP,EAAAF,GAAeue,EAAA,KAAOA,EAAA,IAAAre,EAAAF,IAAAE,EAAAF,GAAiBue,EAAA,MAAQA,EAAA,KAAOA,EAAA,KAAAvtB,GAAAslB,EAAAvoB,GAAewwB,EAAA,IAAAjI,EAAAvoB,IAAAuoB,EAAAvoB,GAAiBwwB,EAAA,MAAQA,EAAA,KAAOA,EAAA,KAAOA,EAAA,MAAAjb,EAAAtS,IAAAsS,EAAAtS,GAAmButB,EAAA,OAAAjb,EAAAtS,GAAAsS,EAAAtS,GAAmButB,EAAA,KAAOA,EAAA,KAAOA,EAAA,OAASA,EAAA,MAAQvkB,MAAY66B,gBAAA,SAAA70B,EAAAE,EAAAnS,EAAAuoB,GAAmCtW,EAAAjS,EAAAyL,KAAA0S,IAAAvF,EAAAnN,KAAAs7B,QAAA90B,EAAA,GAAsC,IAAAhP,IACjfgP,CAAG,OAAAhG,MAAA46B,YAAA5jC,EAAAkP,EAAAF,EAAAE,EAAAlP,EAAAgP,EAAAjS,EAAAuoB,IAAyCye,iBAAA,SAAA/0B,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAwC,GAAAib,GAAAvkB,KAAAqwB,SAAAxe,EAAA,GAAA3L,EAAAF,GAAA8f,EAAA,GAAA/xB,EAAAuoB,GAAAuJ,EAAA,GAAAvc,EAAAtS,EAA0M,OAAxJutB,GAAA,KAAA1S,EAAS0S,EAAA,KAAOA,EAAA,KAAOA,EAAA,OAAAre,EAAAF,GAAA6L,GAAiB0S,EAAA,KAAOA,EAAA,KAAAuB,EAASvB,EAAA,KAAOA,EAAA,OAAAxwB,EAAAuoB,GAAAwJ,GAAiBvB,EAAA,KAAOA,EAAA,KAAOA,EAAA,OAAAsB,EAAWtB,EAAA,OAAAjb,EAAAtS,GAAA6uB,GAAiBtB,EAAA,KAAOA,EAAA,KAAOA,EAAA,MAAQA,EAAA,MAAQvkB,MAAYqmB,OAAA,SAAArgB,GAAoB,GAAAE,GAAAlG,KAAAqwB,QAAoBrqB,KAAAqqB,QAAa,QAAAt8B,GAAA,EAAY,GAAAA,EAAKA,IAAA,GAAAmS,EAAAnS,KAAAiS,EAAAjS,GAAA,QAA4B,WAASuyB,UAAA,SAAAtgB,GAA4C,MAArBhG,MAAAqwB,SAAAhf,IAAArL,GAAqBhG,MAAYumB,QAAA,SAAAvgB,EAAAE,GAAuB,SAAAF,UACpe,SAAAE,MAAA,EAAkB,IAAAnS,GAAAiM,KAAAqwB,QAA8N,OAA1MrqB,GAAAE,GAAAnS,EAAA,GAAUiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,GAAAnS,EAAA,GAAYiS,EAAAE,EAAA,IAAAnS,EAAA,IAAciS,EAAAE,EAAA,IAAAnS,EAAA,IAAciS,EAAAE,EAAA,IAAAnS,EAAA,IAAciS,EAAAE,EAAA,IAAAnS,EAAA,IAAciS,EAAAE,EAAA,IAAAnS,EAAA,IAAciS,EAAAE,EAAA,IAAAnS,EAAA,IAAciS,IAAW2G,EAAAquB,IAAA,SAAAh1B,EAAAE,GAAwBlG,KAAAi7B,OAAA,SAAAj1B,IAAA,GAAA2G,GAAA8G,QAA2CzT,KAAAk7B,UAAA,SAAAh1B,IAAA,GAAAyG,GAAA8G,SAC9T9G,EAAAquB,IAAAtzB,WAAqB7S,YAAA8X,EAAAquB,IAAA3pB,IAAA,SAAArL,EAAAE,GAAmF,MAA3ClG,MAAAi7B,OAAAzW,KAAAxe,GAAoBhG,KAAAk7B,UAAA1W,KAAAte,GAAuBlG,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAA8E,MAA5DhG,MAAAi7B,OAAAzW,KAAAxe,EAAAi1B,QAA2Bj7B,KAAAk7B,UAAA1W,KAAAxe,EAAAk1B,WAAiCl7B,MAAY01B,GAAA,SAAA1vB,EAAAE,GAAkB,OAAAA,GAAA,GAAAyG,GAAA8G,SAAA+Q,KAAAxkB,KAAAk7B,WAAAvgC,eAAAqL,GAAAmJ,IAAAnP,KAAAi7B,SAAqFzmB,OAAA,SAAAxO,GAAwE,MAApDhG,MAAAk7B,UAAA1W,KAAAxe,GAAA4O,IAAA5U,KAAAi7B,QAAA5mB,YAAoDrU,MAAYm7B,OAAA,WAAmB,GAAAn1B,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,GAC1e,MAD6flG,MAAAi7B,OAAAzW,KAAAxkB,KAAA01B,GAAAxvB,EACjgBF,IAAIhG,SAAa41B,oBAAA,SAAA5vB,EAAAE,GAAqC,GAAAnS,GAAAmS,GAAA,GAAAyG,GAAA8G,OAA2B1f,GAAA49B,WAAA3rB,EAAAhG,KAAAi7B,OAA4B,IAAA3e,GAAAvoB,EAAAqnB,IAAApb,KAAAk7B,UAA4B,UAAA5e,EAAAvoB,EAAAywB,KAAAxkB,KAAAi7B,QAAAlnC,EAAAywB,KAAAxkB,KAAAk7B,WAAAvgC,eAAA2hB,GAAAnN,IAAAnP,KAAAi7B,SAAyFvE,gBAAA,SAAA1wB,GAA6B,MAAAxG,MAAAgmB,KAAAxlB,KAAAo7B,kBAAAp1B,KAA4Co1B,kBAAA,WAA8B,GAAAp1B,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,GAAmB,GAAAnS,GAAAiS,EAAA2rB,WAAAzrB,EAAAlG,KAAAi7B,QAAA7f,IAAApb,KAAAk7B,UAAsD,UAAAnnC,EAAAiM,KAAAi7B,OAAAxI,kBAAAvsB,IAA+CF,EAAAwe,KAAAxkB,KAAAk7B,WAAAvgC,eAAA5G,GAAAob,IAAAnP,KAAAi7B,QACzdj1B,EAAAysB,kBAAAvsB,QAA+Bm1B,oBAAA,WAAkC,GAAAr1B,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,GAAA4Y,GAAA8G,OAAgE,iBAAA6I,EAAAtlB,EAAAsS,EAAAib,GAAyBve,EAAAwe,KAAAlI,GAAAnN,IAAAnY,GAAA2D,eAAA,IAAoCuL,EAAAse,KAAAxtB,GAAA4d,IAAA0H,GAAAjI,YAA6BtgB,EAAAywB,KAAAxkB,KAAAi7B,QAAArmB,IAAA5O,EAA2B,IAAAmrB,GAAAtf,EAAA,GAAAyK,EAAAkW,WAAAx7B,GAAA8uB,GAAA9lB,KAAAk7B,UAAA9f,IAAAlV,GAAA2f,EAAA9xB,EAAAqnB,IAAApb,KAAAk7B,WAAAhK,GAAAn9B,EAAAqnB,IAAAlV,GAAAlS,EAAAD,EAAA48B,WAAA78B,EAAA0L,KAAA+wB,IAAA,EAAAzK,IAC2L,OADlE,GAAAhyB,GAAAwoB,EAAAwJ,EAAAoL,EAAArL,EAAA7uB,EAAA8uB,EAAAD,EAAAqL,EAAAC,EAAAtf,EAAA/d,EAAA,GAAAwoB,EAAAtlB,IAAAm6B,EAAAn6B,GAAAm6B,GAAAtf,EAAA,EAAA/d,EAAAwoB,GAAAzK,EAAA7a,GAAA6a,EAAAiU,EAAAxJ,KAAAwJ,EAAA9uB,EAAA,EAAA6uB,GAAA7uB,GAAA8uB,EAAAxJ,EAAAtlB,EAAA,EAAAk6B,GAAAl9B,IAAAgD,EAAA6a,EAAAyK,EAAA9c,KAAAC,IAAA,IAAAqmB,EAAA9uB,EAAA6uB,IAAAC,GAAAxJ,IAAAtlB,KAAA,EAC/Wk6B,GAAAl9B,IAAAgD,GAAA6a,EAAAyK,EAAA9c,KAAAC,IAAA,IAAAqmB,EAAA9uB,EAAA6uB,IAAAC,GAAAxJ,IAAAtlB,KAAA,EAAAk6B,GAAAl9B,GAAAgD,IAAAm6B,GAAA7U,EAAA9c,KAAAC,IAAA,KAAAqmB,EAAAjU,EAAAgU,IAAA7uB,EAAA,EAAAslB,GAAAzK,EAAArS,KAAAib,IAAAjb,KAAAC,KAAAoS,GAAAqf,GAAArf,GAAAiU,GAAAxJ,IAAAtlB,KAAA,EAAAk6B,GAAAl9B,GAAAgD,GAAAm6B,GAAA7U,EAAA,EAAAtlB,EAAAwI,KAAAib,IAAAjb,KAAAC,KAAAoS,GAAAqf,GAAArf,GAAAiU,EAAA9uB,KAAA,EAAAk6B,GAAAl9B,IAAAsoB,EAAA9c,KAAAC,IAAA,IAAAqmB,EAAAjU,EAAAgU,IAAA7uB,EAAA,EAAAslB,EAAAzK,EAAArS,KAAAib,IAAAjb,KAAAC,KAAAoS,GAAAqf,GAAArf,GAAAiU,GAAAxJ,IAAAtlB,KAAA,EAAAk6B,GAAAl9B,KAAAgD,EAAA,EAAA8uB,GAAAjU,IAAAyK,EAAA9c,KAAAC,IAAA,IAAAqmB,EAAA9uB,EAAA6uB,IAAAC,GAAAxJ,IAAAtlB,KAAA,EAAAk6B,GAAAl9B,GAA8UsV,KAAAkb,KAAAxkB,KAAAk7B,WAAAvgC,eAAA2hB,GAAAnN,IAAAnP,KAAAi7B,QAA6D1W,KAAAC,KAAAte,GAAAvL,eAAA3D,GAAAmY,IAAAnJ,GAAsC8f,MAAUwV,gBAAA,WAA8B,GAAAt1B,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,EACjfnS,GAAGiS,EAAA2rB,WAAAzrB,EAAAlL,OAAAgF,KAAAi7B,OAAmC,IAAA3e,GAAAtW,EAAAoV,IAAApb,KAAAk7B,WAAAlkC,EAAAgP,EAAAoV,IAAApV,GAAAsW,IAAAhT,EAAApD,EAAAiuB,OAAAjuB,EAAAiuB,MAA+D,OAAAn9B,GAAAsS,EAAA,MAAmBA,EAAA9J,KAAAgmB,KAAAlc,EAAAtS,GAAiBA,EAAAslB,EAAAhT,EAAMgT,GAAAhT,EAAK,EAAAtS,GAAA,EAAAslB,EAAA,OAAAtlB,EAAAgJ,KAAA01B,GAAApZ,EAAAvoB,GAAAiM,KAAA01B,GAAA1+B,EAAAjD,QAAoDsjC,iBAAA,SAAArxB,GAAgC,MAAAhG,MAAA02B,gBAAA1wB,EAAAhL,SAAAgL,EAAAmuB,QAAgDoH,gBAAA,SAAAv1B,GAA6B,GAAAE,GAAAF,EAAAuxB,OAAAnc,IAAApb,KAAAk7B,UAAmC,YAAAh1B,EAAA,IAAAF,EAAA0wB,gBAAA12B,KAAAi7B,QAAA,QAA0Dj1B,IAAAhG,KAAAi7B,OAAA7f,IAAApV,EAAAuxB,QAAAvxB,EAAAwxB,UAAAtxB,EAA4C,GAAAF,IAAA,OAAmBkR,eAAA,SAAAlR,EAAAE,GAA8B,GAAAnS,GAC/eiM,KAAAu7B,gBAAAv1B,EAAwB,eAAAjS,EAAA,KAAAiM,KAAA01B,GAAA3hC,EAAAmS,IAAkCoxB,gBAAA,SAAAtxB,GAA6B,GAAAE,GAAAF,EAAA0wB,gBAAA12B,KAAAi7B,OAAqC,YAAA/0B,GAAA,EAAAF,EAAAuxB,OAAAnc,IAAApb,KAAAk7B,WAAAh1B,GAAqDs1B,aAAA,SAAAx1B,EAAAE,GAA4B,GAAAnS,GAAAuoB,EAAAtlB,EAAAsS,EAAAib,CAAcjI,GAAA,EAAAtc,KAAAk7B,UAAAn8B,EAAqBuK,EAAA,EAAAtJ,KAAAk7B,UAAAloB,EAAqBuR,EAAA,EAAAvkB,KAAAk7B,UAAAjoB,CAAqB,IAAApB,GAAA7R,KAAAi7B,MAAwK,OAAtJ,IAAA3e,GAAAvoB,GAAAiS,EAAAyU,IAAA1b,EAAA8S,EAAA9S,GAAAud,KAAAtW,EAAAvG,IAAAV,EAAA8S,EAAA9S,IAAAhL,GAAAiS,EAAAvG,IAAAV,EAAA8S,EAAA9S,GAAAud,KAAAtW,EAAAyU,IAAA1b,EAAA8S,EAAA9S,GAA2E,GAAAuK,GAAAtS,GAAAgP,EAAAyU,IAAAzH,EAAAnB,EAAAmB,GAAA1J,KAAAtD,EAAAvG,IAAAuT,EAAAnB,EAAAmB,IAAAhc,GAAAgP,EAAAvG,IAAAuT,EAAAnB,EAAAmB,GAAA1J,KAAAtD,EAAAyU,IAAAzH,EAAAnB,EAAAmB,GAA2Ejf,EAAAuV,GAAAtS,EAAAslB,EAAA,OAAwBtlB,EAAAjD,cAAAiD,IAAkBsS,EAAAgT,OAC5eA,OAAAhT,GAAM,GAAAib,GAAAvtB,GAAAgP,EAAAyU,IAAAxH,EAAApB,EAAAoB,GAAAsR,KAAAve,EAAAvG,IAAAwT,EAAApB,EAAAoB,IAAAjc,GAAAgP,EAAAvG,IAAAwT,EAAApB,EAAAoB,GAAAsR,KAAAve,EAAAyU,IAAAxH,EAAApB,EAAAoB,GAA2Elf,EAAAwwB,GAAAvtB,EAAAslB,EAAA,OAAwBtlB,EAAAjD,cAAAiD,IAAkButB,EAAAjI,cAAAiI,GAAkB,EAAAjI,EAAA,KAAAtc,KAAA01B,GAAA,GAAA3hC,IAAAuoB,EAAApW,MAAoCswB,cAAA,WAA0B,GAAAxwB,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,GAAmB,cAAAlG,KAAAw7B,aAAAt1B,EAAAF,OAAsCy1B,kBAAA,WAAgC,GAAAz1B,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,GAAA4Y,GAAA8G,QAAA6I,EAAA,GAAA3P,GAAA8G,OAAoF,iBAAAzc,EAAAsS,EAAAib,EAAA1S,EAAAiU,GAChZ,GAD2a5f,EAAAyrB,WAAAroB,EAAAtS,GAAkBjD,EAAA49B,WAAApN,EAAAvtB,GAAkBslB,EAAAkU,aAAAtqB,EAAAnS,GAAoBuV,EAAAtJ,KAAAk7B,UAAA9f,IAAAkB,GACne,EAAAhT,EAAA,CAAQ,GAAAuI,EAAA,WAAiBA,GAAA,MAAI,QAAAvI,GAAsB,WAAtBuI,MAAAvI,KAA+G,MAAxEtD,GAAA2rB,WAAA3xB,KAAAi7B,OAAAjkC,GAA4BA,EAAA6a,EAAA7R,KAAAk7B,UAAA9f,IAAArnB,EAAAy8B,aAAAxqB,EAAAjS,IAA4C,EAAAiD,EAAA,MAAmButB,EAAA1S,EAAA7R,KAAAk7B,UAAA9f,IAAAlV,EAAAqV,MAAAvV,IAAmC,EAAAue,GAAAvtB,EAAAutB,EAAAjb,EAAA,MAA0BtS,GAAA6a,EAAA7L,EAAAoV,IAAAkB,GAAc,EAAAtlB,EAAA,KAAAgJ,KAAA01B,GAAA1+B,EAAAsS,EAAAwc,SAAgCsN,aAAA,SAAAptB,GAAmK,MAAvIhG,MAAAk7B,UAAA/rB,IAAAnP,KAAAi7B,QAAA7H,aAAAptB,GAAgDhG,KAAAi7B,OAAA7H,aAAAptB,GAA4BhG,KAAAk7B,UAAAtmB,IAAA5U,KAAAi7B,QAAgCj7B,KAAAk7B,UAAA7mB,YAA2BrU,MAAYqmB,OAAA,SAAArgB,GAAoB,MAAAA,GAAAi1B,OAAA5U,OAAArmB,KAAAi7B,SAAAj1B,EAAAk1B,UAAA7U,OAAArmB,KAAAk7B,aAC7cvuB,EAAA+qB,OAAA,SAAA1xB,EAAAE,GAA2BlG,KAAAhF,OAAA,SAAAgL,IAAA,GAAA2G,GAAA8G;AAA2CzT,KAAAm0B,OAAA,SAAAjuB,IAAA,GACtEyG,EAAA+qB,OAAAhwB,WAAwB7S,YAAA8X,EAAA+qB,OAAArmB,IAAA,SAAArL,EAAAE,GAA6E,MAAlClG,MAAAhF,OAAAwpB,KAAAxe,GAAoBhG,KAAAm0B,OAAAjuB,EAAclG,MAAY81B,cAAA,WAA0B,GAAA9vB,GAAA,GAAA2G,GAAAkqB,IAAqB,iBAAA3wB,EAAAnS,GAAqB,GAAAuoB,GAAAtc,KAAAhF,MAAkB,UAAAjH,EAAAuoB,EAAAkI,KAAAzwB,GAAAiS,EAAA8vB,cAAA5vB,GAAAlL,OAAAshB,EAAkD,QAAAtlB,GAAA,EAAAsS,EAAA,EAAAib,EAAAre,EAAA1P,OAA2B8S,EAAAib,EAAIjb,IAAAtS,EAAAwI,KAAAC,IAAAzI,EAAAslB,EAAAmW,kBAAAvsB,EAAAoD,IAAqE,OAAzBtJ,MAAAm0B,OAAA30B,KAAAgmB,KAAAxuB,GAAyBgJ,SAAarJ,MAAA,WAAoB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAAkE,MAAhDhG,MAAAhF,OAAAwpB,KAAAxe,EAAAhL,QAA2BgF,KAAAm0B,OAAAnuB,EAAAmuB,OAAqBn0B,MACxe07B,MAAA,WAAiB,UAAA17B,KAAAm0B,QAAsBkC,cAAA,SAAArwB,GAA2B,MAAAA,GAAAysB,kBAAAzyB,KAAAhF,SAAAgF,KAAAm0B,OAAAn0B,KAAAm0B,QAAiEuC,gBAAA,SAAA1wB,GAA6B,MAAAA,GAAAwsB,WAAAxyB,KAAAhF,QAAAgF,KAAAm0B,QAA6CkD,iBAAA,SAAArxB,GAA8B,GAAAE,GAAAlG,KAAAm0B,OAAAnuB,EAAAmuB,MAA2B,OAAAnuB,GAAAhL,OAAAy3B,kBAAAzyB,KAAAhF,SAAAkL,KAAoDswB,cAAA,SAAAxwB,GAA2B,MAAAA,GAAAqxB,iBAAAr3B,OAAgCs3B,gBAAA,SAAAtxB,GAA6B,MAAAxG,MAAA+wB,IAAAvwB,KAAAhF,OAAAogB,IAAApV,EAAAuxB,QAAAvxB,EAAAwxB,WAAAx3B,KAAAm0B,QAAmEsC,WAAA,SAAAzwB,EAAAE,GAA0B,GAAAnS,GAC/eiM,KAAAhF,OAAAy3B,kBAAAzsB,GAAAsW,EAAApW,GAAA,GAAAyG,GAAA8G,OAA6K,OAArH6I,GAAAkI,KAAAxe,GAAUjS,EAAAiM,KAAAm0B,OAAAn0B,KAAAm0B,SAAA7X,EAAA1H,IAAA5U,KAAAhF,QAAAqZ,YAAAiI,EAAA3hB,eAAAqF,KAAAm0B,QAAAhlB,IAAAnP,KAAAhF,SAA2GshB,GAASqf,eAAA,SAAA31B,GAA6G,MAAjFA,MAAA,GAAA2G,GAAAkqB,KAAoB7wB,EAAAqL,IAAArR,KAAAhF,OAAAgF,KAAAhF,QAA+BgL,EAAAowB,eAAAp2B,KAAAm0B,QAA8BnuB,GAASotB,aAAA,SAAAptB,GAAyF,MAA/DhG,MAAAhF,OAAAo4B,aAAAptB,GAA4BhG,KAAAm0B,QAAAnuB,EAAAm0B,oBAAmCn6B,MAAYyU,UAAA,SAAAzO,GAA0C,MAAnBhG,MAAAhF,OAAAmU,IAAAnJ,GAAmBhG,MAAYqmB,OAAA,SAAArgB,GAAoB,MAAAA,GAAAhL,OAAAqrB,OAAArmB,KAAAhF,SAC3dgL,EAAAmuB,SAAAn0B,KAAAm0B,SAAyBxnB,EAAAivB,QAAA,SAAA51B,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAoCtJ,KAAA67B,QAAA,SAAA71B,IAAA,GAAA2G,GAAA8O,MAAA,SAAAvV,IAAA,GAAAyG,GAAA8O,MAAA,SAAA1nB,IAAA,GAAA4Y,GAAA8O,MAAA,SAAAa,IAAA,GAAA3P,GAAA8O,MAAA,SAAAzkB,IAAA,GAAA2V,GAAA8O,MAAA,SAAAnS,IAAA,GAAAqD,GAAA8O,QAC7D9O,EAAAivB,QAAAl0B,WAAyB7S,YAAA8X,EAAAivB,QAAAvqB,IAAA,SAAArL,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAoD,GAAAib,GAAAvkB,KAAA67B,MAAgG,OAA9EtX,GAAA,GAAAC,KAAAxe,GAAaue,EAAA,GAAAC,KAAAte,GAAaqe,EAAA,GAAAC,KAAAzwB,GAAawwB,EAAA,GAAAC,KAAAlI,GAAaiI,EAAA,GAAAC,KAAAxtB,GAAautB,EAAA,GAAAC,KAAAlb,GAAatJ,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAAkB,OAAAE,GAAAlG,KAAA67B,OAAA9nC,EAAA,EAA0B,EAAAA,EAAIA,IAAAmS,EAAAnS,GAAAywB,KAAAxe,EAAA61B,OAAA9nC,GAA2B,OAAAiM,OAAY87B,cAAA,SAAA91B,GAA2B,GAAAE,GAAAlG,KAAA67B,OAAA9nC,EAAAiS,EAAAqqB,QAA+BrqB,GAAAjS,EAAA,EAAO,IAAAuoB,GAAAvoB,EAAA,GAAAiD,EAAAjD,EAAA,GAAAuV,EAAAvV,EAAA,GAAAwwB,EAAAxwB,EAAA,GAAA8d,EAAA9d,EAAA,GAAA+xB,EAAA/xB,EAAA,GAAA8xB,EAAA9xB,EAAA,GAAAm9B,EAAAn9B,EAAA,GAAAC,EAAAD,EAAA,GAAAD,EAAAC,EAAA,IAAAo9B,EAAAp9B,EAAA,IAAA+d,EAAA/d,EAAA,IAAA6xB,EAAA7xB,EAAA,IAAA2kC,EAAA3kC,EAAA,IAC3YA,IAAA,GAAwS,OAAhSmS,GAAA,GAAA61B,cAAAzyB,EAAAtD,EAAA6f,EAAAtB,EAAA4M,EAAAD,EAAAn9B,EAAA+d,GAAAuC,YAAgDnO,EAAA,GAAA61B,cAAAzyB,EAAAtD,EAAA6f,EAAAtB,EAAA4M,EAAAD,EAAAn9B,EAAA+d,GAAAuC,YAAgDnO,EAAA,GAAA61B,cAAAzyB,EAAAgT,EAAAuJ,EAAAhU,EAAAsf,EAAAn9B,EAAAD,EAAA6xB,GAAAvR,YAAgDnO,EAAA,GAAA61B,cAAAzyB,EAAAgT,EAAAuJ,EAAAhU,EAAAsf,EAAAn9B,EAAAD,EAAA6xB,GAAAvR,YAAgDnO,EAAA,GAAA61B,cAAAzyB,EAAAtS,EAAA6uB,EAAAC,EAAAqL,EAAAr9B,EAAAC,EAAA2kC,GAAArkB,YAAgDnO,EAAA,GAAA61B,cAAAzyB,EAAAtS,EAAA6uB,EAAAC,EAAAqL,EAAAr9B,EAAAC,EAAA2kC,GAAArkB,YAAgDrU,MAAYg8B,iBAAA,WAA6B,GAAAh2B,GAAA,GAAA2G,GAAA+qB,MAAuB,iBAAAxxB,GAAmB,GAAAnS,GAAAmS,EAAAgxB,QAAyH,OAAxG,QAAAnjC,EAAAkoC,gBAAAloC,EAAAmoC,wBAAmDl2B,EAAAwe,KAAAzwB,EAAAkoC,gBAAA7I,aAAAltB,EAAAwtB,aAAqD1zB,KAAAq3B,iBAAArxB,OACpfm2B,iBAAA,WAA4B,GAAAn2B,GAAA,GAAA2G,GAAA+qB,MAAuB,iBAAAxxB,GAAgG,MAA7EF,GAAAhL,OAAAqW,IAAA,OAAoBrL,EAAAmuB,OAAA,kBAA2BnuB,EAAAotB,aAAAltB,EAAAwtB,aAA8B1zB,KAAAq3B,iBAAArxB,OAAiCqxB,iBAAA,SAAArxB,GAAgC,GAAAE,GAAAlG,KAAA67B,OAAA9nC,EAAAiS,EAAAhL,MAA6BgL,MAAAmuB,MAAY,QAAA7X,GAAA,EAAY,EAAAA,EAAIA,IAAA,GAAApW,EAAAoW,GAAAoa,gBAAA3iC,GAAAiS,EAAA,QAA0C,WAASwwB,cAAA,WAA0B,GAAAxwB,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,OAA4C,iBAAA1f,GAAmB,OAAAuoB,GAAAtc,KAAA67B,OAAA7kC,EAAA,EAA0B,EAAAA,EAAIA,IAAA,CAAK,GAAAsS,GAAAgT,EAAAtlB,EAAWgP,GAAAjH,EAAA,EAAAuK,EAAAiuB,OAAAx4B,EAAAhL,EAAA0mB,IAAA1b,EAAAhL,EAAA0L,IAAAV,EAAiCmH,EAAAnH,EAAA,EAAAuK,EAAAiuB,OAAAx4B,EACxehL,EAAA0L,IAAAV,EAAAhL,EAAA0mB,IAAA1b,EAAgBiH,EAAAgN,EAAA,EAAA1J,EAAAiuB,OAAAvkB,EAAAjf,EAAA0mB,IAAAzH,EAAAjf,EAAA0L,IAAAuT,EAAiC9M,EAAA8M,EAAA,EAAA1J,EAAAiuB,OAAAvkB,EAAAjf,EAAA0L,IAAAuT,EAAAjf,EAAA0mB,IAAAzH,EAAiChN,EAAAiN,EAAA,EAAA3J,EAAAiuB,OAAAtkB,EAAAlf,EAAA0mB,IAAAxH,EAAAlf,EAAA0L,IAAAwT,EAAiC/M,EAAA+M,EAAA,EAAA3J,EAAAiuB,OAAAtkB,EAAAlf,EAAA0L,IAAAwT,EAAAlf,EAAA0mB,IAAAxH,CAAiC,IAAAsR,GAAAjb,EAAAotB,gBAAA1wB,GAAAsD,IAAAotB,gBAAAxwB,EAAkD,MAAAqe,GAAA,EAAAjb,EAAA,SAAqB,aAAU+sB,cAAA,SAAArwB,GAA6B,OAAAE,GAAAlG,KAAA67B,OAAA9nC,EAAA,EAA0B,EAAAA,EAAIA,IAAA,KAAAmS,EAAAnS,GAAA2iC,gBAAA1wB,GAAA,QAA0C,YAAW2G,EAAA8O,MAAA,SAAAzV,EAAAE,GAA0BlG,KAAAu3B,OAAA,SAAAvxB,IAAA,GAAA2G,GAAA8G,QAAA,OAAkDzT,KAAAw3B,SAAA,SAAAtxB,IAAA,GACjayG,EAAA8O,MAAA/T,WAAuB7S,YAAA8X,EAAA8O,MAAApK,IAAA,SAAArL,EAAAE,GAA8E,MAApClG,MAAAu3B,OAAA/S,KAAAxe,GAAoBhG,KAAAw3B,SAAAtxB,EAAgBlG,MAAY+7B,cAAA,SAAA/1B,EAAAE,EAAAnS,EAAAuoB,GAAwE,MAAvCtc,MAAAu3B,OAAAlmB,IAAArL,EAAAE,EAAAnS,GAAuBiM,KAAAw3B,SAAAlb,EAAgBtc,MAAYo8B,8BAAA,SAAAp2B,EAAAE,GAAmG,MAAtDlG,MAAAu3B,OAAA/S,KAAAxe,GAAoBhG,KAAAw3B,UAAAtxB,EAAAkV,IAAApb,KAAAu3B,QAAkCv3B,MAAYq8B,sBAAA,WAAkC,GAAAr2B,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,OAA4C,iBAAA1f,EAAAuoB,EAAAtlB,GAC/X,MADsZslB,GAAAtW,EAAA2rB,WAAA36B,EAAAslB,GAAAf,MAAArV,EAAAyrB,WAAA59B,EAAAuoB,IAAAjI,YAAyDrU,KAAAo8B,8BAAA9f,EACldvoB,GAAGiM,SAAarJ,MAAA,WAAoB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAAsE,MAApDhG,MAAAu3B,OAAA/S,KAAAxe,EAAAuxB,QAA2Bv3B,KAAAw3B,SAAAxxB,EAAAwxB,SAAyBx3B,MAAYqU,UAAA,WAAsB,GAAArO,GAAA,EAAAhG,KAAAu3B,OAAA/gC,QAA4E,OAA/CwJ,MAAAu3B,OAAA58B,eAAAqL,GAA8BhG,KAAAw3B,UAAAxxB,EAAiBhG,MAAYqyB,OAAA,WAA0D,MAAvCryB,MAAAw3B,aAAkBx3B,KAAAu3B,OAAAlF,SAAqBryB,MAAY02B,gBAAA,SAAA1wB,GAA6B,MAAAhG,MAAAu3B,OAAAnc,IAAApV,GAAAhG,KAAAw3B,UAAwC8E,iBAAA,SAAAt2B,GAA8B,MAAAhG,MAAA02B,gBAAA1wB,EAAAhL,QAAAgL,EAAAmuB,QAA+CoI,aAAA,SAAAv2B,EACpeE,GAAG,MAAAlG,MAAAw8B,WAAAx2B,EAAAE,GAAA0O,IAAA5O,GAAAqsB,UAA4CmK,WAAA,SAAAx2B,EAAAE,GAA0B,GAAAnS,GAAAiM,KAAA02B,gBAAA1wB,EAA8B,QAAAE,GAAA,GAAAyG,GAAA8G,SAAA+Q,KAAAxkB,KAAAu3B,QAAA58B,eAAA5G,IAAiE0oC,cAAA,WAA0B,GAAAz2B,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,EAAAnS,GAAqB,GAAAuoB,GAAAvoB,GAAA,GAAA4Y,GAAA8G,QAAAzc,EAAAkP,EAAAqvB,MAAAvvB,GAAAsD,EAAAtJ,KAAAu3B,OAAAnc,IAAApkB,EAA6D,YAAAsS,GAAsEA,IAAApD,EAAA2N,MAAAuH,IAAApb,KAAAu3B,QAAAv3B,KAAAw3B,UAAAluB,EAAA,EAAAA,GAAA,EAAAA,EAAA,OAAAgT,EAAAkI,KAAAxtB,GAAA2D,eAAA2O,GAAA6F,IAAAjJ,EAAA2N,QAA5D,IAAA7T,KAAA02B,gBAAAxwB,EAAA2N,OAAAyI,EAAAkI,KAAAte,EAAA2N,OAAA,WAAgL6oB,eAAA,SAAA12B,GAA8B,GAAAE,GACpgBlG,KAAA02B,gBAAA1wB,EAAA6N,MAA4D,OAA9B7N,GAAAhG,KAAA02B,gBAAA1wB,EAAAsvB,KAA8B,EAAApvB,GAAA,EAAAF,GAAA,EAAAA,GAAA,EAAAE,GAA0BswB,cAAA,SAAAxwB,GAA2B,MAAAA,GAAAsxB,gBAAAt3B,OAA+Bq3B,iBAAA,SAAArxB,GAA8B,MAAAA,GAAAsxB,gBAAAt3B,OAA+B28B,cAAA,SAAA32B,GAA2B,OAAAA,GAAA,GAAA2G,GAAA8G,SAAA+Q,KAAAxkB,KAAAu3B,QAAA58B,gBAAAqF,KAAAw3B,WAA8EpE,aAAA,WAAyB,GAAAptB,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAAgrB,OAA4C,iBAAA5jC,EAAAuoB,GAAqB,GAAAtlB,GAAAgJ,KAAA28B,cAAA32B,GAAAotB,aAAAr/B,GAAAuV,EAAAgT,GAAApW,EAAAsyB,gBAAAzkC,GAAAuV,EAAAtJ,KAAAu3B,OAAApE,aAAA7pB,GAAA+K,WACxX,OAAxBrU,MAAAw3B,UAAAxgC,EAAAokB,IAAA9R,GAAwBtJ,SAAayU,UAAA,SAAAzO,GAA2D,MAAlChG,MAAAw3B,UAAAxxB,EAAAoV,IAAApb,KAAAu3B,QAAkCv3B,MAAYqmB,OAAA,SAAArgB,GAAoB,MAAAA,GAAAuxB,OAAAlR,OAAArmB,KAAAu3B,SAAAvxB,EAAAwxB,WAAAx3B,KAAAw3B,WAAkE7qB,EAAAiwB,UAAA,SAAA52B,EAAAE,EAAAnS,GAA6G,MAA7EiM,MAAAm0B,OAAA,SAAAnuB,IAAA,EAA2BhG,KAAAk0B,IAAA,SAAAhuB,IAAA,EAAwBlG,KAAA+R,MAAA,SAAAhe,IAAA,EAA0BiM,MAC/S2M,EAAAiwB,UAAAl1B,WAA2B7S,YAAA8X,EAAAiwB,UAAAvrB,IAAA,SAAArL,EAAAE,EAAAnS,GAAsF,MAAtCiM,MAAAm0B,OAAAnuB,EAAchG,KAAAk0B,IAAAhuB,EAAWlG,KAAA+R,MAAAhe,EAAaiM,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAA2F,MAAzEhG,MAAAm0B,OAAA3P,KAAAxe,EAAAmuB,QAA2Bn0B,KAAAk0B,IAAA1P,KAAAxe,EAAAkuB,KAAqBl0B,KAAA+R,MAAAyS,KAAAxe,EAAA+L,OAAyB/R,MAAY68B,SAAA,WAA6E,MAAxD78B,MAAAk0B,IAAA10B,KAAAC,IAAA,KAAAD,KAAAib,IAAAjb,KAAAyS,GAAA,KAAAjS,KAAAk0B,MAAwDl0B,MAAYk1B,eAAA,SAAAlvB,GACpU,MADgWhG,MAAAm0B,OAAAnuB,EAAAxP,SAAuB,IAAAwJ,KAAAm0B,OAAAn0B,KAAAk0B,IAAAl0B,KAAA+R,MAAA,GAAA/R,KAAA+R,MAAAvS,KAAAuxB,MAAA/qB,EAAAjH,EAAAiH,EAAAiN,GAAAjT,KAAAk0B,IAC1a10B,KAAA6b,KAAA1O,EAAAnN,KAAAslB,MAAA9e,EAAAgN,EAAAhT,KAAAm0B,UAAA,KAAmDn0B,OACnD2M,EAAAnN,MAAYs7B,QAAAt7B,KAAAyS,GAAA,IAAA6qB,QAAA,IAAAt9B,KAAAyS,GAAA8qB,aAAA,WAAgE,GAAAzgB,GAAAtW,EAAA,iEAAA8uB,MAAA,IAAA5uB,EAAA+D,MAAA,IAAAlW,EAAA,CAAmG,mBAAkB,OAAAiD,GAAA,EAAY,GAAAA,EAAKA,IAAA,IAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,EAAAkP,EAAAlP,GAAA,SAAAA,EAAAkP,EAAAlP,GAAA,QAAAjD,MAAA,kBAAAyL,KAAAw9B,SAAA,GAAA1gB,EAAA,GAAAvoB,MAAA,EAAAmS,EAAAlP,GAAAgP,EAAA,KAAAhP,EAAA,EAAAslB,EAAA,EAAAA,GAA6I,OAAApW,GAAAhG,KAAA,QAAmB4kB,MAAA,SAAA9e,EAAAE,EAAAnS,GAAyB,MAAAyL,MAAAC,IAAAyG,EAAA1G,KAAAib,IAAA1mB,EAAAiS,KAAiC6e,gBAAA,SAAA7e,EAAAE,GAA+B,OAAAF,EAAAE,QAAgB+2B,UAAA,SAAAj3B,EAAAE,EAAAnS,EAC3duoB,EAAAtlB,GAAK,MAAAslB,IAAAtW,EAAAE,IAAAlP,EAAAslB,IAAAvoB,EAAAmS,IAA2Bg3B,WAAA,SAAAl3B,EAAAE,EAAAnS,GAA4B,MAAAiS,IAAAE,EAAA,EAAiBF,GAAAjS,EAAA,GAAiBiS,KAAAE,IAAAnS,EAAAmS,GAAcF,KAAA,IAAAA,KAAmBm3B,aAAA,SAAAn3B,EAAAE,EAAAnS,GAA8B,MAAAiS,IAAAE,EAAA,EAAiBF,GAAAjS,EAAA,GAAiBiS,KAAAE,IAAAnS,EAAAmS,GAAcF,UAAA,EAAAA,EAAA,UAA6Bo3B,SAAA,WAA2G,MAAtF9nC,SAAA0vB,KAAA,yEAAsFxlB,KAAAw9B,UAAqBK,QAAA,SAAAr3B,EAAAE,GAAuB,MAAAF,GAAAxG,KAAAzI,MAAAyI,KAAAw9B,UAAA92B,EAAAF,EAAA,KAA2Cs3B,UAAA,SAAAt3B,EAAAE,GAAyB,MAAAF,GAAAxG,KAAAw9B,UAAA92B,EAAAF,IAA6Bu3B,gBAAA,SAAAv3B,GAA6B,MAAAA,IAC/f,GAAAxG,KAAAw9B,WAAmBQ,SAAA,SAAAx3B,GAAsB,MAAAA,GAAA2G,EAAAnN,KAAAs7B,SAA4B2C,SAAA,SAAAz3B,GAAsB,MAAAA,GAAA2G,EAAAnN,KAAAs9B,SAA4BY,aAAA,SAAA13B,GAA0B,YAAAA,IAAA,QAAAA,GAA0B23B,kBAAA,SAAA33B,GAA+B,MAAAxG,MAAAuc,IAAA,EAAAvc,KAAA2yB,MAAA3yB,KAAA1G,IAAAkN,GAAAxG,KAAAo+B,OAAoDC,eAAA,SAAA73B,GAA6E,MAAjDA,KAAIA,MAAA,EAAQA,MAAA,EAAQA,MAAA,EAAQA,MAAA,EAAQA,MAAA,GAASA,IAAIA,IAC3U2G,EAAAmxB,OAAA,SAAA93B,GAAyB,QAAAE,GAAAF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAAgD,MAAtBve,GAAA,IAAAjS,EAAAiS,GAAWsW,EAAA,IAAAA,EAAApW,IAAW,GAAAA,EAAAnS,GAAAiS,EAAAsW,GAAAiI,OAAAre,EAAAnS,GAAA,EAAAiS,EAAAsW,GAAAhT,EAAAtD,EAAAhP,EAAAkP,EAA+ClG,KAAAnG,OAAAmM,CAAc,IAAwBhP,GAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,EAAAqL,EAAAl9B,EAAAF,EAAxBC,KAAAuoB,GAAYvd,EAAA,EAAAiU,EAAA,EAAAC,EAAA,EAA+BjT,MAAA+9B,cAAA,SAAA/3B,GAA+BhG,KAAAnG,SAAe,QAAAqM,GAAA,EAAYA,EAAAF,EAAAxP,OAAW0P,IAAAlG,KAAAnG,OAAAqM,IAAoBnH,EAAAiH,EAAAE,GAAA,GAAA8M,EAAAhN,EAAAE,GAAA,GAAA+M,EAAAjN,EAAAE,GAAA,KAAgClG,KAAAg+B,SAAA,SAAAh4B,GACrH,MAD+IhP,IAAAgJ,KAAAnG,OAAArD,OAAA,GAAAwP,EAA2BsD,EAAA9J,KAAAzI,MAAAC,GAAgButB,EAAAvtB,EAAAsS,EAAMvV,EAAA,OAAAuV,MAAA,EAAiBvV,EAAA,GAAAuV,EAAOvV,EAAA,GAAAuV,EAAAtJ,KAAAnG,OAAArD,OAAA,EAAAwJ,KAAAnG,OAAArD,OAAA,EAAA8S,EAAA,EAAqDvV,EAAA,GAAAuV,EAAAtJ,KAAAnG,OAAArD,OAAA,EAAAwJ,KAAAnG,OAAArD,OAAA,EAAA8S,EAClc,EAAEuc,EAAA7lB,KAAAnG,OAAA9F,EAAA,IAAoBm9B,EAAAlxB,KAAAnG,OAAA9F,EAAA,IAAoBC,EAAAgM,KAAAnG,OAAA9F,EAAA,IAAoBD,EAAAkM,KAAAnG,OAAA9F,EAAA,IAAoB8d,EAAA0S,IAAMuB,EAAAvB,EAAA1S,EAAMyK,EAAAvd,EAAAmH,EAAA2f,EAAA9mB,EAAAmyB,EAAAnyB,EAAA/K,EAAA+K,EAAAjL,EAAAiL,EAAAwlB,EAAA1S,EAAAiU,GAA6BxJ,EAAAtJ,EAAA9M,EAAA2f,EAAA7S,EAAAke,EAAAle,EAAAhf,EAAAgf,EAAAlf,EAAAkf,EAAAuR,EAAA1S,EAAAiU,GAA6BxJ,EAAArJ,EAAA/M,EAAA2f,EAAA5S,EAAAie,EAAAje,EAAAjf,EAAAif,EAAAnf,EAAAmf,EAAAsR,EAAA1S,EAAAiU,GAA6BxJ,GAAUtc,KAAAi+B,sBAAA,WAAsC,GAAAj4B,GAAAE,EAAAnS,EAAAiM,KAAAnG,OAAArD,OAAA8lB,IAAkC,KAAAtW,EAAA,EAAQA,EAAAjS,EAAIiS,IAAAE,EAAAlG,KAAAnG,OAAAmM,GAAAsW,EAAAtW,IAAAE,EAAAnH,EAAAmH,EAAA8M,EAAA9M,EAAA+M,EAAwC,OAAAqJ,IAAUtc,KAAAk+B,UAAA,SAAAl4B,GAA2B,GAAAE,GAAAnS,EAAAuoB,EAAAtlB,EAAAkP,IAAA,EAAAoD,EAAA,GAAAqD,GAAA8G,QAAA8Q,EAAA,GAAA5X,GAAA8G,QAAA5B,KAAAiU,EAAA,CAAmI,KAAhEjU,EAAA,KAAO7L,MAAA,KAAWjS,EAAAiM,KAAAnG,OAAArD,OAAAwP,EAAuBsD,EAAAkb,KAAAxkB,KAAAnG,OAAA,IAAuBmM,EAAA,EAAQA,EAAAjS,EAAIiS,IAAAE,EAC/eF,EAAAjS,EAAAuoB,EAAAtc,KAAAg+B,SAAA93B,GAAAqe,EAAAC,KAAAlI,GAAAwJ,GAAAvB,EAAAiO,WAAAlpB,KAAAkb,KAAAlI,GAAApW,GAAAlG,KAAAnG,OAAArD,OAAA,EAAA0P,EAAA1G,KAAAzI,MAAAmP,OAAAlP,IAAA6a,EAAA3L,GAAA4f,EAAA9uB,EAAAkP,EAAwI,OAAd2L,KAAArb,QAAAsvB,GAAqBqY,OAAAtsB,EAAAusB,MAAAtY,IAAmB9lB,KAAAq+B,yBAAA,SAAAr4B,GAA0C,GAAAE,GAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,KAAAiU,EAAA,GAAAnZ,GAAA8G,QAAA3f,EAAAkM,KAAAk+B,WAAmG,KAAvCrsB,EAAAhS,KAAAimB,EAAAtB,KAAAxkB,KAAAnG,OAAA,IAAAlD,SAAuCuP,EAAA,EAAQA,EAAAlG,KAAAnG,OAAArD,OAAqB0P,IAAA,CAAoH,IAA/GnS,EAAAD,EAAAqqC,OAAAj4B,GAAApS,EAAAqqC,OAAAj4B,EAAA,GAA4Bqe,EAAA/kB,KAAA0yB,KAAAlsB,EAAAjS,EAAAD,EAAAsqC,OAAyBpnC,GAAAkP,EAAA,IAAAlG,KAAAnG,OAAArD,OAAA,GAA+B8S,EAAApD,GAAAlG,KAAAnG,OAAArD,OAAA,GAA2BzC,EAAA,EAAQA,EAAAwwB,EAAA,EAAMxwB,IAAAuoB,EAAAtlB,EAAA,EAAAutB,EAAAxwB,GAAAuV,EAAAtS,GAAAslB,EAAAtc,KAAAg+B,SAAA1hB,GAC9czK,EAAAhS,KAAAimB,EAAAtB,KAAAlI,GAAA3lB,QAA0Bkb,GAAAhS,KAAAimB,EAAAtB,KAAAxkB,KAAAnG,OAAAqM,IAAAvP,SAAuCqJ,KAAAnG,OAAAgY,IAAgBlF,EAAA2xB,SAAA,SAAAt4B,EAAAE,EAAAnS,GAA+BiM,KAAAgG,EAAA,SAAAA,IAAA,GAAA2G,GAAA8G,QAAsCzT,KAAAkG,EAAA,SAAAA,IAAA,GAAAyG,GAAA8G,QAAsCzT,KAAAjM,EAAA,SAAAA,IAAA,GAAA4Y,GAAA8G,SAAuC9G,EAAA2xB,SAAA/G,OAAA,WAAiC,GAAAvxB,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,EAAAnS,EAAAuoB,EAAAtlB,GAA8G,MAArFA,MAAA,GAAA2V,GAAA8G,QAAuBzc,EAAA26B,WAAArV,EAAAvoB,GAAkBiS,EAAA2rB,WAAAzrB,EAAAnS,GAAkBiD,EAAAukB,MAAAvV,GAAWE,EAAAlP,EAAA25B,WAAe,EAAAzqB,EAAAlP,EAAA2D,eAAA,EAAA6E,KAAAgmB,KAAAtf,IAAAlP,EAAAqa,IAAA,WAC1Y1E,EAAA2xB,SAAAC,mBAAA,WAA6C,GAAAv4B,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,GAAA4Y,GAAA8G,OAAgE,iBAAA6I,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAA2B7L,EAAA2rB,WAAApN,EAAAvtB,GAAkBkP,EAAAyrB,WAAAroB,EAAAtS,GAAkBjD,EAAA49B,WAAArV,EAAAtlB,GAAkBslB,EAAAtW,EAAAoV,IAAApV,GAAWhP,EAAAgP,EAAAoV,IAAAlV,GAAWoD,EAAAtD,EAAAoV,IAAArnB,EAAW,IAAA+xB,GAAA5f,EAAAkV,IAAAlV,EAAeqe,GAAAre,EAAAkV,IAAArnB,EAAW,IAAA8xB,GAAAvJ,EAAAwJ,EAAA9uB,GAAqC,OAAvB6a,MAAA,GAAAlF,GAAA8G,QAAuB,IAAAoS,EAAAhU,EAAAR,eAAgCwU,EAAA,EAAAA,EAAMC,KAAAxc,EAAAtS,EAAAutB,GAAAsB,EAAcvJ,KAAAiI,EAAAvtB,EAAAsS,GAAAuc,EAAchU,EAAAR,IAAA,EAAAyU,EAAAxJ,IAAAwJ,QAChWnZ,EAAA2xB,SAAAjI,cAAA,WAAwC,GAAArwB,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,EAAAnS,EAAAuoB,EAAAtlB,GAAwE,MAA/CkP,GAAAyG,EAAA2xB,SAAAC,mBAAAr4B,EAAAnS,EAAAuoB,EAAAtlB,EAAAgP,GAA+C,GAAAE,EAAAnH,GAAA,GAAAmH,EAAA8M,GAAA,GAAA9M,EAAAnH,EAAAmH,EAAA8M,MACxIrG,EAAA2xB,SAAA52B,WAA0B7S,YAAA8X,EAAA2xB,SAAAjtB,IAAA,SAAArL,EAAAE,EAAAnS,GAA4F,MAA7CiM,MAAAgG,EAAAwe,KAAAxe,GAAehG,KAAAkG,EAAAse,KAAAte,GAAelG,KAAAjM,EAAAywB,KAAAzwB,GAAeiM,MAAYw+B,wBAAA,SAAAx4B,EAAAE,EAAAnS,EAAAuoB,GAAiG,MAAtDtc,MAAAgG,EAAAwe,KAAAxe,EAAAE,IAAkBlG,KAAAkG,EAAAse,KAAAxe,EAAAjS,IAAkBiM,KAAAjM,EAAAywB,KAAAxe,EAAAsW,IAAkBtc,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAAqE,MAAnDhG,MAAAgG,EAAAwe,KAAAxe,KAAiBhG,KAAAkG,EAAAse,KAAAxe,EAAAE,GAAiBlG,KAAAjM,EAAAywB,KAAAxe,EAAAjS,GAAiBiM,MAAYy+B,KAAA,WAAiB,GAAAz4B,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,OAA4C,mBAC/a,MADiczN,GAAA2rB,WAAA3xB,KAAAjM,EAAAiM,KAAAkG,GAA4BA,EAAAyrB,WAAA3xB,KAAAgG,EACrehG,KAAAkG,GAAQ,GAAAF,EAAAuV,MAAArV,GAAA1P,aAA8BkoC,SAAA,SAAA14B,GAAwB,OAAAA,GAAA,GAAA2G,GAAA8G,SAAAge,WAAAzxB,KAAAgG,EAAAhG,KAAAkG,GAAAiJ,IAAAnP,KAAAjM,GAAA4G,eAAA,MAAuF48B,OAAA,SAAAvxB,GAAoB,MAAA2G,GAAA2xB,SAAA/G,OAAAv3B,KAAAgG,EAAAhG,KAAAkG,EAAAlG,KAAAjM,EAAAiS,IAAqD24B,MAAA,SAAA34B,GAAmB,OAAAA,GAAA,GAAA2G,GAAA8O,OAAA4gB,sBAAAr8B,KAAAgG,EAAAhG,KAAAkG,EAAAlG,KAAAjM,IAAuEwqC,mBAAA,SAAAv4B,EAAAE,GAAkC,MAAAyG,GAAA2xB,SAAAC,mBAAAv4B,EAAAhG,KAAAgG,EAAAhG,KAAAkG,EAAAlG,KAAAjM,EAAAmS,IAAmEmwB,cAAA,SAAArwB,GAA2B,MAAA2G,GAAA2xB,SAAAjI,cAAArwB,EAAAhG,KAAAgG,EAAAhG,KAAAkG,EAAAlG,KAAAjM,IACxb6hC,oBAAA,WAA+B,GAAA5vB,GAAAE,EAAAnS,EAAAuoB,CAAY,iBAAAtlB,EAAAsS,GAAqB,SAAAtD,MAAA,GAAA2G,GAAA8O,MAAAvV,GAAA,GAAAyG,GAAA0oB,MAAA,GAAA1oB,GAAA0oB,MAAA,GAAA1oB,GAAA0oB,OAAAthC,EAAA,GAAA4Y,GAAA8G,QAAA6I,EAAA,GAAA3P,GAAA8G,QAA4H,IAAA8Q,GAAAjb,GAAA,GAAAqD,GAAA8G,QAAA5B,EAAA1G,GAAwG,IAAlEnF,EAAAq2B,sBAAAr8B,KAAAgG,EAAAhG,KAAAkG,EAAAlG,KAAAjM,GAA8CiS,EAAAu2B,aAAAvlC,EAAAjD,IAAoB,IAAAiM,KAAAq2B,cAAAtiC,GAAAwwB,EAAAC,KAAAzwB,OAAwC,CAAKmS,EAAA,GAAAmL,IAAArR,KAAAgG,EAAAhG,KAAAkG,GAAwBA,EAAA,GAAAmL,IAAArR,KAAAkG,EAAAlG,KAAAjM,GAAwBmS,EAAA,GAAAmL,IAAArR,KAAAjM,EAAAiM,KAAAgG,EAAwB,QAAA8f,GAAA,EAAYA,EAAA5f,EAAA1P,OAAWsvB,IAAA,CAAK5f,EAAA4f,GAAA8P,oBAAA7hC,GAAA,EAAAuoB,EAAiC,IAAAuJ,GAAA9xB,EAAA0+B,kBAAAnW,EAA6BuJ,GACnfhU,MAAAgU,EAAAtB,EAAAC,KAAAlI,KAAoB,MAAAiI,OAAU8B,OAAA,SAAArgB,GAAsB,MAAAA,KAAAqgB,OAAArmB,KAAAgG,MAAAE,EAAAmgB,OAAArmB,KAAAkG,IAAAF,EAAAjS,EAAAsyB,OAAArmB,KAAAjM,KAAoE4Y,EAAAiyB,YAAA,SAAA54B,EAAAE,EAAAnS,EAAAuoB,GAAoCtc,KAAA6+B,mBAAA74B,EAA0BhG,KAAA8+B,aAAA,EAAoB9+B,KAAA++B,aAAA,SAAAziB,IAAA,GAAApW,GAAArR,YAAAd,GAAoDiM,KAAAg/B,aAAA94B,EAAoBlG,KAAAi/B,UAAAlrC,GAClR4Y,EAAAiyB,YAAAl3B,WAA6B7S,YAAA8X,EAAAiyB,YAAAM,SAAA,SAAAl5B,GAAmD,GAAAE,GAAAlG,KAAA6+B,mBAAA9qC,EAAAiM,KAAA8+B,aAAAxiB,EAAApW,EAAAnS,GAAAiD,EAAAkP,EAAAnS,EAAA,EAAkEiS,GAAA,CAAGE,EAAA,CAAGnS,EAAA,CAAGuoB,EAAA,KAAAtW,EAAAsW,GAAA,CAAa,OAAAhT,GAAAvV,EAAA,IAAe,CAAE,YAAAuoB,EAAA,CAAe,GAAAtW,EAAAhP,EAAA,KAAAslB,EAA4C,OAA7Btc,MAAA8+B,aAAA/qC,EAAAmS,EAAA1P,OAA6BwJ,KAAAm/B,UAAAprC,EAAA,EAAAiS,EAAAhP,GAA+B,GAAAjD,IAAAuV,EAAA,KAA4B,IAAbtS,EAAAslB,EAAIA,EAAApW,IAAAnS,GAASiS,EAAAsW,EAAA,KAAApW,GAAeoW,EAAApW,EAAA1P,MAAW,MAAAzC,GAAQ,GAAAiS,GAAAhP,EAAA,KAAAgP,EAA2C,KAAtBsD,EAAApD,EAAA,GAAOF,EAAAsD,IAAAvV,EAAA,EAAAiD,EAAAsS,GAAeA,EAAAvV,EAAA,IAAW,CAAE,YAAAiD,EAAA,MAAAgJ,MAAA8+B,aAAA,EAAA9+B,KAAAo/B,aAAA,EAAAp5B,EAAAsW,EAAkE,IAAAvoB,IAAAuV,EAAA,KAA8B,IAAfgT,EAAAtlB,EAAIA,EAAAkP,IAAAnS,EAAA,GAAWiS,GAAAhP,EAAA,KAAAkP,GAAgBoW,EACzfvoB,EAAEA,EAAA,EAAK,KAAKA,EAAAuoB,GAAItlB,EAAAjD,EAAAuoB,IAAA,EAAAtW,EAAAE,EAAAlP,GAAAslB,EAAAtlB,EAAAjD,EAAAiD,EAAA,CAA4C,IAAhBslB,EAAApW,EAAAnS,GAAOiD,EAAAkP,EAAAnS,EAAA,GAAS,SAAAiD,EAAA,MAAAgJ,MAAA8+B,aAAA,EAAA9+B,KAAAo/B,aAAA,EAAAp5B,EAAAsW,EAAkE,aAAAA,EAAA,MAAAtc,MAAA8+B,aAAA/qC,EAAAmS,EAAA1P,OAAAwJ,KAAAm/B,UAAAprC,EAAA,EAAAiD,EAAAgP,GAA0EhG,KAAA8+B,aAAA/qC,EAAoBiM,KAAAq/B,iBAAAtrC,EAAAiD,EAAAslB,GAA6B,MAAAtc,MAAAs/B,aAAAvrC,EAAAiD,EAAAgP,EAAAsW,IAAkCijB,SAAA,KAAAC,oBAAkCC,aAAA,WAAyB,MAAAz/B,MAAAu/B,UAAAv/B,KAAAw/B,kBAA4CE,iBAAA,SAAA15B,GAA8B,GAAAE,GAAAlG,KAAA++B,aAAAhrC,EAAAiM,KAAAg/B,aAAA1iB,EAAAtc,KAAAi/B,SAA6Dj5B,IAAAsW,CAAK,QAAAtlB,GAAA,EAAYA,IAAAslB,IAAMtlB,EAAAkP,EAAAlP,GACpfjD,EAAAiS,EAAAhP,EAAO,OAAAkP,IAASo5B,aAAA,SAAAt5B,EAAAE,EAAAnS,EAAAuoB,GAAgC,KAAAxa,OAAA,4BAAwCu9B,iBAAA,SAAAr5B,EAAAE,EAAAnS,MAAqCkoB,OAAAI,OAAA1P,EAAAiyB,YAAAl3B,WAA2C03B,aAAAzyB,EAAAiyB,YAAAl3B,UAAAg4B,iBAAAP,UAAAxyB,EAAAiyB,YAAAl3B,UAAAg4B,mBAAmH/yB,EAAAgzB,iBAAA,SAAA35B,EAAAE,EAAAnS,EAAAuoB,GAAyC3P,EAAAiyB,YAAA/qC,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,GAAqCtc,KAAA4/B,YAAA5/B,KAAA6/B,YAAA7/B,KAAA8/B,YAAA9/B,KAAA+/B,gBACzWpzB,EAAAgzB,iBAAAj4B,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAiyB,YAAAl3B,YAA2F7S,YAAA8X,EAAAgzB,iBAAAH,kBAAqDS,YAAAtzB,EAAA0W,oBAAA6c,UAAAvzB,EAAA0W,qBAA0Egc,iBAAA,SAAAr5B,EAAAE,EAAAnS,GAAkC,GAAAuoB,GAAAtc,KAAA6+B,mBAAA7nC,EAAAgP,EAAA,EAAAsD,EAAAtD,EAAA,EAAAue,EAAAjI,EAAAtlB,GAAA6a,EAAAyK,EAAAhT,EAAwD,aAAAib,EAAA,OAAAvkB,KAAAy/B,eAAAQ,aAAsD,IAAAtzB,GAAA2W,gBAAAtsB,EAAAgP,EAA+Bue,EAAA,EAAAre,EAAAnS,CAAQ,MAAM,KAAA4Y,GAAA4W,iBAAAvsB,EAAAslB,EAAA9lB,OAAA,EAAyC+tB,EAAAre,EAAAoW,EAAAtlB,GAAAslB,EAAAtlB,EAAA,EAAgB,MAAM,SAAAA,EAAAgP,EAAAue,EAAAxwB,EAAgB,YAAA8d,EAAA,OAAA7R,KAAAy/B,eAAAS,WAAoD,IAAAvzB,GAAA2W,gBAAAha,EAC1hBtD,EAAE6L,EAAA,EAAA9d,EAAAmS,CAAQ,MAAM,KAAAyG,GAAA4W,iBAAAja,EAAA,EAAgCuI,EAAA9d,EAAAuoB,EAAA,GAAAA,EAAA,EAAc,MAAM,SAAAhT,EAAAtD,EAAA,EAAA6L,EAAA3L,EAAkBF,EAAA,IAAAjS,EAAAmS,GAAWoW,EAAAtc,KAAAi/B,UAAiBj/B,KAAA+/B,YAAA/5B,GAAAE,EAAAqe,GAAyBvkB,KAAA6/B,YAAA75B,GAAA6L,EAAA9d,GAAyBiM,KAAA8/B,YAAA9oC,EAAAslB,EAAqBtc,KAAA4/B,YAAAt2B,EAAAgT,GAAqBgjB,aAAA,SAAAt5B,EAAAE,EAAAnS,EAAAuoB,GAAgC,GAAAtlB,GAAAgJ,KAAA++B,aAAAz1B,EAAAtJ,KAAAg/B,aAAAza,EAAAvkB,KAAAi/B,SAA6Dj5B,IAAAue,CAAK,IAAA1S,GAAA7L,EAAAue,EAAAuB,EAAA9lB,KAAA8/B,YAAAja,EAAA7lB,KAAA4/B,YAAA1O,EAAAlxB,KAAA+/B,YAAA/rC,EAAAgM,KAAA6/B,YAAA/rC,GAAAC,EAAAmS,IAAAoW,EAAApW,EAC9S,KADkZnS,EAAAD,IAAMwoB,EAAAvoB,EAAAD,EAAMoS,GAAAgrB,EAAA5U,EAAA,EAAA4U,EAAAn9B,EAAAm9B,EAAAp9B,EAAiBo9B,GAAA,EAAAA,GAAA5U,QAAA,EAAA4U,GAAAn9B,OAAAm9B,GAAAp9B,EAAA,EAAmCA,MAAAE,GAAAsoB,GAAA,IAAAtoB,GAAAD,EAAA,GAAAD,EAA0BE,IAAAsoB,EAAAtoB,EAC9eD,EAAEA,EAAA,EAAQA,IAAAwwB,IAAMxwB,EAAAiD,EAAAjD,GAAAmS,EAAAoD,EAAAwc,EAAA/xB,GAAAm9B,EAAA5nB,EAAAuI,EAAA9d,GAAAD,EAAAwV,EAAAtD,EAAAjS,GAAAC,EAAAsV,EAAAuc,EAAA9xB,EAA6C,OAAAiD,MAAY2V,EAAAwzB,oBAAA,SAAAn6B,EAAAE,EAAAnS,EAAAuoB,GAA4C3P,EAAAiyB,YAAA/qC,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,IAAsC3P,EAAAwzB,oBAAAz4B,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAiyB,YAAAl3B,YAA8F7S,YAAA8X,EAAAwzB,oBAAAb,aAAA,SAAAt5B,EAAAE,EAAAnS,EAAAuoB,GAAqE,MAAAtc,MAAA0/B,iBAAA15B,EAAA,MAAqC2G,EAAAyzB,kBAAA,SAAAp6B,EAAAE,EAAAnS,EAAAuoB,GAA0C3P,EAAAiyB,YAAA/qC,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,IAC7Y3P,EAAAyzB,kBAAA14B,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAiyB,YAAAl3B,YAA4F7S,YAAA8X,EAAAyzB,kBAAAd,aAAA,SAAAt5B,EAAAE,EAAAnS,EAAAuoB,GAAmE,GAAAtlB,GAAAgJ,KAAA++B,aAAAz1B,EAAAtJ,KAAAg/B,aAAAza,EAAAvkB,KAAAi/B,SAA6Dj5B,IAAAue,CAAK,IAAA1S,GAAA7L,EAAAue,CAA8B,KAApBre,GAAAnS,EAAAmS,IAAAoW,EAAApW,GAAcnS,EAAA,EAAAmS,EAAMoW,EAAA,EAAQA,IAAAiI,IAAMjI,EAAAtlB,EAAAslB,GAAAhT,EAAAuI,EAAAyK,GAAAvoB,EAAAuV,EAAAtD,EAAAsW,GAAApW,CAA2B,OAAAlP,MAAY2V,EAAA0zB,4BAAA,SAAAr6B,EAAAE,EAAAnS,EAAAuoB,GAAoD3P,EAAAiyB,YAAA/qC,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,IACxW3P,EAAA0zB,4BAAA34B,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAiyB,YAAAl3B,YAAsG7S,YAAA8X,EAAA0zB,4BAAAf,aAAA,SAAAt5B,EAAAE,EAAAnS,EAAAuoB,GAA6E,GAAAtlB,GAAAgJ,KAAA++B,aAAAz1B,EAAAtJ,KAAAg/B,aAAAza,EAAAvkB,KAAAi/B,SAAgF,KAAnBj5B,GAAAue,EAAKre,GAAAnS,EAAAmS,IAAAoW,EAAApW,GAAcnS,EAAAiS,EAAAue,EAAUve,IAAAjS,EAAMiS,GAAA,EAAA2G,EAAA+iB,WAAAuB,UAAAj6B,EAAA,EAAAsS,EAAAtD,EAAAue,EAAAjb,EAAAtD,EAAAE,EAAiD,OAAAlP,MAAY2V,EAAA2zB,MAAA,SAAAt6B,GAAwBhG,KAAAugC,UAAA,SAAAv6B,KAA+BhG,KAAAwgC,YAAAxgC,KAAAygC,QAAAzgC,KAAA0gC,UAAA,EAA+C1gC,KAAA2gC,SAAA,GACtbh0B,EAAA2zB,MAAA54B,WAAuB7S,YAAA8X,EAAA2zB,MAAAzsB,MAAA,WAAyC7T,KAAAygC,QAAAzgC,KAAA0gC,WAAAE,aAAAvhC,MAAAwhC,MAAsD7gC,KAAA2gC,SAAA,GAAgB1zB,KAAA,WAAiBjN,KAAA8gC,iBAAsB9gC,KAAA2gC,SAAA,GAAgBG,eAAA,WAA2C,MAAhB9gC,MAAA+gC,WAAgB/gC,KAAAwgC,aAAwBO,SAAA,WAAqB,GAAA/6B,GAAA,CAAoD,IAA5ChG,KAAAugC,YAAAvgC,KAAA2gC,SAAA3gC,KAAA6T,QAA4C7T,KAAA2gC,QAAA,CAAiB,GAAAz6B,IAAA06B,aAAAvhC,MAAAwhC,MAAA76B,GAAAE,EAAAlG,KAAAygC,SAAA,GAAuDzgC,MAAAygC,QAAAv6B,EAAelG,KAAAwgC,aAAAx6B,EAAoB,MAAAA,KAAW2G,EAAAq0B,gBAAA,aAC/b/kB,OAAAI,OAAA1P,EAAAq0B,gBAAAt5B,WAA+Cu5B,iBAAA,SAAAj7B,EAAAE,GAA+B,SAAAlG,KAAAkhC,aAAAlhC,KAAAkhC,cAA+C,IAAAntC,GAAAiM,KAAAkhC,UAAsB,UAAAntC,EAAAiS,KAAAjS,EAAAiS,YAAyBjS,EAAAiS,GAAA7D,QAAA+D,IAAAnS,EAAAiS,GAAAnG,KAAAqG,IAAmCi7B,iBAAA,SAAAn7B,EAAAE,GAAgC,YAAAlG,KAAAkhC,WAAA,QAAqC,IAAAntC,GAAAiM,KAAAkhC,UAAsB,iBAAAntC,EAAAiS,SAAAjS,EAAAiS,GAAA7D,QAAA+D,IAAiDk7B,oBAAA,SAAAp7B,EAAAE,GAAmC,YAAAlG,KAAAkhC,WAAA,CAA6B,GAAAntC,GAAAiM,KAAAkhC,WAAAl7B,EAAyB,aAAAjS,EAAA,CAAe,GAAAuoB,GAAAvoB,EAAAoO,QAAA+D,QAAmBoW,GAAAvoB,EAAAqO,OAAAka,EAAA,MAAwB+kB,cAAA,SAAAr7B,GAA2B,YACzgBhG,KAAAkhC,WAAA,CAAiB,GAAAh7B,GAAAlG,KAAAkhC,WAAAl7B,EAAA7K,KAA8B,aAAA+K,EAAA,CAAeF,EAAAs7B,OAAAthC,IAAc,QAAAjM,MAAAuoB,EAAA,EAAAtlB,EAAAkP,EAAA1P,OAAA8lB,EAAA,EAAgCA,EAAAtlB,EAAIslB,IAAAvoB,EAAAuoB,GAAApW,EAAAoW,EAAc,KAAAA,EAAA,EAAQA,EAAAtlB,EAAIslB,IAAAvoB,EAAAuoB,GAAAzoB,KAAAmM,KAAAgG,QAA2B2G,EAAA40B,OAAA,WAAwBvhC,KAAAwhC,KAAA,GAAa70B,EAAA40B,OAAA75B,WAAwB7S,YAAA8X,EAAA40B,OAAAlwB,IAAA,SAAArL,GAAyChG,KAAAwhC,KAAA,GAAAx7B,GAAey7B,OAAA,SAAAz7B,GAAoBhG,KAAAwhC,MAAA,GAAAx7B,GAAgBuC,OAAA,SAAAvC,GAAoBhG,KAAAwhC,MAAA,GAAAx7B,GAAgB07B,QAAA,SAAA17B,GAAqBhG,KAAAwhC,QAAA,GAAAx7B,IAAmBjB,KAAA,SAAAiB,GAAkB,YAAAhG,KAAAwhC,KAAAx7B,EAAAw7B,QAC5Z,SAAAx7B,GAAa,QAAAE,GAAAF,EAAAE,GAAgB,MAAAF,GAAAyvB,SAAAvvB,EAAAuvB,SAA6B,QAAA1hC,GAAAiS,EAAAE,EAAAoD,EAAAib,GAAoB,QAAAve,EAAA27B,UAAA37B,EAAA47B,QAAA17B,EAAAoD,IAAA,IAAAib,GAAA,CAA4Cve,IAAA67B,SAAatd,EAAA,CAAI,QAAA1S,GAAA7L,EAAAxP,OAAmB+tB,EAAA1S,EAAI0S,IAAAxwB,EAAAiS,EAAAue,GAAAre,EAAAoD,GAAA,IAAoBtD,EAAAwV,UAAA,SAAAtV,EAAAnS,EAAAuV,EAAAib,GAA8BvkB,KAAAiX,IAAA,GAAAjR,GAAAg1B,IAAA90B,EAAAnS,GAAwBiM,KAAA8hC,KAAAx4B,GAAA,EAAetJ,KAAA+hC,IAAAxd,GAAApZ,IAAqBnL,KAAAgiC,QAAa5wB,QAAOsI,QAAQuoB,OAAOC,QAASC,UAAA,GAAYC,WAAYnmB,OAAAomB,iBAAAriC,KAAAgiC,QAAqCM,YAAYnmB,IAAA,WAAqG,MAAtF7mB,SAAA0vB,KAAA,yEAAsFhlB,KAAAkiC,YAC1el8B,EAAAwV,UAAA9T,WAAuB7S,YAAAmR,EAAAwV,UAAA+mB,cAAA,EAAAlxB,IAAA,SAAArL,EAAAE,GAA0DlG,KAAAiX,IAAA5F,IAAArL,EAAAE,IAAkB4P,cAAA,SAAA5P,EAAAnS,GAA6BA,YAAAiS,GAAAmU,mBAAAna,KAAAiX,IAAAgkB,OAAA7G,sBAAArgC,EAAA2/B,aAAA1zB,KAAAiX,IAAAikB,UAAA7pB,IAAAnL,EAAAnH,EAAAmH,EAAA8M,EAAA,IAAA2gB,UAAA5/B,GAAA6gB,IAAA5U,KAAAiX,IAAAgkB,QAAA5mB,aAAAtgB,YAAAiS,GAAAw8B,oBAAAxiC,KAAAiX,IAAAgkB,OAAA5pB,IAAAnL,EAAAnH,EAAAmH,EAAA8M,GAAAjf,EAAA+tC,KAAA/tC,EAAAguC,MAAAhuC,EAAA+tC,KAAA/tC,EAAAguC,MAAApO,UAAA5/B,GAAAiM,KAAAiX,IAAAikB,UAAA7pB,IAAA,QAAAuiB,mBAAA7/B,EAAA2/B,cAAAp+B,QAAAC,MAAA,8CAChIygB,gBAAA,SAAAhQ,EAAAhP,GAA8B,GAAAsS,KAAiC,OAAxBvV,GAAAiS,EAAAhG,KAAAsJ,EAAAtS,GAAcsS,EAAAm5B,KAAAv8B,GAAUoD,GAASo5B,iBAAA,SAAA18B,EAAAhP,GAAgC,GAAAsS,KAAS,SAAAW,MAAA04B,QAAA38B,GAAA,MAAA1Q,SAAA0vB,KAAA,8DAAA1b,CAA6G,QAAAib,GAAA,EAAA1S,EAAA7L,EAAAxP,OAAuB+tB,EAAA1S,EAAI0S,IAAAxwB,EAAAiS,EAAAue,GAAAvkB,KAAAsJ,EAAAtS,EAA+B,OAAVsS,GAAAm5B,KAAAv8B,GAAUoD,KAAWqD,GACnSA,EAAAsC,SAAA,WAA0BgN,OAAAC,eAAAlc,KAAA,MAAiCuH,MAAAoF,EAAAi2B,oBAAgC5iC,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAAnJ,KAAA,GAAamJ,KAAA7E,KAAA,WAAqB6E,KAAA8iC,OAAA,KAAiB9iC,KAAA6hC,YAAiB7hC,KAAA+iC,GAAAp2B,EAAAsC,SAAA+zB,UAAArsC,OAAyC,IAAAqP,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAAsjB,MAAAl8B,EAAA,GAAA4Y,GAAA+iB,WAAApT,EAAA,GAAA3P,GAAA8G,QAAA,MAA4FvN,GAAA8qB,SAAA,WAAsBj9B,EAAAi8B,aAAA9pB,GAAA,KAAuBnS,EAAAi9B,SAAA,WAAsB9qB,EAAA8uB,kBAAAjhC,EAAA,aAAmCkoB,OAAAomB,iBAAAriC,MAA8BhH,UAAUiqC,YAAA,EAAA17B,MAAAvB,GAAsBk9B,UAAWD,YAAA,EACvf17B,MAAArB,GAAQi9B,YAAaF,YAAA,EAAA17B,MAAAxT,GAAsBmmC,OAAQ+I,YAAA,EAAA17B,MAAA+U,GAAsB8mB,iBAAkB77B,MAAA,GAAAoF,GAAA2mB,SAAwB+P,cAAe97B,MAAA,GAAAoF,GAAAgrB,WAA2B33B,KAAAsjC,OAAA,GAAA32B,GAAA2mB,QAA8BtzB,KAAA0zB,YAAA,GAAA/mB,GAAA2mB,QAAmCtzB,KAAAujC,iBAAA52B,EAAAsC,SAAAu0B,wBAA6DxjC,KAAAyjC,wBAAA,EAA+BzjC,KAAA0jC,OAAA,GAAA/2B,GAAA40B,OAA6BvhC,KAAA2hC,SAAA,EAAgB3hC,KAAA2jC,cAAA3jC,KAAA4jC,YAAA,EAAsC5jC,KAAA6jC,eAAA,EAAsB7jC,KAAA8jC,YAAA,EAAmB9jC,KAAA+jC,aACtbp3B,EAAAsC,SAAA+zB,UAAA,GAAAr2B,GAAA8G,QAAA,OAAkD9G,EAAAsC,SAAAu0B,yBAAA,EAClDvnB,OAAAI,OAAA1P,EAAAsC,SAAAvH,UAAAiF,EAAAq0B,gBAAAt5B,WAAwEs8B,YAAA,SAAAh+B,GAAwBhG,KAAAsjC,OAAA/P,iBAAAvtB,EAAAhG,KAAAsjC,QAA4CtjC,KAAAsjC,OAAA3I,UAAA36B,KAAAhH,SAAAgH,KAAAmjC,WAAAnjC,KAAAk6B,QAAgE+J,yBAAA,SAAAj+B,EAAAE,GAAwClG,KAAAmjC,WAAAhT,iBAAAnqB,EAAAE,IAAsCg+B,qBAAA,SAAAl+B,GAAkChG,KAAAmjC,WAAAnT,aAAAhqB,GAAA,IAAmCm+B,sBAAA,SAAAn+B,GAAmChG,KAAAmjC,WAAA/S,sBAAApqB,IAAyCo+B,0BAAA,SAAAp+B,GAAuChG,KAAAmjC,WAAA3e,KAAAxe,IAAwBq+B,aAAA,WAAyB,GAAAr+B,GACngB,GAAA2G,GAAA+iB,UAAqB,iBAAAxpB,EAAAnS,GAAyE,MAApDiS,GAAAmqB,iBAAAjqB,EAAAnS,GAAwBiM,KAAAmjC,WAAAhd,SAAAngB,GAA4BhG,SAAaskC,QAAA,WAAsB,GAAAt+B,GAAA,GAAA2G,GAAA8G,QAAA,MAA+B,iBAAAvN,GAAmB,MAAAlG,MAAAqkC,aAAAr+B,EAAAE,OAA+Bq+B,QAAA,WAAsB,GAAAv+B,GAAA,GAAA2G,GAAA8G,QAAA,MAA+B,iBAAAvN,GAAmB,MAAAlG,MAAAqkC,aAAAr+B,EAAAE,OAA+Bs+B,QAAA,WAAsB,GAAAx+B,GAAA,GAAA2G,GAAA8G,QAAA,MAA+B,iBAAAvN,GAAmB,MAAAlG,MAAAqkC,aAAAr+B,EAAAE,OAA+Bu+B,gBAAA,WAA8B,GAAAz+B,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,EAAAnS,GAC/a,MADociS,GAAAwe,KAAAte,GAAAgtB,gBAAAlzB,KAAAmjC,YAC3enjC,KAAAhH,SAAAmW,IAAAnJ,EAAArL,eAAA5G,IAAuCiM,SAAa0kC,WAAA,WAAyB,GAAA1+B,GAAA,GAAA2G,GAAA8G,QAAA,MAA+B,iBAAAvN,GAAmB,MAAAlG,MAAAykC,gBAAAz+B,EAAAE,OAAkCy+B,WAAA,WAAyB,GAAA3+B,GAAA,GAAA2G,GAAA8G,QAAA,MAA+B,iBAAAvN,GAAmB,MAAAlG,MAAAykC,gBAAAz+B,EAAAE,OAAkC0+B,WAAA,WAAyB,GAAA5+B,GAAA,GAAA2G,GAAA8G,QAAA,MAA+B,iBAAAvN,GAAmB,MAAAlG,MAAAykC,gBAAAz+B,EAAAE,OAAkC2+B,aAAA,SAAA7+B,GAA4B,MAAAA,GAAAotB,aAAApzB,KAAA0zB,cAAwCoR,aAAA,WAAyB,GAAA9+B,GAAA,GAAA2G,GAAA2mB,OAAwB,iBAAAptB,GAAmB,MAAAA,GAAAktB,aAAAptB,EAAAytB,WAAAzzB,KAAA0zB,kBACngBlf,OAAA,WAAkB,GAAAxO,GAAA,GAAA2G,GAAA2mB,OAAwB,iBAAAptB,GAAmBF,EAAAwO,OAAAtO,EAAAlG,KAAAhH,SAAAgH,KAAA+iC,IAAkC/iC,KAAAmjC,WAAA/S,sBAAApqB,OAA0CmJ,IAAA,SAAAnJ,GAAmB,KAAAvK,UAAAjF,OAAA,CAAuB,OAAA0P,GAAA,EAAYA,EAAAzK,UAAAjF,OAAmB0P,IAAAlG,KAAAmP,IAAA1T,UAAAyK,GAA2B,OAAAlG,MAAY,MAAAgG,KAAAhG,MAAA1K,QAAAC,MAAA,kEAAAyQ,GAAAhG,OAA2GgG,YAAA2G,GAAAsC,UAAA,OAAAjJ,EAAA88B,QAAA98B,EAAA88B,OAAAjgC,OAAAmD,KAAA88B,OAAA9iC,KAAAgG,EAAAq7B,eAAgGlmC,KAAA,UAAa6E,KAAA6hC,SAAAhiC,KAAAmG,IAAA1Q,QAAAC,MAAA,gEACjdyQ,GAAGhG,OAAY6C,OAAA,SAAAmD,GAAoB,KAAAvK,UAAAjF,OAAA,OAAA0P,GAAA,EAAkCA,EAAAzK,UAAAjF,OAAmB0P,IAAAlG,KAAA6C,OAAApH,UAAAyK,GAA8BA,GAAAlG,KAAA6hC,SAAA1/B,QAAA6D,QAA2BE,IAAAF,EAAA88B,OAAA,KAAA98B,EAAAq7B,eAAwClmC,KAAA,YAAe6E,KAAA6hC,SAAAz/B,OAAA8D,EAAA,KAA6B6+B,cAAA,SAAA/+B,GAA2B,MAAAhG,MAAAglC,oBAAA,KAAAh/B,IAAwCwM,gBAAA,SAAAxM,GAA6B,MAAAhG,MAAAglC,oBAAA,OAAAh/B,IAA0Cg/B,oBAAA,SAAAh/B,EAAAE,GAAmC,GAAAlG,KAAAgG,KAAAE,EAAA,MAAAlG,KAA2B,QAAAjM,GAAA,EAAAuoB,EAAAtc,KAAA6hC,SAAArrC,OAAmCzC,EAAAuoB,EAAIvoB,IAAA,CAAK,GAAAiD,GAAAgJ,KAAA6hC,SAAA9tC,GAAAixC,oBAAAh/B,EACzdE,EAAG,aAAAlP,EAAA,MAAAA,KAAwBiuC,iBAAA,SAAAj/B,GAAgF,MAAlDA,MAAA,GAAA2G,GAAA8G,QAAuBzT,KAAAg3B,mBAAA,GAA2BhxB,EAAAouB,sBAAAp0B,KAAA0zB,cAAiDwR,mBAAA,WAA+B,GAAAl/B,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,OAA4C,iBAAA1f,GAA0G,MAAvFA,MAAA,GAAA4Y,GAAA+iB,WAA0B1vB,KAAAg3B,mBAAA,GAA2Bh3B,KAAA0zB,YAAAiH,UAAA30B,EAAAjS,EAAAmS,GAAkCnS,MAAUoxC,iBAAA,WAA+B,GAAAn/B,GAAA,GAAA2G,GAAA+iB,UAA2B,iBAAAxpB,GAAmE,MAAhDA,MAAA,GAAAyG,GAAAsjB,MAAqBjwB,KAAAklC,mBAAAl/B,GAA2BE,EAAA8uB,kBAAAhvB,EACxdhG,KAAAkjC,SAAAhT,OAAA,OAAyBkV,cAAA,WAA4B,GAAAp/B,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA+iB,UAA+C,iBAAA37B,GAAuG,MAApFA,MAAA,GAAA4Y,GAAA8G,QAAuBzT,KAAAg3B,mBAAA,GAA2Bh3B,KAAA0zB,YAAAiH,UAAA30B,EAAAE,EAAAnS,GAAkCA,MAAUsxC,kBAAA,WAAgC,GAAAr/B,GAAA,GAAA2G,GAAA+iB,UAA2B,iBAAAxpB,GAAqE,MAAlDA,MAAA,GAAAyG,GAAA8G,QAAuBzT,KAAAklC,mBAAAl/B,GAA2BE,EAAAmL,IAAA,OAAA6hB,gBAAAltB,OAAwC47B,QAAA,aAAuB3K,SAAA,SAAAjxB,GAAsBA,EAAAhG,KAAQ,QAAAkG,GAAAlG,KAAA6hC,SAAA9tC,EAAA,EAAAuoB,EAAApW,EAAA1P,OAAuCzC,EAAAuoB,EAAIvoB,IAAAmS,EAAAnS,GAAAkjC,SAAAjxB,IAAqBs/B,gBAAA,SAAAt/B,GAA6B,QAC/gBhG,KAAA2hC,QAAA,CAAc37B,EAAAhG,KAAQ,QAAAkG,GAAAlG,KAAA6hC,SAAA9tC,EAAA,EAAAuoB,EAAApW,EAAA1P,OAAuCzC,EAAAuoB,EAAIvoB,IAAAmS,EAAAnS,GAAAuxC,gBAAAt/B,KAA6Bu/B,kBAAA,SAAAv/B,GAA+B,GAAAE,GAAAlG,KAAA8iC,MAAkB,QAAA58B,IAAAF,EAAAE,KAAAq/B,kBAAAv/B,KAAwCw/B,aAAA,WAAyBxlC,KAAAsjC,OAAA5I,QAAA16B,KAAAhH,SAAAgH,KAAAmjC,WAAAnjC,KAAAk6B,OAA8Dl6B,KAAAyjC,wBAAA,GAA+BzM,kBAAA,SAAAhxB,IAA+B,IAAAhG,KAAAujC,kBAAAvjC,KAAAwlC,gBAAgD,IAAAxlC,KAAAyjC,yBAAA,IAAAz9B,IAAA,OAAAhG,KAAA8iC,OAAA9iC,KAAA0zB,YAAAlP,KAAAxkB,KAAAsjC,QAAAtjC,KAAA0zB,YAAAH,iBAAAvzB,KAAA8iC,OAAApP,YAC5X1zB,KAAAsjC,QAAAtjC,KAAAyjC,wBAAA,EAAAz9B,GAAA,EAAiD,QAAAE,GAAA,EAAAnS,EAAAiM,KAAA6hC,SAAArrC,OAAmC0P,EAAAnS,EAAImS,IAAAlG,KAAA6hC,SAAA37B,GAAA8wB,kBAAAhxB,IAA0Cy/B,OAAA,SAAAz/B,GAAoB,QAAAE,GAAAF,GAAc,GAAAjS,GAAAmS,IAAW,KAAAnS,IAAAiS,GAAA,CAAY,GAAAsW,GAAAtW,EAAAjS,SAAWuoB,GAAAopB,SAAkBx/B,EAAArG,KAAAyc,GAAU,MAAApW,GAAS,GAAAnS,GAAA,SAAAiS,GAAA,KAAAA,EAAAsW,IAA8BvoB,KAAAiS,GAAO2/B,cAAaC,aAAaC,YAAYC,WAAWxpB,EAAAopB,UAAaK,QAAA,IAAA5qC,KAAA,SAAA6qC,UAAA,mBAAwD,IAAAhvC,KACsG,IAD7FA,EAAA6rC,KAAA7iC,KAAA6iC,KAAiB7rC,EAAAmE,KAAA6E,KAAA7E,KAAiB,KAAA6E,KAAAnJ,OAAAG,EAAAH,KAAAmJ,KAAAnJ,MAAmC,OAAG0N,KAAAC,UAAAxE,KAAA+jC,YACvd/sC,EAAA+sC,SAAA/jC,KAAA+jC,WAA2B,IAAA/jC,KAAA4jC,aAAA5sC,EAAA4sC,YAAA,IAAwC,IAAA5jC,KAAA2jC,gBAAA3sC,EAAA2sC,eAAA,IAA8C,IAAA3jC,KAAA2hC,UAAA3qC,EAAA2qC,SAAA,GAAkC3qC,EAAAssC,OAAAtjC,KAAAsjC,OAAA/c,UAA+B,SAAAvmB,KAAAk3B,WAAA,SAAAlxB,EAAA2/B,WAAA3lC,KAAAk3B,SAAA2L,QAAA78B,EAAA2/B,WAAA3lC,KAAAk3B,SAAA2L,MAAA7iC,KAAAk3B,SAAAuO,OAAAz/B,IAAAhP,EAAAkgC,SAAAl3B,KAAAk3B,SAAA2L,MAA8J,SAAA7iC,KAAAimC,WAAA,SAAAjgC,EAAA4/B,UAAA5lC,KAAAimC,SAAApD,QAAA78B,EAAA4/B,UAAA5lC,KAAAimC,SAAApD,MAAA7iC,KAAAimC,SAAAR,OAAAz/B,IAAAhP,EAAAivC,SAAAjmC,KAAAimC,SAAApD,MAA4J,EAAA7iC,KAAA6hC,SAAArrC,OAAA,CAA2BQ,EAAA6qC,WACpgB,QAAAv4B,GAAA,EAAYA,EAAAtJ,KAAA6hC,SAAArrC,OAAuB8S,IAAAtS,EAAA6qC,SAAAhiC,KAAAG,KAAA6hC,SAAAv4B,GAAAm8B,OAAAz/B,GAAAmQ,QAAuD,GAAApiB,EAAA,CAAM,GAAAA,GAAAmS,EAAAF,EAAA2/B,YAAAr8B,EAAApD,EAAAF,EAAA4/B,WAAArhB,EAAAre,EAAAF,EAAA6/B,SAAuD7/B,GAAAE,EAAAF,EAAA8/B,QAAc,EAAA/xC,EAAAyC,SAAA8lB,EAAAqpB,WAAA5xC,GAA6B,EAAAuV,EAAA9S,SAAA8lB,EAAAspB,UAAAt8B,GAA4B,EAAAib,EAAA/tB,SAAA8lB,EAAAupB,SAAAthB,GAA2B,EAAAve,EAAAxP,SAAA8lB,EAAAwpB,OAAA9/B,GAAoC,MAAXsW,GAAAnG,OAAAnf,EAAWslB,GAAS3lB,MAAA,SAAAqP,GAAmB,UAAAhG,MAAAnL,aAAA2vB,KAAAxkB,KAAAgG,IAA0Cwe,KAAA,SAAAxe,EAAAE,GACM,GADc,SAAAA,OAAA,GAAmBlG,KAAAnJ,KAAAmP,EAAAnP,KAAiBmJ,KAAA+iC,GAAAve,KAAAxe,EAAA+8B,IAAmB/iC,KAAAhH,SAAAwrB,KAAAxe,EAAAhN,UAA+BgH,KAAAmjC,WAAA3e,KAAAxe,EAAAm9B,YAAmCnjC,KAAAk6B,MAAA1V,KAAAxe,EAAAk0B,OACnfl6B,KAAAsjC,OAAA9e,KAAAxe,EAAAs9B,QAA2BtjC,KAAA0zB,YAAAlP,KAAAxe,EAAA0tB,aAAqC1zB,KAAAujC,iBAAAv9B,EAAAu9B,iBAAyCvjC,KAAAyjC,uBAAAz9B,EAAAy9B,uBAAqDzjC,KAAA2hC,QAAA37B,EAAA27B,QAAuB3hC,KAAA4jC,WAAA59B,EAAA49B,WAA6B5jC,KAAA2jC,cAAA39B,EAAA29B,cAAmC3jC,KAAA6jC,cAAA79B,EAAA69B,cAAmC7jC,KAAA8jC,YAAA99B,EAAA89B,YAA+B9jC,KAAA+jC,SAAAx/B,KAAA2hC,MAAA3hC,KAAAC,UAAAwB,EAAA+9B,YAAqD,IAAA79B,EAAA,OAAAnS,GAAA,EAAsBA,EAAAiS,EAAA67B,SAAArrC,OAAoBzC,IAAAiM,KAAAmP,IAAAnJ,EAAA67B,SAAA9tC,GAAA4C,QAAoC,OAAAqJ,SAAe2M,EAAAi2B,gBAAA,EACzcj2B,EAAAw5B,MAAA,SAAAngC,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAkCtJ,KAAAgG,IAAShG,KAAAkG,IAASlG,KAAAjM,IAASiM,KAAAu3B,OAAAjb,YAAA3P,GAAA8G,QAAA6I,EAAA,GAAA3P,GAAA8G,QAA2DzT,KAAAomC,cAAAn8B,MAAA04B,QAAArmB,QAAyCtc,KAAAkR,MAAAla,YAAA2V,GAAA0X,MAAArtB,EAAA,GAAA2V,GAAA0X,MAAsDrkB,KAAAqmC,aAAAp8B,MAAA04B,QAAA3rC,QAAwCgJ,KAAAsmC,cAAA,SAAAh9B,IAAA,GAC/PqD,EAAAw5B,MAAAz+B,WAAuB7S,YAAA8X,EAAAw5B,MAAAxvC,MAAA,WAAyC,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAAkBhG,KAAAgG,MAAWhG,KAAAkG,EAAAF,EAAAE,EAAWlG,KAAAjM,EAAAiS,EAAAjS,EAAWiM,KAAAu3B,OAAA/S,KAAAxe,EAAAuxB,QAA2Bv3B,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAAsmC,cAAAtgC,EAAAsgC,aAAmC,QAAApgC,GAAA,EAAAnS,EAAAiS,EAAAogC,cAAA5vC,OAAqC0P,EAAAnS,EAAImS,IAAAlG,KAAAomC,cAAAlgC,GAAAF,EAAAogC,cAAAlgC,GAAAvP,OAAyD,KAAJuP,EAAA,EAAInS,EAAAiS,EAAAqgC,aAAA7vC,OAA4B0P,EAAAnS,EAAImS,IAAAlG,KAAAqmC,aAAAngC,GAAAF,EAAAqgC,aAAAngC,GAAAvP,OAAmD,OAAAqJ,QACva2M,EAAA45B,gBAAA,SAAAvgC,EAAAE,EAAAnS,GAAsCiM,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAA6yB,MAAA7sB,EAAahG,KAAA4yB,SAAA1sB,EAAgBlG,KAAAwmC,SAAA,EAAgBxmC,KAAAymC,aAAkB74B,OAAA,EAAA84B,UAAmB1mC,KAAA+lC,QAAA,EAAe/lC,KAAA2mC,YAAA,IAAA5yC,GAC3K4Y,EAAA45B,gBAAA7+B,WAAiC7S,YAAA8X,EAAA45B,gBAAAG,YAA8C,MAAA1mC,MAAA6yB,MAAAr8B,OAAAwJ,KAAA4yB,UAAuCgU,gBAAA5gC,IAAoB,IAAAA,GAAAhG,KAAA+lC,WAAuBc,WAAA,SAAA7gC,GAAuC,MAAfhG,MAAAwmC,QAAAxgC,EAAehG,MAAYwkB,KAAA,SAAAxe,GAA8G,MAA5FhG,MAAA6yB,MAAA,GAAA7sB,GAAA6sB,MAAAh+B,YAAAmR,EAAA6sB,OAA4C7yB,KAAA4yB,SAAA5sB,EAAA4sB,SAAyB5yB,KAAAwmC,QAAAxgC,EAAAwgC,QAAuBxmC,MAAY8mC,OAAA,SAAA9gC,EAAAE,EAAAnS,GAAwBiS,GAAAhG,KAAA4yB,SAAiB7+B,GAAAmS,EAAA0sB,QAAc,QAAAtW,GAAA,EAAAtlB,EAAAgJ,KAAA4yB,SAA4BtW,EAAAtlB,EAAIslB,IAAAtc,KAAA6yB,MAAA7sB,EAAAsW,GAAApW,EAAA2sB,MAAA9+B,EAAAuoB,EAAiC,OAAAtc,OAAY+mC,UAAA,SAAA/gC,GACld,MADyehG,MAAA6yB,MAAAxhB,IAAArL,GACzehG,MAAYgnC,gBAAA,SAAAhhC,GAA6B,OAAAE,GAAAlG,KAAA6yB,MAAA9+B,EAAA,EAAAuoB,EAAA,EAAAtlB,EAAAgP,EAAAxP,OAAwC8lB,EAAAtlB,EAAIslB,IAAA,CAAK,GAAAhT,GAAAtD,EAAAsW,EAAW,UAAAhT,IAAAhU,QAAA0vB,KAAA,8DAAA1I,GAAAhT,EAAA,GAAAqD,GAAA0X,OAA8Gne,EAAAnS,KAAAuV,EAAAwI,EAAW5L,EAAAnS,KAAAuV,EAAAib,EAAWre,EAAAnS,KAAAuV,EAAApD,EAAW,MAAAlG,OAAYinC,iBAAA,SAAAjhC,GAA8B,OAAAE,GAAAlG,KAAA6yB,MAAA9+B,EAAA,EAAAuoB,EAAA,EAAAtlB,EAAAgP,EAAAxP,OAAwC8lB,EAAAtlB,EAAIslB,IAAA,CAAK,GAAAhT,GAAAtD,EAAAsW,EAAWpW,GAAAnS,KAAAuV,EAAAtD,EAAWE,EAAAnS,KAAAuV,EAAApD,EAAWA,EAAAnS,KAAAuV,EAAAvV,EAAW,MAAAiM,OAAYknC,kBAAA,SAAAlhC,GAA+B,OAAAE,GAAAlG,KAAA6yB,MAAA9+B,EAAA,EAAAuoB,EAAA,EAAAtlB,EAAAgP,EAAAxP,OAAwC8lB,EAAAtlB,EAAIslB,IAAA,CAAK,GAAAhT,GAAAtD,EAAAsW,EAAW,UAAAhT,IAAAhU,QAAA0vB,KAAA,iEACle1I,GAAAhT,EAAA,GAAAqD,GAAAykB,SAAwBlrB,EAAAnS,KAAAuV,EAAAvK,EAAWmH,EAAAnS,KAAAuV,EAAA0J,EAAW,MAAAhT,OAAYmnC,kBAAA,SAAAnhC,GAA+B,OAAAE,GAAAlG,KAAA6yB,MAAA9+B,EAAA,EAAAuoB,EAAA,EAAAtlB,EAAAgP,EAAAxP,OAAwC8lB,EAAAtlB,EAAIslB,IAAA,CAAK,GAAAhT,GAAAtD,EAAAsW,EAAW,UAAAhT,IAAAhU,QAAA0vB,KAAA,iEAAA1I,GAAAhT,EAAA,GAAAqD,GAAA8G,SAAmHvN,EAAAnS,KAAAuV,EAAAvK,EAAWmH,EAAAnS,KAAAuV,EAAA0J,EAAW9M,EAAAnS,KAAAuV,EAAA2J,EAAW,MAAAjT,OAAYonC,kBAAA,SAAAphC,GAA+B,OAAAE,GAAAlG,KAAA6yB,MAAA9+B,EAAA,EAAAuoB,EAAA,EAAAtlB,EAAAgP,EAAAxP,OAAwC8lB,EAAAtlB,EAAIslB,IAAA,CAAK,GAAAhT,GAAAtD,EAAAsW,EAAW,UAAAhT,IAAAhU,QAAA0vB,KAAA,iEAAA1I,GAAAhT,EAAA,GAAAqD,GAAA4nB,SAChZruB,EAAAnS,KAAAuV,EAAAvK,EAAWmH,EAAAnS,KAAAuV,EAAA0J,EAAW9M,EAAAnS,KAAAuV,EAAA2J,EAAW/M,EAAAnS,KAAAuV,EAAAsI,EAAW,MAAA5R,OAAYqR,IAAA,SAAArL,EAAAE,GAAyD,MAAtC,UAAAA,MAAA,GAAkBlG,KAAA6yB,MAAAxhB,IAAArL,EAAAE,GAAoBlG,MAAYi4B,KAAA,SAAAjyB,GAAkB,MAAAhG,MAAA6yB,MAAA7sB,EAAAhG,KAAA4yB,WAAmCvB,KAAA,SAAArrB,EAAAE,GAAkD,MAA9BlG,MAAA6yB,MAAA7sB,EAAAhG,KAAA4yB,UAAA1sB,EAA8BlG,MAAYk4B,KAAA,SAAAlyB,GAAkB,MAAAhG,MAAA6yB,MAAA7sB,EAAAhG,KAAA4yB,SAAA,IAAqCtB,KAAA,SAAAtrB,EAAAE,GAAoD,MAAhClG,MAAA6yB,MAAA7sB,EAAAhG,KAAA4yB,SAAA,GAAA1sB,EAAgClG,MAAYm4B,KAAA,SAAAnyB,GAAkB,MAAAhG,MAAA6yB,MAAA7sB,EAAAhG,KAAA4yB,SAAA,IAAqCG,KAAA,SAAA/sB,EAAAE,GAAoD,MAAhClG,MAAA6yB,MAAA7sB,EAAAhG,KAAA4yB,SAAA,GAAA1sB,EAAgClG,MAAYqnC,KAAA,SAAArhC,GAAkB,MAAAhG,MAAA6yB,MAAA7sB,EAChfhG,KAAA4yB,SAAA,IAAiB4B,KAAA,SAAAxuB,EAAAE,GAAoD,MAAhClG,MAAA6yB,MAAA7sB,EAAAhG,KAAA4yB,SAAA,GAAA1sB,EAAgClG,MAAYsnC,MAAA,SAAAthC,EAAAE,EAAAnS,GAA4E,MAArDiS,IAAAhG,KAAA4yB,SAAiB5yB,KAAA6yB,MAAA7sB,EAAA,GAAAE,EAAkBlG,KAAA6yB,MAAA7sB,EAAA,GAAAjS,EAAkBiM,MAAYo4B,OAAA,SAAApyB,EAAAE,EAAAnS,EAAAuoB,GAAiG,MAAvEtW,IAAAhG,KAAA4yB,SAAiB5yB,KAAA6yB,MAAA7sB,EAAA,GAAAE,EAAkBlG,KAAA6yB,MAAA7sB,EAAA,GAAAjS,EAAkBiM,KAAA6yB,MAAA7sB,EAAA,GAAAsW,EAAkBtc,MAAYunC,QAAA,SAAAvhC,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAsH,MAAzFgP,IAAAhG,KAAA4yB,SAAiB5yB,KAAA6yB,MAAA7sB,EAAA,GAAAE,EAAkBlG,KAAA6yB,MAAA7sB,EAAA,GAAAjS,EAAkBiM,KAAA6yB,MAAA7sB,EAAA,GAAAsW,EAAkBtc,KAAA6yB,MAAA7sB,EAAA,GAAAhP,EAAkBgJ,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,QAC1a2M,EAAA66B,cAAA,SAAAxhC,EAAAE,GAAkC,UAAAyG,GAAA45B,gBAAA,GAAAkB,WAAAzhC,GAAAE,IAAsDyG,EAAA+6B,eAAA,SAAA1hC,EAAAE,GAAmC,UAAAyG,GAAA45B,gBAAA,GAAAoB,YAAA3hC,GAAAE,IAAuDyG,EAAAi7B,sBAAA,SAAA5hC,EAAAE,GAA0C,UAAAyG,GAAA45B,gBAAA,GAAAsB,mBAAA7hC,GAAAE,IAA8DyG,EAAAm7B,eAAA,SAAA9hC,EAAAE,GAAmC,UAAAyG,GAAA45B,gBAAA,GAAAwB,YAAA/hC,GAAAE,IAAuDyG,EAAAq7B,gBAAA,SAAAhiC,EAAAE,GAAoC,UAAAyG,GAAA45B,gBAAA,GAAA0B,aAAAjiC,GAAAE,IACxZyG,EAAAu7B,eAAA,SAAAliC,EAAAE,GAAmC,UAAAyG,GAAA45B,gBAAA,GAAA4B,YAAAniC,GAAAE,IAAuDyG,EAAAy7B,gBAAA,SAAApiC,EAAAE,GAAoC,UAAAyG,GAAA45B,gBAAA,GAAA8B,aAAAriC,GAAAE,IAAwDyG,EAAA27B,iBAAA,SAAAtiC,EAAAE,GAAqC,UAAAyG,GAAA45B,gBAAA,GAAA3O,cAAA5xB,GAAAE,IAAyDyG,EAAA47B,iBAAA,SAAAviC,EAAAE,GAAqC,UAAAyG,GAAA45B,gBAAA,GAAAiC,cAAAxiC,GAAAE,IACzTyG,EAAA87B,uBAAA,SAAAziC,EAAAE,GAAsK,MAA3H5Q,SAAA0vB,KAAA,8GAA2H,GAAArY,GAAA45B,gBAAAvgC,EAAAE,GAAA2gC,YAAA,IAAuDl6B,EAAA+7B,yBAAA,SAAA1iC,EAAAE,EAAAnS,GAA+C4Y,EAAA45B,gBAAA1yC,KAAAmM,KAAAgG,EAAAE,GAAqClG,KAAA2oC,iBAAA50C,GAAA,GAA4B4Y,EAAA+7B,yBAAAhhC,UAAAuU,OAAA+jB,OAAArzB,EAAA45B,gBAAA7+B,WAAwFiF,EAAA+7B,yBAAAhhC,UAAA7S,YAAA8X,EAAA+7B,yBACra/7B,EAAA+7B,yBAAAhhC,UAAA8c,KAAA,SAAAxe,GAAqJ,MAA3F2G,GAAA45B,gBAAA7+B,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAkDhG,KAAA2oC,iBAAA3iC,EAAA2iC,iBAAyC3oC,MAAa2M,EAAAi8B,kBAAA,SAAA5iC,EAAAE,GAAsClG,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAA6yB,MAAA7sB,EAAahG,KAAA6oC,OAAA3iC,EAAclG,KAAAwmC,SAAA,EAAgBxmC,KAAAymC,aAAkB74B,OAAA,EAAA84B,UAAmB1mC,KAAA+lC,QAAA,GAC5Tp5B,EAAAi8B,kBAAAlhC,WAAmC7S,YAAA8X,EAAAi8B,kBAAApyC,aAAiD,MAAAwJ,MAAA6yB,MAAAr8B,QAAyBkwC,YAAa,MAAA1mC,MAAA6yB,MAAAr8B,OAAAwJ,KAAA6oC,QAAqCjC,gBAAA5gC,IAAoB,IAAAA,GAAAhG,KAAA+lC,WAAuBc,WAAA,SAAA7gC,GAAuC,MAAfhG,MAAAwmC,QAAAxgC,EAAehG,MAAYwkB,KAAA,SAAAxe,GAA0G,MAAxFhG,MAAA6yB,MAAA,GAAA7sB,GAAA6sB,MAAAh+B,YAAAmR,EAAA6sB,OAA4C7yB,KAAA6oC,OAAA7iC,EAAA6iC,OAAqB7oC,KAAAwmC,QAAAxgC,EAAAwgC,QAAuBxmC,MAAY8mC,OAAA,SAAA9gC,EAAAE,EAAAnS,GAAwBiS,GAAAhG,KAAA6oC,OAAe90C,GAAAmS,EAAA2iC,MAAY,QAAAvsB,GAAA,EAAAtlB,EAAAgJ,KAAA6oC,OAA0BvsB,EAAAtlB,EAAIslB,IAAAtc,KAAA6yB,MAAA7sB,EAAAsW,GAAApW,EAAA2sB,MAAA9+B,EAAAuoB,EAAiC,OAAAtc,OAAYqR,IAAA,SAAArL,EACjfE,GAAyC,MAAtC,UAAAA,MAAA,GAAkBlG,KAAA6yB,MAAAxhB,IAAArL,EAAAE,GAAoBlG,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,QAA0C2M,EAAAm8B,2BAAA,SAAA9iC,EAAAE,EAAAnS,GAAiD4Y,EAAAi8B,kBAAA/0C,KAAAmM,KAAAgG,EAAAE,GAAuClG,KAAA2oC,iBAAA50C,GAAA,GAA4B4Y,EAAAm8B,2BAAAphC,UAAAuU,OAAA+jB,OAAArzB,EAAAi8B,kBAAAlhC,WAA4FiF,EAAAm8B,2BAAAphC,UAAA7S,YAAA8X,EAAAm8B,2BACjUn8B,EAAAm8B,2BAAAphC,UAAA8c,KAAA,SAAAxe,GAAyJ,MAA7F2G,GAAAi8B,kBAAAlhC,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAoDhG,KAAA2oC,iBAAA3iC,EAAA2iC,iBAAyC3oC,MAAa2M,EAAAo8B,2BAAA,SAAA/iC,EAAAE,EAAAnS,GAAiDiM,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAA/K,KAAA+Q,EAAYhG,KAAA4yB,SAAA1sB,EAAgBlG,KAAA4N,OAAA7Z,GACvR4Y,EAAAo8B,2BAAArhC,WAA4C7S,YAAA8X,EAAAo8B,2BAAAvyC,aAAiJ,MAAvFlB,SAAA0vB,KAAA;AAAuFhlB,KAAA6yB,MAAAr8B,QAAyBkwC,YAAa,MAAA1mC,MAAA/K,KAAAyxC,OAAuBrV,KAAA,SAAArrB,EAAAE,GAAsE,MAAlDlG,MAAA/K,KAAA49B,MAAA7sB,EAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,QAAA1H,EAAkDlG,MAAYsxB,KAAA,SAAAtrB,EAAAE,GAAwE,MAApDlG,MAAA/K,KAAA49B,MAAA7sB,EAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,OAAA,GAAA1H,EAAoDlG,MAAY+yB,KAAA,SAAA/sB,EAAAE,GAAwE,MAApDlG,MAAA/K,KAAA49B,MAAA7sB,EAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,OAAA,GAAA1H,EAAoDlG,MACxew0B,KAAA,SAAAxuB,EAAAE,GAAuE,MAApDlG,MAAA/K,KAAA49B,MAAA7sB,EAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,OAAA,GAAA1H,EAAoDlG,MAAYi4B,KAAA,SAAAjyB,GAAkB,MAAAhG,MAAA/K,KAAA49B,MAAA7sB,EAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,SAAuDsqB,KAAA,SAAAlyB,GAAkB,MAAAhG,MAAA/K,KAAA49B,MAAA7sB,EAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,OAAA,IAAyDuqB,KAAA,SAAAnyB,GAAkB,MAAAhG,MAAA/K,KAAA49B,MAAA7sB,EAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,OAAA,IAAyDy5B,KAAA,SAAArhC,GAAkB,MAAAhG,MAAA/K,KAAA49B,MAAA7sB,EAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,OAAA,IAAyD05B,MAAA,SAAAthC,EAAAE,EAAAnS,GAAsG,MAA/EiS,KAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,OAAiC5N,KAAA/K,KAAA49B,MAAA7sB,EAAA,GAAAE,EAAuBlG,KAAA/K,KAAA49B,MAAA7sB,EAAA,GAAAjS,EAAuBiM,MAAYo4B,OAAA,SAAApyB,EAC/eE,EAAAnS,EAAAuoB,GAA6G,MAAtGtW,KAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,OAAiC5N,KAAA/K,KAAA49B,MAAA7sB,EAAA,GAAAE,EAAuBlG,KAAA/K,KAAA49B,MAAA7sB,EAAA,GAAAjS,EAAuBiM,KAAA/K,KAAA49B,MAAA7sB,EAAA,GAAAsW,EAAuBtc,MAAYunC,QAAA,SAAAvhC,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAA0J,MAA7HgP,KAAAhG,KAAA/K,KAAA4zC,OAAA7oC,KAAA4N,OAAiC5N,KAAA/K,KAAA49B,MAAA7sB,EAAA,GAAAE,EAAuBlG,KAAA/K,KAAA49B,MAAA7sB,EAAA,GAAAjS,EAAuBiM,KAAA/K,KAAA49B,MAAA7sB,EAAA,GAAAsW,EAAuBtc,KAAA/K,KAAA49B,MAAA7sB,EAAA,GAAAhP,EAAuBgJ,OACnR2M,EAAA4M,SAAA,WAA0B0C,OAAAC,eAAAlc,KAAA,MAAiCuH,MAAAoF,EAAAq8B,oBAAgChpC,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAAnJ,KAAA,GAAamJ,KAAA7E,KAAA,WAAqB6E,KAAAwZ,YAAiBxZ,KAAAipC,UAAejpC,KAAAkpC,SAAclpC,KAAAmpC,mBAAwBnpC,KAAAopC,gBAAqBppC,KAAAqpC,gBAAqBrpC,KAAAspC,eAAoBtpC,KAAAupC,eAAoBvpC,KAAAwpC,iBAAsBxpC,KAAAi8B,eAAAj8B,KAAAypC,YAAA,KAA0CzpC,KAAA0pC,iBAAA1pC,KAAA2pC,wBAAA3pC,KAAA4pC,iBAAA5pC,KAAA6pC,kBAAA7pC,KAAA8pC,cAAA9pC,KAAA+pC,mBACzX/pC,KAAAgqC,oBAAA,GACA/tB,OAAAI,OAAA1P,EAAA4M,SAAA7R,UAAAiF,EAAAq0B,gBAAAt5B,WAAwEs8B,YAAA,SAAAh+B,GAAwB,OAAAE,IAAA,GAAAyG,GAAAgrB,SAAAa,gBAAAxyB,GAAAjS,EAAA,EAAAuoB,EAAAtc,KAAAwZ,SAAAhjB,OAA4EzC,EAAAuoB,EAAIvoB,IAAAiM,KAAAwZ,SAAAzlB,GAAAq/B,aAAAptB,EAAyC,KAAJjS,EAAA,EAAIuoB,EAAAtc,KAAAkpC,MAAA1yC,OAAwBzC,EAAAuoB,EAAIvoB,IAAA,CAAKiS,EAAAhG,KAAAkpC,MAAAn1C,GAAgBiS,EAAAuxB,OAAApE,aAAAjtB,GAAAmO,WAAqC,QAAArd,GAAA,EAAAsS,EAAAtD,EAAAogC,cAAA5vC,OAAqCQ,EAAAsS,EAAItS,IAAAgP,EAAAogC,cAAApvC,GAAAm8B,aAAAjtB,GAAAmO,YACtS,MADyV,QAAArU,KAAAypC,aAAAzpC,KAAAiqC,qBAAmD,OAAAjqC,KAAAi8B,gBAAAj8B,KAAAk8B,wBAC9bl8B,KAAA6pC,kBAAA7pC,KAAAgqC,oBAAA,EAAkDhqC,MAAYskC,QAAA,WAAoB,GAAAt+B,EAAM,iBAAAE,GAA4F,MAAzE,UAAAF,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAq0B,cAAAn0B,GAAmBlG,KAAAgkC,YAAAh+B,GAAoBhG,SAAaukC,QAAA,WAAsB,GAAAv+B,EAAM,iBAAAE,GAA4F,MAAzE,UAAAF,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAs0B,cAAAp0B,GAAmBlG,KAAAgkC,YAAAh+B,GAAoBhG,SAAawkC,QAAA,WAAsB,GAAAx+B,EAAM,iBAAAE,GAA4F,MAAzE,UAAAF,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAu0B,cAAAr0B,GAAmBlG,KAAAgkC,YAAAh+B,GAAoBhG,SAAayU,UAAA,WAAwB,GAAAzO,EAAM,iBAAAE,EACzenS,EAAAuoB,GAAoF,MAA/E,UAAAtW,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAo0B,gBAAAl0B,EAAAnS,EAAAuoB,GAAyBtc,KAAAgkC,YAAAh+B,GAAoBhG,SAAak6B,MAAA,WAAoB,GAAAl0B,EAAM,iBAAAE,EAAAnS,EAAAuoB,GAAgG,MAAzE,UAAAtW,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAy0B,UAAAv0B,EAAAnS,EAAAuoB,GAAmBtc,KAAAgkC,YAAAh+B,GAAoBhG,SAAawU,OAAA,WAAqB,GAAAxO,EAAM,iBAAAE,GAAmB,SAAAF,MAAA,GAAA2G,GAAAsC,UAAmCjJ,EAAAwO,OAAAtO,GAAYF,EAAAw/B,eAAiBxlC,KAAAgkC,YAAAh+B,EAAAs9B,YAA4B4G,mBAAA,SAAAlkC,GAAkC,QAAAE,GAAAF,EAAAE,EAAAoW,EAAAtlB,GAAoB,GAAAsS,GAAA,SAAAib,GAAA2M,EAAAlrB,GAAArP,QAAAu6B,EAAAhrB,GAAAvP,QAAAu6B,EAAA5U,GAAA3lB,YAAAw6B,EAAA,SAAAtf,GAAA9d,EAAAk1C,OAAAjjC,GAAArP,QACxa5C,EAAAk1C,OAAA/iC,GAAAvP,QAAA5C,EAAAk1C,OAAA3sB,GAAA3lB,WAA4CK,GAAA,GAAA2V,GAAAw5B,MAAAngC,EAAAE,EAAAoW,EAAAhT,EAAA6nB,EAAAn6B,GAA+BjD,EAAAm1C,MAAArpC,KAAA7I,GAAgB,SAAA8uB,GAAA/xB,EAAAo1C,cAAA,GAAAtpC,MAAA7L,EAAAgS,GAAArP,QAAA3C,EAAAkS,GAAAvP,QAAA3C,EAAAsoB,GAAA3lB,UAA8E,SAAAkvB,GAAA9xB,EAAAo1C,cAAA,GAAAtpC,MAAA/L,EAAAkS,GAAArP,QAAA7C,EAAAoS,GAAAvP,QAAA7C,EAAAwoB,GAAA3lB,UAA8E,GAAA5C,GAAAiM,KAAAsc,EAAA,OAAAtW,EAAAnC,MAAAmC,EAAAnC,MAAAgvB,MAAA,OAAA77B,EAAAgP,EAAAoxB,WAAA9tB,EAAAtS,EAAAgC,SAAA65B,MAAAtO,EAAA,SAAAvtB,EAAAugC,OAAAvgC,EAAAugC,OAAA1E,MAAA,OAAAhhB,EAAA,SAAA7a,EAAAka,MAAAla,EAAAka,MAAA2hB,MAAA,OAAA/M,EAAA,SAAA9uB,EAAAmzC,GAAAnzC,EAAAmzC,GAAAtX,MAAA,OAAAhN,EAAA,SAAA7uB,EAAAozC,IAAApzC,EAAAozC,IAAAvX,MAAA,MAA2O,UAAAhN,IAAA7lB,KAAAmpC,cAAA,MAC9d,QAAAjY,MAAAl9B,KAAAF,KAAAq9B,EAAAn6B,EAAA,EAA6BA,EAAAsS,EAAA9S,OAAWQ,GAAA,EAAAm6B,GAAA,EAAAp9B,EAAAylB,SAAA3Z,KAAA,GAAA8M,GAAA8G,QAAAnK,EAAAtS,GAAAsS,EAAAtS,EAAA,GAAAsS,EAAAtS,EAAA,cAAAutB,GAAA2M,EAAArxB,KAAA,GAAA8M,GAAA8G,QAAA8Q,EAAAvtB,GAAAutB,EAAAvtB,EAAA,GAAAutB,EAAAvtB,EAAA,cAAA6a,GAAA9d,EAAAk1C,OAAAppC,KAAA,GAAA8M,GAAA0X,MAAAxS,EAAA7a,GAAA6a,EAAA7a,EAAA,GAAA6a,EAAA7a,EAAA,cAAA8uB,GAAA9xB,EAAA6L,KAAA,GAAA8M,GAAAykB,QAAAtL,EAAAqL,GAAArL,EAAAqL,EAAA,cAAAtL,GAAA/xB,EAAA+L,KAAA,GAAA8M,GAAAykB,QAAAvL,EAAAsL,GAAAtL,EAAAsL,EAAA,IAAgS,aAAA7U,EAAA,GAAAhT,EAAAtD,EAAAqkC,OAAA,EAAA/gC,EAAA9S,OAAA,IAAAQ,EAAA,EAA+CA,EAAAsS,EAAA9S,OAAWQ,IAAA,OAAA8a,GAAAxI,EAAAtS,GAAA4uB,EAAA9T,EAAA+B,MAAA6kB,EAAA5mB,EAAA40B,MAAAvV,EAAAvL,MAAA8S,EAAiDvH,EAAAvL,EAAIuL,GAAA,EAAAjrB,EAAAoW,EAAA6U,GAAA7U,EAAA6U,EAAA,GAAA7U,EAAA6U,EAAA,GAAArf,EAAAw0B,mBAA2C,KAAAtvC,EAAA,EAAaA,EACnfslB,EAAA9lB,OAASQ,GAAA,EAAAkP,EAAAoW,EAAAtlB,GAAAslB,EAAAtlB,EAAA,GAAAslB,EAAAtlB,EAAA,QAA2B,KAAAA,EAAA,EAAaA,EAAAsS,EAAA9S,OAAA,EAAaQ,GAAA,EAAAkP,EAAAlP,IAAA,EAAAA,EAAA,EAAmL,OAAjKgJ,MAAAsqC,qBAA0B,OAAAtkC,EAAAyjC,cAAAzpC,KAAAypC,YAAAzjC,EAAAyjC,YAAA9yC,SAA+D,OAAAqP,EAAAi2B,iBAAAj8B,KAAAi8B,eAAAj2B,EAAAi2B,eAAAtlC,SAAwEqJ,MAAYhF,OAAA,WAAmBgF,KAAAiqC,oBAA0B,IAAAjkC,GAAAhG,KAAAypC,YAAAzuC,SAAAq3B,QAAqE,OAA5BryB,MAAAyU,UAAAzO,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,GAA4BjN,GAASqO,UAAA,WAAsBrU,KAAAk8B,uBAA6B,IAAAl2B,GAAAhG,KAAAi8B,eAAAjhC,OAAAkL,EAAAlG,KAAAi8B,eAAA9H,OAAAjuB,EAAA,IAAAA,EAAA,IAC3aA,EAAAnS,EAAA,GAAA4Y,GAAA2mB,OAAgG,OAA1Ev/B,GAAAsd,IAAAnL,EAAA,KAAAA,EAAAF,EAAAjH,EAAA,EAAAmH,EAAA,GAAAA,EAAAF,EAAAgN,EAAA,IAAA9M,KAAAF,EAAAiN,EAAA,SAAsDjT,KAAAgkC,YAAAjwC,GAAoBiM,MAAYsqC,mBAAA,WAA+B,OAAAtkC,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,EAAAuoB,EAAAtc,KAAAkpC,MAAA1yC,OAAwEzC,EAAAuoB,EAAIvoB,IAAA,CAAK,GAAAiD,GAAAgJ,KAAAkpC,MAAAn1C,GAAAuV,EAAAtJ,KAAAwZ,SAAAxiB,EAAAgP,GAAAue,EAAAvkB,KAAAwZ,SAAAxiB,EAAAkP,EAA8DF,GAAA2rB,WAAA3xB,KAAAwZ,SAAAxiB,EAAAjD,GAAAwwB,GAAmCre,EAAAyrB,WAAAroB,EAAAib,GAAkBve,EAAAuV,MAAArV,GAAWF,EAAAqO,YAAcrd,EAAAugC,OAAA/S,KAAAxe,KAAkBukC,qBAAA,SAAAvkC,GAAkC,SAAAA,OAAA,EAAmB,IAAAE,GAAAnS,EAAAuoB,CAA4C,KAAlCA,EAAArS,MAAAjK,KAAAwZ,SAAAhjB,QAA8B0P,EAAA,EAAInS,EAAAiM,KAAAwZ,SAAAhjB,OAA2B0P,EACtfnS,EAAEmS,IAAAoW,EAAApW,GAAA,GAAAyG,GAAA8G,OAA2B,IAAAzN,EAAA,CAAM,GAAAhP,GAAAsS,EAAAib,EAAA1S,EAAA,GAAAlF,GAAA8G,QAAAqS,EAAA,GAAAnZ,GAAA8G,OAAsD,KAAJzN,EAAA,EAAIE,EAAAlG,KAAAkpC,MAAA1yC,OAAwBwP,EAAAE,EAAIF,IAAAjS,EAAAiM,KAAAkpC,MAAAljC,GAAAhP,EAAAgJ,KAAAwZ,SAAAzlB,EAAAiS,GAAAsD,EAAAtJ,KAAAwZ,SAAAzlB,EAAAmS,GAAAqe,EAAAvkB,KAAAwZ,SAAAzlB,KAAA8d,EAAA8f,WAAApN,EAAAjb,GAAAwc,EAAA6L,WAAA36B,EAAAsS,GAAAuI,EAAA0J,MAAAuK,GAAAxJ,EAAAvoB,EAAAiS,GAAAmJ,IAAA0C,GAAAyK,EAAAvoB,EAAAmS,GAAAiJ,IAAA0C,GAAAyK,EAAAvoB,KAAAob,IAAA0C,OAA4K,KAAA7L,EAAA,EAAAE,EAAAlG,KAAAkpC,MAAA1yC,OAAiCwP,EAAAE,EAAIF,IAAAjS,EAAAiM,KAAAkpC,MAAAljC,GAAAsW,EAAAvoB,EAAAiS,GAAAmJ,IAAApb,EAAAwjC,QAAAjb,EAAAvoB,EAAAmS,GAAAiJ,IAAApb,EAAAwjC,QAAAjb,EAAAvoB,KAAAob,IAAApb,EAAAwjC,OAAuF,KAAJrxB,EAAA,EAAInS,EAAAiM,KAAAwZ,SAAAhjB,OAA2B0P,EAAAnS,EAAImS,IAAAoW,EAAApW,GAAAmO,WAAyB,KAAJrO,EAAA,EAAIE,EAAAlG,KAAAkpC,MAAA1yC,OAAwBwP,EAAAE,EAAIF,IAAAjS,EACjfiM,KAAAkpC,MAAAljC,GAAAhP,EAAAjD,EAAAqyC,cAAA,IAAApvC,EAAAR,QAAAQ,EAAA,GAAAwtB,KAAAlI,EAAAvoB,EAAAiS,IAAAhP,EAAA,GAAAwtB,KAAAlI,EAAAvoB,EAAAmS,IAAAlP,EAAA,GAAAwtB,KAAAlI,EAAAvoB,QAAAiD,EAAA,GAAAslB,EAAAvoB,EAAAiS,GAAArP,QAAAK,EAAA,GAAAslB,EAAAvoB,EAAAmS,GAAAvP,QAAAK,EAAA,GAAAslB,EAAAvoB,KAAA4C,QAAmK,GAAAqJ,KAAAkpC,MAAA1yC,SAAAwJ,KAAA6pC,mBAAA,IAAiDW,oBAAA,WAAgC,GAAAxkC,GAAAE,EAAAnS,EAAAuoB,EAAAtlB,CAAkB,KAAJjD,EAAA,EAAIuoB,EAAAtc,KAAAkpC,MAAA1yC,OAAwBzC,EAAAuoB,EAAIvoB,IAAA,IAAAiD,EAAAgJ,KAAAkpC,MAAAn1C,GAAAiD,EAAAyzC,qBAAAzzC,EAAAyzC,qBAAAjmB,KAAAxtB,EAAAugC,QAAAvgC,EAAAyzC,qBAAAzzC,EAAAugC,OAAA5gC,QAAAK,EAAA0zC,0BAAA1zC,EAAA0zC,4BAAA1kC,EAAA,EAAAE,EAAAlP,EAAAovC,cAAA5vC,OAAoNwP,EACtfE,EAAEF,IAAAhP,EAAA0zC,wBAAA1kC,GAAAhP,EAAA0zC,wBAAA1kC,GAAAwe,KAAAxtB,EAAAovC,cAAApgC,IAAAhP,EAAA0zC,wBAAA1kC,GAAAhP,EAAAovC,cAAApgC,GAAArP,OAA+I,IAAA2S,GAAA,GAAAqD,GAAA4M,QAAgD,KAAvBjQ,EAAA4/B,MAAAlpC,KAAAkpC,MAAmBljC,EAAA,EAAIE,EAAAlG,KAAAopC,aAAA5yC,OAA+BwP,EAAAE,EAAIF,IAAA,CAAK,IAAAhG,KAAAqpC,aAAArjC,GAAA,CAA0BhG,KAAAqpC,aAAArjC,MAAwBhG,KAAAqpC,aAAArjC,GAAA2kC,eAAoC3qC,KAAAqpC,aAAArjC,GAAAogC,iBAAsCpvC,EAAAgJ,KAAAqpC,aAAArjC,GAAA2kC,WAAmC,IAAA94B,GAAAiU,EAAAvB,EAAAvkB,KAAAqpC,aAAArjC,GAAAogC,aAAiD,KAAJryC,EAAA,EAAIuoB,EAAAtc,KAAAkpC,MAAA1yC,OAAwBzC,EAAAuoB,EAAIvoB,IAAA8d,EAAA,GAAAlF,GAAA8G,QAAAqS,GAA2B9f,EAAA,GAAA2G,GAAA8G,QAChfvN,EAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,GAAA4Y,GAAA8G,SAAwCzc,EAAA6I,KAAAgS,GAAA0S,EAAA1kB,KAAAimB,GAAyI,IAApHvB,EAAAvkB,KAAAqpC,aAAArjC,GAAuBsD,EAAAkQ,SAAAxZ,KAAAopC,aAAApjC,GAAAwT,SAAyClQ,EAAAghC,qBAAuBhhC,EAAAihC,uBAAyBx2C,EAAA,EAAIuoB,EAAAtc,KAAAkpC,MAAA1yC,OAAwBzC,EAAAuoB,EAAIvoB,IAAAiD,EAAAgJ,KAAAkpC,MAAAn1C,GAAA8d,EAAA0S,EAAAomB,YAAA52C,GAAA+xB,EAAAvB,EAAA6hB,cAAAryC,GAAA8d,EAAA2S,KAAAxtB,EAAAugC,QAAAzR,EAAA9f,EAAAwe,KAAAxtB,EAAAovC,cAAA,IAAAtgB,EAAA5f,EAAAse,KAAAxtB,EAAAovC,cAAA,IAAAtgB,EAAA/xB,EAAAywB,KAAAxtB,EAAAovC,cAAA,IAAwK,IAAJryC,EAAA,EAAIuoB,EAAAtc,KAAAkpC,MAAA1yC,OAAwBzC,EAAAuoB,EAAIvoB,IAAAiD,EAAAgJ,KAAAkpC,MAAAn1C,GAAAiD,EAAAugC,OAAAvgC,EAAAyzC,qBAAAzzC,EAAAovC,cAAApvC,EAAA0zC,yBAA8FE,gBAAA,WAA4Bt1C,QAAA0vB,KAAA,yDAC3gB6lB,qBAAA,WAAgC,OAAA7kC,GAAA,EAAAE,EAAAlG,KAAAwZ,SAAAzlB,EAAA,EAAAuoB,EAAApW,EAAA1P,OAA2CzC,EAAAuoB,EAAIvoB,IAAA,EAAAA,IAAAiS,GAAAE,EAAAnS,GAAAy+B,WAAAtsB,EAAAnS,EAAA,KAAAiM,KAAAwpC,cAAAz1C,GAAAiS,GAA8DikC,mBAAA,WAA+B,OAAAjqC,KAAAypC,cAAAzpC,KAAAypC,YAAA,GAAA98B,GAAAkqB,MAA2D72B,KAAAypC,YAAA3T,cAAA91B,KAAAwZ,WAA8C0iB,sBAAA,WAAkC,OAAAl8B,KAAAi8B,iBAAAj8B,KAAAi8B,eAAA,GAAAtvB,GAAA+qB,QAAmE13B,KAAAi8B,eAAAnG,cAAA91B,KAAAwZ,WAAiDsxB,MAAA,SAAA9kC,EAAAE,EAAAnS,GAAuB,OAAAiS,YAAA2G,GAAA4M,SAAAjkB,QAAAC,MAAA,sEAClcyQ,OAAG,CAAK,GAAAsW,GAAAtlB,EAAAgJ,KAAAwZ,SAAAhjB,OAAA8S,EAAAtJ,KAAAwZ,SAAA+K,EAAAve,EAAAwT,SAAA3H,EAAA7R,KAAAkpC,MAAApjB,EAAA9f,EAAAkjC,MAAArjB,EAAA7lB,KAAAmpC,cAAA,EAAyGnjC,KAAAmjC,cAAA,GAAqB,SAAAp1C,MAAA,GAAkB,SAAAmS,IAAAoW,GAAA,GAAA3P,GAAAgrB,SAAAa,gBAAAtyB,GAAuD,QAAAgrB,GAAA,EAAAl9B,EAAAuwB,EAAA/tB,OAAuB06B,EAAAl9B,EAAIk9B,IAAA,CAAK,GAAAp9B,GAAAywB,EAAA2M,GAAAv6B,OAAmB,UAAAuP,GAAApS,EAAAs/B,aAAAltB,GAA8BoD,EAAAzJ,KAAA/L,GAAc,IAAJo9B,EAAA,EAAIl9B,EAAA8xB,EAAAtvB,OAAe06B,EAAAl9B,EAAIk9B,IAAA,CAAK,GAAAC,GAAA5M,EAAAuB,EAAAoL,GAAApf,EAAAyS,EAAA6hB,cAAAxgB,EAAArB,EAAA8hB,aAAAvyC,EAAA,GAAA6Y,GAAAw5B,MAAA5hB,EAAAve,EAAAhP,EAAAutB,EAAAre,EAAAlP,EAAAutB,EAAAxwB,EAAAiD,EAAkK,KAA7ElD,EAAAyjC,OAAA/S,KAAAD,EAAAgT,QAAwB,SAAAjb,GAAAxoB,EAAAyjC,OAAApE,aAAA7W,GAAAjI,YAAiDnO,EAAA,EAAIoD,EAAAwI,EAAAtb,OAAe0P,EACvfoD,EAAEpD,IAAAirB,EAAArf,EAAA5L,GAAAvP,QAAA,SAAA2lB,GAAA6U,EAAAgC,aAAA7W,GAAAjI,YAAAvgB,EAAAsyC,cAAAvmC,KAAAsxB,EAA+G,KAA1Br9B,EAAAod,MAAAsT,KAAAD,EAAArT,OAAsBhL,EAAA,EAAIoD,EAAAsc,EAAApvB,OAAe0P,EAAAoD,EAAIpD,IAAAirB,EAAAvL,EAAA1f,GAAApS,EAAAuyC,aAAAxmC,KAAAsxB,EAAAx6B,QAA0C7C,GAAAwyC,cAAA/hB,EAAA+hB,cAAAvyC,EAAkC8d,EAAAhS,KAAA/L,GAAc,IAAJo9B,EAAA,EAAIl9B,EAAAgS,EAAAxP,OAAe06B,EAAAl9B,EAAIk9B,IAAA,GAAAn9B,EAAAiS,EAAAkrB,GAAA5U,KAAA,SAAAvoB,EAAA,CAAmC,IAAJmS,EAAA,EAAIoD,EAAAvV,EAAAyC,OAAe0P,EAAAoD,EAAIpD,IAAAoW,EAAAzc,KAAA9L,EAAAmS,GAAAvP,QAAyBkvB,GAAAhmB,KAAAyc,MAAYyuB,UAAA,SAAA/kC,IAAuB,GAAAA,YAAA2G,GAAAyE,KAAA9b,QAAAC,MAAA,kEAAAyQ,MAAAu9B,kBAAAv9B,EAAAw/B,eACnWxlC,KAAA8qC,MAAA9kC,EAAAkxB,SAAAlxB,EAAAs9B,UAAiC0H,cAAA,WAA0B,GAAQ1uB,GAAAhT,EAAAib,EAARve,KAAQE,KAAAnS,KAAAiD,EAAAwI,KAAAuc,IAAA,KAAsC,KAAJzS,EAAA,EAAIib,EAAAvkB,KAAAwZ,SAAAhjB,OAA2B8S,EAAAib,EAAIjb,IAAAgT,EAAAtc,KAAAwZ,SAAAlQ,GAAAgT,EAAA9c,KAAA2yB,MAAA7V,EAAAvd,EAAA/H,GAAA,IAAAwI,KAAA2yB,MAAA7V,EAAAtJ,EAAAhc,GAAA,IAAAwI,KAAA2yB,MAAA7V,EAAArJ,EAAAjc,GAAA,SAAAgP,EAAAsW,IAAAtW,EAAAsW,GAAAhT,EAAApD,EAAArG,KAAAG,KAAAwZ,SAAAlQ,IAAAvV,EAAAuV,GAAApD,EAAA1P,OAAA,GAAAzC,EAAAuV,GAAAvV,EAAAiS,EAAAsW,GAA6K,KAATtW,KAAKsD,EAAA,EAAIib,EAAAvkB,KAAAkpC,MAAA1yC,OAAwB8S,EAAAib,EAAIjb,IAAA,IAAAtS,EAAAgJ,KAAAkpC,MAAA5/B,GAAAtS,EAAAgP,EAAAjS,EAAAiD,EAAAgP,GAAAhP,EAAAkP,EAAAnS,EAAAiD,EAAAkP,GAAAlP,EAAAjD,IAAAiD,EAAAjD,GAAAiD,KAAAgP,EAAAhP,EAAAkP,EAAAlP,EAAAjD,GAAAuoB,EAAA,EAA6E,EAAAA,EAAIA,IAAA,GAAAtlB,EAAAslB,KAAAtlB,GAAAslB,EAAA,OAA0BtW,EAAAnG,KAAAyJ,EAAU,OAAM,IAAAA,EAAAtD,EAAAxP,OAAA,EAAiB,GAAA8S,EAAKA,IAAA,IAAAtS,EAAAgP,EAAAsD,GAAAtJ,KAAAkpC,MAAA9mC,OAAApL,EACle,GAAAjD,EAAA,EAAAwwB,EAAAvkB,KAAAmpC,cAAA3yC,OAAmCzC,EAAAwwB,EAAIxwB,IAAAiM,KAAAmpC,cAAAp1C,GAAAqO,OAAApL,EAAA,EAAsF,OAAhDsS,GAAAtJ,KAAAwZ,SAAAhjB,OAAA0P,EAAA1P,OAAgCwJ,KAAAwZ,SAAAtT,EAAgBoD,GAAS2hC,yBAAA,WAAqC,OAAAjlC,GAAAhG,KAAAkpC,MAAAhjC,EAAAF,EAAAxP,OAAAzC,EAAA,EAAoCA,EAAAmS,EAAInS,IAAAiS,EAAAjS,GAAAm3C,IAAAn3C,CAAeiS,GAAAy8B,KAAA,SAAAz8B,EAAAE,GAAqB,MAAAF,GAAAsgC,cAAApgC,EAAAogC,eAAyC,IAAAh9B,GAAAib,EAAAjI,EAAAtc,KAAAmpC,cAAA,GAAAnyC,EAAAgJ,KAAAmpC,cAAA,EAAwG,KAAhD7sB,KAAA9lB,SAAA0P,IAAAoD,MAAwBtS,KAAAR,SAAA0P,IAAAqe,MAAwBxwB,EAAA,EAAQA,EAAAmS,EAAInS,IAAA,CAAK,GAAA8d,GAAA7L,EAAAjS,GAAAm3C,GAAe5hC,MAAAzJ,KAAAyc,EAAAzK,IAAgB0S,KAAA1kB,KAAA7I,EAAA6a,IAAgBvI,IAAAtJ,KAAAmpC,cAAA,GAAA7/B,GAA6Bib,IAAAvkB,KAAAmpC,cAAA,GACre5kB,IAAGkhB,OAAA,WAAmB,QAAAz/B,KAAAE,EAAAnS,GAAkB,MAAAA,GAAAiS,EAAA,GAAAE,EAAAF,IAAA,GAAAE,GAA0B,QAAAA,GAAAF,GAAc,GAAAE,GAAAF,EAAAjH,EAAAT,WAAA0H,EAAAgN,EAAA1U,WAAA0H,EAAAiN,EAAA3U,UAAmD,iBAAAunB,EAAA3f,GAAA2f,EAAA3f,IAA6B2f,EAAA3f,GAAA4f,EAAAtvB,OAAA,EAAgBsvB,EAAAjmB,KAAAmG,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,GAAoB4S,EAAA3f,IAAY,QAAAnS,GAAAiS,GAAc,GAAAE,GAAAF,EAAA8L,EAAAxT,WAAA0H,EAAAue,EAAAjmB,WAAA0H,EAAAE,EAAA5H,UAAmD,iBAAAtK,EAAAkS,GAAAlS,EAAAkS,IAA6BlS,EAAAkS,GAAAgrB,EAAA16B,OAAc06B,EAAArxB,KAAAmG,EAAAyf,UAAmBzxB,EAAAkS,IAAY,QAAAoW,GAAAtW,GAAc,GAAAE,GAAAF,EAAAjH,EAAAT,WAAA0H,EAAAgN,EAAA1U,UAAoC,iBAAA6yB,EAAAjrB,GAAAirB,EAAAjrB,IAA6BirB,EAAAjrB,GAAApS,EAAA0C,OAAA,EAAgB1C,EAAA+L,KAAAmG,EAAAjH,EAAAiH,EAAAgN,GAAgBme,EAAAjrB,IAAY,GAAAlP,IAAO0uC,UAAUK,QAAA,IAAA5qC,KAAA,WACve6qC,UAAA,mBAAmG,IAArEhvC,EAAA6rC,KAAA7iC,KAAA6iC,KAAiB7rC,EAAAmE,KAAA6E,KAAA7E,KAAiB,KAAA6E,KAAAnJ,OAAAG,EAAAH,KAAAmJ,KAAAnJ,MAAmC,SAAAmJ,KAAAmrC,WAAA,CAA6B,GAAA5mB,GAAAjb,EAAAtJ,KAAAmrC,UAAwB,KAAA5mB,IAAAjb,GAAA,SAAAA,EAAAib,KAAAvtB,EAAAutB,GAAAjb,EAAAib,GAAsC,OAAAvtB,GAAc,IAALsS,KAAKib,EAAA,EAAQA,EAAAvkB,KAAAwZ,SAAAhjB,OAAuB+tB,IAAA,CAAK,GAAA1S,GAAA7R,KAAAwZ,SAAA+K,EAAuBjb,GAAAzJ,KAAAgS,EAAA9S,EAAA8S,EAAAmB,EAAAnB,EAAAoB,GAAoB,GAAApB,MAAAiU,KAAAD,KAAkBqL,KAAAl9B,KAAUF,KAAAq9B,IAAW,KAAA5M,EAAA,EAAQA,EAAAvkB,KAAAkpC,MAAA1yC,OAAoB+tB,IAAA,CAAK,GAAAzS,GAAA9R,KAAAkpC,MAAA3kB,GAAAqB,EAAA,SAAA5lB,KAAAmpC,cAAA,GAAA5kB,GAAAmU,EAAA,EAAA5mB,EAAAylB,OAAA/gC,SAAAwiC,EAAA,EAAAlnB,EAAAs0B,cAAA5vC,OAAAyiC,EAAA,IAAAnnB,EAAAZ,MAAAY,GAAA,IAAAA,EAAAZ,MAAAqT,GAAA,IAAAzS,EAAAZ,MAAAhL,EACnWgzB,EAAA,EAAApnB,EAAAu0B,aAAA7vC,OAAAob,EAAA,EAAAA,EAAA5L,EAAA4L,EAAA,KAAAA,EAAA5L,EAAA4L,EAAA,MAAAA,EAAA5L,EAAA4L,EAAA,MAAAA,EAAA5L,EAAA4L,EAAA,EAAAgU,GAAAhU,EAAA5L,EAAA4L,EAAA,EAAA8mB,GAAA9mB,EAAA5L,EAAA4L,EAAA,EAAAonB,GAAApnB,EAAA5L,EAAA4L,EAAA,EAAAqnB,GAAArnB,EAAA5L,EAAA4L,EAAA,EAAAsnB,EAAwHrnB,GAAAhS,KAAA+R,GAAUC,EAAAhS,KAAAiS,EAAA9L,EAAA8L,EAAA5L,EAAA4L,EAAA/d,GAAoB8d,EAAAhS,KAAAiS,EAAAw0B,eAAwB1gB,MAAA5lB,KAAAmpC,cAAA,GAAA5kB,GAAA1S,EAAAhS,KAAAyc,EAAAsJ,EAAA,IAAAtJ,EAAAsJ,EAAA,IAAAtJ,EAAAsJ,EAAA,MAAgE8S,GAAA7mB,EAAAhS,KAAAqG,EAAA4L,EAAAylB,SAAuByB,IAAAN,EAAA5mB,EAAAs0B,cAAAv0B,EAAAhS,KAAAqG,EAAAwyB,EAAA,IAAAxyB,EAAAwyB,EAAA,IAAAxyB,EAAAwyB,EAAA,MAAuDO,GAAApnB,EAAAhS,KAAA9L,EAAA+d,EAAAZ,QAAsBgoB,IAAApnB,IAAAu0B,aAAAx0B,EAAAhS,KAAA9L,EAAA+d,EAAA,IAAA/d,EAAA+d,EAAA,IAAA/d,EAAA+d,EAAA,MAChV,MADsY9a,GAAA/B,QAAU+B,EAAA/B,KAAAukB,SAAAlQ,EAAkBtS,EAAA/B,KAAAm2C,QAAAtlB,EAAiB,EAAAoL,EAAA16B,SAAAQ,EAAA/B,KAAAg0C,OAAA/X,GAA8B,EAAAp9B,EAAA0C,SAAAQ,EAAA/B,KAAAo2C,KAAAv3C,IAA6BkD,EAAA/B,KAAAi0C,MAChfr3B,EAAE7a,GAASL,MAAA,WAAkB,UAAAgW,GAAA4M,UAAAiL,KAAAxkB,OAAsCwkB,KAAA,SAAAxe,GAAkBhG,KAAAwZ,YAAiBxZ,KAAAkpC,SAAclpC,KAAAmpC,kBAAwB,QAAAjjC,GAAAF,EAAAwT,SAAAzlB,EAAA,EAAAuoB,EAAApW,EAAA1P,OAAoCzC,EAAAuoB,EAAIvoB,IAAAiM,KAAAwZ,SAAA3Z,KAAAqG,EAAAnS,GAAA4C,QAAmD,KAAduP,EAAAF,EAAAkjC,MAAUn1C,EAAA,EAAIuoB,EAAApW,EAAA1P,OAAezC,EAAAuoB,EAAIvoB,IAAAiM,KAAAkpC,MAAArpC,KAAAqG,EAAAnS,GAAA4C,QAAsC,KAAJ5C,EAAA,EAAIuoB,EAAAtW,EAAAmjC,cAAA3yC,OAA6BzC,EAAAuoB,EAAIvoB,IAAA,CAAKmS,EAAAF,EAAAmjC,cAAAp1C,GAAqB,SAAAiM,KAAAmpC,cAAAp1C,KAAAiM,KAAAmpC,cAAAp1C,MAA2D,QAAAiD,GAAA,EAAAsS,EAAApD,EAAA1P,OAAuBQ,EAAAsS,EAAItS,IAAA,CAAK,OAAAutB,GAAAre,EAAAlP,GAAA6a,KAAAiU,EAAA,EAAAD,EAAAtB,EAAA/tB,OAAmCsvB,EAAAD,EAAIC,IAAAjU,EAAAhS,KAAA0kB,EAAAuB,GAAAnvB,QAC7dqJ,MAAAmpC,cAAAp1C,GAAA8L,KAAAgS,IAA+B,MAAA7R,OAAYsrC,QAAA,WAAoBtrC,KAAAqhC,eAAoBlmC,KAAA,eAAoBwR,EAAAq8B,gBAAA,EACvGr8B,EAAA4+B,eAAA,WAAgCtvB,OAAAC,eAAAlc,KAAA,MAAiCuH,MAAAoF,EAAAq8B,oBAAgChpC,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAAnJ,KAAA,GAAamJ,KAAA7E,KAAA,iBAA2B6E,KAAAwrC,WAAgBxrC,KAAAwZ,YAAiBxZ,KAAAorC,WAAgBprC,KAAAipC,UAAejpC,KAAAqrC,OAAYrrC,KAAAyrC,QAAazrC,KAAAqqC,UAAerqC,KAAAopC,gBAAqBppC,KAAAspC,eAAoBtpC,KAAAupC,eAAoBvpC,KAAAi8B,eAAAj8B,KAAAypC,YAAA,KAA0CzpC,KAAA0pC,iBAAA1pC,KAAA8pC,cAAA9pC,KAAA4pC,iBAAA5pC,KAAA6pC,kBAAA7pC,KAAAgqC,oBAAA,GAC5X/tB,OAAAI,OAAA1P,EAAA4+B,eAAA7jC,UAAAiF,EAAAq0B,gBAAAt5B,WAA8EuiC,mBAAAt9B,EAAA4M,SAAA7R,UAAAuiC,mBAAA/N,sBAAAvvB,EAAA4M,SAAA7R,UAAAw0B,sBAAAoO,mBAAA,WAAkKh1C,QAAA0vB,KAAA,yFAAqGulB,qBAAA,WAAiCj1C,QAAA0vB,KAAA,2FAAuG0mB,cAAA,SAAA1lC,GAA2B,GAAAE,GACxfoW,EAAAvoB,IAAOiS,KAAAkjC,KAAU,QAAAlyC,GAAA,EAAYA,EAAAgP,EAAAxP,OAAWQ,IAAA,CAAK,GAAAsS,GAAAtD,EAAAhP,EAAWsS,GAAAg9B,gBAAAhqB,MAAAhT,EAAAg9B,cAAA,SAAApgC,MAAAwgC,MAAA,EAAA1vC,EAAAkP,EAAA2N,MAAA9f,EAAA8L,KAAAqG,OAAuF2N,MAAA,EAAA7c,EAAAsvC,cAAAhqB,IAA4B,SAAApW,MAAAwgC,MAAA,EAAA1vC,EAAAkP,EAAA2N,MAAA9f,EAAA8L,KAAAqG,IAA4ClG,KAAAqqC,OAAAt2C,GAAc43C,aAAA,SAAA3lC,GAA0B,GAAA8f,GAAA5f,EAAAF,EAAAkjC,MAAAn1C,EAAAiS,EAAAwT,SAAA8C,EAAAtW,EAAAmjC,cAAAnyC,EAAAslB,EAAA,MAAAA,EAAA,GAAA9lB,OAAA8S,EAAAgT,EAAA,MAAAA,EAAA,GAAA9lB,OAAA+tB,EAAAve,EAAAojC,aAAAv3B,EAAA0S,EAAA/tB,MAAuH,MAAAqb,EAAA,CAAQiU,IAAK,QAAAD,GAAA,EAAYA,EAAAhU,EAAIgU,IAAAC,EAAAD,KAAY7lB,MAAAopC,aAAApwC,SAAA8sB,EAA6B,GAAAhyB,GAAAo9B,EAAAlrB,EAAAqjC,aAAAr1C,EAAAk9B,EAAA16B,MAAkC,MAAAxC,EAAA,CAAa,IAALF,KAAK+xB,EAAA,EAAQA,EACnf7xB,EAAE6xB,IAAA/xB,EAAA+xB,KAAY7lB,MAAAopC,aAAA7R,OAAAzjC,EAA2B,OAAAq9B,GAAAnrB,EAAAujC,YAAAz3B,EAAA9L,EAAAsjC,YAAA1jB,EAAAuL,EAAA36B,SAAAzC,EAAAyC,OAAAkiC,EAAA5mB,EAAAtb,SAAAzC,EAAAyC,OAAAqvB,EAAA,EAAwFA,EAAA3f,EAAA1P,OAAWqvB,IAAA,CAAK,GAAAmT,GAAA9yB,EAAA2f,EAAW7lB,MAAAwZ,SAAA3Z,KAAA9L,EAAAilC,EAAAhzB,GAAAjS,EAAAilC,EAAA9yB,GAAAnS,EAAAilC,EAAAjlC,GAAyC,IAAAklC,GAAAD,EAAAoN,aACuF,KADjE,IAAAnN,EAAAziC,OAAAwJ,KAAAorC,QAAAvrC,KAAAo5B,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAAD,EAAAzB,OAAAv3B,KAAAorC,QAAAvrC,KAAAo5B,QAAqFA,EAAAD,EAAAqN,aAAiB,IAAApN,EAAAziC,OAAAwJ,KAAAipC,OAAAppC,KAAAo5B,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAAD,EAAA9nB,MAAAlR,KAAAipC,OAAAppC,KAAAo5B,SAAkF,IAAAjiC,IAAAiiC,EAAA3c,EAAA,GAAAuJ,GAAA,SAAAoT,EAAAj5B,KAAAqrC,IAAAxrC,KAAAo5B,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAA3jC,QAAA0vB,KAAA,2DACnZa,GAAA7lB,KAAAqrC,IAAAxrC,KAAA,GAAA8M,GAAAykB,QAAA,GAAAzkB,GAAAykB,QAAA,GAAAzkB,GAAAykB,YAA0E,IAAA9nB,IAAA2vB,EAAA3c,EAAA,GAAAuJ,GAAA,SAAAoT,EAAAj5B,KAAAyrC,KAAA5rC,KAAAo5B,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAA3jC,QAAA0vB,KAAA,4DAAAa,GAAA7lB,KAAAyrC,KAAA5rC,KAAA,GAAA8M,GAAAykB,QAAA,GAAAzkB,GAAAykB,QAAA,GAAAzkB,GAAAykB,WAAkN6H,EAAA,EAAQA,EAAApnB,EAAIonB,IAAA,CAAK,GAAAC,GAAA3U,EAAA0U,GAAAzf,QAAoBsM,GAAAmT,GAAAp5B,KAAAq5B,EAAAF,EAAAhzB,GAAAkzB,EAAAF,EAAA9yB,GAAAgzB,EAAAF,EAAAjlC,IAAgC,IAAAklC,EAAA,EAAQA,EAAAjlC,EAAIilC,IAAAC,EAAAhI,EAAA+H,GAAAmN,cAAAvgB,GAAA/xB,EAAAmlC,GAAAp5B,KAAAq5B,EAAAlzB,EAAAkzB,EAAAhzB,EAAAgzB,EAAAnlC,EAAmD6xB,IAAA5lB,KAAAupC,YAAA1pC,KAAAsxB,EAAA6H,EAAAhzB,GAAAmrB,EAAA6H,EAAA9yB,GAAAirB,EAAA6H,EAAAjlC,IAA+C2kC,GAAA14B,KAAAspC,YAAAzpC,KAAAiS,EAAAknB,EAAAhzB,GAAA8L,EAAAknB,EAAA9yB,GAC/c4L,EAAAknB,EAAAjlC,IAA2O,MAAnOiM,MAAA0rC,cAAA1lC,GAAsBhG,KAAAgqC,mBAAAhkC,EAAAgkC,mBAA6ChqC,KAAA6pC,kBAAA7jC,EAAA6jC,kBAA2C7pC,KAAA4pC,iBAAA5jC,EAAA4jC,iBAAyC5pC,KAAA8pC,cAAA9jC,EAAA8jC,cAAmC9pC,KAAA0pC,iBAAA1jC,EAAA0jC,iBAAyC1pC,MAAYsrC,QAAA,WAAoBtrC,KAAAqhC,eAAoBlmC,KAAA,eAC/RwR,EAAAwqB,eAAA,WAAgClb,OAAAC,eAAAlc,KAAA,MAAiCuH,MAAAoF,EAAAq8B,oBAAgChpC,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAAnJ,KAAA,GAAamJ,KAAA7E,KAAA,iBAA2B6E,KAAA6D,MAAA,KAAgB7D,KAAAo3B,cAAmBp3B,KAAA4rC,mBAAwB5rC,KAAAqqC,UAAerqC,KAAAi8B,eAAAj8B,KAAAypC,YAAA,KAA0CzpC,KAAA6rC,WAAgBh4B,MAAA,EAAA6yB,MAAAv7B,MACjT8Q,OAAAI,OAAA1P,EAAAwqB,eAAAzvB,UAAAiF,EAAAq0B,gBAAAt5B,WAA8EokC,SAAA,WAAoB,MAAA9rC,MAAA6D,OAAkBkoC,SAAA,SAAA/lC,GAAsBhG,KAAA6D,MAAAmC,GAAagmC,aAAA,SAAAhmC,EAAAE,EAAAnS,GAA8B,OAAAmS,YAAAyG,GAAA45B,kBAAA,GAAArgC,YAAAyG,GAAAo8B,2BAAAzzC,QAAA0vB,KAAA,0EAAAhlB,KAAAgsC,aAAAhmC,EAAA,GAAA2G,GAAA45B,gBAAArgC,EAAAnS,QAA0O,cAAAiS,EAC9Y,MAAAhG,MAAAo3B,WAAApxB,GAAAE,EAAAlG,IAD8Y1K,SAAA0vB,KAAA,2EAC/ZhlB,KAAA+rC,SAAA7lC,KAAuD+lC,aAAA,SAAAjmC,GAA0B,MAAAhG,MAAAo3B,WAAApxB,IAA0BkmC,gBAAA,SAAAlmC,GAAuD,aAA1BhG,MAAAo3B,WAAApxB,GAA0BhG,MAAYmsC,SAAA,SAAAnmC,EAAAE,EAAAnS,GAA0BiM,KAAAqqC,OAAAxqC,MAAkBgU,MAAA7N,EAAA0gC,MAAAxgC,EAAAogC,cAAA,SAAAvyC,IAAA,KAA+Cq4C,YAAA,WAAwBpsC,KAAAqqC,WAAegC,aAAA,SAAArmC,EAAAE,GAA4BlG,KAAA6rC,UAAAh4B,MAAA7N,EAAuBhG,KAAA6rC,UAAAnF,MAAAxgC,GAAuB89B,YAAA,SAAAh+B,GAAyB,GAAAE,GAAAlG,KAAAo3B,WAAAp+B,QACpM,OADmO,UAAAkN,IAAAF,EAAA+xB,oBAAA7xB,EAAA2sB,OAAA3sB,EAAA0gC,aAAA,GAA8D1gC,EAAAlG,KAAAo3B,WAAAG,OAChf,SAAArxB,KAAA,GAAAyG,GAAAgrB,SAAAa,gBAAAxyB,GAAA+xB,oBAAA7xB,EAAA2sB,OAAA3sB,EAAA0gC,aAAA,GAAmG,OAAA5mC,KAAAypC,aAAAzpC,KAAAiqC,qBAAmD,OAAAjqC,KAAAi8B,gBAAAj8B,KAAAk8B,wBAAyDl8B,MAAYskC,QAAA,WAAoB,GAAAt+B,EAAM,iBAAAE,GAA4F,MAAzE,UAAAF,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAq0B,cAAAn0B,GAAmBlG,KAAAgkC,YAAAh+B,GAAoBhG,SAAaukC,QAAA,WAAsB,GAAAv+B,EAAM,iBAAAE,GAA4F,MAAzE,UAAAF,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAs0B,cAAAp0B,GAAmBlG,KAAAgkC,YAAAh+B,GAAoBhG,SAAawkC,QAAA,WAAsB,GAAAx+B,EACzf,iBAAAE,GAA4F,MAAzE,UAAAF,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAu0B,cAAAr0B,GAAmBlG,KAAAgkC,YAAAh+B,GAAoBhG,SAAayU,UAAA,WAAwB,GAAAzO,EAAM,iBAAAE,EAAAnS,EAAAuoB,GAAsG,MAA/E,UAAAtW,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAo0B,gBAAAl0B,EAAAnS,EAAAuoB,GAAyBtc,KAAAgkC,YAAAh+B,GAAoBhG,SAAak6B,MAAA,WAAoB,GAAAl0B,EAAM,iBAAAE,EAAAnS,EAAAuoB,GAAgG,MAAzE,UAAAtW,MAAA,GAAA2G,GAAA2mB,SAAkCttB,EAAAy0B,UAAAv0B,EAAAnS,EAAAuoB,GAAmBtc,KAAAgkC,YAAAh+B,GAAoBhG,SAAawU,OAAA,WAAqB,GAAAxO,EAAM,iBAAAE,GAAmB,SAAAF,MAAA,GAAA2G,GAAAsC,UAAmCjJ,EAAAwO,OAAAtO,GAAYF,EAAAw/B,eAAiBxlC,KAAAgkC,YAAAh+B,EAAAs9B,YAC/etoC,OAAA,WAAkBgF,KAAAiqC,oBAA0B,IAAAjkC,GAAAhG,KAAAypC,YAAAzuC,SAAAq3B,QAAqE,OAA5BryB,MAAAyU,UAAAzO,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,GAA4BjN,GAAS+wB,cAAA,SAAA/wB,GAA2B,GAAAE,GAAAF,EAAAkxB,QAAiB,IAAAlxB,YAAA2G,GAAAu1B,QAAAl8B,YAAA2G,GAAA+M,KAAA,CAAuD1T,EAAA,GAAA2G,GAAA27B,iBAAA,EAAApiC,EAAAsT,SAAAhjB,OAAA,EAAoD,IAAAzC,GAAA,GAAA4Y,GAAA27B,iBAAA,EAAApiC,EAAA+iC,OAAAzyC,OAAA,EAAsDwJ,MAAAgsC,aAAA,WAAAhmC,EAAAmhC,kBAAAjhC,EAAAsT,WAA8DxZ,KAAAgsC,aAAA,QAAAj4C,EAAAizC,gBAAA9gC,EAAA+iC,SAAuD/iC,EAAAsjC,eAAAtjC,EAAAsjC,cAAAhzC,SAAA0P,EAAAsT,SAAAhjB,SAC5bwP,EAAA,GAAA2G,GAAA27B,iBAAApiC,EAAAsjC,cAAAhzC,OAAA,GAAAwJ,KAAAgsC,aAAA,eAAAhmC,EAAA+gC,UAAA7gC,EAAAsjC,iBAAwH,OAAAtjC,EAAA+1B,iBAAAj8B,KAAAi8B,eAAA/1B,EAAA+1B,eAAAtlC,SAAwE,OAAAuP,EAAAujC,cAAAzpC,KAAAypC,YAAAvjC,EAAAujC,YAAA9yC,aAA+DqP,aAAA2G,GAAAyE,MAAAlL,YAAAyG,GAAA4M,UAAAvZ,KAAA2rC,aAAAzlC,EAAgF,OAAAlG,OAAYssC,iBAAA,SAAAtmC,GAA8B,GAAAE,GAAAF,EAAAkxB,QAAiB,IAAAlxB,YAAA2G,GAAAyE,KAAA,CAA4B,GAAArd,GAAAmS,EAAAqmC,gBAAyB,aAAAx4C,EAAA,MAAAiM,MAAA2rC,aAAAzlC,EAA0CnS,GAAAi2C,mBACze9jC,EAAA8jC,mBAAqBj2C,EAAA81C,kBAAA3jC,EAAA2jC,kBAAwC91C,EAAA61C,iBAAA1jC,EAAA0jC,iBAAsC71C,EAAA+1C,cAAA5jC,EAAA4jC,cAAgC/1C,EAAA21C,iBAAAxjC,EAAAwjC,iBAAsCxjC,EAAA8jC,oBAAA,EAAwB9jC,EAAA2jC,mBAAA,EAAuB3jC,EAAA0jC,kBAAA,EAAsB1jC,EAAA4jC,eAAA,EAAmB5jC,EAAAwjC,kBAAA,EAAsBxjC,EAAAnS,EAEvP,OAF2P,IAAAmS,EAAA8jC,qBAAAj2C,EAAAiM,KAAAo3B,WAAAp+B,SAAA,SAAAjF,MAAAozC,kBAAAjhC,EAAAsT,UAAAzlB,EAAA6yC,aAAA,GAAA1gC,EAAA8jC,oBAAA,IAA+I,IAAA9jC,EAAA2jC,oBAAA91C,EAAAiM,KAAAo3B,WAAAG,OAAA,SAAAxjC,MAAAozC,kBAAAjhC,EAAAklC,SAC1ar3C,EAAA6yC,aAAA,GAAA1gC,EAAA2jC,mBAAA,IAA0C,IAAA3jC,EAAA0jC,mBAAA71C,EAAAiM,KAAAo3B,WAAAlmB,MAAA,SAAAnd,MAAAizC,gBAAA9gC,EAAA+iC,QAAAl1C,EAAA6yC,aAAA,GAAA1gC,EAAA0jC,kBAAA,GAAoI1jC,EAAA4jC,gBAAA/1C,EAAAiM,KAAAo3B,WAAA+S,GAAA,SAAAp2C,MAAAmzC,kBAAAhhC,EAAAmlC,KAAAt3C,EAAA6yC,aAAA,GAAA1gC,EAAA4jC,eAAA,GAAqH5jC,EAAAyjC,0BAAA51C,EAAAiM,KAAAo3B,WAAAoV,aAAA,SAAAz4C,MAAAgzC,UAAA7gC,EAAAsjC,eAAAz1C,EAAA6yC,aAAA,GAAA1gC,EAAAyjC,yBAAA,GAAqJzjC,EAAAwjC,mBAAAxjC,EAAAwlC,cAAA1lC,EAAAkxB,UAAAl3B,KAAAqqC,OACxbnkC,EAAAmkC,OAAAnkC,EAAAwjC,kBAAA,GAAgC1pC,MAAY2rC,aAAA,SAAA3lC,GAAwF,MAA9DA,GAAAumC,kBAAA,GAAA5/B,GAAA4+B,gBAAAI,aAAA3lC,GAA8DhG,KAAAysC,mBAAAzmC,EAAAumC,mBAAmDE,mBAAA,SAAAzmC,GAAgC,GAAAE,GAAA,GAAA0xB,cAAA,EAAA5xB,EAAAwT,SAAAhjB,OAA4CwJ,MAAAgsC,aAAA,cAAAr/B,GAAA45B,gBAAArgC,EAAA,GAAAihC,kBAAAnhC,EAAAwT,WAA6F,EAAAxT,EAAAolC,QAAA50C,SAAA0P,EAAA,GAAA0xB,cAAA,EAAA5xB,EAAAolC,QAAA50C,QAAAwJ,KAAAgsC,aAAA,YAAAr/B,GAAA45B,gBAAArgC,EAAA,GAAAihC,kBAAAnhC,EAAAolC,WAChW,EAAAplC,EAAAijC,OAAAzyC,SAAA0P,EAAA,GAAA0xB,cAAA,EAAA5xB,EAAAijC,OAAAzyC,QAAAwJ,KAAAgsC,aAAA,WAAAr/B,GAAA45B,gBAAArgC,EAAA,GAAA8gC,gBAAAhhC,EAAAijC,UAAiJ,EAAAjjC,EAAAqlC,IAAA70C,SAAA0P,EAAA,GAAA0xB,cAAA,EAAA5xB,EAAAqlC,IAAA70C,QAAAwJ,KAAAgsC,aAAA,QAAAr/B,GAAA45B,gBAAArgC,EAAA,GAAAghC,kBAAAlhC,EAAAqlC,OAAuI,EAAArlC,EAAAylC,KAAAj1C,SAAA0P,EAAA,GAAA0xB,cAAA,EAAA5xB,EAAAylC,KAAAj1C,QAAAwJ,KAAAgsC,aAAA,SAAAr/B,GAAA45B,gBAAArgC,EAAA,GAAAghC,kBAAAlhC,EAAAylC,QAA2I,EAAAzlC,EAAAwlC,QAAAh1C,SAAA0P,EAAA,UAAAF,EAAAwT,SAAAhjB,OAAA6xC,YAAAJ,aAAA,EAAAjiC,EAAAwlC,QAAAh1C,QACnawJ,KAAA+rC,SAAA,GAAAp/B,GAAA45B,gBAAArgC,EAAA,GAAA+gC,iBAAAjhC,EAAAwlC,WAA6ExrC,KAAAqqC,OAAArkC,EAAAqkC,MAAqB,QAAAt2C,KAAAiS,GAAAojC,aAAA,CAA6B,OAAAljC,MAAAoW,EAAAtW,EAAAojC,aAAAr1C,GAAAiD,EAAA,EAAAsS,EAAAgT,EAAA9lB,OAAgDQ,EAAAsS,EAAItS,IAAA,CAAK,GAAAutB,GAAAjI,EAAAtlB,GAAA6a,EAAA,GAAAlF,GAAA27B,iBAAA,EAAA/jB,EAAA/tB,OAAA,EAAsD0P,GAAArG,KAAAgS,EAAAs1B,kBAAA5iB,IAA+BvkB,KAAA4rC,gBAAA73C,GAAAmS,EAC/D,MADyF,GAAAF,EAAAujC,YAAA/yC,SAAAzC,EAAA,GAAA4Y,GAAA27B,iBAAA,EAAAtiC,EAAAujC,YAAA/yC,OAAA,GAAAwJ,KAAAgsC,aAAA,YAAAj4C,EAAAqzC,kBAAAphC,EAAAujC,eAAmJ,EAAAvjC,EAAAsjC,YAAA9yC,SAAAzC,EAAA,GAAA4Y,GAAA27B,iBAAA,EAAAtiC,EAAAsjC,YAAA9yC,OAC1b,GAAAwJ,KAAAgsC,aAAA,aAAAj4C,EAAAqzC,kBAAAphC,EAAAsjC,eAAuE,OAAAtjC,EAAAi2B,iBAAAj8B,KAAAi8B,eAAAj2B,EAAAi2B,eAAAtlC,SAAwE,OAAAqP,EAAAyjC,cAAAzpC,KAAAypC,YAAAzjC,EAAAyjC,YAAA9yC,SAA+DqJ,MAAYiqC,mBAAA,WAA+B,OAAAjqC,KAAAypC,cAAAzpC,KAAAypC,YAAA,GAAA98B,GAAAkqB,KAA2D,IAAA7wB,GAAAhG,KAAAo3B,WAAAp+B,SAAA65B,KAAqC,UAAA7sB,EAAAhG,KAAAypC,YAAA3S,aAAA9wB,GAAAhG,KAAAypC,YAAA1T,aAAyE2W,MAAA1sC,KAAAypC,YAAAhvB,IAAA1b,IAAA2tC,MAAA1sC,KAAAypC,YAAAhvB,IAAAzH,IAAA05B,MAAA1sC,KAAAypC,YAAAhvB,IAAAxH,KACla3d,QAAAC,MAAA,oIAAAyK,OAAwJk8B,sBAAA,WAAkC,GAAAl2B,GAAA,GAAA2G,GAAAkqB,KAAA3wB,EAAA,GAAAyG,GAAA8G,OAAyC,mBAAkB,OAAAzT,KAAAi8B,iBAAAj8B,KAAAi8B,eAAA,GAAAtvB,GAAA+qB,OAAmE,IAAA3jC,GAAAiM,KAAAo3B,WAAAp+B,QAA+B,IAAAjF,EAAA,CAAM,GAAAA,KAAA8+B,MAAAvW,EAAAtc,KAAAi8B,eAAAjhC,MAA2CgL,GAAA8wB,aAAA/iC,GAAkBiS,EAAAhL,OAAAshB,EAAY,QAAAtlB,GAAA,EAAAsS,EAAA,EAAAib,EAAAxwB,EAAAyC,OAA2B8S,EAAAib,EAAIjb,GAAA,EAAApD,EAAAogB,UAAAvyB,EAAAuV,GAAAtS,EAAAwI,KAAAC,IAAAzI,EAAAslB,EAAAmW,kBAAAvsB,GACrclG,MAAAi8B,eAAA9H,OAAA30B,KAAAgmB,KAAAxuB,GAAwC01C,MAAA1sC,KAAAi8B,eAAA9H,SAAA7+B,QAAAC,MAAA,+HAAAyK,WAAwLsqC,mBAAA,aAAkCC,qBAAA,WAAiC,GAAAvkC,GAAAhG,KAAA6D,MAAAqC,EAAAlG,KAAAo3B,WAAArjC,EAAAiM,KAAAqqC,MAAiD,IAAAnkC,EAAAlN,SAAA,CAAe,GAAAsjB,GAAApW,EAAAlN,SAAA65B,KAAuB,aAAA3sB,EAAAqxB,OAAAv3B,KAAAgsC,aAAA,YAAAr/B,GAAA45B,gBAAA,GAAA3O,cAAAtb,EAAA9lB,QAAA,QAAyG,QAAAQ,GAAAkP,EAAAqxB,OAAA1E,MACnevpB,EAAA,EAAAib,EAAAvtB,EAAAR,OAAe8S,EAAAib,EAAIjb,IAAAtS,EAAAsS,GAAA,CAAW,IAAAuI,GAAAiU,EAAAD,EAAA7uB,EAAAkP,EAAAqxB,OAAA1E,MAAA3B,EAAA,GAAAvkB,GAAA8G,QAAAzf,EAAA,GAAA2Y,GAAA8G,QAAA3f,EAAA,GAAA6Y,GAAA8G,QAAA0d,EAAA,GAAAxkB,GAAA8G,QAAA3B,EAAA,GAAAnF,GAAA8G,OAA+H,IAAAzN,EAAA,CAAMA,IAAA6sB,MAAU,IAAA9+B,EAAAyC,QAAAwJ,KAAAmsC,SAAA,EAAAnmC,EAAAxP,OAAwC,QAAAovB,GAAA,EAAA8S,EAAA3kC,EAAAyC,OAAuBovB,EAAA8S,IAAI9S,EAAA,IAAAtc,EAAAvV,EAAA6xB,GAAArB,EAAAjb,EAAAuK,MAAAhC,EAAAvI,EAAAo9B,MAAAp9B,EAAAib,KAAA1S,EAA4CvI,EAAAib,EAAIjb,GAAA,EAAAuI,EAAA,EAAA7L,EAAAsD,EAAA,GAAAwc,EAAA,EAAA9f,EAAAsD,EAAA,GAAAuc,EAAA,EAAA7f,EAAAsD,EAAA,GAAA4nB,EAAA5K,UAAAhK,EAAAzK,GAAA7d,EAAAsyB,UAAAhK,EAAAwJ,GAAAhyB,EAAAwyB,UAAAhK,EAAAuJ,GAAAsL,EAAAQ,WAAA79B,EAAAE,GAAA8d,EAAA6f,WAAAT,EAAAl9B,GAAAm9B,EAAA5V,MAAAzJ,GAAA9a,EAAA6a,IAAAsf,EAAApyB,EAAA/H,EAAA6a,EAAA,IAAAsf,EAAAne,EAAAhc,EAAA6a,EAAA,IAAAsf,EAAAle,EAAAjc,EAAA8uB,IAAAqL,EAAApyB,EAAA/H,EAAA8uB,EAAA,IAAAqL,EAAAne,EAAAhc,EAAA8uB,EAAA,IAAAqL,EAAAle,EAAAjc,EAAA6uB,IAAAsL,EAAApyB,EAChS/H,EAAA6uB,EAAA,IAAAsL,EAAAne,EAAAhc,EAAA6uB,EAAA,IAAAsL,EAAAle,MAAwB,KAAA3J,EAAA,EAAAib,EAAAjI,EAAA9lB,OAAwB8S,EAAAib,EAAIjb,GAAA,EAAA4nB,EAAA5K,UAAAhK,EAAAhT,GAAAtV,EAAAsyB,UAAAhK,EAAAhT,EAAA,GAAAxV,EAAAwyB,UAAAhK,EAAAhT,EAAA,GAAA6nB,EAAAQ,WAAA79B,EAAAE,GAAA8d,EAAA6f,WAAAT,EAAAl9B,GAAAm9B,EAAA5V,MAAAzJ,GAAA9a,EAAAsS,GAAA6nB,EAAApyB,EAAA/H,EAAAsS,EAAA,GAAA6nB,EAAAne,EAAAhc,EAAAsS,EAAA,GAAA6nB,EAAAle,EAAAjc,EAAAsS,EAAA,GAAA6nB,EAAApyB,EAAA/H,EAAAsS,EAAA,GAAA6nB,EAAAne,EAAAhc,EAAAsS,EAAA,GAAA6nB,EAAAle,EAAAjc,EAAAsS,EAAA,GAAA6nB,EAAApyB,EAAA/H,EAAAsS,EAAA,GAAA6nB,EAAAne,EAAAhc,EAAAsS,EAAA,GAAA6nB,EAAAle,CAA4MjT,MAAA2sC,mBAAwBzmC,EAAAqxB,OAAAqP,aAAA,IAAyBkE,MAAA,SAAA9kC,EAAAE,GAAqB,OAAAF,YAAA2G,GAAAwqB,eAA6I,CAAK,SAAAjxB,MAAA,EAAkB,IAC1eoW,GAD0evoB,EAAAiM,KAAAo3B,UACxe,KAAA9a,IAAAvoB,GAAA,YAAAiS,EAAAoxB,WAAA9a,GAAA,OAAAtlB,GAAAjD,EAAAuoB,GAAAuW,MAAAvpB,EAAAtD,EAAAoxB,WAAA9a,GAAAiI,EAAAjb,EAAAupB,MAAAhhB,EAAA,EAAAvI,IAAAspB,SAAA1sB,EAA2G2L,EAAA0S,EAAA/tB,OAAWqb,IAAAvI,IAAAtS,EAAAsS,GAAAib,EAAA1S,EAAkB,OAAA7R,MAD4L1K,QAAAC,MAAA,kFAAAyQ,IAC/K2mC,iBAAA,WAA6B,OAAAzmC,GAAAnS,EAAAuoB,EAAAtW,EAAAhG,KAAAo3B,WAAAG,OAAA1E,MAAA77B,EAAA,EAAAsS,EAAAtD,EAAAxP,OAA4DQ,EAAAsS,EAAItS,GAAA,EAAAkP,EAAAF,EAAAhP,GAAAjD,EAAAiS,EAAAhP,EAAA,GAAAslB,EAAAtW,EAAAhP,EAAA,GAAAkP,EAAA,EAAA1G,KAAAgmB,KAAAtf,IAAAnS,IAAAuoB,KAAAtW,EAAAhP,IAAAkP,EAAAF,EAAAhP,EAAA,IAAAkP,EAAAF,EAAAhP,EAAA,IAAAkP,GAAqF0mC,aAAA,WAAyB,UAAA5sC,KAAA6D,MAAA,MAAAvO,SAAA0vB,KAAA,yEAAAhlB,IAAuH,IACzdsc,GADydtW,EAAA,GAAA2G,GAAAwqB,eACzdjxB,EAAAlG,KAAA6D,MAAAgvB,MAAA9+B,EAAAiM,KAAAo3B,UAAuC,KAAA9a,IAAAvoB,GAAA,CAAY,OAAAiD,GAAAjD,EAAAuoB,GAAAhT,EAAAtS,EAAA67B,MAAA77B,IAAA47B,SAAArO,EAAA,GAAAjb,GAAAzU,YAAAqR,EAAA1P,OAAAQ,GAAA6a,EAAA,EAAAiU,EAAA,EAAAD,EAAA,EAAAqL,EAAAhrB,EAAA1P,OAA6FqvB,EAAAqL,EAAIrL,IAAA,OAAAhU,GAAA3L,EAAA2f,GAAA7uB,EAAAhD,EAAA,EAAyBA,EAAAgD,EAAIhD,IAAAuwB,EAAAuB,KAAAxc,EAAAuI,IAAkB7L,GAAAgmC,aAAA1vB,EAAA,GAAA3P,GAAA45B,gBAAAhiB,EAAAvtB,IAAiD,MAAAgP,IAASy/B,OAAA,WAAmB,GAAAz/B,IAAO0/B,UAAUK,QAAA,IAAA5qC,KAAA,iBAAA6qC,UAAA,yBAA2I,IAArEhgC,EAAA68B,KAAA7iC,KAAA6iC,KAAiB78B,EAAA7K,KAAA6E,KAAA7E,KAAiB,KAAA6E,KAAAnJ,OAAAmP,EAAAnP,KAAAmJ,KAAAnJ,MAAmC,SAAAmJ,KAAAmrC,WAAA,CAA6B,GAAAp3C,GAAAmS,EAAAlG,KAAAmrC,UAAwB,KAAAp3C,IAAAmS,GAAA,SACjeA,EAAAnS,KAAAiS,EAAAjS,GAAAmS,EAAAnS,GAAkB,OAAAiS,GAASA,EAAA/Q,MAAQmiC,cAAe,IAAA9a,GAAAtc,KAAA6D,KAAiB,QAAAyY,IAAApW,EAAA+D,MAAAvC,UAAAwC,MAAArW,KAAAyoB,EAAAuW,OAAA7sB,EAAA/Q,KAAA4O,OAA+D1I,KAAAmhB,EAAAuW,MAAAh+B,YAAAgC,KAAAg8B,MAAA3sB,IAAwCoW,EAAAtc,KAAAo3B,UAAkB,KAAArjC,IAAAuoB,GAAA,CAAY,GAAAtlB,GAAAslB,EAAAvoB,GAAAmS,EAAA+D,MAAAvC,UAAAwC,MAAArW,KAAAmD,EAAA67B,MAAiD7sB,GAAA/Q,KAAAmiC,WAAArjC,IAAsB6+B,SAAA57B,EAAA47B,SAAAz3B,KAAAnE,EAAA67B,MAAAh+B,YAAAgC,KAAAg8B,MAAA3sB,EAAAygC,WAAA3vC,EAAA2vC,YAC7P,MADgV5yC,GAAAiM,KAAAqqC,OAAc,EAAAt2C,EAAAyC,SAAAwP,EAAA/Q,KAAAo1C,OAAA9lC,KAAA2hC,MAAA3hC,KAAAC,UAAAzQ,KAA0DA,EAAAiM,KAAAi8B,eAAsB,OAAAloC,IAAAiS,EAAA/Q,KAAAgnC,gBAAkCjhC,OAAAjH,EAAAiH,OAAAurB,UACle4N,OAAApgC,EAAAogC,SAAkBnuB,GAASrP,MAAA,WAAkB,UAAAgW,GAAAwqB,gBAAA3S,KAAAxkB,OAA4CwkB,KAAA,SAAAxe,GAAkB,GAAAE,GAAAF,EAAAnC,KAAc,QAAAqC,GAAAlG,KAAA+rC,SAAA7lC,EAAAvP,QAAmC,IAAA5C,GAAAmS,EAAAF,EAAAoxB,UAAqB,KAAArjC,IAAAmS,GAAAlG,KAAAgsC,aAAAj4C,EAAAmS,EAAAnS,GAAA4C,QAA4D,KAAfqP,IAAAqkC,OAAWt2C,EAAA,EAAImS,EAAAF,EAAAxP,OAAezC,EAAAmS,EAAInS,IAAA,CAAK,GAAAuoB,GAAAtW,EAAAjS,EAAWiM,MAAAmsC,SAAA7vB,EAAAzI,MAAAyI,EAAAoqB,MAAApqB,EAAAgqB,eAA+C,MAAAtmC,OAAYsrC,QAAA,WAAoBtrC,KAAAqhC,eAAoBlmC,KAAA,eAAoBwR,EAAAwqB,eAAA0V,SAAA,MACvYlgC,EAAAmgC,wBAAA,WAAyCngC,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,0BAAoC6E,KAAA+sC,kBAAA,QAA+BpgC,EAAAmgC,wBAAAplC,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAsFiF,EAAAmgC,wBAAAplC,UAAA7S,YAAA8X,EAAAmgC,wBAAkFngC,EAAAmgC,wBAAAplC,UAAAykC,SAAA,SAAAnmC,EAAAE,EAAAnS,GAAiEiM,KAAAqqC,OAAAxqC,MAAkBgU,MAAA7N,EAAA0gC,MAAAxgC,EAAA8mC,UAAAj5C,KACvY4Y,EAAAmgC,wBAAAplC,UAAA8c,KAAA,SAAAxe,GAAyD,GAAAE,GAAAF,EAAAnC,KAAc,QAAAqC,GAAAlG,KAAA+rC,SAAA7lC,EAAAvP,QAAmC,IAAA5C,GAAAmS,EAAAF,EAAAoxB,UAAqB,KAAArjC,IAAAmS,GAAAlG,KAAAgsC,aAAAj4C,EAAAmS,EAAAnS,GAAA4C,QAA4D,KAAfqP,IAAAqkC,OAAWt2C,EAAA,EAAImS,EAAAF,EAAAxP,OAAezC,EAAAmS,EAAInS,IAAA,CAAK,GAAAuoB,GAAAtW,EAAAjS,EAAWiM,MAAAmsC,SAAA7vB,EAAAzI,MAAAyI,EAAAoqB,MAAApqB,EAAA0wB,WAA2C,MAAAhtC,OAAa2M,EAAAsgC,QAAA,SAAAjnC,EAAAE,GAA4B,gBAAAF,KAAA1Q,QAAA0vB,KAAA,sDAAAhf,EAAAE,GAA8FlG,KAAAuH,MAAAvB,EAAahG,KAAAwmC,SAAA,GAC7Z75B,EAAAsgC,QAAAvlC,WAAyB7S,YAAA8X,EAAAsgC,QAAAz5B,SAAA,SAAAxN,GAAuF,MAAxChG,MAAAwmC,SAAA,EAAgBxmC,KAAAktC,iBAAAlnC,EAAwBhG,OAAc2M,EAAAwgC,gBAAA,WAAiC,KAAArrC,OAAA,kEAC/J6K,EAAAwgC,gBAAAC,KAAA,SAAApnC,EAAAE,EAAAnS,GAA2CiM,KAAAqtC,OAAArnC,EAAchG,KAAAstC,MAAApnC,EAAalG,KAAAutC,WAAAx5C,GAAA,KAAwBiS,EAAAE,EAAAsnC,OAAWtnC,EAAAF,EAAAxP,OAAWzC,EAAAkW,MAAA/D,EAAW,QAAAoW,IAAW2jB,YAAAtzB,EAAA0W,oBAAA6c,UAAAvzB,EAAA0W,qBAA0ErsB,EAAA,EAAKA,IAAAkP,IAAMlP,EAAA,CAAK,GAAAsS,GAAAtD,EAAAhP,GAAAy2C,kBAAA,KAAmC15C,GAAAiD,GAAAsS,EAAOA,EAAAi2B,SAAAjjB,EAAatc,KAAA0tC,qBAAApxB,EAA4Btc,KAAA2tC,cAAA55C,EAAqBiM,KAAA4tC,kBAAA3jC,MAAA/D,GAAgClG,KAAA6tC,mBAAA7tC,KAAA8tC,sBAAA9tC,KAAA+tC,kBAAA/tC,KAAAguC,YAAA,KAAgGhuC,KAAAiuC,KAAAthC,EAAAqW,WAA2BhjB,KAAAkuC,cACpeluC,KAAAmuC,WAAA,KAAqBnuC,KAAAouC,KAAA,EAAYpuC,KAAAquC,iBAAAruC,KAAAsuC,OAAAtuC,KAAAuuC,oBAAAvuC,KAAAwuC,UAAA,EAA4ExuC,KAAAyuC,YAAAtjC,IAA0BnL,KAAA0uC,QAAA,EAAe1uC,KAAA2uC,SAAA,EAAgB3uC,KAAA4uC,mBAAA,EAA0B5uC,KAAA6uC,eAAA7uC,KAAA8uC,kBAAA,GACnMniC,EAAAwgC,gBAAAC,KAAA1lC,WAAsC7S,YAAA8X,EAAAwgC,gBAAAC,KAAA2B,KAAA,WAAyF,MAAlC/uC,MAAAqtC,OAAA2B,gBAAAhvC,MAAkCA,MAAYiN,KAAA,WAAqD,MAApCjN,MAAAqtC,OAAA4B,kBAAAjvC,MAAoCA,KAAAkvC,SAAoBA,MAAA,WAAqG,MAAnFlvC,MAAA0uC,QAAA,EAAe1uC,KAAA2uC,SAAA,EAAgB3uC,KAAAouC,KAAA,EAAYpuC,KAAAkuC,cAAmBluC,KAAAmuC,WAAA,KAAqBnuC,KAAAmvC,aAAAC,eAAuCC,UAAA,WAAsB,MAAArvC,MAAA2uC,UAAA3uC,KAAA0uC,QAAA,IAAA1uC,KAAAwuC,WAAA,OAAAxuC,KAAAmuC,YAAAnuC,KAAAqtC,OAAAiC,gBAAAtvC,OAAiHuvC,YAAA,WAAwB,MAAAvvC,MAAAqtC,OAAAiC,gBAAAtvC,OAC/fwvC,QAAA,SAAAxpC,GAAsC,MAAlBhG,MAAAmuC,WAAAnoC,EAAkBhG,MAAYyvC,QAAA,SAAAzpC,EAAAE,GAAsD,MAA/BlG,MAAAiuC,KAAAjoC,EAAYhG,KAAAyuC,YAAAvoC,EAAmBlG,MAAY0vC,mBAAA,SAAA1pC,GAAqF,MAArDhG,MAAAsuC,OAAAtoC,EAAchG,KAAAquC,iBAAAruC,KAAA2uC,QAAA3oC,EAAA,EAAuChG,KAAAmvC,cAAyBQ,mBAAA,WAA+B,MAAA3vC,MAAAquC,kBAA6B/1B,OAAA,SAAAtS,GAAoB,MAAAhG,MAAA4vC,gBAAA5pC,EAAA,MAAmCqS,QAAA,SAAArS,GAAqB,MAAAhG,MAAA4vC,gBAAA5pC,EAAA,MAAmC6pC,cAAA,SAAA7pC,EAAAE,EAAAnS,GAA2D,GAA5BiS,EAAAqS,QAAAnS,GAAalG,KAAAsY,OAAApS,GAAenS,EAAA,CAAMA,EAAAiM,KAAAstC,MAAAwC,QAAsB,IAAAxzB,GAAAtW,EAAAsnC,MAAAwC,SACpe94C,EAAAjD,EAAAuoB,CAAMtW,GAAA+pC,KAAA,EAAAzzB,EAAAvoB,EAAAmS,GAAgBlG,KAAA+vC,KAAA/4C,EAAA,EAAAkP,GAAiB,MAAAlG,OAAYgwC,YAAA,SAAAhqC,EAAAE,EAAAnS,GAA6B,MAAAiS,GAAA6pC,cAAA7vC,KAAAkG,EAAAnS,IAAiCo7C,WAAA,WAAuB,GAAAnpC,GAAAhG,KAAA6tC,kBAAkH,OAApF,QAAA7nC,IAAAhG,KAAA6tC,mBAAA,KAAA7tC,KAAAqtC,OAAA4C,4BAAAjqC,IAAoFhG,MAAYkwC,sBAAA,SAAAlqC,GAA6F,MAA1DhG,MAAAwuC,UAAAxoC,EAAiBhG,KAAAuuC,oBAAAvuC,KAAA0uC,OAAA,EAAA1oC,EAAyChG,KAAAovC,eAA0Be,sBAAA,WAAkC,MAAAnwC,MAAAuuC,qBAAgC6B,YAAA,SAAApqC,GAC7b,MADsdhG,MAAAwuC,UAAAxuC,KAAAstC,MAAAwC,SACxd9pC,EAAEhG,KAAAovC,eAA0BiB,SAAA,SAAArqC,GAAkE,MAA5ChG,MAAAouC,KAAApoC,EAAAooC,KAAiBpuC,KAAAwuC,UAAAxoC,EAAAwoC,UAA2BxuC,KAAAovC,eAA0BkB,KAAA,SAAAtqC,GAAkB,MAAAhG,MAAA+vC,KAAA/vC,KAAAuuC,oBAAA,EAAAvoC,IAA+C+pC,KAAA,SAAA/pC,EAAAE,EAAAnS,GAAsB,GAAAuoB,GAAAtc,KAAAqtC,OAAAr2C,EAAAslB,EAAA8xB,KAAA9kC,EAAAtJ,KAAA8tC,sBAAAvpB,EAAAvkB,KAAAwuC,SAAwN,OAA/I,QAAAllC,IAAAtJ,KAAA8tC,sBAAAxkC,EAAAgT,EAAAi0B,2BAAqEj0B,EAAAhT,EAAAu1B,mBAAuBv1B,IAAA01B,aAAiB1iB,EAAA,GAAAtlB,EAAOslB,EAAA,GAAAtlB,EAAAjD,EAASuV,EAAA,GAAAtD,EAAAue,EAASjb,EAAA,GAAApD,EAAAqe,EAASvkB,MAAYovC,YAAA,WAAwB,GAAAppC,GAAAhG,KAAA8tC,qBAC9X,OAD+Z,QAAA9nC,IAC5ehG,KAAA8tC,sBAAA,KAAA9tC,KAAAqtC,OAAA4C,4BAAAjqC,IAA6EhG,MAAYwwC,SAAA,WAAqB,MAAAxwC,MAAAqtC,QAAmBoD,QAAA,WAAoB,MAAAzwC,MAAAstC,OAAkBoD,QAAA,WAAoB,MAAA1wC,MAAAutC,YAAAvtC,KAAAqtC,OAAAsD,OAA0CC,QAAA,SAAA5qC,EAAAE,EAAAnS,EAAAuoB,GAA2B,GAAAtlB,GAAAgJ,KAAAmuC,UAAsB,WAAAn3C,EAAA,CAAuB,GAAVkP,GAAAF,EAAAhP,GAAAjD,EAAU,EAAAmS,GAAA,IAAAnS,EAAA,MAAqBiM,MAAAmuC,WAAA,KAAqBjoC,GAAAnS,EAA+E,GAA1EmS,GAAAlG,KAAA6wC,iBAAA7qC,GAA4BjS,EAAAiM,KAAA8wC,YAAA5qC,GAAsBF,EAAAhG,KAAA+wC,cAAA/qC,GAAwB,EAAAA,EAAA,CAAQE,EAAAlG,KAAA2tC,aAAqB,QAAA32C,GAAAgJ,KAAA4tC,kBAAAtkC,EAAA,EAAAib,EAAAre,EAAA1P,OAAgD8S,IACnfib,IAAEjb,EAAApD,EAAAoD,GAAA41B,SAAAnrC,GAAAiD,EAAAsS,GAAA0nC,WAAA10B,EAAAtW,KAA2C+qC,cAAA,SAAA/qC,GAA2B,GAAAE,GAAA,CAAQ,IAAAlG,KAAA2uC,QAAA,CAAiB,GAAAzoC,GAAAlG,KAAAsuC,OAAAv6C,EAAAiM,KAAA6tC,kBAA4C,WAAA95C,EAAA,CAAa,GAAAuoB,GAAAvoB,EAAAmrC,SAAAl5B,GAAA,GAAAE,IAAAoW,CAA6BtW,GAAAjS,EAAA8qC,mBAAA,KAAA7+B,KAAAmvC,aAAA,IAAA7yB,IAAAtc,KAAA2uC,SAAA,KAAyE,MAAA3uC,MAAAquC,iBAAAnoC,GAA+B2qC,iBAAA,SAAA7qC,GAA8B,GAAAE,GAAA,CAAQ,KAAAlG,KAAA0uC,OAAA,CAAiB,GAAAxoC,GAAAlG,KAAAwuC,UAAAz6C,EAAAiM,KAAA8tC,qBAAkD,WAAA/5C,EAAA,CAAa,GAAAuoB,GAAAvoB,EAAAmrC,SAAAl5B,GAAA,GAAAE,IAAAoW,CAA6BtW,GAAAjS,EAAA8qC,mBAAA,KAAA7+B,KAAAovC,cAAA,IAAAlpC,EAAAlG,KAAA0uC,QAAA,EAClb1uC,KAAAwuC,UAAAtoC,IAAmB,MAAAlG,MAAAuuC,oBAAAroC,GAAkC4qC,YAAA,SAAA9qC,GAAyB,GAAAE,GAAAlG,KAAAouC,KAAApoC,CAAkB,QAAAA,EAAA,MAAAE,EAAkB,IAAAnS,GAAAiM,KAAAstC,MAAAwC,SAAAxzB,EAAAtc,KAAAiuC,KAAAj3C,EAAAgJ,KAAAkuC,UAAwD,IAAA5xB,IAAA3P,EAAAoW,SAAA/c,EAAA,CAAyB,QAAAhP,IAAAgJ,KAAAixC,UAAA,EAAAjxC,KAAAkxC,aAAA,UAAAhrC,GAAAnS,EAAAmS,EAAAnS,MAAkE,QAAAmS,GAAgB,KAAAF,EAAhBE,GAAA,EAA6BlG,KAAA4uC,kBAAA5uC,KAAA0uC,QAAA,EAAA1uC,KAAA2uC,SAAA,EAAsD3uC,KAAAqtC,OAAAhM,eAA2BlmC,KAAA,WAAAg2C,OAAAnxC,KAAAk7B,UAAA,EAAAl1B,KAAA,QAAiD,CACnX,GADwXsW,MAAA3P,EAAAsW,kBAAyBjsB,IAAA,GAAAgP,GAAAhP,EAAA,EAAAgJ,KAAAkxC,aAAA,MAAAlxC,KAAAyuC,YAClcnyB,IAAAtc,KAAAkxC,YAAA,IAAAlxC,KAAAyuC,aAAA,EAAAnyB,IAAiDpW,GAAAnS,GAAA,EAAAmS,EAAA,CAAc,GAAAoD,GAAA9J,KAAAzI,MAAAmP,EAAAnS,GAAAmS,IAAAnS,EAAAuV,EAAAtS,IAAAwI,KAAA+wB,IAAAjnB,GAAAib,EAAAvkB,KAAAyuC,YAAAz3C,CAAmE,GAAAutB,GAAAvkB,KAAA4uC,kBAAA5uC,KAAA0uC,QAAA,EAAA1uC,KAAA2uC,SAAA,EAAAzoC,EAAA,EAAAF,EAAAjS,EAAA,EAAAiM,KAAAqtC,OAAAhM,eAAgGlmC,KAAA,WAAAg2C,OAAAnxC,KAAAk7B,UAAA,EAAAl1B,EAAA,SAA+C,IAAAue,GAAAve,EAAA,EAAAA,EAAAhG,KAAAkxC,YAAAlrC,KAAAsW,IAAAtc,KAAAkxC,aAAA,KAAA50B,GAAAtc,KAAAkuC,WAAAl3C,EAAAgJ,KAAAqtC,OAAAhM,eAAkHlmC,KAAA,OAAAg2C,OAAAnxC,KAAAoxC,UAAA9nC,KAAuC,GAAAgT,GAAA,OAAAtlB,GAAA,MAAAgJ,MAAAouC,KAAAloC,EAAAnS,EAAAmS,EAAuC,MAAAlG,MAAAouC,KAAAloC,GAAmBgrC,YAAA,SAAAlrC,EACpeE,EAAAnS,GAAK,GAAAuoB,GAAAtc,KAAA0tC,oBAAgC35C,IAAAuoB,EAAA2jB,YAAAtzB,EAAA2W,gBAAAhH,EAAA4jB,UAAAvzB,EAAA2W,kBAAAhH,EAAA2jB,YAAAj6B,EAAAhG,KAAA8uC,iBAAAniC,EAAA2W,gBAAA3W,EAAA0W,oBAAA1W,EAAA4W,iBAAAjH,EAAA4jB,UAAAh6B,EAAAlG,KAAA6uC,eAAAliC,EAAA2W,gBAAA3W,EAAA0W,oBAAA1W,EAAA4W,mBAAkSqsB,gBAAA,SAAA5pC,EAAAE,EAAAnS,GAAiC,GAAAuoB,GAAAtc,KAAAqtC,OAAAr2C,EAAAslB,EAAA8xB,KAAA9kC,EAAAtJ,KAAA6tC,kBACzT,OAD8W,QAAAvkC,IAAAtJ,KAAA6tC,mBAAAvkC,EAAAgT,EAAAi0B,2BAAkEj0B,EAAAhT,EAAAu1B,mBAC/dv1B,IAAA01B,aAAiB1iB,EAAA,GAAAtlB,EAAOsS,EAAA,GAAApD,EAAOoW,EAAA,GAAAtlB,EAAAgP,EAASsD,EAAA,GAAAvV,EAAOiM,OAAc2M,EAAA0kC,cAAA,SAAArrC,EAAAE,EAAAnS,GAAoCiM,KAAAnJ,KAAAmP,EAAYhG,KAAAwtC,OAAAz5C,EAAciM,KAAA8vC,SAAA,SAAA5pC,OAA8BlG,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC,EAAA/8B,KAAA8vC,UAAA9vC,KAAAsxC,gBAAsCtxC,KAAAuxC,OAAYvxC,KAAAwxC,YAC/O7kC,EAAA0kC,cAAA3pC,WAA+B7S,YAAA8X,EAAA0kC,cAAAC,cAAA,WAAyD,OAAAtrC,GAAA,EAAAE,EAAA,EAAAnS,EAAAiM,KAAAwtC,OAAAh3C,OAAqC0P,IAAAnS,IAAMmS,EAAA,GAAAoW,GAAAtc,KAAAwtC,OAAAtnC,GAAAF,EAAAxG,KAAAC,IAAAuG,EAAAsW,EAAAm1B,MAAAn1B,EAAAm1B,MAAAj7C,OAAA,GAAiEwJ,MAAA8vC,SAAA9pC,GAAgBurC,KAAA,WAAiB,OAAAvrC,GAAA,EAAYA,EAAAhG,KAAAwtC,OAAAh3C,OAAqBwP,IAAAhG,KAAAwtC,OAAAxnC,GAAAurC,KAAA,EAAAvxC,KAAA8vC,SAAyC,OAAA9vC,OAAYwxC,SAAA,WAAqB,OAAAxrC,GAAA,EAAYA,EAAAhG,KAAAwtC,OAAAh3C,OAAqBwP,IAAAhG,KAAAwtC,OAAAxnC,GAAAwrC,UAA8B,OAAAxxC,QAC/Yic,OAAAI,OAAA1P,EAAA0kC,eAAmCnL,MAAA,SAAAlgC,GAAkB,OAAAE,MAAAnS,EAAAiS,EAAAwnC,OAAAlxB,EAAA,GAAAtW,EAAA0rC,KAAA,GAAA16C,EAAA,EAAAsS,EAAAvV,EAAAyC,OAAsDQ,IAAAsS,IAAMtS,EAAAkP,EAAArG,KAAA8M,EAAAglC,cAAAzL,MAAAnyC,EAAAiD,IAAAkjC,MAAA5d;AAAqD,UAAA3P,GAAA0kC,cAAArrC,EAAAnP,KAAAmP,EAAA8pC,SAAA5pC,IAAoDu/B,OAAA,SAAAz/B,GAAoB,GAAAE,MAAAnS,EAAAiS,EAAAwnC,MAAoBxnC,IAAGnP,KAAAmP,EAAAnP,KAAAi5C,SAAA9pC,EAAA8pC,SAAAtC,OAAAtnC,EAA0C,QAAAoW,GAAA,EAAAtlB,EAAAjD,EAAAyC,OAAuB8lB,IAAAtlB,IAAMslB,EAAApW,EAAArG,KAAA8M,EAAAglC,cAAAlM,OAAA1xC,EAAAuoB,IAA6C,OAAAtW,IAAS4rC,8BAAA,SAAA5rC,EAAAE,EAAAnS,EAAAuoB,GAAiD,OAAAtlB,GAAAkP,EAAA1P,OAAA8S,KAAAib,EAAA,EAA4BA,EAAAvtB,EAAIutB,IAAA,CAAK,GAAA1S,MAAAiU,IAAcjU,GAAAhS,MAAA0kB,EAAAvtB,EAAA,GACteA,EAAAutB,KAAA,GAAAvtB,GAAa8uB,EAAAjmB,KAAA,MAAc,IAAAgmB,GAAAlZ,EAAAklC,eAAAC,iBAAAjgC,KAAAlF,EAAAklC,eAAAE,YAAAlgC,EAAA,EAAAgU,GAAAC,EAAAnZ,EAAAklC,eAAAE,YAAAjsB,EAAA,EAAAD,EAAmIvJ,IAAA,IAAAzK,EAAA,KAAAA,EAAAhS,KAAA7I,GAAA8uB,EAAAjmB,KAAAimB,EAAA,KAAsCxc,EAAAzJ,KAAA,GAAA8M,GAAAqlC,oBAAA,0BAAA9rC,EAAAqe,GAAA1tB,KAAA,IAAAgb,EAAAiU,GAAAoU,MAAA,EAAAnmC,IAAgG,UAAA4Y,GAAA0kC,cAAArrC,OAAAsD,IAAuC2oC,WAAA,SAAAjsC,EAAAE,GAA0B,GAAAnS,GAAAiS,CAAQiE,OAAA04B,QAAA38B,KAAAjS,EAAAiS,EAAAkxB,UAAAlxB,EAAAkxB,SAAAgb,YAAAlsC,EAAAksC,WAAsE,QAAA51B,GAAA,EAAYA,EAAAvoB,EAAAyC,OAAW8lB,IAAA,GAAAvoB,EAAAuoB,GAAAzlB,OAAAqP,EAAA,MAAAnS,GAAAuoB,EAAiC,cAC3e61B,oCAAA,SAAAnsC,EAAAE,EAAAnS,GAAoD,OAAAuoB,MAAYtlB,EAAA,qBAAAsS,EAAA,EAAAib,EAAAve,EAAAxP,OAAuC8S,EAAAib,EAAIjb,IAAA,CAAK,GAAAuI,GAAA7L,EAAAsD,GAAAwc,EAAAjU,EAAAhb,KAAAulB,MAAAplB,EAA6B,IAAA8uB,GAAA,EAAAA,EAAAtvB,OAAA,CAAkB,GAAAqvB,GAAAC,EAAA,IAAWA,EAAAxJ,EAAAuJ,MAAAvJ,EAAAuJ,GAAAC,MAAsBA,EAAAjmB,KAAAgS,IAAW7L,IAAK,KAAA6f,IAAAvJ,GAAAtW,EAAAnG,KAAA8M,EAAA0kC,cAAAO,8BAAA/rB,EAAAvJ,EAAAuJ,GAAA3f,EAAAnS,GAAiF,OAAAiS,IAASosC,eAAA,SAAApsC,EAAAE,EAAAnS,GAAgC,IAAAiS,EAAA,MAAA1Q,SAAAC,MAAA,yCAAqExB,GAAA,SAAAiS,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAsB,OAAAjD,EAAAyC,OAAA,CAAiB,GAAA8S,MAAAib,IAAc5X,GAAAklC,eAAAQ,YAAAt+C,EAAAuV,EAAAib,EAAAjI,GAA0C,IAAAhT,EAAA9S,QAC9eQ,EAAA6I,KAAA,GAAAmG,GAAAE,EAAAoD,EAAAib,KAAuB,IAAAjI,MAAAtlB,EAAAgP,EAAAnP,MAAA,UAAAyS,EAAAtD,EAAAxP,WAAA+tB,EAAAve,EAAA0rC,KAAA,EAAwD1rC,KAAAssC,aAAkB,QAAAzgC,GAAA,EAAYA,EAAA7L,EAAAxP,OAAWqb,IAAA,CAAK,GAAAiU,GAAA9f,EAAA6L,GAAA0gC,IAAgB,IAAAzsB,GAAA,IAAAA,EAAAtvB,OAAA,GAAAsvB,EAAA,GAAAsjB,aAAA,CAAyC,OAAA9/B,MAAYuc,EAAA,EAAKA,EAAAC,EAAAtvB,OAAWqvB,IAAA,GAAAC,EAAAD,GAAAujB,aAAA,OAAAlY,GAAA,EAAqCA,EAAApL,EAAAD,GAAAujB,aAAA5yC,OAA2B06B,IAAA5nB,EAAAwc,EAAAD,GAAAujB,aAAAlY,MAA+B,QAAAl9B,KAAAsV,GAAA,CAAgB,OAAAxV,MAAAq9B,KAAAD,EAAA,EAAsBA,IAAApL,EAAAD,GAAAujB,aAAA5yC,SAA6B06B,EAAA,CAAK,GAAApf,GAAAgU,EAAAD,EAAW/xB,GAAA+L,KAAAiS,EAAAs8B,MAAejd,EAAAtxB,KAAAiS,EAAA0gC,cAAAx+C,EAAA,KAA8BsoB,EAAAzc,KAAA,GAAA8M,GAAAqlC,oBAAA,yBAAAh+C,EAAA,IACjbF,EAAAq9B,IAAM7nB,IAAA9S,QAAA+tB,GAAA,OAAkBsB,GAAA,UAAA3f,EAAA2L,GAAAhb,KAAA,IAAA9C,EAAA4Y,EAAA8lC,oBAAA5sB,EAAA,YAAAC,EAAA,MAAAxJ,GAAAvoB,EAAA4Y,EAAA+lC,wBAAA7sB,EAAA,cAAAC,EAAA,MAAAxJ,GAAAvoB,EAAA4Y,EAAA8lC,oBAAA5sB,EAAA,SAAAC,EAAA,MAAAxJ,GAAiM,WAAAA,EAAA9lB,OAAA,QAAAmW,GAAA0kC,cAAAr6C,EAAAsS,EAAAgT,MAA2D3P,EAAAgmC,eAAA,SAAA3sC,GAAiChG,KAAA2wC,MAAA3qC,EAAahG,KAAA4yC,qBAA0B5yC,KAAAouC,KAAApuC,KAAA6yC,WAAA,EAA4B7yC,KAAAwuC,UAAA,GACxXvyB,OAAAI,OAAA1P,EAAAgmC,eAAAjrC,UAAAiF,EAAAq0B,gBAAAt5B,WAA8EorC,WAAA,SAAA9sC,EAAAE,GAAyB,GAAAnS,GAAAmS,GAAAlG,KAAA2wC,MAAAr0B,EAAAvoB,EAAA8uC,KAAA7rC,EAAA,gBAAAgP,GAAA2G,EAAA0kC,cAAAY,WAAAl+C,EAAAiS,KAAAjS,EAAA,OAAAiD,IAAA6rC,KAAA78B,EAAAsD,EAAAtJ,KAAA+yC,eAAAh/C,GAAAwwB,EAAA,IAA6I,aAAAjb,EAAA,CAAmC,GAApBib,EAAAjb,EAAA0pC,aAAA12B,GAAoB,SAAAiI,EAAA,MAAAA,EAAuBA,GAAAjb,EAAA2pC,aAAA,GAAoB,OAAAj8C,MAAAutB,EAAA+oB,OAAsB,cAAAt2C,EAAA,MAAwBA,EAAA,GAAA2V,GAAAgmC,eAAAO,QAAAlzC,KAAAhJ,EAAAkP,GAA6ClG,KAAAmzC,YAAAn8C,EAAAutB,GAAsBvkB,KAAAozC,mBAAAp8C,EAAAjD,EAAAuoB,GAA+BtlB,IAASq8C,eAAA,SAAArtC,EAC3dE,GAAG,GAAAnS,GAAAmS,GAAAlG,KAAA2wC,MAAAr0B,EAAAvoB,EAAA8uC,KAAA9uC,EAAA,gBAAAiS,GAAA2G,EAAA0kC,cAAAY,WAAAl+C,EAAAiS,KAAAjS,EAAAiM,KAAA+yC,eAAAh/C,IAAA8uC,KAAA78B,EAA2H,iBAAAjS,IAAAi/C,aAAA12B,IAAA,WAA+Cg3B,cAAA,WAA0B,OAAAttC,GAAAhG,KAAAuzC,SAAArtC,EAAAlG,KAAAwzC,gBAAAz/C,EAAAiM,KAAAyzC,UAAAn3B,EAAAtc,KAAA0zC,iBAAA18C,EAAAgJ,KAAA0zC,iBAAA1zC,KAAAwzC,gBAAA,EAAuIx8C,IAAAkP,IAAMlP,EAAAgP,EAAAhP,GAAAk4C,OAAiB,KAAAl4C,EAAA,EAAQA,IAAAslB,IAAMtlB,EAAAjD,EAAAiD,GAAA28C,SAAA,CAAoB,OAAA3zC,OAAY4C,OAAA,SAAAoD,GAAoBA,GAAAhG,KAAAwuC,SAAkB,QAAAtoC,GAAAlG,KAAAuzC,SAAAx/C,EAAAiM,KAAAwzC,gBAAAl3B,EAAAtc,KAAAouC,MACzbpoC,EAAAhP,EAAAwI,KAAAwc,KAAAhW,GAAAsD,EAAAtJ,KAAA6yC,YAAA,EAAAtuB,EAAA,EAA0CA,IAAAxwB,IAAMwwB,EAAA,CAAK,GAAA1S,GAAA3L,EAAAqe,EAAW1S,GAAA88B,SAAA98B,EAAA++B,QAAAt0B,EAAAtW,EAAAhP,EAAAsS,GAAuE,IAAzCtD,EAAAhG,KAAAyzC,UAAiBvtC,EAAAlG,KAAA0zC,iBAAwBnvB,EAAA,EAAQA,IAAAre,IAAMqe,EAAAve,EAAAue,GAAAzoB,MAAAwN,EAAkB,OAAAtJ,OAAY0wC,QAAA,WAAoB,MAAA1wC,MAAA2wC,OAAkBiD,YAAA,SAAA5tC,GAAyB,GAAAE,GAAAlG,KAAAuzC,QAAoBvtC,KAAA68B,IAAS,IAAA9uC,GAAAiM,KAAA+yC,eAAAz2B,EAAAvoB,EAAAiS,EAAiC,aAAAsW,EAAA,CAAe,OAAAA,KAAA22B,aAAAj8C,EAAA,EAAAsS,EAAAgT,EAAA9lB,OAAwCQ,IAAAsS,IAAMtS,EAAA,CAAK,GAAAutB,GAAAjI,EAAAtlB,EAAWgJ,MAAAivC,kBAAA1qB,EAA0B,IAAA1S,GAAA0S,EAAAypB,YAAAloB,EAAA5f,IAAA1P,OAAA,EAAoC+tB,GAAAypB,YAAA,KAAmBzpB,EAAAwpB,kBAAA,KAAyBjoB,EAAAkoB,YACven8B,EAAE3L,EAAA2L,GAAAiU,EAAO5f,EAAAmF,MAAQrL,KAAA6zC,iCAAAtvB,SAAyCxwB,GAAAiS,KAAa8tC,YAAA,SAAA9tC,GAAyBA,IAAA68B,IAAS,IAAA9uC,GAAAmS,EAAAlG,KAAA+yC,cAA4B,KAAAh/C,IAAAmS,GAAA,CAAY,GAAAoW,GAAApW,EAAAnS,GAAAi/C,aAAAhtC,EAA2B,UAAAsW,IAAAtc,KAAAivC,kBAAA3yB,GAAAtc,KAAA+zC,sBAAAz3B,IAAuG,GAAjCvoB,EAAAiM,KAAAg0C,uBAAAhuC,GAAiC,SAAAjS,EAAA,OAAAiD,KAAAjD,GAAAiS,EAAAjS,EAAAiD,GAAAgP,EAAAiuC,uBAAAj0C,KAAAk0C,uBAAAluC,IAA4FmuC,cAAA,SAAAnuC,EAAAE,GAA6B,GAAAnS,GAAAiM,KAAAqzC,eAAArtC,EAAAE,EAA+B,QAAAnS,IAAAiM,KAAAivC,kBAAAl7C,GAAAiM,KAAA+zC,sBAAAhgD,OAC3a4Y,EAAAgmC,eAAAO,QAAAvmC,EAAAwgC,gBAAAC,KACAnxB,OAAAI,OAAA1P,EAAAgmC,eAAAjrC,WAA8CyrC,YAAA,SAAAntC,EAAAE,GAA0B,GAAAnS,GAAAiS,EAAAunC,YAAAvtC,KAAA2wC,MAAAr0B,EAAAtW,EAAAsnC,MAAAE,OAAAx2C,EAAAslB,EAAA9lB,OAAA8S,EAAAtD,EAAA4nC,kBAAArpB,EAAAve,EAAA2nC,cAAA97B,EAAA9d,EAAA8uC,KAAA/c,EAAA9lB,KAAAg0C,uBAAAnuB,EAAAC,EAAAjU,EAA2K,KAA1B,SAAAgU,SAAiBC,EAAAjU,GAAAgU,GAASC,EAAA,EAAQA,IAAA9uB,IAAM8uB,EAAA,CAAK,GAAAoL,GAAA5U,EAAAwJ,GAAA9xB,EAAAk9B,EAAAr6B,KAAA/C,EAAA+xB,EAAA7xB,EAA2B,aAAAF,EAAA,CAAsB,GAAPA,EAAAwV,EAAAwc,GAAO,SAAAhyB,EAAA,CAAe,OAAAA,EAAAk6C,gBAAAl6C,EAAAsgD,eAAAp0C,KAAAq0C,oBAAAvgD,EAAA+d,EAAA7d,GAA2E,UAASF,EAAA,GAAA6Y,GAAA2nC,cAAA3nC,EAAA4nC,gBAAAvU,OAAAjsC,EAAAC,EAAAkS,KAAA0nC,kBAAA9nB,GAAA0uB,QAAAC,YAC1ZvjB,EAAAwjB,cAAAxjB,EAAAyjB,kBAAkC7gD,EAAAsgD,eAAmBp0C,KAAAq0C,oBAAAvgD,EAAA+d,EAAA7d,GAAgCsV,EAAAwc,GAAAhyB,EAAOywB,EAAAuB,GAAAiZ,aAAAjrC,EAAA8gD,SAA4B5F,gBAAA,SAAAhpC,GAA6B,IAAAhG,KAAAsvC,gBAAAtpC,GAAA,CAA6B,UAAAA,EAAAgoC,YAAA,CAAyB,GAAA9nC,IAAAF,EAAAunC,YAAAvtC,KAAA2wC,OAAA9N,KAAA9uC,EAAAiS,EAAAsnC,MAAAzK,KAAAvmB,EAAAtc,KAAA+yC,eAAAh/C,EAA8EiM,MAAAmzC,YAAAntC,EAAAsW,KAAA22B,aAAA,IAAyCjzC,KAAAozC,mBAAAptC,EAAAjS,EAAAmS,GAAyD,IAA1BA,EAAAF,EAAA4nC,kBAAsB75C,EAAA,EAAIuoB,EAAApW,EAAA1P,OAAezC,IAAAuoB,IAAMvoB,EAAA,CAAK,GAAAiD,GAAAkP,EAAAnS,EAAW,KAAAiD,EAAA28C,aAAA3zC,KAAA60C,aAAA79C,KAAA89C,qBAA+D90C,KAAA+0C,YAAA/uC,KAC/dipC,kBAAA,SAAAjpC,GAA8B,GAAAhG,KAAAsvC,gBAAAtpC,GAAA,CAA4B,OAAAE,GAAAF,EAAA4nC,kBAAA75C,EAAA,EAAAuoB,EAAApW,EAAA1P,OAA6CzC,IAAAuoB,IAAMvoB,EAAA,CAAK,GAAAiD,GAAAkP,EAAAnS,EAAW,OAAAiD,EAAA28C,WAAA38C,EAAAi9C,uBAAAj0C,KAAAg1C,iBAAAh+C,IAAsEgJ,KAAAi1C,gBAAAjvC,KAAyB4sC,mBAAA,WAA+B5yC,KAAAuzC,YAAiBvzC,KAAAwzC,gBAAA,EAAuBxzC,KAAA+yC,kBAAuB/yC,KAAAyzC,aAAkBzzC,KAAA0zC,iBAAA,EAAwB1zC,KAAAg0C,0BAA+Bh0C,KAAAk1C,wBAA6Bl1C,KAAAm1C,4BAAA,CAAmC,IAAAnvC,GAAAhG,IAAWA,MAAAo1C,OAAYC,SAASjX,YAAY,MAAAp4B,GAAAutC,SAAA/8C,QAC/e8+C,YAAY,MAAAtvC,GAAAwtC,kBAA0B+B,UAAWnX,YAAY,MAAAp4B,GAAAytC,UAAAj9C,QAA0B8+C,YAAa,MAAAtvC,GAAA0tC,mBAA2B8B,qBAAsBpX,YAAY,MAAAp4B,GAAAkvC,qBAAA1+C,QAAqC8+C,YAAa,MAAAtvC,GAAAmvC,gCAAwC7F,gBAAA,SAAAtpC,GAA6C,MAAhBA,KAAAgoC,YAAgB,OAAAhoC,KAAAhG,KAAAwzC,iBAAwCJ,mBAAA,SAAAptC,EAAAE,EAAAnS,GAAoC,GAAAuoB,GAAAtc,KAAAuzC,SAAAv8C,EAAAgJ,KAAA+yC,eAAAzpC,EAAAtS,EAAAkP,EAAiD,UAAAoD,MAAe2pC,cAAAjtC,GAAAgtC,iBAAiChtC,EAAA+nC,kBAAA,EAAA/2C,EAAAkP,GAAAoD,IAAApD,EACrdoD,EAAA2pC,aAAAjtC,EAAA+nC,kBAAA7nC,EAAA1P,OAAA0P,EAAArG,KAAAmG,IAAuDA,EAAAgoC,YAAA1xB,EAAA9lB,OAAuB8lB,EAAAzc,KAAAmG,GAAUsD,EAAA0pC,aAAAj/C,GAAAiS,GAAoB+tC,sBAAA,SAAA/tC,GAAmC,GAAAE,GAAAlG,KAAAuzC,SAAAx/C,EAAAmS,IAAA1P,OAAA,GAAA8lB,EAAAtW,EAAAgoC,WAAoDj6C,GAAAi6C,YAAA1xB,EAAgBpW,EAAAoW,GAAAvoB,EAAOmS,EAAAmF,MAAQrF,EAAAgoC,YAAA,IAAmB,IAAAj6C,GAAAiS,EAAAsnC,MAAAzK,KAAAvmB,EAAAtc,KAAA+yC,eAAA/7C,EAAAslB,EAAAvoB,GAAAuV,EAAAtS,EAAAi8C,aAAA1uB,EAAAjb,IAAA9S,OAAA,GAAAqb,EAAA7L,EAAA+nC,iBAAuGxpB,GAAAwpB,kBAAAl8B,EAAsBvI,EAAAuI,GAAA0S,EAAOjb,EAAA+B,MAAQrF,EAAA+nC,kBAAA,WAAyB/2C,GAAAg8C,cAAA9sC,EAAAqnC,YAAAvtC,KAAA2wC,OAAA9N,MAAuD,IAAAv5B,EAAA9S,cAAA8lB,GAAAvoB,GAA0BiM,KAAA6zC,iCAAA7tC,IAC3e6tC,iCAAA,SAAA7tC,GAA6CA,IAAA4nC,iBAAsB,QAAA1nC,GAAA,EAAAnS,EAAAiS,EAAAxP,OAAuB0P,IAAAnS,IAAMmS,EAAA,CAAK,GAAAoW,GAAAtW,EAAAE,EAAW,OAAAoW,EAAA83B,gBAAAp0C,KAAAk0C,uBAAA53B,KAAwDy4B,YAAA,SAAA/uC,GAAyB,GAAAE,GAAAlG,KAAAuzC,SAAAx/C,EAAAiS,EAAAgoC,YAAA1xB,EAAAtc,KAAAwzC,kBAAAx8C,EAAAkP,EAAAoW,EAAoEtW,GAAAgoC,YAAA1xB,EAAgBpW,EAAAoW,GAAAtW,EAAOhP,EAAAg3C,YAAAj6C,EAAgBmS,EAAAnS,GAAAiD,GAAOi+C,gBAAA,SAAAjvC,GAA6B,GAAAE,GAAAlG,KAAAuzC,SAAAx/C,EAAAiS,EAAAgoC,YAAA1xB,IAAAtc,KAAAwzC,gBAAAx8C,EAAAkP,EAAAoW,EAAoEtW,GAAAgoC,YAAA1xB,EAAgBpW,EAAAoW,GAAAtW,EAAOhP,EAAAg3C,YAAAj6C,EAAgBmS,EAAAnS,GAAAiD,GAAOq9C,oBAAA,SAAAruC,EAAAE,EAAAnS,GAAqC,GAAAuoB,GAAAtc,KAAAg0C,uBACveh9C,EAAAslB,EAAApW,GAAAoD,EAAAtJ,KAAAyzC,SAAwB,UAAAz8C,SAAiBslB,EAAApW,GAAAlP,GAASA,EAAAjD,GAAAiS,EAAOA,EAAAgoC,YAAA1kC,EAAA9S,OAAuB8S,EAAAzJ,KAAAmG,IAAUkuC,uBAAA,SAAAluC,GAAoC,GAAAE,GAAAlG,KAAAyzC,UAAA1/C,EAAAiS,EAAAwuC,QAAAl4B,EAAAvoB,EAAA0hD,SAAA5S,KAAA9uC,IAAA2hD,KAAA1+C,EAAAgJ,KAAAg0C,uBAAA1qC,EAAAtS,EAAAslB,GAAAiI,EAAAre,IAAA1P,OAAA,EAAiHwP,KAAAgoC,YAAgBzpB,EAAAypB,YAAAhoC,EAAgBE,EAAAF,GAAAue,EAAOre,EAAAmF,YAAQ/B,GAAAvV,EAAYiS,GAAA,CAAG,OAAA6L,KAAAvI,GAAA,KAAAtD,SAAuBhP,GAAAslB,KAAau4B,aAAA,SAAA7uC,GAA0B,GAAAE,GAAAlG,KAAAyzC,UAAA1/C,EAAAiS,EAAAgoC,YAAA1xB,EAAAtc,KAAA0zC,mBAAA18C,EAAAkP,EAAAoW,EAAsEtW,GAAAgoC,YAAA1xB,EAAgBpW,EAAAoW,GAAAtW,EAAOhP,EAAAg3C,YAAAj6C,EAAgBmS,EAAAnS,GAAAiD,GAAOg+C,iBAAA,SAAAhvC,GAA8B,GAAAE,GAC7flG,KAAAyzC,UAAA1/C,EAAAiS,EAAAgoC,YAAA1xB,IAAAtc,KAAA0zC,iBAAA18C,EAAAkP,EAAAoW,EAAgEtW,GAAAgoC,YAAA1xB,EAAgBpW,EAAAoW,GAAAtW,EAAOhP,EAAAg3C,YAAAj6C,EAAgBmS,EAAAnS,GAAAiD,GAAOu5C,wBAAA,WAAoC,GAAAvqC,GAAAhG,KAAAk1C,qBAAAhvC,EAAAlG,KAAAm1C,8BAAAphD,EAAAiS,EAAAE,EAAiO,OAArJ,UAAAnS,MAAA,GAAA4Y,GAAAyzB,kBAAA,GAAAxI,cAAA,MAAAA,cAAA,KAAA53B,KAAA21C,kCAAA5hD,EAAA6hD,aAAA1vC,EAAAF,EAAAE,GAAAnS,GAAqJA,GAASk8C,4BAAA,SAAAjqC,GAAyC,GAAAE,GAAAlG,KAAAk1C,qBAAAnhD,EAAAiS,EAAA4vC,aAAAt5B,IAAAtc,KAAAm1C,4BACran+C,EAAAkP,EAAAoW,EAAOtW,GAAA4vC,aAAAt5B,EAAiBpW,EAAAoW,GAAAtW,EAAOhP,EAAA4+C,aAAA7hD,EAAiBmS,EAAAnS,GAAAiD,GAAO2+C,iCAAA,GAAA/d,cAAA,KACvDjrB,EAAAkpC,qBAAA,SAAA7vC,GAAuChG,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAA81C,SAAA7rC,MAAAvC,UAAAwC,MAAArW,KAAA4H,WAAoDuE,KAAA+1C,gBAAA,CAAuB,IAAA7vC,KAASlG,MAAAg2C,eAAA9vC,CAAsB,QAAAnS,GAAA,EAAAuoB,EAAA7gB,UAAAjF,OAA+BzC,IAAAuoB,IAAMvoB,EAAAmS,EAAAzK,UAAA1H,GAAA8uC,MAAA9uC,CAA2BiM,MAAAi2C,UAAej2C,KAAAk2C,gBAAqBl2C,KAAAyzC,aAAkBzzC,KAAAm2C,yBAA+B,IAAAn/C,GAAAgJ,IAAWA,MAAAo1C,OAAYgB,SAAShY,YAAY,MAAApnC,GAAA8+C,SAAAt/C,QAAyB8+C,YAAa,MAAAt1C,MAAAo+B,MAAApnC,EAAA++C,kBAAqCM,wBAAyB,MAAAr/C,GAAAy8C,UAAAj9C,UAC1dmW,EAAAkpC,qBAAAnuC,WAAsC7S,YAAA8X,EAAAkpC,qBAAA1mC,IAAA,SAAAnJ,GAAuD,OAAAE,GAAAlG,KAAA81C,SAAA/hD,EAAAmS,EAAA1P,OAAA8lB,EAAAtc,KAAA+1C,gBAAA/+C,EAAAgJ,KAAAg2C,eAAA1sC,EAAAtJ,KAAAi2C,OAAA1xB,EAAAvkB,KAAAk2C,aAAArkC,EAAA7R,KAAAyzC,UAAA3tB,EAAAjU,EAAArb,OAAAqvB,EAAA,EAAAqL,EAAAz1B,UAAAjF,OAAqKqvB,IAAAqL,IAAMrL,EAAA,CAAK,GAAA7xB,GAAAyH,UAAAoqB,GAAA/xB,EAAAE,EAAA6uC,KAAA1R,EAAAn6B,EAAAlD,EAAmC,aAAAq9B,EAAA,CAAeA,EAAAp9B,IAAMiD,EAAAlD,GAAAq9B,EAAOjrB,EAAArG,KAAA7L,EAAU,QAAAF,GAAA,EAAAge,EAAAgU,EAAgBhyB,IAAAge,IAAMhe,EAAA+d,EAAA/d,GAAA+L,KAAA,GAAA8M,GAAA4nC,gBAAAvgD,EAAAsV,EAAAxV,GAAAywB,EAAAzwB,SAAsD,IAAAq9B,EAAA7U,EAAA,CAAa,GAAAsJ,GAAA1f,EAAAirB,GAAAuH,IAAApc,EAAAxK,EAAA5L,EAAAwyB,EAA6D,KAArC1hC,EAAA8a,EAAA+wB,MAAA1R,EAAYjrB,EAAAirB,GAAArf,EAAO9a,EAAAlD,GAAA4kC,EAAOxyB,EAAAwyB,GAAA1kC,EAAOF,EAAA,EAAIge,EAAAgU,EAAQhyB,IACpfge,IAAEhe,EAAA,CAAK,GAAAklC,GAAAnnB,EAAA/d,GAAAmlC,EAAAD,EAAA7H,EAAkB6H,GAAA7H,GAAA6H,EAAAN,GAAU,SAAAO,MAAA,GAAAtsB,GAAA4nC,gBAAAvgD,EAAAsV,EAAAxV,GAAAywB,EAAAzwB,KAAuDklC,EAAAN,GAAAO,OAAQ/yB,GAAAirB,KAAAvL,GAAAtwB,QAAAC,MAAA,4HAAyJyK,KAAA+1C,gBAAAz5B,GAAuBzZ,OAAA,SAAAmD,GAAoB,OAAAE,GAAAlG,KAAA81C,SAAA/hD,EAAAiM,KAAA+1C,gBAAAz5B,EAAAtc,KAAAg2C,eAAAh/C,EAAAgJ,KAAAyzC,UAAAnqC,EAAAtS,EAAAR,OAAA+tB,EAAA,EAAA1S,EAAApW,UAAAjF,OAAwH+tB,IAAA1S,IAAM0S,EAAA,CAAK,GAAAuB,GAAArqB,UAAA8oB,GAAAsB,EAAAC,EAAA+c,KAAA3R,EAAA5U,EAAAuJ,EAAmC,aAAAqL,MAAAn9B,EAAA,CAAqB,GAAAC,GAAAD,IAAAD,EAAAoS,EAAAlS,EACtc,KADudsoB,EAAAxoB,EAAA+uC,MAClf3R,EAAEhrB,EAAAgrB,GAAAp9B,EAAOwoB,EAAAuJ,GAAA7xB,EAAOkS,EAAAlS,GAAA8xB,EAAOA,EAAA,EAAID,EAAAvc,EAAQwc,IAAAD,IAAMC,EAAA,CAAK,GAAAhyB,GAAAkD,EAAA8uB,GAAAqL,EAAAr9B,EAAAo9B,EAAkBp9B,GAAAo9B,GAAAp9B,EAAAE,GAAUF,EAAAE,GAAAm9B,IAASnxB,KAAA+1C,gBAAAhiD,GAAuBuiD,QAAA,SAAAtwC,GAAqB,OAAAE,GAAAlG,KAAA81C,SAAA/hD,EAAAmS,EAAA1P,OAAA8lB,EAAAtc,KAAA+1C,gBAAA/+C,EAAAgJ,KAAAg2C,eAAA1sC,EAAAtJ,KAAAyzC,UAAAlvB,EAAAjb,EAAA9S,OAAAqb,EAAA,EAAAiU,EAAArqB,UAAAjF,OAAmIqb,IAAAiU,IAAMjU,EAAA,CAAK,GAAAgU,GAAApqB,UAAAoW,GAAAgxB,KAAA3R,EAAAl6B,EAAA6uB,EAA+B,aAAAqL,EAAA,SAAAl6B,GAAA6uB,GAAAqL,EAAA5U,EAAA,CAAkC,GAAAuJ,KAAAvJ,EAAAtoB,EAAAkS,EAAA2f,GAAA/xB,IAAAC,EAAAo9B,EAAAjrB,EAAApS,EAAgF,KAAlDkD,EAAAhD,EAAA6uC,MAAA3R,EAAYhrB,EAAAgrB,GAAAl9B,EAAOgD,EAAAm6B,EAAA0R,MAAAhd,EAAY3f,EAAA2f,GAAAsL,EAAOjrB,EAAAmF,MAAQrX,EAAA,EAAIm9B,EAAA5M,EAAQvwB,IAAAm9B,IAAMn9B,EAAA,CAAK,GAAA8d,GAAAxI,EAAAtV,GAAA4xB,EAAA9T,EAAAhe,EAAkBge,GAAAof,GAAApf,EAAA+T,GAAU/T,EAAA+T,GAAAD,EAAO9T,EAAAzG,WAAS,KAAAvX,IAAAC,EAAAo9B,EAAAjrB,EAAApS,GAAAkD,EAAAm6B,EAAA0R,MAC7d3R,EAAAhrB,EAAAgrB,GAAAC,EAAAjrB,EAAAmF,MAAArX,EAAA,EAAAm9B,EAAA5M,EAAyBvwB,IAAAm9B,IAAMn9B,EAAA8d,EAAAxI,EAAAtV,GAAA8d,EAAAof,GAAApf,EAAAhe,GAAAge,EAAAzG,MAA6BrL,KAAA+1C,gBAAAz5B,GAAuBi6B,WAAA,SAAAvwC,EAAAE,GAA0B,GAAAnS,GAAAiM,KAAAm2C,uBAAA75B,EAAAvoB,EAAAiS,GAAAhP,EAAAgJ,KAAAyzC,SAA0D,aAAAn3B,EAAA,MAAAtlB,GAAAslB,EAA0B,IAAAhT,GAAAtJ,KAAAi2C,OAAA1xB,EAAAvkB,KAAAk2C,aAAArkC,EAAA7R,KAAA81C,SAAAhwB,EAAA9lB,KAAA+1C,gBAAAlwB,EAAA5b,MAAA4H,EAAArb,QAAA8lB,EAAAtlB,EAAAR,MAAmJ,KAAzCzC,EAAAiS,GAAAsW,EAAOhT,EAAAzJ,KAAAmG,GAAUue,EAAA1kB,KAAAqG,GAAUlP,EAAA6I,KAAAgmB,GAAU9xB,EAAA+xB,EAAIxJ,EAAAzK,EAAArb,OAAezC,IAAAuoB,IAAMvoB,EAAA8xB,EAAA9xB,GAAA,GAAA4Y,GAAA4nC,gBAAA1iC,EAAA9d,GAAAiS,EAAAE,EAA6C,OAAA2f,IAAS2wB,aAAA,SAAAxwC,GAA0B,GAAAE,GAAAlG,KAAAm2C,uBAAApiD,EAAAmS,EAAAF,EAAyC,aAAAjS,EAAA,CAAe,GAAAuoB,GACjftc,KAAAi2C,OAAAj/C,EAAAgJ,KAAAk2C,aAAA5sC,EAAAtJ,KAAAyzC,UAAAlvB,EAAAjb,EAAA9S,OAAA,EAAAqb,EAAAvI,EAAAib,EAAqEre,GAAAF,EAAAue,IAAAxwB,EAAUuV,EAAAvV,GAAA8d,EAAOvI,EAAA+B,MAAQrU,EAAAjD,GAAAiD,EAAAutB,GAAUvtB,EAAAqU,MAAQiR,EAAAvoB,GAAAuoB,EAAAiI,GAAUjI,EAAAjR,SAC1HsB,EAAAklC,gBAAsB4E,WAAA,SAAAzwC,EAAAE,EAAAnS,GAA2B,MAAA4Y,GAAAklC,eAAA6E,aAAA1wC,GAAA,GAAAA,GAAAnR,YAAAmR,EAAA2wC,SAAAzwC,EAAAnS,IAAAiS,EAAAkE,MAAAhE,EAAAnS,IAA4F6iD,aAAA,SAAA5wC,EAAAE,EAAAnS,GAA8B,OAAAiS,IAAAjS,GAAAiS,EAAAnR,cAAAqR,EAAAF,EAAA,gBAAAE,GAAA2wC,kBAAA,GAAA3wC,GAAAF,GAAAiE,MAAAvC,UAAAwC,MAAArW,KAAAmS,IAA+G0wC,aAAA,SAAA1wC,GAA0B,MAAA8wC,aAAAC,OAAA/wC,kBAAAgxC,YAAuDlF,iBAAA,SAAA9rC,GAA8B,OAAAE,GAAAF,EAAAxP,OAAAzC,EAAAkW,MAAA/D,GAAAoW,EAAA,EAAkCA,IAAApW,IAAMoW,EAAAvoB,EAAAuoB,IAAmD,OAAxCvoB,GAAA0uC,KAAA,SAAAv8B,EAAAnS,GAAqB,MAAAiS,GAAAE,GAAAF,EAAAjS,KAAmBA,GAASg+C,YAAA,SAAA/rC,EAC7eE,EAAAnS,GAAK,OAAAuoB,GAAAtW,EAAAxP,OAAAQ,EAAA,GAAAgP,GAAAnR,YAAAynB,GAAAhT,EAAA,EAAAib,EAAA,EAAkDA,IAAAjI,IAAMhT,EAAA,OAAAuI,GAAA9d,EAAAuV,GAAApD,EAAA4f,EAAA,EAAyBA,IAAA5f,IAAM4f,EAAA9uB,EAAAutB,KAAAve,EAAA6L,EAAAiU,EAAkB,OAAA9uB,IAASq7C,YAAA,SAAArsC,EAAAE,EAAAnS,EAAAuoB,GAA+B,OAAAtlB,GAAA,EAAAsS,EAAAtD,EAAA,GAAmB,SAAAsD,GAAA,SAAAA,EAAAgT,IAA0BhT,EAAAtD,EAAAhP,IAAU,aAAAsS,EAAA,CAAe,GAAAib,GAAAjb,EAAAgT,EAAW,aAAAiI,EAAA,GAAAta,MAAA04B,QAAApe,IAAmC,EAAAA,GAAAjb,EAAAgT,GAAA,SAAAiI,IAAAre,EAAArG,KAAAyJ,EAAA8kC,MAAAr6C,EAAA8L,KAAA/D,MAAA/H,EAAAwwB,IAAAjb,EAAAtD,EAAAhP,WAAkE,SAAAsS,OAAkB,aAAAib,EAAAgC,SAA4B,EAAAhC,GAAAjb,EAAAgT,GAAA,SAAAiI,IAAAre,EAAArG,KAAAyJ,EAAA8kC,MAAA7pB,EAAAgC,QAAAxyB,IAAAyC,SAAA8S,EAAAtD,EAAAhP,WAAsE,SAAAsS,OAAuB,GAAAib,GAAAjb,EAAAgT,GAAA,SAAAiI,IAAAre,EAAArG,KAAAyJ,EAAA8kC,MACvdr6C,EAAA8L,KAAA0kB,IAAAjb,EAAAtD,EAAAhP,WAAoB,SAAAsS,MAAsBqD,EAAAglC,cAAA,SAAA3rC,EAAAE,EAAAnS,EAAAuoB,GAAsC,YAAAtW,EAAA,KAAAlE,OAAA,0BAAqD,aAAAoE,GAAA,IAAAA,EAAA1P,OAAA,KAAAsL,OAAA,+BAAAkE,EAA0EhG,MAAAnJ,KAAAmP,EAAYhG,KAAAyxC,MAAA9kC,EAAAklC,eAAA+E,aAAA1wC,EAAAlG,KAAAi3C,gBAAoEj3C,KAAAsK,OAAAqC,EAAAklC,eAAA+E,aAAA7iD,EAAAiM,KAAAk3C,iBAAsEl3C,KAAAm3C,iBAAA76B,GAAAtc,KAAAo3C,sBAAoDp3C,KAAAq3C,WAAgBr3C,KAAAwxC,YACza7kC,EAAAglC,cAAAjqC,WAA+B7S,YAAA8X,EAAAglC,cAAAsF,eAAArf,aAAAsf,gBAAAtf,aAAAwf,qBAAAzqC,EAAAwW,kBAAAm0B,iCAAA,SAAAtxC,GAAmL,UAAA2G,GAAAwzB,oBAAAngC,KAAAyxC,MAAAzxC,KAAAsK,OAAAtK,KAAA20C,eAAA3uC,IAAmFuxC,+BAAA,SAAAvxC,GAA4C,UAAA2G,GAAAyzB,kBAAApgC,KAAAyxC,MAAAzxC,KAAAsK,OAAAtK,KAAA20C,eAAA3uC,IAAiFwxC,+BAAA,SAAAxxC,GAA4C,UAAA2G,GAAAgzB,iBAAA3/B,KAAAyxC,MAC9czxC,KAAAsK,OAAAtK,KAAA20C,eAAA3uC,IAAmCmxC,iBAAA,SAAAnxC,GAA8B,GAAAE,EAAM,QAAAF,GAAU,IAAA2G,GAAAuW,oBAAAhd,EAAAlG,KAAAs3C,gCAAuE,MAAM,KAAA3qC,GAAAwW,kBAAAjd,EAAAlG,KAAAu3C,8BAAmE,MAAM,KAAA5qC,GAAAyW,kBAAAld,EAAAlG,KAAAw3C,+BAAmE,YAAAtxC,EAAA,CAAwG,GAAzFA,EAAA,iCAAAlG,KAAA00C,cAAA,yBAAA10C,KAAAnJ,KAAyF,SAAAmJ,KAAAytC,kBAAA,IAAAznC,IAAAhG,KAAAo3C,qBAClZ,KAAAt1C,OAAAoE,EADkZlG,MAAAm3C,iBAAAn3C,KAAAo3C,sBAC9X9hD,QAAA0vB,KAAA9e,OAAgBlG,MAAAytC,kBAAAvnC,GAA8BuxC,iBAAA,WAA6B,OAAAz3C,KAAAytC,mBAA+B,IAAAztC,MAAAs3C,iCAAA,MAAA3qC,GAAAuW,mBAA4E,KAAAljB,MAAAu3C,+BAAA,MAAA5qC,GAAAwW,iBAAwE,KAAAnjB,MAAAw3C,+BAAA,MAAA7qC,GAAAyW,oBAAyEuxB,aAAA,WAAyB,MAAA30C,MAAAsK,OAAA9T,OAAAwJ,KAAAyxC,MAAAj7C,QAA4CiV,MAAA,SAAAzF,GAAmB,OAAAA,EAAA,OAAAE,GAAAlG,KAAAyxC,MAAA19C,EAAA,EAAAuoB,EAAApW,EAAA1P,OAA6CzC,IAAAuoB,IAAMvoB,EAAAmS,EAAAnS,IAAAiS,CAAY,OAAAhG,OAClfk6B,MAAA,SAAAl0B,GAAkB,OAAAA,EAAA,OAAAE,GAAAlG,KAAAyxC,MAAA19C,EAAA,EAAAuoB,EAAApW,EAAA1P,OAA6CzC,IAAAuoB,IAAMvoB,EAAAmS,EAAAnS,IAAAiS,CAAY,OAAAhG,OAAYuxC,KAAA,SAAAvrC,EAAAE,GAAoB,OAAAnS,GAAAiM,KAAAyxC,MAAAn1B,EAAAvoB,EAAAyC,OAAAQ,EAAA,EAAAsS,EAAAgT,EAAA,EAA0CtlB,IAAAslB,GAAAvoB,EAAAiD,GAAAgP,KAAchP,CAAK,WAAKsS,GAAAvV,EAAAuV,GAAApD,KAAeoD,CAAgM,SAA3LA,EAAI,IAAAtS,GAAAsS,IAAAgT,IAAAtlB,GAAAsS,MAAA9J,KAAAC,IAAA6J,EAAA,GAAAtS,EAAAsS,EAAA,GAAAgT,EAAAtc,KAAA20C,eAAA30C,KAAAyxC,MAAA9kC,EAAAklC,eAAA4E,WAAA1iD,EAAAiD,EAAAsS,GAAAtJ,KAAAsK,OAAAqC,EAAAklC,eAAA4E,WAAAz2C,KAAAsK,OAAAtT,EAAAslB,EAAAhT,EAAAgT,IAAuLtc,MAAYq3C,SAAA,WAAqB,GAAArxC,IAAA,EAAAE,EAAAlG,KAAA20C,cAA+B,KAAAzuC,EAAA1G,KAAAzI,MAAAmP,KAAA5Q,QAAAC,MAAA,8BAClcyK,MAAAgG,GAAA,EAAY,IAAAjS,GAAAiM,KAAAyxC,MAAAvrC,EAAAlG,KAAAsK,OAAAgS,EAAAvoB,EAAAyC,MAA0C,KAAA8lB,IAAAhnB,QAAAC,MAAA,iBAAAyK,MAAAgG,GAAA,EAAmD,QAAAhP,GAAA,KAAAsS,EAAA,EAAmBA,IAAAgT,EAAMhT,IAAA,CAAK,GAAAib,GAAAxwB,EAAAuV,EAAW,oBAAAib,IAAAmoB,MAAAnoB,GAAA,CAAkCjvB,QAAAC,MAAA,6BAAAyK,KAAAsJ,EAAAib,GAAqDve,GAAA,CAAK,OAAM,UAAAhP,KAAAutB,EAAA,CAAkBjvB,QAAAC,MAAA,oBAAAyK,KAAAsJ,EAAAib,EAAAvtB,GAA8CgP,GAAA,CAAK,OAAMhP,EAAAutB,EAAI,YAAAre,GAAAyG,EAAAklC,eAAA6E,aAAAxwC,GAAA,IAAAoD,EAAA,EAAAvV,EAAAmS,EAAA1P,OAAuE8S,IAAAvV,IAAMuV,EAAA,GAAAgT,EAAApW,EAAAoD,GAAAojC,MAAApwB,GAAA,CAAwBhnB,QAAAC,MAAA,8BAAAyK,KAAAsJ,EAAAgT,GAAsDtW,GAAA,CAAK,OAAM,MAAAA,IAASwrC,SAAA,WAAqB,OAAAxrC,GACvgBhG,KAAAyxC,MAAAvrC,EAAAlG,KAAAsK,OAAAvW,EAAAiM,KAAA20C,eAAAr4B,EAAA,EAAAtlB,EAAA,EAAAsS,EAAAtD,EAAAxP,OAAA,EAAoEQ,GAAAsS,IAAKtS,EAAA,CAAK,GAAAutB,IAAA,EAAA1S,EAAA7L,EAAAhP,EAAgB,IAAA6a,IAAA7L,EAAAhP,EAAA,SAAAA,GAAA6a,MAAA,WAAAiU,GAAA9uB,EAAAjD,EAAA8xB,EAAAC,EAAA/xB,EAAAm9B,EAAApL,EAAA/xB,EAAA8d,EAAA,EAA+DA,IAAA9d,IAAM8d,EAAA,CAAK,GAAA7d,GAAAkS,EAAA4f,EAAAjU,EAAa,IAAA7d,IAAAkS,EAAA2f,EAAAhU,IAAA7d,IAAAkS,EAAAgrB,EAAArf,GAAA,CAA2B0S,GAAA,CAAK,QAAO,GAAAA,EAAA,CAAM,GAAAvtB,IAAAslB,EAAA,IAAAtW,EAAAsW,GAAAtW,EAAAhP,GAAAutB,EAAAvtB,EAAAjD,EAAA+xB,EAAAxJ,EAAAvoB,EAAA8d,EAAA,EAAuCA,IAAA9d,IAAM8d,EAAA3L,EAAA4f,EAAAjU,GAAA3L,EAAAqe,EAAA1S,KAAkByK,GAA4H,MAAvHA,KAAAtW,EAAAxP,SAAAwJ,KAAAyxC,MAAA9kC,EAAAklC,eAAA4E,WAAAzwC,EAAA,EAAAsW,GAAAtc,KAAAsK,OAAAqC,EAAAklC,eAAA4E,WAAAvwC,EAAA,EAAAoW,EAAAvoB,IAAuHiM,OAC7Zic,OAAAI,OAAA1P,EAAAglC,eAAmCzL,MAAA,SAAAlgC,GAAkB,YAAAA,EAAA7K,KAAA,KAAA2G,OAAA,sCAAsE,IAAAoE,GAAAyG,EAAAglC,cAAA+F,8BAAA1xC,EAAA7K,KAAgE,aAAA6K,EAAAyrC,MAAA,CAAqB,GAAA19C,MAAAuoB,IAAc3P,GAAAklC,eAAAQ,YAAArsC,EAAAusC,KAAAx+C,EAAAuoB,EAAA,SAAqDtW,EAAAyrC,MAAA19C,EAAUiS,EAAAsE,OAAAgS,EAAW,gBAAApW,EAAAggC,MAAAhgC,EAAAggC,MAAAlgC,GAAA,GAAAE,GAAAF,EAAAnP,KAAAmP,EAAAyrC,MAAAzrC,EAAAsE,OAAAtE,EAAA2xC,gBAAkFlS,OAAA,SAAAz/B,GAAoB,GAAAE,GAAAF,EAAAnR,WAAoB,aAAAqR,EAAAu/B,OAAAv/B,IAAAu/B,OAAAz/B,OAAmC,CAAK,GAAAE,IAAOrP,KAAAmP,EAAAnP,KAAA46C,MAAA9kC,EAAAklC,eAAA+E,aAAA5wC,EAAAyrC,MACjdxnC,OAAAK,OAAAqC,EAAAklC,eAAA+E,aAAA5wC,EAAAsE,OAAAL,QAAgElW,EAAAiS,EAAAyxC,kBAAwB1jD,KAAAiS,EAAAoxC,uBAAAlxC,EAAAyxC,cAAA5jD,GAAuE,MAAvBmS,GAAA/K,KAAA6K,EAAA0uC,cAAuBxuC,GAASwxC,8BAAA,SAAA1xC,GAA2C,OAAAA,EAAAd,eAAwB,uEAAAyH,GAAAqlC,mBAAuG,8DAAArlC,GAAA8lC,mBAA4F,mBAAA9lC,GAAAirC,kBAA6C,wBAAAjrC,GAAA+lC,uBAC3d,gCAAA/lC,GAAAkrC,oBAA6D,oBAAAlrC,GAAAmrC,oBAA+C,KAAAh2C,OAAA,yBAAAkE,MAA4C2G,EAAA4nC,gBAAA,SAAAvuC,EAAAE,EAAAnS,GAAsCiM,KAAA01C,KAAAxvC,EAAYlG,KAAAy0C,WAAA1gD,GAAA4Y,EAAA4nC,gBAAAwD,eAAA7xC,GAA2DlG,KAAA0I,KAAAiE,EAAA4nC,gBAAAyD,SAAAhyC,EAAAhG,KAAAy0C,WAAAwD,WAAAjyC,EAAwEhG,KAAAy1C,SAAAzvC,GAC7U2G,EAAA4nC,gBAAA7sC,WAAiC7S,YAAA8X,EAAA4nC,gBAAAnoC,SAAA,SAAApG,EAAAE,GAAyDlG,KAAAmD,OAAYnD,KAAAoM,SAAApG,EAAAE,IAAmBgyC,SAAA,SAAAlyC,EAAAE,GAAwBlG,KAAAmD,OAAYnD,KAAAk4C,SAAAlyC,EAAAE,IAAmB/C,KAAA,WAAiB,GAAA6C,GAAAhG,KAAA0I,KAAAxC,EAAAlG,KAAAy0C,WAAA1gD,EAAAmS,EAAAiyC,WAAA77B,EAAApW,EAAAkyC,aAAAphD,EAAAkP,EAAAmyC,aAA+P,IAA3KryC,IAAAhG,KAAA0I,KAAA1C,EAAA2G,EAAA4nC,gBAAAyD,SAAAh4C,KAAAy1C,SAAAvvC,EAAA+xC,WAAAj4C,KAAAy1C,UAAyFz1C,KAAAoM,SAAApM,KAAAs4C,sBAAyCt4C,KAAAk4C,SAAAl4C,KAAAu4C,sBAAyCvyC,EAAA,CAAM,GAAAjS,EAAA,CAAM,GAAAuV,GAAApD,EAAAsyC,WAAoB,QAAAzkD,GAAU,oBAAAiS,EAAAigC,SACpe,WADqgB3wC,SAAAC,MAAA,8DAC3gByK,KAAa,KAAAgG,EAAAigC,SAAAL,UAAsI,WAA5GtwC,SAAAC,MAAA,wFAAAyK,KAAmHgG,KAAAigC,SAAAL,SAAuB,MAAM,iBAAA5/B,EAAAyyC,SAA4G,WAA/EnjD,SAAAC,MAAA,2DAAAyK,KAAyG,KAAnBgG,IAAAyyC,SAAAC,MAAmB3kD,EAAA,EAAQA,EAAAiS,EAAAxP,OAAWzC,IAAA,GAAAiS,EAAAjS,GAAA8C,OAAAyS,EAAA,CAAsBA,EAAAvV,CAAI,OAAM,KAAM,qBAAAiS,EAAAjS,GAAgG,WAAtEuB,SAAAC,MAAA,kDAAAyK,KAA6EgG,KAAAjS,GAAO,YAAAuV,EAAA,CAAe,YACnftD,EAAAsD,GAA+F,WAAzFhU,SAAAC,MAAA,mEAAAyK,KAAAgG,EAAgGA,KAAAsD,IAAe,GAAPA,EAAAtD,EAAAsW,GAAO,SAAAhT,EAAAhU,QAAAC,MAAA,0CAAA2Q,EAAA+xC,SAAA,IAAA37B,EAAA,wBAAAtW,OAAkH,CAAmO,GAA9NE,EAAAlG,KAAA24C,WAAAC,KAAuB,SAAA5yC,EAAA4gC,aAAA1gC,EAAAlG,KAAA24C,WAAAE,YAAA74C,KAAA84C,aAAA9yC,GAAA,SAAAA,EAAAy9B,yBAAAv9B,EAAAlG,KAAA24C,WAAAI,uBAAA/4C,KAAA84C,aAAA9yC,GAA6KjS,EAAAiM,KAAAg5C,YAAAC,OAA0B,SAAAjiD,EAAA,CAAe,6BACzdslB,EAAA,CAAG,IAAAtW,EAAAkxB,SAAqH,WAArG5hC,SAAAC,MAAA,iFAAAyK,KAA4G,KAAAgG,EAAAkxB,SAAAkS,aAA+I,WAAlH9zC,SAAAC,MAAA,8FAAAyK,KAAyH,KAAAjM,EAAA,EAAQA,EAAAiM,KAAA0I,KAAAwuB,SAAAkS,aAAA5yC,OAAyCzC,IAAA,GAAAiS,EAAAkxB,SAAAkS,aAAAr1C,GAAA8C,OAAAG,EAAA,CAA4CA,EAAAjD,CAAI,QAAOA,EAAAiM,KAAAg5C,YAAAE,aAAgCl5C,KAAAm5C,iBAAA7vC,EAAwBtJ,KAAAq4C,cAAArhD,MAAqB,UAAAsS,EAAAgd,WAAA,SAAAhd,EAAAid,SAC1cxyB,EAAAiM,KAAAg5C,YAAAI,eAAAp5C,KAAAm5C,iBAAA7vC,GAAA,SAAAA,EAAA9S,QAAAzC,EAAAiM,KAAAg5C,YAAAK,YAAAr5C,KAAAm5C,iBAAA7vC,GAAAtJ,KAAAo4C,aAAA97B,CAA2Jtc,MAAAoM,SAAApM,KAAAs5C,oBAAAvlD,GAA0CiM,KAAAk4C,SAAAl4C,KAAAu5C,iCAAAxlD,GAAAmS,QAA2D5Q,SAAAC,MAAA,sCAAAyK,KAAA01C,KAAA,0BAA4F8D,OAAA,WAAmBx5C,KAAA0I,KAAA,KAAe1I,KAAAoM,SAAApM,KAAAy5C,kBAAqCz5C,KAAAk4C,SAAAl4C,KAAA05C,oBACnaz9B,OAAAI,OAAA1P,EAAA4nC,gBAAA7sC,WAA+C4wC,sBAAA,aAAkCC,sBAAA,aAAmCkB,kBAAA9sC,EAAA4nC,gBAAA7sC,UAAA0E,SAAAstC,kBAAA/sC,EAAA4nC,gBAAA7sC,UAAAwwC,SAAAc,aAAoIC,OAAA,EAAAI,YAAA,EAAAH,aAAA,EAAAE,eAAA,GAAuDT,YAAaC,KAAA,EAAAC,YAAA,EAAAE,uBAAA,GAA8CO,qBAAA,SAAAtzC,EAAAE,GAAoCF,EAAAE,GAAAlG,KAAA0I,KAAA1I,KAAAo4C,eAAkC,SAAApyC,EAAAE,GAAe,OAAAnS,GAAAiM,KAAAm5C,iBAAA78B,EAAA,EAAAtlB,EAAAjD,EAAAyC,OAA+C8lB,IAAAtlB,IAAMslB,EAAAtW,EAAAE,KACpfnS,EAAAuoB,IAAK,SAAAtW,EAAAE,GAAeF,EAAAE,GAAAlG,KAAAm5C,iBAAAn5C,KAAAq4C,gBAA+C,SAAAryC,EAAAE,GAAelG,KAAAm5C,iBAAA5yB,QAAAvgB,EAAAE,KAAmCqzC,mCAAA,SAAAvzC,EAAAE,GAAmDlG,KAAA0I,KAAA1I,KAAAo4C,cAAApyC,EAAAE,IAAkC,SAAAF,EAAAE,GAAelG,KAAA0I,KAAA1I,KAAAo4C,cAAApyC,EAAAE,GAAkClG,KAAA84C,aAAAlS,aAAA,GAAiC,SAAA5gC,EAAAE,GAAelG,KAAA0I,KAAA1I,KAAAo4C,cAAApyC,EAAAE,GAAkClG,KAAA84C,aAAArV,wBAAA,KAA4C,SAAAz9B,EAAAE,GAAiB,OAAAnS,GAAAiM,KAAAm5C,iBAAA78B,EAAA,EAAAtlB,EAAAjD,EAAAyC,OAA+C8lB,IAAAtlB,IAAMslB,EAAAvoB,EAAAuoB,GAAAtW,EAAAE,MAAgB,SAAAF,EAAAE,GAAe,OAAAnS,GAAAiM,KAAAm5C,iBAC9d78B,EAAA,EAAAtlB,EAAAjD,EAAAyC,OAAe8lB,IAAAtlB,IAAMslB,EAAAvoB,EAAAuoB,GAAAtW,EAAAE,IAAgBlG,MAAA84C,aAAAlS,aAAA,GAAiC,SAAA5gC,EAAAE,GAAe,OAAAnS,GAAAiM,KAAAm5C,iBAAA78B,EAAA,EAAAtlB,EAAAjD,EAAAyC,OAA+C8lB,IAAAtlB,IAAMslB,EAAAvoB,EAAAuoB,GAAAtW,EAAAE,IAAgBlG,MAAA84C,aAAArV,wBAAA,KAA4C,SAAAz9B,EAAAE,GAAiBlG,KAAAm5C,iBAAAn5C,KAAAq4C,eAAAryC,EAAAE,IAA+C,SAAAF,EAAAE,GAAelG,KAAAm5C,iBAAAn5C,KAAAq4C,eAAAryC,EAAAE,GAA+ClG,KAAA84C,aAAAlS,aAAA,GAAiC,SAAA5gC,EAAAE,GAAelG,KAAAm5C,iBAAAn5C,KAAAq4C,eAAAryC,EAAAE,GAA+ClG,KAAA84C,aAAArV,wBAAA,KAA4C,SAAAz9B,EAAAE,GAAiBlG,KAAAm5C,iBAAA7yB,UAAAtgB,EACheE,IAAG,SAAAF,EAAAE,GAAelG,KAAAm5C,iBAAA7yB,UAAAtgB,EAAAE,GAAqClG,KAAA84C,aAAAlS,aAAA,GAAiC,SAAA5gC,EAAAE,GAAelG,KAAAm5C,iBAAA7yB,UAAAtgB,EAAAE,GAAqClG,KAAA84C,aAAArV,wBAAA,OAAiD92B,EAAA4nC,gBAAAoF,UAAA,SAAA3zC,EAAAE,EAAAnS,GAAgDA,KAAA4Y,EAAA4nC,gBAAAwD,eAAA7xC,GAA6ClG,KAAA45C,aAAA5zC,EAAoBhG,KAAAyzC,UAAAztC,EAAAuwC,WAAArwC,EAAAnS,IAC9S4Y,EAAA4nC,gBAAAoF,UAAAjyC,WAA2C7S,YAAA8X,EAAA4nC,gBAAAoF,UAAAvtC,SAAA,SAAApG,EAAAE,GAAmElG,KAAAmD,MAAY,IAAApP,GAAAiM,KAAAyzC,UAAAzzC,KAAA45C,aAAA7D,gBAAwD,UAAAhiD,KAAAqY,SAAApG,EAAAE,IAA4BgyC,SAAA,SAAAlyC,EAAAE,GAAwB,OAAAnS,GAAAiM,KAAAyzC,UAAAn3B,EAAAtc,KAAA45C,aAAA7D,gBAAA/+C,EAAAjD,EAAAyC,OAAwE8lB,IAAAtlB,IAAMslB,EAAAvoB,EAAAuoB,GAAA47B,SAAAlyC,EAAAE,IAAuB/C,KAAA,WAAiB,OAAA6C,GAAAhG,KAAAyzC,UAAAvtC,EAAAlG,KAAA45C,aAAA7D,gBAAAhiD,EAAAiS,EAAAxP,OAAwE0P,IAAAnS,IAAMmS,EAAAF,EAAAE,GAAA/C,QAAgBq2C,OAAA,WAAmB,OAAAxzC,GAAAhG,KAAAyzC,UAAAvtC,EAAAlG,KAAA45C,aAAA7D,gBAC7chiD,EAAAiS,EAAAxP,OAAW0P,IAAAnS,IAAMmS,EAAAF,EAAAE,GAAAszC,WAAoB7sC,EAAA4nC,gBAAAvU,OAAA,SAAAh6B,EAAAE,EAAAnS,GAA6C,MAAAiS,aAAA2G,GAAAkpC,qBAAA,GAAAlpC,GAAA4nC,gBAAAoF,UAAA3zC,EAAAE,EAAAnS,GAAA,GAAA4Y,GAAA4nC,gBAAAvuC,EAAAE,EAAAnS,IAClF4Y,EAAA4nC,gBAAAwD,eAAA,SAAA/xC,GAAiD,GAAAE,GAAA,uGAAAnS,EAAAmS,EAAA+e,KAAAjf,EAAyH,KAAAjS,EAAA,KAAA+N,OAAA,kCAAAkE,EAAqL,IAA9HjS,EAAA8P,QAAAqC,EAAA2zC,WAAA3zC,EAAA2zC,YAAqC3zC,GAAG+xC,SAAAlkD,EAAA,GAAAokD,WAAApkD,EAAA,GAAAykD,YAAAzkD,EAAA,GAAAqkD,aAAArkD,EAAA,GAAAskD,cAAAtkD,EAAA,KAAsF,OAAAmS,EAAAkyC,cAAA,IAAAlyC,EAAAkyC,aAAA5hD,OAAA,KAAAsL,OAAA,8CAAAkE,EAAiH,OAAAE,IAChdyG,EAAA4nC,gBAAAyD,SAAA,SAAAhyC,EAAAE,GAA6C,IAAAA,GAAA,KAAAA,GAAA,SAAAA,GAAA,MAAAA,eAAAF,EAAAnP,MAAAqP,IAAAF,EAAA68B,KAAA,MAAA78B,EAA4E,IAAAA,EAAAyyC,SAAA,CAAe,GAAA1kD,GAAA,SAAAiS,GAAkB,OAAAjS,GAAA,EAAYA,EAAAiS,EAAA0yC,MAAAliD,OAAiBzC,IAAA,CAAK,GAAAuoB,GAAAtW,EAAA0yC,MAAA3kD,EAAiB,IAAAuoB,EAAAzlB,OAAAqP,EAAA,MAAAoW,GAAuB,aAAYtW,EAAAyyC,SAAa,IAAA1kD,EAAA,MAAAA,GAAc,GAAAiS,EAAA67B,SAAA,CAAe,GAAAvlB,GAAA,SAAAtW,GAAkB,OAAAjS,GAAA,EAAYA,EAAAiS,EAAAxP,OAAWzC,IAAA,CAAK,GAAAwwB,GAAAve,EAAAjS,EAAW,IAAAwwB,EAAA1tB,OAAAqP,GAAAqe,EAAAse,OAAA38B,IAAAqe,EAAAjI,EAAAiI,EAAAsd,WAAA,MAAAtd,GAAsD,YAAa,IAAAxwB,EAAAuoB,EAAAtW,EAAA67B,UAAA,MAAA9tC,GAA4B,aAClb4Y,EAAA2nC,cAAA,SAAAtuC,EAAAE,EAAAnS,GAAmF,OAA/CiM,KAAAw0C,QAAAxuC,EAAehG,KAAAi/B,UAAAlrC,EAAiBiS,EAAAwiC,aAAetiC,GAAU,iBAAAA,EAAAlG,KAAA85C,MAAgC,MAAM,yBAAA9zC,EAAAiE,MAAkC/D,EAAAlG,KAAA+5C,OAAe,MAAM,SAAA7zC,EAAAlG,KAAAg6C,MAAqBh6C,KAAA40C,OAAA,GAAA5uC,GAAA,EAAAjS,GAAuBiM,KAAAi6C,iBAAA/zC,EAAwBlG,KAAAo0C,eAAAp0C,KAAA2zC,SAAA3zC,KAAAk6C,iBAAA,GAC9PvtC,EAAA2nC,cAAA5sC,WAA+B7S,YAAA8X,EAAA2nC,cAAAtD,WAAA,SAAAhrC,EAAAE,GAAyD,GAAAnS,GAAAiM,KAAA40C,OAAAt4B,EAAAtc,KAAAi/B,UAAAjoC,EAAAgP,EAAAsW,IAAAhT,EAAAtJ,KAAAk6C,gBAAmE,QAAA5wC,EAAA,CAAU,IAAAA,EAAA,EAAQA,IAAAgT,IAAMhT,EAAAvV,EAAAiD,EAAAsS,GAAAvV,EAAAuV,EAAgBA,GAAApD,MAAIoD,IAAApD,EAAAlG,KAAAi6C,iBAAAlmD,EAAAiD,EAAA,EAAAkP,EAAAoD,EAAAgT,EAA6Ctc,MAAAk6C,iBAAA5wC,GAAwBxN,MAAA,SAAAkK,GAAmB,GAAAE,GAAAlG,KAAAi/B,UAAAlrC,EAAAiM,KAAA40C,MAAmC5uC,KAAAE,GAAQ,IAAAoW,GAAAtc,KAAAk6C,iBAAAljD,EAAAgJ,KAAAw0C,OAA2Cx0C,MAAAk6C,iBAAA,EAAwB,EAAA59B,GAAAtc,KAAAi6C,iBAAAlmD,EAAAiS,EAAA,EAAAE,EAAA,EAAAoW,EAAApW,EAA0C,QAAAoW,GAAApW,EAAAoD,EAAApD,IAAkBoW,IAAAhT,IAAMgT,EAAA,GAAAvoB,EAAAuoB,KAAAvoB,EAAAuoB,EAAApW,GAAA,CAAsBlP,EAAAkhD,SAAAnkD,EAAAiS,EACre,SAAO8uC,kBAAA,WAA8B,GAAA9uC,GAAAhG,KAAA40C,OAAA1uC,EAAAlG,KAAAi/B,UAAAlrC,EAAA,EAAAmS,CAAyClG,MAAAw0C,QAAApoC,SAAApG,EAAAjS,EAA2B,QAAAuoB,GAAApW,EAAYoW,IAAAvoB,IAAMuoB,EAAAtW,EAAAsW,GAAAtW,EAAAjS,EAAAuoB,EAAApW,EAAkBlG,MAAAk6C,iBAAA,GAAwBjG,qBAAA,WAAiCj0C,KAAAw0C,QAAA0D,SAAAl4C,KAAA40C,OAAA,EAAA50C,KAAAi/B,YAAoD8a,QAAA,SAAA/zC,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAA6B,OAAAslB,EAAA,IAAAA,EAAA,EAAiBA,IAAAtlB,IAAMslB,EAAAtW,EAAAE,EAAAoW,GAAAtW,EAAAjS,EAAAuoB,IAAkBw9B,OAAA,SAAA9zC,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAA4B2V,EAAA+iB,WAAAuB,UAAAjrB,EAAAE,EAAAF,EAAAE,EAAAF,EAAAjS,EAAAuoB,IAA0C09B,MAAA,SAAAh0C,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAA2B,OAAAsS,GAAA,EAAAgT,EAAAiI,EAAA,EAAkBA,IAAAvtB,IAAMutB,EAAA,CAAK,GAAA1S,GAAA3L,EAAAqe,CAAUve,GAAA6L,GAAA7L,EAAA6L,GAAAvI,EAAAtD,EAAAjS,EAAAwwB,GAAAjI,KACxc3P,EAAAkrC,qBAAA,SAAA7xC,EAAAE,EAAAnS,GAA2C4Y,EAAAglC,cAAA99C,KAAAmM,KAAAgG,EAAAE,EAAAnS,IAAsC4Y,EAAAkrC,qBAAAnwC,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAglC,cAAAjqC,YAAiG7S,YAAA8X,EAAAkrC,qBAAAnD,cAAA,OAAAwC,gBAAAjtC,MAAAmtC,qBAAAzqC,EAAAuW,oBAAAq0B,+BAAA,OAAAC,+BAAA,SAA+M7qC,EAAAirC,mBAAA,SAAA5xC,EAAAE,EAAAnS,EAAAuoB,GAA2C3P,EAAAglC,cAAA99C,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,IAC5a3P,EAAAirC,mBAAAlwC,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAglC,cAAAjqC,YAA+F7S,YAAA8X,EAAAirC,mBAAAlD,cAAA,UAA6D/nC,EAAAqlC,oBAAA,SAAAhsC,EAAAE,EAAAnS,EAAAuoB,GAA4C3P,EAAAglC,cAAA99C,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,IAAwC3P,EAAAqlC,oBAAAtqC,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAglC,cAAAjqC,YAAgG7S,YAAA8X,EAAAqlC,oBAAA0C,cAAA,WAA+D/nC,EAAA+lC,wBAAA,SAAA1sC,EAAAE,EAAAnS,EAAAuoB,GAAgD3P,EAAAglC,cAAA99C,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,IAC/b3P,EAAA+lC,wBAAAhrC,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAglC,cAAAjqC,YAAoG7S,YAAA8X,EAAA+lC,wBAAAgC,cAAA,aAAA0C,qBAAAzqC,EAAAwW,kBAAAo0B,+BAAA,SAAAvxC,GAA6J,UAAA2G,GAAA0zB,4BAAArgC,KAAAyxC,MAAAzxC,KAAAsK,OAAAtK,KAAA20C,eAAA3uC,IAA2FwxC,+BAAA,SAAyC7qC,EAAAmrC,oBAAA,SAAA9xC,EAAAE,EAAAnS,EAAAuoB,GAA4C3P,EAAAglC,cAAA99C,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,IACjb3P,EAAAmrC,oBAAApwC,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAglC,cAAAjqC,YAAgG7S,YAAA8X,EAAAmrC,oBAAApD,cAAA,SAAAwC,gBAAAjtC,MAAAmtC,qBAAAzqC,EAAAuW,oBAAAq0B,+BAAA,OAAAC,+BAAA,SAAgN7qC,EAAA8lC,oBAAA,SAAAzsC,EAAAE,EAAAnS,EAAAuoB,GAA4C3P,EAAAglC,cAAA99C,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,IAC5V3P,EAAA8lC,oBAAA/qC,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAglC,cAAAjqC,YAAgG7S,YAAA8X,EAAA8lC,oBAAAiC,cAAA,WAChG/nC,EAAAwtC,MAAA,SAAAn0C,GAAwB2G,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,QAAkB6E,KAAAo6C,QAAAp0C,EAAAo0C,QAAuBp6C,KAAAq6C,OAAAr6C,KAAAo6C,QAAAE,qBAA8Ct6C,KAAAq6C,OAAAE,QAAAv6C,KAAAw6C,QAAAr3C,KAAAnD,MAA4CA,KAAAy6C,KAAAz6C,KAAAo6C,QAAAM,aAAoC16C,KAAAy6C,KAAAE,QAAA30C,EAAA40C,YAAgC56C,KAAA66C,UAAA,EAAiB76C,KAAA0gC,UAAA,EAAiB1gC,KAAA86C,aAAA,EAAoB96C,KAAA+6C,WAAA,EAAkB/6C,KAAAg7C,oBAAA,EAA2Bh7C,KAAAi7C,WAAA,QAAwBj7C,KAAAk7C,YACpXvuC,EAAAwtC,MAAAzyC,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAA6E7S,YAAA8X,EAAAwtC,MAAAgB,UAAA,WAA6C,MAAAn7C,MAAAy6C,MAAiBW,cAAA,SAAAp1C,GAA+G,MAApFhG,MAAAg7C,oBAAA,EAA2Bh7C,KAAAi7C,WAAA,YAA4Bj7C,KAAAq6C,OAAAr0C,EAAchG,KAAA26C,UAAe36C,MAAYq7C,UAAA,SAAAr1C,GAAgG,MAAzEhG,MAAAq6C,OAAAzF,OAAA5uC,EAAqBhG,KAAAi7C,WAAA,SAAyBj7C,KAAA66C,UAAA76C,KAAA+uC,OAA2B/uC,MAAY+uC,KAAA,WAAiB,QAAA/uC,KAAA+6C,UAAAzlD,QAAA0vB,KAAA,8CAA8E,SAAAhlB,KAAAg7C,mBACjd,CAAK,GAAAh1C,GAAAhG,KAAAo6C,QAAAE,oBAA2N,OAAnLt0C,GAAA4uC,OAAA50C,KAAAq6C,OAAAzF,OAA4B5uC,EAAAioC,KAAAjuC,KAAAq6C,OAAApM,KAAwBjoC,EAAAu0C,QAAAv6C,KAAAq6C,OAAAE,QAA8Bv0C,EAAA6N,MAAA,EAAA7T,KAAA0gC,WAA0B16B,EAAA80C,aAAAvzC,MAAAvH,KAAA86C,aAAuC96C,KAAA+6C,WAAA,EAAkB/6C,KAAAq6C,OAAAr0C,EAAchG,KAAA26C,UADiPrlD,QAAA0vB,KAAA,sDAC1Ns2B,MAAA,WAAkB,WAAAt7C,KAAAg7C,oBAAiGh7C,KAAAq6C,OAAAptC,OAAAjN,KAAA0gC,UAAA1gC,KAAAo6C,QAAAmB,YAAAv7C,KAAA+6C,WAAA,EAAA/6C,UAAjG1K,SAAA0vB,KAAA,qDAA+L/X,KAAA,WAAiB,WAAAjN,KAAAg7C,oBACzdh7C,KAAAq6C,OAAAptC,OAAAjN,KAAA0gC,UAAA,EAAA1gC,KAAA+6C,WAAA,EAAA/6C,UADyd1K,SAAA0vB,KAAA,qDAClZ21B,QAAA,WAAoB,KAAA36C,KAAAk7C,QAAA1kD,OAAA,CAA0BwJ,KAAAq6C,OAAAM,QAAA36C,KAAAk7C,QAAA,GAAqC,QAAAl1C,GAAA,EAAAE,EAAAlG,KAAAk7C,QAAA1kD,OAAkCwP,EAAAE,EAAIF,IAAAhG,KAAAk7C,QAAAl1C,EAAA,GAAA20C,QAAA36C,KAAAk7C,QAAAl1C,GAA+ChG,MAAAk7C,QAAAl7C,KAAAk7C,QAAA1kD,OAAA,GAAAmkD,QAAA36C,KAAAm7C,iBAA8Dn7C,MAAAq6C,OAAAM,QAAA36C,KAAAm7C,YAA2C,OAAAn7C,OAAYw7C,WAAA,WAAuB,KAAAx7C,KAAAk7C,QAAA1kD,OAAA,CAA0BwJ,KAAAq6C,OAAAmB,WAAAx7C,KAAAk7C,QAAA,GAAwC,QAAAl1C,GAAA,EAAAE,EAAAlG,KAAAk7C,QAAA1kD,OAAkCwP,EAAAE,EAAIF,IAAAhG,KAAAk7C,QAAAl1C,EACne,GAAAw1C,WAAAx7C,KAAAk7C,QAAAl1C,GAA+BhG,MAAAk7C,QAAAl7C,KAAAk7C,QAAA1kD,OAAA,GAAAglD,WAAAx7C,KAAAm7C,iBAAiEn7C,MAAAq6C,OAAAmB,WAAAx7C,KAAAm7C,YAA8C,OAAAn7C,OAAYy7C,WAAA,WAAuB,MAAAz7C,MAAAk7C,SAAoBQ,WAAA,SAAA11C,GAAuH,MAA/FA,YAAU,IAAAhG,KAAA+6C,WAAA/6C,KAAAw7C,aAAAx7C,KAAAk7C,QAAAl1C,EAAAhG,KAAA26C,WAAA36C,KAAAk7C,QAAAl1C,EAAqFhG,MAAY27C,UAAA,WAAsB,MAAA37C,MAAAy7C,aAAA,IAA4BG,UAAA,SAAA51C,GAAuB,MAAAhG,MAAA07C,WAAA11C,WAAiC61C,gBAAA,SAAA71C,GAA6B,WAAAhG,KAAAg7C,oBAC/ch7C,KAAA86C,aAAA90C,GAAA,IAAAhG,KAAA+6C,YAAA/6C,KAAAq6C,OAAAS,aAAAvzC,MAAAvH,KAAA86C,cAAA96C,UAD+c1K,SAAA0vB,KAAA,qDAClW82B,gBAAA,WAA4B,MAAA97C,MAAA86C,cAAyBN,QAAA,WAAoBx6C,KAAA+6C,WAAA,GAAkBgB,QAAA,WAAoB,WAAA/7C,KAAAg7C,oBAAA1lD,QAAA0vB,KAAA,wDAAAhlB,KAAAq6C,OAAApM,MAA0HwB,QAAA,SAAAzpC,IAAqB,IAAAhG,KAAAg7C,mBAAA1lD,QAAA0vB,KAAA,oDAAAhlB,KAAAq6C,OAAApM,KAAAjoC,GAAiHg2C,UAAA,WAAsB,MAAAh8C,MAAAy6C,UAAAlzC,OAClf00C,UAAA,SAAAj2C,GAA6C,MAAvBhG,MAAAy6C,UAAAlzC,MAAAvB,EAAuBhG,QAAe2M,EAAAuvC,cAAA,SAAAl2C,EAAAE,GAAkClG,KAAAm8C,SAAAn2C,EAAAo0C,QAAAgC,iBAAyCp8C,KAAAm8C,SAAAE,QAAA,SAAAn2C,IAAA,KAAwClG,KAAA/K,KAAA,GAAA0yC,YAAA3nC,KAAAm8C,SAAAG,mBAA0Dt2C,EAAAm1C,YAAAR,QAAA36C,KAAAm8C,WACzOlgC,OAAAI,OAAA1P,EAAAuvC,cAAAx0C,WAA6C60C,iBAAA,WAA0E,MAA9Cv8C,MAAAm8C,SAAAK,qBAAAx8C,KAAA/K,MAA8C+K,KAAA/K,MAAiBwnD,oBAAA,WAAgC,OAAAz2C,GAAA,EAAAE,EAAAlG,KAAAu8C,mBAAAxoD,EAAA,EAA0CA,EAAAmS,EAAA1P,OAAWzC,IAAAiS,GAAAE,EAAAnS,EAAY,OAAAiS,GAAAE,EAAA1P,UAAqBylB,OAAAC,eAAAvP,EAAA,gBAA4CwP,IAAA,WAAe,GAAAnW,EAAM,mBAAuF,MAArE,UAAAA,MAAA,IAAA9R,OAAAwoD,cAAAxoD,OAAAyoD,qBAAqE32C,QACtZ2G,EAAAiwC,gBAAA,SAAA52C,GAAkC2G,EAAAwtC,MAAAtmD,KAAAmM,KAAAgG,GAAyBhG,KAAA68C,OAAA78C,KAAAo6C,QAAA0C,eAAwC98C,KAAA68C,OAAAlC,QAAA36C,KAAAy6C,OACnG9tC,EAAAiwC,gBAAAl1C,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAwtC,MAAAzyC,YAAoF7S,YAAA8X,EAAAiwC,gBAAAzB,UAAA,WAAuD,MAAAn7C,MAAA68C,QAAmBE,eAAA,WAA2B,MAAA/8C,MAAA68C,OAAAG,aAA+BC,eAAA,SAAAj3C,GAA4BhG,KAAA68C,OAAAG,YAAAh3C,GAA0Bk3C,iBAAA,WAA6B,MAAAl9C,MAAA68C,OAAAM,eAAiCC,iBAAA,SAAAp3C,GAA8BhG,KAAA68C,OAAAM,cAAAn3C,GAA4Bq3C,iBAAA,WAA6B,MAAAr9C,MAAA68C,OAAAS,eAAiCC,iBAAA,SAAAv3C,GAA8BhG,KAAA68C,OAAAS,cAClet3C,GAAEw3C,eAAA,WAA2B,MAAAx9C,MAAA68C,OAAAY,aAA+BC,eAAA,SAAA13C,GAA4BhG,KAAA68C,OAAAY,YAAAz3C,GAA0BgxB,kBAAA,WAA8B,GAAAhxB,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,GAAmByG,EAAAsC,SAAAvH,UAAAsvB,kBAAAnjC,KAAAmM,KAAAkG,GAAwDF,EAAAouB,sBAAAp0B,KAAA0zB,aAA0C1zB,KAAA68C,OAAA5iB,YAAAj0B,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,SAC7RtG,EAAAgxC,cAAA,WAA+BhxC,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,gBAA0B6E,KAAAo6C,QAAAztC,EAAA+vC,aAAgC18C,KAAAy6C,KAAAz6C,KAAAo6C,QAAAM,aAAoC16C,KAAAy6C,KAAAE,QAAA36C,KAAAo6C,QAAAwD,aAA4C59C,KAAAwF,OAAA,MACnMmH,EAAAgxC,cAAAj2C,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAAqF7S,YAAA8X,EAAAgxC,cAAA/C,SAAA,WAAoD,MAAA56C,MAAAy6C,MAAiBoD,aAAA,WAAyB,OAAA79C,KAAAwF,SAAAxF,KAAAy6C,KAAAe,WAAAx7C,KAAAwF,QAAAxF,KAAAwF,OAAAg2C,WAAAx7C,KAAAo6C,QAAAwD,aAAA59C,KAAAy6C,KAAAE,QAAA36C,KAAAo6C,QAAAwD,aAAA59C,KAAAwF,OAAA,OAAsKm2C,UAAA,WAAsB,MAAA37C,MAAAwF,QAAmBo2C,UAAA,SAAA51C,GAAuB,OAAAhG,KAAAwF,QAAAxF,KAAAy6C,KAAAe,WAAAx7C,KAAAwF,QAAAxF,KAAAwF,OAAAg2C,WAAAx7C,KAAAo6C,QAAAwD,cACzZ59C,KAAAy6C,KAAAe,WAAAx7C,KAAAo6C,QAAAwD,aAA+C59C,KAAAwF,OAAAQ,EAAchG,KAAAy6C,KAAAE,QAAA36C,KAAAwF,QAA+BxF,KAAAwF,OAAAm1C,QAAA36C,KAAAo6C,QAAAwD,cAA8CE,gBAAA,WAA4B,MAAA99C,MAAAy6C,UAAAlzC,OAA4Bw2C,gBAAA,SAAA/3C,GAA6BhG,KAAAy6C,UAAAlzC,MAAAvB,GAAuBgxB,kBAAA,WAA8B,GAAAhxB,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA+iB,WAAA37B,EAAA,GAAA4Y,GAAA8G,QAAA6I,EAAA,GAAA3P,GAAA8G,OAAuF,iBAAAzc,GAAmB2V,EAAAsC,SAAAvH,UAAAsvB,kBAAAnjC,KAAAmM,KAAAhJ,GAAwDA,EAAAgJ,KAAAo6C,QAAA4D,QAAwB,IAAA10C,GAAAtJ,KAAA+iC,EAAc/iC,MAAA0zB,YAAAiH,UAAA30B,EAC5dE,EAAAnS,GAAKuoB,EAAAjL,IAAA,QAAA6hB,gBAAAhtB,GAAiClP,EAAAijC,YAAAj0B,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,GAA2Bjc,EAAAinD,eAAA3hC,EAAAvd,EAAAud,EAAAtJ,EAAAsJ,EAAArJ,EAAA3J,EAAAvK,EAAAuK,EAAA0J,EAAA1J,EAAA2J,SAAgDtG,EAAAuxC,OAAA,WAAwBvxC,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,SAAmB6E,KAAAm+C,mBAAA,GAAAxxC,GAAA2mB;AAA0CtzB,KAAAwzB,iBAAA,GAAA7mB,GAAA2mB,SAAyC3mB,EAAAuxC,OAAAx2C,UAAAuU,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,WAA+DiF,EAAAuxC,OAAAx2C,UAAA7S,YAAA8X,EAAAuxC,OACxUvxC,EAAAuxC,OAAAx2C,UAAA29B,kBAAA,WAAoD,GAAAr/B,GAAA,GAAA2G,GAAA+iB,UAA2B,iBAAAxpB,GAAqE,MAAlDA,MAAA,GAAAyG,GAAA8G,QAAuBzT,KAAAklC,mBAAAl/B,GAA2BE,EAAAmL,IAAA,QAAA6hB,gBAAAltB,OAA4C2G,EAAAuxC,OAAAx2C,UAAA8M,OAAA,WAAyC,GAAAxO,GAAA,GAAA2G,GAAA2mB,OAAwB,iBAAAptB,GAAmBF,EAAAwO,OAAAxU,KAAAhH,SAAAkN,EAAAlG,KAAA+iC,IAAkC/iC,KAAAmjC,WAAA/S,sBAAApqB,OAA6C2G,EAAAuxC,OAAAx2C,UAAA/Q,MAAA,WAAwC,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAC3Y2M,EAAAuxC,OAAAx2C,UAAA8c,KAAA,SAAAxe,GAAqL,MAA7I2G,GAAAsC,SAAAvH,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAm+C,mBAAA35B,KAAAxe,EAAAm4C,oBAAmDn+C,KAAAwzB,iBAAAhP,KAAAxe,EAAAwtB,kBAA+CxzB,MACrL2M,EAAAyxC,WAAA,SAAAp4C,EAAAE,EAAAnS,GAAiC4Y,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,YAAuB,IAAAmhB,GAAA,GAAA3P,GAAAwN,kBAAA,KAAAnU,EAAAE,EAA4CoW,GAAAymB,GAAA1xB,IAAA,QAAiBiL,EAAA9H,OAAA,GAAA7H,GAAA8G,QAAA,QAAmCzT,KAAAmP,IAAAmN,EAAY,IAAAtlB,GAAA,GAAA2V,GAAAwN,kBAAA,KAAAnU,EAAAE,EAA4ClP,GAAA+rC,GAAA1xB,IAAA,QAAiBra,EAAAwd,OAAA,GAAA7H,GAAA8G,aAAA,MAAoCzT,KAAAmP,IAAAnY,EAAY,IAAAsS,GAAA,GAAAqD,GAAAwN,kBAAA,KAAAnU,EAAAE,EAA4CoD,GAAAy5B,GAAA1xB,IAAA,OAAgB/H,EAAAkL,OAAA,GAAA7H,GAAA8G,QAAA,QAAmCzT,KAAAmP,IAAA7F,EAAY,IAAAib,GAAA,GAAA5X,GAAAwN,kBAAA,KAAAnU,EAAAE,EAA4Cqe,GAAAwe,GAAA1xB,IAAA,QAAiBkT,EAAA/P,OAAA,GAAA7H,GAAA8G,QAAA,WACndzT,KAAAmP,IAAAoV,EAAY,IAAA1S,GAAA,GAAAlF,GAAAwN,kBAAA,KAAAnU,EAAAE,EAA4C2L,GAAAkxB,GAAA1xB,IAAA,QAAiBQ,EAAA2C,OAAA,GAAA7H,GAAA8G,QAAA,QAAmCzT,KAAAmP,IAAA0C,EAAY,IAAAiU,GAAA,GAAAnZ,GAAAwN,kBAAA,KAAAnU,EAAAE,EAA4C4f,GAAAid,GAAA1xB,IAAA,QAAiByU,EAAAtR,OAAA,GAAA7H,GAAA8G,QAAA,WAAoCzT,KAAAmP,IAAA2W,GAAY9lB,KAAAq+C,aAAA,GAAA1xC,GAAA2xC,sBAAAvqD,KAAuDwqD,OAAA5xC,EAAAqV,UAAAw8B,UAAA7xC,EAAAsU,aAAAw9B,UAAA9xC,EAAAsU,eAAmFjhB,KAAA0+C,cAAA,SAAA14C,EAAAE,GAAiC,OAAAlG,KAAA8iC,QAAA9iC,KAAAg3B,mBAA6C,IAAAjjC,GAAAiM,KAAAq+C,aAAAvqD,EAAAC,EAAA4qD,QAAAC,eAAoD7qD,GAAA4qD,QAAAC,iBACjf,EAAG7qD,EAAA8qD,eAAA,EAAmB74C,EAAAwL,OAAAtL,EAAAoW,EAAAvoB,GAAgBA,EAAA8qD,eAAA,EAAmB74C,EAAAwL,OAAAtL,EAAAlP,EAAAjD,GAAgBA,EAAA8qD,eAAA,EAAmB74C,EAAAwL,OAAAtL,EAAAoD,EAAAvV,GAAgBA,EAAA8qD,eAAA,EAAmB74C,EAAAwL,OAAAtL,EAAAqe,EAAAxwB,GAAgBA,EAAA8qD,eAAA,EAAmB74C,EAAAwL,OAAAtL,EAAA2L,EAAA9d,GAAgBA,EAAA4qD,QAAAC,gBAAA9qD,EAA4BC,EAAA8qD,eAAA,EAAmB74C,EAAAwL,OAAAtL,EAAA4f,EAAA/xB,GAAgBiS,EAAA84C,gBAAA,QAA0BnyC,EAAAyxC,WAAA12C,UAAAuU,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,WAAmEiF,EAAAyxC,WAAA12C,UAAA7S,YAAA8X,EAAAyxC,WAC9UzxC,EAAA61B,mBAAA,SAAAx8B,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAA+CqD,EAAAuxC,OAAArqD,KAAAmM,MAAwBA,KAAA7E,KAAA,qBAA+B6E,KAAAwV,KAAA,EAAYxV,KAAA++C,KAAA,KAAe/+C,KAAAhC,KAAAgI,EAAYhG,KAAA/B,MAAAiI,EAAalG,KAAAjC,IAAAhK,EAAWiM,KAAA9B,OAAAoe,EAActc,KAAA8hC,KAAA,SAAA9qC,IAAA,GAA0BgJ,KAAA+hC,IAAA,SAAAz4B,IAAA,IAA0BtJ,KAAAgO,0BACvOrB,EAAA61B,mBAAA96B,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAuxC,OAAAx2C,YAAwF7S,YAAA8X,EAAA61B,mBAAAhe,KAAA,SAAAxe,GAA8Q,MAAxN2G,GAAAuxC,OAAAx2C,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAyChG,KAAAhC,KAAAgI,EAAAhI,KAAiBgC,KAAA/B,MAAA+H,EAAA/H,MAAmB+B,KAAAjC,IAAAiI,EAAAjI,IAAeiC,KAAA9B,OAAA8H,EAAA9H,OAAqB8B,KAAA8hC,KAAA97B,EAAA87B,KAAiB9hC,KAAA+hC,IAAA/7B,EAAA+7B,IAAe/hC,KAAAwV,KAAAxP,EAAAwP,KAAiBxV,KAAA++C,KAAA,OAAA/4C,EAAA+4C,KAAA,KAAA9iC,OAAAI,UAA6CrW,EAAA+4C,MAAS/+C,MAAYg/C,cAAA,SAAAh5C,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAqCtJ,KAAA++C,MAAWE,UAAAj5C,EAAAk5C,WAAAh5C,EAAAi5C,QAAAprD,EAAAqrD,QAAA9iC,EAAAne,MAAAnH,EAAAoH,OAAAkL,GAA+DtJ,KAAAgO,0BACjeqxC,gBAAA,WAA2Br/C,KAAA++C,KAAA,KAAe/+C,KAAAgO,0BAA8BA,uBAAA,WAAmC,GAAAhI,IAAAhG,KAAA/B,MAAA+B,KAAAhC,OAAA,EAAAgC,KAAAwV,MAAAtP,GAAAlG,KAAAjC,IAAAiC,KAAA9B,SAAA,EAAA8B,KAAAwV,MAAAzhB,GAAAiM,KAAA/B,MAAA+B,KAAAhC,MAAA,EAAAse,GAAAtc,KAAAjC,IAAAiC,KAAA9B,QAAA,EAAAlH,EAAAjD,EAAAiS,EAAAjS,IAAAiS,IAAAsW,EAAApW,IAAAoW,EAAApW,CAAgK,WAAAlG,KAAA++C,KAAA,GAAAhrD,GAAAiM,KAAAwV,MAAAxV,KAAA++C,KAAA5gD,MAAA6B,KAAA++C,KAAAE,WAAA/4C,EAAAlG,KAAAwV,MAAAxV,KAAA++C,KAAA3gD,OAAA4B,KAAA++C,KAAAG,YAAA51C,GAAAtJ,KAAA/B,MAAA+B,KAAAhC,MAAAgC,KAAA++C,KAAA5gD,MAAAme,GAAAtc,KAAAjC,IAAAiC,KAAA9B,QAAA8B,KAAA++C,KAAA3gD,OAAApH,IAAAgJ,KAAA++C,KAAAI,QAAAprD,EAAAuV,EAC3QvV,EAAAiD,EAAAgJ,KAAA++C,KAAA5gD,MAAApK,EAAAuV,EAAAtD,IAAAhG,KAAA++C,KAAAK,QAAAl5C,EAAAoW,EAAApW,EAAAF,EAAAhG,KAAA++C,KAAA3gD,OAAA8H,EAAAoW,CAA2Etc,MAAAwzB,iBAAAuH,iBAAA/jC,EAAAjD,EAAAiS,EAAAE,EAAAlG,KAAA8hC,KAAA9hC,KAAA+hC,MAAmE0D,OAAA,SAAAz/B,GAA2S,MAAvRA,GAAA2G,EAAAsC,SAAAvH,UAAA+9B,OAAA5xC,KAAAmM,KAAAgG,GAA+CA,EAAAmQ,OAAAX,KAAAxV,KAAAwV,KAAwBxP,EAAAmQ,OAAAnY,KAAAgC,KAAAhC,KAAwBgI,EAAAmQ,OAAAlY,MAAA+B,KAAA/B,MAA0B+H,EAAAmQ,OAAApY,IAAAiC,KAAAjC,IAAsBiI,EAAAmQ,OAAAjY,OAAA8B,KAAA9B,OAA4B8H,EAAAmQ,OAAA2rB,KAAA9hC,KAAA8hC,KAAwB97B,EAAAmQ,OAAA4rB,IAAA/hC,KAAA+hC,IAAsB,OAAA/hC,KAAA++C,OAAA/4C,EAAAmQ,OAAA4oC,KAAA9iC,OAAAI,UAAiDrc,KAAA++C,OAAa/4C,KACzb2G,EAAAwN,kBAAA,SAAAnU,EAAAE,EAAAnS,EAAAuoB,GAA0C3P,EAAAuxC,OAAArqD,KAAAmM,MAAwBA,KAAA7E,KAAA,oBAA8B6E,KAAAgS,IAAA,SAAAhM,IAAA,GAAyBhG,KAAAwV,KAAA,EAAYxV,KAAA8hC,KAAA,SAAA/tC,IAAA,GAA0BiM,KAAA+hC,IAAA,SAAAzlB,IAAA,IAA0Btc,KAAAs/C,MAAA,GAAct/C,KAAA8N,OAAA,SAAA5H,IAAA,EAA2BlG,KAAA++C,KAAA,KAAe/+C,KAAAu/C,UAAA,GAAkBv/C,KAAAw/C,WAAA,EAAkBx/C,KAAAgO,0BACrRrB,EAAAwN,kBAAAzS,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAuxC,OAAAx2C,YAAuF7S,YAAA8X,EAAAwN,kBAAAqK,KAAA,SAAAxe,GAAoT,MAA/P2G,GAAAuxC,OAAAx2C,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAyChG,KAAAgS,IAAAhM,EAAAgM,IAAehS,KAAAwV,KAAAxP,EAAAwP,KAAiBxV,KAAA8hC,KAAA97B,EAAA87B,KAAiB9hC,KAAA+hC,IAAA/7B,EAAA+7B,IAAe/hC,KAAAs/C,MAAAt5C,EAAAs5C,MAAmBt/C,KAAA8N,OAAA9H,EAAA8H,OAAqB9N,KAAA++C,KAAA,OAAA/4C,EAAA+4C,KAAA,KAAA9iC,OAAAI,UAA6CrW,EAAA+4C,MAAS/+C,KAAAu/C,UAAAv5C,EAAAu5C,UAA2Bv/C,KAAAw/C,WAAAx5C,EAAAw5C,WAA6Bx/C,MAAYy/C,eAAA,SAAAz5C,GAA4BA,EAAA,GAAAhG,KAAA0/C,gBAAA15C,EAA4BhG,KAAAgS,IAAA,EAAArF,EAAAnN,KAAAs9B,QAAAt9B,KAAAmgD,KAAA35C,GAC/chG,KAAAgO,0BAA8B4xC,eAAA,WAA2B,GAAA55C,GAAAxG,KAAA0S,IAAA,GAAAvF,EAAAnN,KAAAs7B,QAAA96B,KAAAgS,IAA+C,UAAAhS,KAAA0/C,gBAAA15C,GAAgC65C,gBAAA,WAA4B,SAAAlzC,EAAAnN,KAAAs9B,QAAAt9B,KAAAmgD,KAAAngD,KAAA0S,IAAA,GAAAvF,EAAAnN,KAAAs7B,QAAA96B,KAAAgS,KAAAhS,KAAAwV,OAA0FsqC,aAAA,WAAyB,MAAA9/C,MAAAu/C,UAAA//C,KAAAib,IAAAza,KAAA8N,OAAA,IAA8C4xC,cAAA,WAA0B,MAAA1/C,MAAAu/C,UAAA//C,KAAAC,IAAAO,KAAA8N,OAAA,IAA8CkxC,cAAA,SAAAh5C,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAqCtJ,KAAA8N,OAAA9H,EAAAE,EAAgBlG,KAAA++C,MAAWE,UAAAj5C,EAAAk5C,WAAAh5C,EAAAi5C,QAAAprD,EAAAqrD,QAAA9iC,EAC7cne,MAAAnH,EAAAoH,OAAAkL,GAAkBtJ,KAAAgO,0BAA8BqxC,gBAAA,WAA4Br/C,KAAA++C,KAAA,KAAe/+C,KAAAgO,0BAA8BA,uBAAA,WAAmC,GAAAhI,GAAAhG,KAAA8hC,KAAA57B,EAAAF,EAAAxG,KAAA0S,IAAA,GAAAvF,EAAAnN,KAAAs7B,QAAA96B,KAAAgS,KAAAhS,KAAAwV,KAAAzhB,EAAA,EAAAmS,EAAAoW,EAAAtc,KAAA8N,OAAA/Z,EAAAiD,MAAAslB,EAAAhT,EAAAtJ,KAAA++C,IAAiH,WAAAz1C,EAAA,GAAAib,GAAAjb,EAAA21C,UAAAptC,EAAAvI,EAAA41C,WAAAloD,IAAAsS,EAAA61C,QAAA7iC,EAAAiI,EAAAre,IAAAoD,EAAA81C,QAAArrD,EAAA8d,EAAAyK,EAAAhT,EAAAnL,MAAAomB,EAAAjI,EAAAvoB,EAAAuV,EAAAlL,OAAAyT,EAAA9d,CAA8GuV,GAAAtJ,KAAAw/C,WAAkB,IAAAl2C,IAAAtS,GAAAgP,EAAAsD,EAAAtJ,KAAA8/C,gBAAoC9/C,KAAAwzB,iBAAAoH,YAAA5jC,IAAAslB,EAAApW,EAAAnS,EAAAmS,EAAAF,EAAAhG,KAAA+hC,MAA0D0D,OAAA,SAAAz/B,GACxK,MAD4LA,GAC/f2G,EAAAsC,SAAAvH,UAAA+9B,OAAA5xC,KAAAmM,KAAAgG,GAA6CA,EAAAmQ,OAAAnE,IAAAhS,KAAAgS,IAAsBhM,EAAAmQ,OAAAX,KAAAxV,KAAAwV,KAAwBxP,EAAAmQ,OAAA2rB,KAAA9hC,KAAA8hC,KAAwB97B,EAAAmQ,OAAA4rB,IAAA/hC,KAAA+hC,IAAsB/7B,EAAAmQ,OAAAmpC,MAAAt/C,KAAAs/C,MAA0Bt5C,EAAAmQ,OAAArI,OAAA9N,KAAA8N,OAA4B,OAAA9N,KAAA++C,OAAA/4C,EAAAmQ,OAAA4oC,KAAA9iC,OAAAI,UAAiDrc,KAAA++C,OAAa/4C,EAAAmQ,OAAAopC,UAAAv/C,KAAAu/C,UAAkCv5C,EAAAmQ,OAAAqpC,WAAAx/C,KAAAw/C,WAAoCx5C,KACnU2G,EAAAozC,aAAA,WAA8B//C,KAAA7E,KAAA,eAAyB6E,KAAA8N,OAAA,EAAc9N,KAAAggD,QAAA,GAAArzC,GAAAwN,kBAAyCna,KAAAggD,QAAAtc,OAAAjC,OAAA,GAA8BzhC,KAAAggD,QAAAzc,kBAAA,EAAiCvjC,KAAAigD,QAAA,GAAAtzC,GAAAwN,kBAAyCna,KAAAigD,QAAAvc,OAAAjC,OAAA,GAA8BzhC,KAAAigD,QAAA1c,kBAAA,GACpPtnB,OAAAI,OAAA1P,EAAAozC,aAAAr4C,WAA4C9E,OAAA,WAAkB,GAAAoD,GAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAA,GAAAqD,GAAA2mB,QAAA/O,EAAA,GAAA5X,GAAA2mB,OAAsD,iBAAAzhB,GAAmB,GAAA7L,IAAA6L,EAAAytC,OAAAp5C,IAAA2L,EAAAG,KAAAje,IAAA8d,EAAA/D,OAAA9N,KAAA8N,QAAAwO,IAAAzK,EAAAiwB,MAAA9qC,IAAA6a,EAAAkwB,IAAA,CAA4E/7B,EAAA6L,EAAAytC,MAAUp5C,EAAA2L,EAAAG,IAAQje,EAAA8d,EAAA/D,OAAA9N,KAAA8N,OAAuBwO,EAAAzK,EAAAiwB,KAAS9qC,EAAA6a,EAAAkwB,GAAQ,IAAA/tC,GAAAF,EAAAgyB,EAAAjU,EAAA2hB,iBAAA78B,QAAAkvB,EAAA,KAAAvJ,EAAAtW,EAAAkrB,EAAA5U,EAAA9c,KAAA0S,IAAAvF,EAAAnN,KAAAs7B,QAAA50B,EAAA,GAAsFqe,GAAA8L,SAAA,UAAqB/mB,EAAA+mB,SAAA,SAAoBr8B,GAAAk9B,EAAAn9B,EAAA8xB,EAAS/xB,EAAAo9B,EAAAn9B,EAAA8xB,EAAQC,EAAAuK,SAAA,KAAA/T,GAAAxoB,EAAAE,GAAwB8xB,EAAAuK,SAAA,IAAAv8B,EAAAE,IAAAF,EAAAE,GAA0BgM,KAAAggD,QAAAxsB,iBAAAhP,KAAAsB,GAC/c9xB,GAAAk9B,EAAAn9B,EAAA8xB,EAAS/xB,EAAAo9B,EAAAn9B,EAAA8xB,EAAQC,EAAAuK,SAAA,KAAA/T,GAAAxoB,EAAAE,GAAwB8xB,EAAAuK,SAAA,IAAAv8B,EAAAE,IAAAF,EAAAE,GAA0BgM,KAAAigD,QAAAzsB,iBAAAhP,KAAAsB,GAAsC9lB,KAAAggD,QAAAtsB,YAAAlP,KAAA3S,EAAA6hB,aAAAvN,SAAA5B,GAAyDvkB,KAAAigD,QAAAvsB,YAAAlP,KAAA3S,EAAA6hB,aAAAvN,SAAA7c,SAA+DqD,EAAAuzC,MAAA,SAAAl6C,EAAAE,GAA0ByG,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,QAAkB6E,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAAre,GAA8BhG,KAAAmgD,UAAA,SAAAj6C,IAAA,EAA8BlG,KAAA2jC,cAAA,QACnWh3B,EAAAuzC,MAAAx4C,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAA6E7S,YAAA8X,EAAAuzC,MAAA17B,KAAA,SAAAxe,GAAwI,MAA/F2G,GAAAsC,SAAAvH,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAAmgD,UAAAn6C,EAAAm6C,UAA2BngD,MAAYylC,OAAA,SAAAz/B,GAC9E,MADkGA,GAAA2G,EAAAsC,SAAAvH,UAAA+9B,OAAA5xC,KAAAmM,KAAAgG,GAA+CA,EAAAmQ,OAAAjF,MAAAlR,KAAAkR,MAAAuU,SAAmCzf,EAAAmQ,OAAAgqC,UAAAngD,KAAAmgD,UAAkC,SAAAngD,KAAAogD,cAAAp6C,EAAAmQ,OAAAiqC,YAAApgD,KAAAogD,YAAA36B,UAA4E,SAAAzlB,KAAAy1B,WAAAzvB,EAAAmQ,OAAAsf,SAAAz1B,KAAAy1B,UAA0D,SAC/ez1B,KAAAuyB,QAAAvsB,EAAAmQ,OAAAoc,MAAAvyB,KAAAuyB,OAAwC,SAAAvyB,KAAAqgD,QAAAr6C,EAAAmQ,OAAAkqC,MAAArgD,KAAAqgD,OAAiD,SAAArgD,KAAAsgD,WAAAt6C,EAAAmQ,OAAAmqC,SAAAtgD,KAAAsgD,UAA0Dt6C,KAAY2G,EAAA4zC,YAAA,SAAAv6C,GAA8BhG,KAAA6N,OAAA7H,EAAchG,KAAAwgD,KAAA,EAAYxgD,KAAAm0B,OAAA,EAAcn0B,KAAAygD,QAAA,GAAA9zC,GAAAykB,QAAA,SAAwCpxB,KAAAgL,IAAA,KAAchL,KAAAsjC,OAAA,GAAA32B,GAAA2mB,SAA+BrX,OAAAI,OAAA1P,EAAA4zC,YAAA74C,WAA2C8c,KAAA,SAAAxe,GAAiH,MAAhGhG,MAAA6N,OAAA7H,EAAA6H,OAAAlX,QAA6BqJ,KAAAwgD,KAAAx6C,EAAAw6C,KAAiBxgD,KAAAm0B,OAAAnuB,EAAAmuB,OAAqBn0B,KAAAygD,QAAAj8B,KAAAxe,EAAAy6C,SAA6BzgD,MAAYrJ,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,SACpf2M,EAAA2N,aAAA,SAAAtU,EAAAE,GAAiCyG,EAAAuzC,MAAArsD,KAAAmM,KAAAgG,EAAAE,GAA2BlG,KAAA7E,KAAA,eAAyB6E,KAAA4jC,WAAA,QAAwBj3B,EAAA2N,aAAA5S,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAuzC,MAAAx4C,YAAiF7S,YAAA8X,EAAA2N,eAAiC3N,EAAA4N,iBAAA,SAAAvU,EAAAE,GAAqCyG,EAAAuzC,MAAArsD,KAAAmM,KAAAgG,EAAAE,GAA2BlG,KAAA7E,KAAA,mBAA6B6E,KAAAhH,SAAAqY,IAAA,OAAyBrR,KAAAwlC,eAAoBxlC,KAAAshC,OAAA,GAAA30B,GAAAsC,SAA+BjP,KAAA0gD,OAAA,GAAA/zC,GAAAg0C,wBACxYh0C,EAAA4N,iBAAA7S,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAuzC,MAAAx4C,YAAqF7S,YAAA8X,EAAA4N,iBAAAiK,KAAA,SAAAxe,GAAsJ,MAAlG2G,GAAAuzC,MAAAx4C,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAwChG,KAAAshC,OAAAt7B,EAAAs7B,OAAA3qC,QAA6BqJ,KAAA0gD,OAAA16C,EAAA06C,OAAA/pD,QAA6BqJ,QAAe2M,EAAAg0C,uBAAA,SAAA36C,GAAyC2G,EAAA4zC,YAAA1sD,KAAAmM,KAAA,GAAA2M,GAAA61B,wBAAA,mBAA6E71B,EAAAg0C,uBAAAj5C,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAA4zC,YAAA74C,YAAiG7S,YAAA8X,EAAAg0C,yBACjdh0C,EAAAi0C,gBAAA,SAAA56C,EAAAE,EAAAnS,GAAsC4Y,EAAAuzC,MAAArsD,KAAAmM,KAAAgG,EAAAjS,GAA2BiM,KAAA7E,KAAA,kBAA4B6E,KAAA4jC,WAAA,OAAuB5jC,KAAAhH,SAAAqY,IAAA,OAAyBrR,KAAAwlC,eAAoBxlC,KAAAogD,YAAA,GAAAzzC,GAAA0X,MAAAne,IAAqCyG,EAAAi0C,gBAAAl5C,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAuzC,MAAAx4C,YAAoF7S,YAAA8X,EAAAi0C,gBAAAp8B,KAAA,SAAAxe,GAAgI,MAA7E2G,GAAAuzC,MAAAx4C,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAwChG,KAAAogD,YAAA57B,KAAAxe,EAAAo6C,aAAqCpgD,QAC1Z2M,EAAAk0C,WAAA,SAAA76C,EAAAE,EAAAnS,EAAAuoB,GAAmC3P,EAAAuzC,MAAArsD,KAAAmM,KAAAgG,EAAAE,GAA2BlG,KAAA7E,KAAA,aAAuB8gB,OAAAC,eAAAlc,KAAA,SAAoCmc,IAAA,WAAe,SAAAnc,KAAAmgD,UAAA3gD,KAAAyS,IAAgCZ,IAAA,SAAArL,GAAiBhG,KAAAmgD,UAAAn6C,GAAA,EAAAxG,KAAAyS,OAAgCjS,KAAAy1B,SAAA,SAAA1hC,IAAA,EAA6BiM,KAAAqgD,MAAA,SAAA/jC,IAAA,EAA0Btc,KAAA0gD,OAAA,GAAA/zC,GAAA4zC,YAAA,GAAA5zC,GAAAwN,kBAAA,eAChRxN,EAAAk0C,WAAAn5C,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAuzC,MAAAx4C,YAA+E7S,YAAA8X,EAAAk0C,WAAAr8B,KAAA,SAAAxe,GAA+J,MAAjH2G,GAAAuzC,MAAAx4C,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAwChG,KAAAy1B,SAAAzvB,EAAAyvB,SAAyBz1B,KAAAqgD,MAAAr6C,EAAAq6C,MAAmBrgD,KAAA0gD,OAAA16C,EAAA06C,OAAA/pD,QAA6BqJ,QAC9O2M,EAAAm0C,UAAA,SAAA96C,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAsCqD,EAAAuzC,MAAArsD,KAAAmM,KAAAgG,EAAAE,GAA2BlG,KAAA7E,KAAA,YAAsB6E,KAAAhH,SAAAqY,IAAA,OAAyBrR,KAAAwlC,eAAoBxlC,KAAAshC,OAAA,GAAA30B,GAAAsC,SAA+BgN,OAAAC,eAAAlc,KAAA,SAAoCmc,IAAA,WAAe,MAAAnc,MAAAmgD,UAAA3gD,KAAAyS,IAA8BZ,IAAA,SAAArL,GAAiBhG,KAAAmgD,UAAAn6C,EAAAxG,KAAAyS,MAA4BjS,KAAAy1B,SAAA,SAAA1hC,IAAA,EAA6BiM,KAAAuyB,MAAA,SAAAjW,IAAA9c,KAAAyS,GAAA,EAAkCjS,KAAAsgD,SAAA,SAAAtpD,IAAA,EAA6BgJ,KAAAqgD,MAAA,SAAA/2C,IAAA,EAA0BtJ,KAAA0gD,OAAA,GAAA/zC,GAAAo0C,iBACvZp0C,EAAAm0C,UAAAp5C,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAuzC,MAAAx4C,YAA8E7S,YAAA8X,EAAAm0C,UAAAt8B,KAAA,SAAAxe,GAAuO,MAA1L2G,GAAAuzC,MAAAx4C,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAwChG,KAAAy1B,SAAAzvB,EAAAyvB,SAAyBz1B,KAAAuyB,MAAAvsB,EAAAusB,MAAmBvyB,KAAAsgD,SAAAt6C,EAAAs6C,SAAyBtgD,KAAAqgD,MAAAr6C,EAAAq6C,MAAmBrgD,KAAAshC,OAAAt7B,EAAAs7B,OAAA3qC,QAA6BqJ,KAAA0gD,OAAA16C,EAAA06C,OAAA/pD,QAA6BqJ,QAAe2M,EAAAo0C,gBAAA,WAAiCp0C,EAAA4zC,YAAA1sD,KAAAmM,KAAA,GAAA2M,GAAAwN,kBAAA,eACrWxN,EAAAo0C,gBAAAr5C,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAA4zC,YAAA74C,YAA0F7S,YAAA8X,EAAAo0C,gBAAAn+C,OAAA,SAAAoD,GAAqD,GAAAE,GAAA,EAAAyG,EAAAnN,KAAAs9B,QAAA92B,EAAAusB,MAAAx+B,EAAAiM,KAAAygD,QAAAtiD,MAAA6B,KAAAygD,QAAAriD,MAA4E4H,KAAAyvB,UAAA,GAAkB,IAAAnZ,GAAAtc,KAAA6N,MAAkB3H,KAAAoW,EAAAtK,KAAAje,IAAAuoB,EAAAxO,QAAA9H,IAAAsW,EAAAylB,MAAAzlB,EAAAtK,IAAA9L,EAAAoW,EAAAxO,OAAA/Z,EAAAuoB,EAAAylB,IAAA/7B,EAAAsW,EAAAtO,6BAA+FrB,EAAAq0C,YAAA,SAAAh7C,GAA8BhG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,uBAC5XjlC,OAAAI,OAAA1P,EAAAq0C,YAAAt5C,WAA2ClT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,GAAAtlB,GAAA,GAAA2V,GAAAw0C,UAAAnhD,KAAAihD,QAAwCjqD,GAAAoqD,gBAAA,eAAiCpqD,EAAAxC,KAAAwR,EAAA,SAAAA,GAAqB2G,EAAA+vC,aAAA2E,gBAAAr7C,EAAA,SAAAA,GAAiDE,EAAAF,MAAOjS,EAAAuoB,MAAS3P,EAAA20C,OAAa3S,SAAA,EAAA4S,SAAmBpyC,IAAA,SAAAnJ,EAAAE,IAAmB,IAAAlG,KAAA2uC,UAAA3uC,KAAAuhD,MAAAv7C,GAAAE,IAAqCiW,IAAA,SAAAnW,GAAiB,QAAAhG,KAAA2uC,QAAA,MAAA3uC,MAAAuhD,MAAAv7C,IAA0CnD,OAAA,SAAAmD,SAAoBhG,MAAAuhD,MAAAv7C,IAAqBw7C,MAAA,WAAkBxhD,KAAAuhD,WAC/a50C,EAAA80C,OAAA,WAAwBzhD,KAAA0hD,YAAA,aAA8B1hD,KAAA2hD,eAAA,aAAiC3hD,KAAA4hD,eAAA,cACvFj1C,EAAA80C,OAAA/5C,WAAwB7S,YAAA8X,EAAA80C,OAAAI,YAAA,OAAAC,eAAA,SAAA97C,GAAsF,MAAfA,KAAA8uB,MAAA,KAAe,IAAA9uB,EAAAxP,OAAA,MAA2BwP,EAAAqF,MAAQrF,EAAA9F,KAAA,WAAuB6hD,cAAA,SAAA/7C,EAAAE,EAAAnS,GAA+B,OAAAuoB,MAAAtlB,EAAA,EAAiBA,EAAAgP,EAAAxP,SAAWQ,EAAAslB,EAAAtlB,GAAAgJ,KAAAgiD,eAAAh8C,EAAAhP,GAAAkP,EAAAnS,EAAuC,OAAAuoB,IAAS0lC,eAAA,WAA2B,GAAAh8C,GAAAE,EAAAnS,CAAU,iBAAAuoB,EAAAtlB,EAAAsS,GAAuB,QAAAib,GAAAve,EAAAjS,EAAAuoB,EAAAiI,EAAAuB,GAAsB9f,EAAAhP,EAAAgP,CAAM,IAAA6f,GAAAlZ,EAAA80C,OAAAQ,SAAA9lC,IAAAnW,EACqB,OADc,QAAA6f,EAAA7f,EAAA6f,EAAArxB,KAAAwR,IAAAE,EAAAg8C,eAAA54C,GAAAtD,EAAAE,EAAA1R,KAAAwR,IAAuD,SAAAjS,IAAAiS,EAAAm8C,OAAA77B,UAAAvyB,GAAA,IAAAA,EAAA,KAAAiS,EAAAo8C,MACrcz1C,EAAAgU,gBAAA,IAAA5sB,EAAA,KAAAiS,EAAAq8C,MAAA11C,EAAAgU,iBAAgE,SAAArE,GAAAtW,EAAA4H,OAAA0Y,UAAAhK,GAAkC,SAAAiI,IAAA,WAAAA,EAAA,KAAAve,EAAAo8C,MAAAz1C,EAAAgU,gBAAA,WAAA4D,EAAA,KAAAve,EAAAo8C,MAAAz1C,EAAAkU,wBAAA,WAAA0D,EAAA,KAAAve,EAAAq8C,MAAA11C,EAAAgU,gBAAA,WAAA4D,EAAA,KAAAve,EAAAq8C,MAAA11C,EAAAkU,yBAA8N,SAAAiF,IAAA9f,EAAAs8C,WAAAx8B,GAA6B/xB,EAAA4Y,EAAAnN,KAAAu9B,eAA4BlrB,EAAA9d,GAAAiS,EAAOjS,EAAS,SAAAiS,MAAA,GAAA2G,GAAA0X,OAAgC,SAAAne,MAAA,GAAAyG,GAAA41C,eAAwC,SAAAxuD,MAAA,GAAA4Y,GAAA61C,eACjd,IAAsE38B,GAAtEhU,KAAQiU,GAAI+c,KAAAl2B,EAAAnN,KAAAu9B,eAAA5hC,KAAA,sBAA6D,KAAA0qB,IAAAvJ,GAAA,CAAY,GAAA4U,GAAA5U,EAAAuJ,EAAW,QAAAA,GAAU,2EAAgF,eAAAC,EAAAjvB,KAAAq6B,CAAwB,MAAM,gBAAApL,EAAA28B,SAAA91C,EAAAukB,EAAoC,MAAM,qCAAA57B,QAAA0vB,KAAA,+BAAAa,EAAA,0BAA+G,MAAM,oBAAAC,EAAA5U,MAAAlL,EAAAsgB,UAAA4K,GAAAzL,QAAoD,MAAM,qBAAAK,EAAA48B,SAAA18C,EAAAsgB,UAAA4K,GAAAzL,QAAwD,MAAM,qBAAAK,EAAA68B,SAC/e38C,EAAAsgB,UAAA4K,GAAAzL,QAAwB,MAAM,oBAAAK,EAAA88B,UAAA1xB,CAAkC,MAAM,yBAAAA,EAAAhsB,gBAAA4gB,EAAA3qB,KAAA,qBAAuE,UAAA+1B,EAAAhsB,gBAAA4gB,EAAA3qB,KAAA,qBAAwD,aAAA+1B,EAAAhsB,gBAAA4gB,EAAA3qB,KAAA,uBAA8D,MAAM,kBAAA2qB,EAAA9a,IAAAuZ,EAAA2M,EAAA5U,EAAAumC,iBAAAvmC,EAAAwmC,iBAAAxmC,EAAAymC,eAAAzmC,EAAA0mC,qBAA2G,MAAM,oGAAwG,mBAAAl9B,EAAAm9B,YACle1+B,EAAA2M,EAAA5U,EAAA4mC,kBAAA5mC,EAAA6mC,kBAAA7mC,EAAA8mC,gBAAA9mC,EAAA+mC,sBAAuF,MAAM,wGAA4G,gBAAAv9B,EAAAw9B,SAAA/+B,EAAA2M,EAAA5U,EAAAinC,eAAAjnC,EAAAknC,eAAAlnC,EAAAmnC,aAAAnnC,EAAAonC,mBAAsG,MAAM,4FAAgG,aAAA59B,EAAA69B,MAAAp/B,EAAA2M,EAAA5U,EAAAsnC,YAAAtnC,EAAAunC,YAAAvnC,EAAAwnC,UAAAxnC,EAAAynC,gBAAoF,MAAM,gFAC/e,eAAAj+B,EAAAk+B,QAAAz/B,EAAA2M,EAAA5U,EAAA2nC,cAAA3nC,EAAA4nC,cAAA5nC,EAAA6nC,YAAA7nC,EAAA8nC,kBAAgG,MAAM,oBAAAt+B,EAAAu+B,UAAAnzB,CAAkC,MAAM,wFAA4F,iBAAApL,EAAAw+B,UAAA//B,EAAA2M,EAAA5U,EAAAioC,gBAAAjoC,EAAAkoC,gBAAAloC,EAAAmoC,cAAAnoC,EAAAooC,oBAA4G,MAAM,uBAAA5+B,EAAA6+B,aAAAzzB,IAA2C,MAAM,gGAAoG,mBAAApL,EAAA8+B,YACjfrgC,EAAA2M,EAAA5U,EAAAuoC,kBAAAvoC,EAAAwoC,kBAAAxoC,EAAAyoC,gBAAAzoC,EAAA0oC,sBAAuF,MAAM,wGAA4G,oBAAAl/B,EAAAm/B,aAAA1gC,EAAA2M,EAAA5U,EAAA4oC,mBAAA5oC,EAAA6oC,mBAAA7oC,EAAA8oC,iBAAA9oC,EAAA+oC,uBAA8H,MAAM,4GAAgH,oBAAAv/B,EAAAw/B,aAAA/gC,EAAA2M,EAAA5U,EAAAipC,mBAC7bjpC,EAAAkpC,mBAAAlpC,EAAAmpC,iBAAAnpC,EAAAopC,uBAAkE,MAAM,4GAAgH,gBAAA5/B,EAAA6/B,SAAAphC,EAAA2M,EAAA5U,EAAAspC,eAAAtpC,EAAAupC,eAAAvpC,EAAAwpC,aAAAxpC,EAAAypC,mBAAsG,MAAM,4FAAgG,iBAAAjgC,EAAAkgC,KAAAr5C,EAAA2Q,QAAuC,MAAM,mBAAAwI,EAAAkgC,KAAAr5C,EAAA4Q,UAA2C,MAAM,oBAAAjoB,QAAA0vB,KAAA,yEAClec,EAAAmgC,QAAA/0B,CAAY,MAAM,oIAAApL,EAAAD,GAAAqL,CAAkJ,MAAM,yBAAAA,IAAApL,EAAAugB,aAAA15B,EAAAiR,cAAgE,SAAAsT,IAAApL,EAAAugB,aAAA15B,EAAAgR,WAA8C,MAAM,SAAAroB,QAAAC,MAAA,2CAAAswB,EAAAqL,IAC9R,MADqW,sBAAApL,EAAA3qB,YAAA2qB,GAAA68B,SAAgD,sBAAA78B,EAAA3qB,YAAA2qB,GAAA48B,SAAgD,EAAA58B,EAAAmgC,UAAAngC,EAAAogC,aAAA,GAAgCnyD,EAAAoyD,YAAAt0C,GACre9d,EAAAmyC,MAAApgB,QAAuBnZ,EAAA80C,OAAAQ,UAAuBmE,YAAAj3C,IAAA,SAAAnJ,EAAAE,GAA8BlG,KAAAomD,SAAAvmD,KAAAmG,EAAAE,IAAwBiW,IAAA,SAAAnW,GAAiB,OAAAE,GAAAlG,KAAAomD,SAAAryD,EAAA,EAAAuoB,EAAApW,EAAA1P,OAAuCzC,EAAAuoB,EAAIvoB,GAAA,GAAM,GAAAiD,GAAAkP,EAAAnS,EAAA,EAAa,IAAAmS,EAAAnS,GAAAgR,KAAAiB,GAAA,MAAAhP,GAAyB,cAAc2V,EAAAw0C,UAAA,SAAAn7C,GAA4BhG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,uBACtPjlC,OAAAI,OAAA1P,EAAAw0C,UAAAz5C,WAAyClT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,SAAAtc,KAAA01C,OAAA1vC,EAAAhG,KAAA01C,KAAA1vC,EAAoC,IAAAhP,GAAAgJ,KAAAsJ,EAAAqD,EAAA20C,MAAAnlC,IAAAnW,EAAgC,aAAAsD,EAAA,MAAApD,IAAAjK,WAAA,WAA8CiK,EAAAoD,IAAK,GAAAA,CAAM,IAAAib,GAAA,GAAA8hC,eAC+J,OADtI9hC,GAAA+hC,iBAAA,cAAiC/hC,EAAAgiC,KAAA,MAAAvgD,GAAA,GAAmBue,EAAA0c,iBAAA,gBAAAltC,GAAsC,GAAAuV,GAAAvV,EAAAutC,OAAAklB,QAAwB75C,GAAA20C,MAAAnyC,IAAAnJ,EAAAsD,GAAqB,MAAAtJ,KAAAymD,QAAAvgD,KAAAoD,GAAAtS,EAAAiqD,QAAAyF,QAAA1gD,IAAA,IAAAhG,KAAAymD,QAAAnxD,QAAA0vB,KAAA,4CAAA9e,KAAAoD,GAAAtS,EAAAiqD,QAAAyF,QAAA1gD,KAC7VsW,KAAAvoB,GAAAiD,EAAAiqD,QAAA0F,UAAA3gD,MAAiC,GAAK,SAAAjS,GAAAwwB,EAAA0c,iBAAA,oBAAAj7B,GAAsDjS,EAAAiS,KAAK,GAAKue,EAAA0c,iBAAA,iBAAA/6B,GAAuCoW,KAAApW,GAAQlP,EAAAiqD,QAAA0F,UAAA3gD,KAAuB,GAAK,SAAAhG,KAAA4mD,eAAAriC,EAAAqiC,aAAA5mD,KAAA4mD,cAA+D,SAAA5mD,KAAA6mD,kBAAAtiC,EAAAsiC,gBAAA7mD,KAAA6mD,iBAAwEtiC,EAAAuiC,KAAA,MAAa9vD,EAAAiqD,QAAA8F,UAAA/gD,GAAuBue,GAASyiC,QAAA,SAAAhhD,GAAiC,MAAZhG,MAAA01C,KAAA1vC,EAAYhG,MAAYohD,gBAAA,SAAAp7C,GAAiD,MAApBhG,MAAA4mD,aAAA5gD,EAAoBhG,MAAYinD,mBAAA,SAAAjhD,GAC7c,MAD6ehG,MAAA6mD,gBAC/e7gD,EAAEhG,QAAe2M,EAAAu6C,WAAA,SAAAlhD,GAA6BhG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,uBAAuDjlC,OAAAI,OAAA1P,EAAAu6C,WAAAx/C,WAA0ClT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,GAAAtlB,GAAAgJ,IAAW,IAAA2M,GAAAw0C,UAAAnhD,KAAAihD,SAAAzsD,KAAAwR,EAAA,SAAAA,GAAuD,GAAAjS,EAAM,KAAIA,EAAAwQ,KAAA2hC,MAAAlgC,GAAgB,MAAAsW,GAAShnB,QAAA0vB,KAAA,yFAAAjxB,EAAAwQ,KAAA2hC,MAAAlgC,EAAAmhD,UAAA,GAAAnhD,EAAAxP,OAAA,IAA+IwP,EAAAhP,EAAAkvC,MAAAnyC,GAAamS,KAAAF,IAAQjS,EAAAuoB,IAAM4pB,MAAA,SAAAlgC,GAAmB,UAAA2G,GAAAy6C,KAAAphD,MACxc2G,EAAA06C,YAAA,SAAArhD,GAA8BhG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,uBAC9BjlC,OAAAI,OAAA1P,EAAA06C,YAAA3/C,WAA2ClT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,GAAAtlB,GAAAsL,SAAAglD,gBAAA,qCAA6H,IAAxDtwD,EAAAuwD,OAAA,WAAoBnkD,IAAAE,gBAAAtM,EAAAwwD,KAA2BthD,KAAAlP,IAAS,IAAAgP,EAAA7D,QAAA,SAAAnL,EAAAwwD,IAAAxhD,MAAkC,CAAK,GAAAsD,GAAA,GAAAqD,GAAAw0C,UAAAnhD,KAAAihD,QAAwC33C,GAAA09C,QAAAhnD,KAAA01C,MAAqBpsC,EAAA83C,gBAAA,QAA0B93C,EAAA9U,KAAAwR,EAAA,SAAAA,GAAqBhP,EAAAwwD,IAAApkD,IAAAC,gBAAA2C,IAA6BjS,EAAAuoB,GAAM,MAAAtlB,IAASkrD,eAAA,SAAAl8C,GAA+C,MAAnBhG,MAAA6hD,YAAA77C,EAAmBhG,MAAYgnD,QAAA,SAAAhhD,GAAiC,MAAZhG,MAAA01C,KAAA1vC,EAAYhG,QAC1d2M,EAAA86C,WAAA,SAAAzhD,GAA6B,iBAAAA,KAAA1Q,QAAA0vB,KAAA,6EAAAhf,EAAA,QAA2HhG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,sBAAsDlhD,KAAA6mD,iBAAA,GAC9M5qC,OAAAI,OAAA1P,EAAA86C,WAAA//C,WAA0ClT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,GAAAtlB,GAAAgJ,KAAAsJ,EAAAtJ,KAAA0nD,aAAA,gBAAA1nD,MAAA0nD,YAAA1nD,KAAA0nD,YAAA/6C,EAAA80C,OAAA/5C,UAAAo6C,eAAA97C,GAAAue,EAAA,GAAA5X,GAAAw0C,UAAAnhD,KAAAihD,QAAgK18B,GAAA0iC,mBAAAjnD,KAAA6mD,iBAA2CtiC,EAAA/vB,KAAAwR,EAAA,SAAAjS,GAAqBA,EAAAwQ,KAAA2hC,MAAAnyC,EAAgB,IAAAuoB,GAAAvoB,EAAA2xC,QAAiB,aAAAppB,QAAAnhB,KAAA,SAAAmhB,GAAA,CAAsC,cAAAA,EAAApX,cAA0H,WAA3F5P,SAAAC,MAAA,qBAAAyQ,EAAA,qDAAkG,cACzesW,EAAApX,cAA2G,WAA1F5P,SAAAC,MAAA,qBAAAyQ,EAAA,qDAAkGjS,EAAAiD,EAAAkvC,MAAAnyC,EAAAuV,GAAepD,EAAAnS,EAAAmjC,SAAAnjC,EAAA6xC,YAA0B7xC,EAAAuoB,IAAMqrC,eAAA,SAAA3hD,GAA4BhG,KAAA0nD,YAAA1hD,GAAmBkgC,MAAA,SAAAlgC,EAAAE,GAAqB,GAAAnS,GAAA,GAAA4Y,GAAA4M,SAAA+C,EAAA,SAAAtW,EAAAk0B,MAAA,EAAAl0B,EAAAk0B,MAAA,CAOuB,OAPiC,UAAAh0B,GAAa,GAAAoW,GAAAiI,EAAA1S,EAAAiU,EAAAD,EAAAqL,EAAAl9B,EAAAF,EAAAq9B,EAAArf,EAAA8T,EAAA8S,EAAAM,EAAAC,EAAAjzB,EAAAkjC,KAAwChY,GAAAlrB,EAAAwT,QAAa,IAAA0f,GAAAlzB,EAAAolC,QAAAx5B,EAAA5L,EAAAijC,OAAA9P,EAAA,CAA+B,aAAAnzB,EAAAqlC,IAAA,CAAmB,IAAA/uB,EAAA,EAAQA,EAAAtW,EAAAqlC,IAAA70C,OAAe8lB,IAAAtW,EAAAqlC,IAAA/uB,GAAA9lB,QAAA2iC,GAAyB,KAAA7c,EAAA,EAAQA,EAAA6c,EAAI7c,IAAAvoB,EAAAo1C,cAAA7sB,MAA8B,IAAJwJ,EAAA,EAAID,EAAAqL,EAAA16B,OAAesvB,EAC3fD,GAAEvJ,EAAA,GAAA3P,GAAA8G,QAAA6I,EAAAvd,EAAAmyB,EAAApL,KAAA5f,EAAAoW,EAAAtJ,EAAAke,EAAApL,KAAA5f,EAAAoW,EAAArJ,EAAAie,EAAApL,KAAA5f,EAAAnS,EAAAylB,SAAA3Z,KAAAyc,EAAmF,KAAJwJ,EAAA,EAAID,EAAAoT,EAAAziC,OAAesvB,EAAAD,GAAI,GAAA3f,EAAA+yB,EAAAnT,KAAAqL,EAAA,EAAAjrB,EAAA2L,EAAA,EAAA3L,EAAAoW,EAAA,EAAApW,EAAAlS,EAAA,GAAAkS,EAAA4L,EAAA,GAAA5L,EAAAgrB,EAAA,GAAAhrB,KAAA,IAAAirB,EAAA,CAA0O,GAA5KA,EAAA,GAAAxkB,GAAAw5B,MAAkBhV,EAAAnrB,EAAAizB,EAAAnT,GAASqL,EAAAjrB,EAAA+yB,EAAAnT,EAAA,GAAWqL,EAAAp9B,EAAAklC,EAAAnT,EAAA,GAAWF,EAAA,GAAAjZ,GAAAw5B,MAAkBvgB,EAAA5f,EAAAizB,EAAAnT,EAAA,GAAWF,EAAA1f,EAAA+yB,EAAAnT,EAAA,GAAWF,EAAA7xB,EAAAklC,EAAAnT,EAAA,GAAWA,GAAA,EAAKjU,MAAAonB,EAAAnT,KAAAqL,EAAAmV,cAAAz0B,EAAA+T,EAAA0gB,cAAAz0B,GAAkDA,EAAA9d,EAAAm1C,MAAA1yC,OAAiB8lB,EAAA,IAAAA,EAAA,EAAaA,EAAA6c,EAAI7c,IAAA,IAAAoc,EAAA1yB,EAAAqlC,IAAA/uB,GAAAvoB,EAAAo1C,cAAA7sB,GAAAzK,MAAA9d,EAAAo1C,cAAA7sB,GAAAzK,EAAA,MAAA0S,EAAA,EAA2E,EAAAA,EAAIA,IAAAzwB,EAAAmlC,EAAAnT,KAAAkT,EAAAN,EAAA,EAAA5kC,KAAA4kC,EAAA,EAAA5kC,EAAA,GAAAklC,EAAA,GAAArsB,GAAAykB,QAAA4H,EAAAllC,GAAA,IAAAywB,GAAAxwB,EAAAo1C,cAAA7sB,GAAAzK,GAAAhS,KAAAm5B,GAClb,IAAAzU,GAAAxwB,EAAAo1C,cAAA7sB,GAAAzK,EAAA,GAAAhS,KAAAm5B,EAAgH,IAAzEhlC,MAAA,EAAAilC,EAAAnT,KAAAqL,EAAAoG,OAAAlmB,IAAA6nB,EAAAllC,KAAAklC,EAAAllC,KAAAklC,EAAAllC,IAAA4xB,EAAA2R,OAAA/S,KAAA2M,EAAAoG,SAAyEzlB,EAAA,IAAAwK,EAAA,EAAa,EAAAA,EAAIA,IAAAtoB,EAAA,EAAAilC,EAAAnT,KAAAhU,EAAA,GAAAnF,GAAA8G,QAAAylB,EAAAllC,KAAAklC,EAAAllC,KAAAklC,EAAAllC,IAAA,IAAAsoB,GAAA6U,EAAAiV,cAAAvmC,KAAAiS,GAAA,IAAAwK,GAAAsJ,EAAAwgB,cAAAvmC,KAAAiS,EAA8K,IAAzDof,MAAA+H,EAAAnT,KAAAoL,EAAAtf,EAAAsf,GAAAC,EAAAjgB,MAAAuT,OAAAyM,GAAAtL,EAAA1U,MAAAuT,OAAAyM,IAAyDhrB,EAAA,IAAAoW,EAAA,EAAa,EAAAA,EAAIA,IAAA4U,EAAA+H,EAAAnT,KAAAoL,EAAAtf,EAAAsf,GAAA,IAAA5U,GAAA6U,EAAAkV,aAAAxmC,KAAA,GAAA8M,GAAA0X,MAAA6M,IAAA,IAAA5U,GAAAsJ,EAAAygB,aAAAxmC,KAAA,GAAA8M,GAAA0X,MAAA6M,GAAkHn9B,GAAAm1C,MAAArpC,KAAAsxB,GAAgBp9B,EAAAm1C,MAAArpC,KAAA+lB,OAAgB,CAC/Y,GADoZuL,EAAA,GAAAxkB,GAAAw5B,MAAkBhV,EAAAnrB,EAAAizB,EAAAnT,KAAWqL,EAAAjrB,EACpf+yB,EAAAnT,KAAOqL,EAAAp9B,EAAAklC,EAAAnT,KAAWjU,MAAAonB,EAAAnT,KAAAqL,EAAAmV,cAAAz0B,GAAgCA,EAAA9d,EAAAm1C,MAAA1yC,OAAiB8lB,EAAA,IAAAA,EAAA,EAAaA,EAAA6c,EAAI7c,IAAA,IAAAoc,EAAA1yB,EAAAqlC,IAAA/uB,GAAAvoB,EAAAo1C,cAAA7sB,GAAAzK,MAAA0S,EAAA,EAAgD,EAAAA,EAAIA,IAAAzwB,EAAAmlC,EAAAnT,KAAAkT,EAAAN,EAAA,EAAA5kC,KAAA4kC,EAAA,EAAA5kC,EAAA,GAAAklC,EAAA,GAAArsB,GAAAykB,QAAA4H,EAAAllC,GAAAC,EAAAo1C,cAAA7sB,GAAAzK,GAAAhS,KAAAm5B,EAAyI,IAAjDhlC,MAAA,EAAAilC,EAAAnT,KAAAqL,EAAAoG,OAAAlmB,IAAA6nB,EAAAllC,KAAAklC,EAAAllC,KAAAklC,EAAAllC,KAAiD8d,EAAA,IAAAwK,EAAA,EAAa,EAAAA,EAAIA,IAAAtoB,EAAA,EAAAilC,EAAAnT,KAAAhU,EAAA,GAAAnF,GAAA8G,QAAAylB,EAAAllC,KAAAklC,EAAAllC,KAAAklC,EAAAllC,IAAAm9B,EAAAiV,cAAAvmC,KAAAiS,EAAkH,IAAnCof,MAAA+H,EAAAnT,KAAAqL,EAAAjgB,MAAAuT,OAAA7S,EAAAsf,KAAmChrB,EAAA,IAAAoW,EAAA,EAAa,EAAAA,EAAIA,IAAA4U,EAAA+H,EAAAnT,KAAAqL,EAAAkV,aAAAxmC,KAAA,GAAA8M,GAAA0X,MAAAzS,EAAAsf,IAAwDn9B,GAAAm1C,MAAArpC,KAAAsxB,KAAiB7U,GAAK,WAAY,GAAApW,GAC/f,SAAAF,EAAA4hD,oBAAA5hD,EAAA4hD,oBAAA,CAAuD,IAAA5hD,EAAAsjC,YAAA,OAAAhtB,GAAA,EAAAiI,EAAAve,EAAAsjC,YAAA9yC,OAAoD8lB,EAAAiI,EAAIjI,GAAApW,EAAAnS,EAAAu1C,YAAAzpC,KAAA,GAAA8M,GAAA4nB,QAAAvuB,EAAAsjC,YAAAhtB,GAAA,EAAApW,EAAAF,EAAAsjC,YAAAhtB,EAAA,OAAApW,EAAAF,EAAAsjC,YAAAhtB,EAAA,OAAApW,EAAAF,EAAAsjC,YAAAhtB,EAAA,MAAwI,IAAAtW,EAAAujC,YAAA,IAAAjtB,EAAA,EAAAiI,EAAAve,EAAAujC,YAAA/yC,OAAgD8lB,EAAAiI,EAAIjI,GAAApW,EAAAnS,EAAAw1C,YAAA1pC,KAAA,GAAA8M,GAAA4nB,QAAAvuB,EAAAujC,YAAAjtB,GAAA,EAAApW,EAAAF,EAAAujC,YAAAjtB,EAAA,OAAApW,EAAAF,EAAAujC,YAAAjtB,EAAA,OAAApW,EAAAF,EAAAujC,YAAAjtB,EAAA,MAAwIvoB,GAAA2kD,MAAA1yC,EAAA0yC,MAAgB3kD,EAAA2kD,OAAA,EAAA3kD,EAAA2kD,MAAAliD,SAAAzC,EAAAu1C,YAAA9yC,SACnczC,EAAAw1C,YAAA/yC,QAAAzC,EAAAw1C,YAAA/yC,SAAAzC,EAAAylB,SAAAhjB,SAAAlB,QAAA0vB,KAAA,sCAAAjxB,EAAAylB,SAAAhjB,OAAA,mBAAAzC,EAAAw1C,YAAA/yC,OAAA,uBAAAzC,EAAAu1C,YAAA9yC,OAAA,sBAAiP,SAAA0P,GAAa,YAAAF,EAAAojC,aAAA,OAAA9sB,GAAA,EAAAiI,EAAAve,EAAAojC,aAAA5yC,OAA+D8lB,EAAAiI,EAAIjI,IAAA,CAAKvoB,EAAAq1C,aAAA9sB,MAAqBvoB,EAAAq1C,aAAA9sB,GAAAzlB,KAAAmP,EAAAojC,aAAA9sB,GAAAzlB,KAA8C9C,EAAAq1C,aAAA9sB,GAAA9C,WAA8B,QAAA3H,GAAA9d,EAAAq1C,aAAA9sB,GAAA9C,SAAAsM,EAAA9f,EAAAojC,aAAA9sB,GAAA9C,SAAAqM,EAAA,EAAAqL,EAAApL,EAAAtvB,OAAiFqvB,EACxfqL,EAAErL,GAAA,GAAM,GAAA7xB,GAAA,GAAA2Y,GAAA8G,OAAwBzf,GAAA+K,EAAA+mB,EAAAD,GAAA3f,EAAWlS,EAAAgf,EAAA8S,EAAAD,EAAA,GAAA3f,EAAalS,EAAAif,EAAA6S,EAAAD,EAAA,GAAA3f,EAAa2L,EAAAhS,KAAA7L,IAAW,YAAAgS,EAAA6hD,aAAA,EAAA7hD,EAAA6hD,YAAArxD,OAAA,IAAAlB,QAAA0vB,KAAA,mFAAA9e,EAAAnS,EAAAm1C,MAAAr3B,EAAA7L,EAAA6hD,YAAA,GAAA5e,OAAA3sB,EAAA,EAAAiI,EAAAre,EAAA1P,OAAyM8lB,EAAAiI,EAAIjI,IAAApW,EAAAoW,GAAApL,MAAAoV,UAAAzU,EAAA,EAAAyK,IAAgCA,GAAK,WAAY,GAAApW,MAAAoW,IAAc,UAAAtW,EAAA/K,WAAAqhB,EAAAzc,KAAAmG,EAAA/K,WAA0C,SAAA+K,EAAAksC,aAAAlsC,EAAAksC,WAAA17C,OAAA8lB,IAAA3R,OAAA3E,EAAAksC,YAAA51B,EAAAzc,KAAAmG,EAAAksC,YAA2F,QAAA3tB,GAAA,EAAYA,EAAAjI,EAAA9lB,OAAW+tB,IAAA,CAAK,GAAA1S,GAC7flF,EAAA0kC,cAAAe,eAAA91B,EAAAiI,GAAAxwB,EAAA2kD,MAAiD7mC,IAAA3L,EAAArG,KAAAgS,GAAa9d,EAAAq1C,eAAA9sB,EAAA3P,EAAA0kC,cAAAc,oCAAAp+C,EAAAq1C,aAAA,IAAAljC,IAAAyE,OAAA2R,IAA6G,EAAApW,EAAA1P,SAAAzC,EAAAm+C,WAAAhsC,MAAiCnS,EAAAu2C,qBAAuBv2C,EAAAmoC,wBAA0B,SAAAl2B,EAAA4/B,WAAA,IAAA5/B,EAAA4/B,UAAApvC,QAAuD0gC,SAAAnjC,IAAYuoB,EAAA3P,EAAA80C,OAAA/5C,UAAAq6C,cAAA/7C,EAAA4/B,UAAA1/B,EAAAlG,KAAA6hD,cAA8E3qB,SAAAnjC,EAAA6xC,UAAAtpB,OAC9Y3P,EAAAm7C,eAAA,SAAA9hD,EAAAE,EAAAnS,GAAqC,GAAAuoB,GAAAtc,KAAAhJ,GAAA,EAAAsS,EAAA,EAAAib,EAAA,CAAwBvkB,MAAA+nD,QAAA,OAAoB/nD,KAAAgoD,OAAAhiD,EAAchG,KAAAioD,WAAA/hD,EAAkBlG,KAAAkoD,QAAAn0D,EAAeiM,KAAA+mD,UAAA,SAAA/gD,GAA2Bue,KAAI,IAAAvtB,GAAA,SAAAslB,EAAAyrC,SAAAzrC,EAAAyrC,QAAA/hD,EAAAsD,EAAAib,GAA+CvtB,GAAA,GAAMgJ,KAAA0mD,QAAA,SAAA1gD,GAAyBsD,IAAI,SAAAgT,EAAA2rC,YAAA3rC,EAAA2rC,WAAAjiD,EAAAsD,EAAAib,GAA6Cjb,IAAAib,IAAAvtB,GAAA,WAAAslB,EAAA0rC,SAAA1rC,EAAA0rC,UAA+ChoD,KAAA2mD,UAAA,SAAA3gD,GAA2B,SAAAsW,EAAA4rC,SAAA5rC,EAAA4rC,QAAAliD,KAAqC2G,EAAAu0C,sBAAA,GAAAv0C,GAAAm7C,eAC7Yn7C,EAAAw7C,qBAAA,SAAAniD,GAAuChG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,uBACvCjlC,OAAAI,OAAA1P,EAAAw7C,qBAAAzgD,WAAoDlT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,GAAAtlB,GAAAgJ,IAAW,IAAA2M,GAAAw0C,UAAAnqD,EAAAiqD,SAAAzsD,KAAAwR,EAAA,SAAAA,GAAoDE,EAAAlP,EAAAkvC,MAAA3hC,KAAA2hC,MAAAlgC,MAA0BjS,EAAAuoB,IAAM4pB,MAAA,SAAAlgC,GAAmB,GAAAE,GAAA,GAAAyG,GAAAwqB,eAAApjC,EAAAiS,EAAA/Q,KAAA4O,MAAAyY,GAAiDmrB,oBAAAE,sBAAAE,oCAAAE,sBAAAE,wBAAAE,sBAAAE,wBAAAzQ,0BAAA4Q,0BAA+N,UAAAz0C,MAAA,GAAAuoB,GAAAvoB,EAAAoH,MAAApH,EAAA8+B,OAAA3sB,EAAA6lC,SAAA,GAAAp/B,GAAA45B,gBAAAxyC,EAC7c,IAAK,IAAAuV,GAAAtS,EAAAgP,EAAA/Q,KAAAmiC,UAA0B,KAAA9tB,IAAAtS,GAAA,CAAY,GAAAutB,GAAAvtB,EAAAsS,GAAAvV,EAAA,GAAAuoB,GAAAiI,EAAAppB,MAAAopB,EAAAsO,MAAoC3sB,GAAA8lC,aAAA1iC,EAAA,GAAAqD,GAAA45B,gBAAAxyC,EAAAwwB,EAAAqO,SAAArO,EAAAoiB,aAAyH,GAAlDrqB,EAAAtW,EAAA/Q,KAAAo1C,QAAArkC,EAAA/Q,KAAAmzD,WAAApiD,EAAA/Q,KAAAozD,QAAkD,SAAA/rC,EAAA,IAAAhT,EAAA,EAAAvV,EAAAuoB,EAAA9lB,OAAiC8S,IAAAvV,IAAMuV,EAAAtS,EAAAslB,EAAAhT,GAAApD,EAAAimC,SAAAn1C,EAAA6c,MAAA7c,EAAA0vC,MAAA1vC,EAAAsvC,cAAwM,OAAjJtgC,KAAA/Q,KAAAgnC,eAAwB,SAAAj2B,IAAAsW,EAAA,GAAA3P,GAAA8G,QAAA,SAAAzN,EAAAhL,QAAAshB,EAAAgK,UAAAtgB,EAAAhL,QAAAkL,EAAA+1B,eAAA,GAAAtvB,GAAA+qB,OAAApb,EAAAtW,EAAAmuB,SAAyHjuB,KACvbyG,EAAA61C,eAAA,SAAAx8C,GAAiChG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,sBAAsDlhD,KAAA6lC,aACvF5pB,OAAAI,OAAA1P,EAAA61C,eAAA96C,WAA8ClT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,GAAAtlB,GAAAgJ,IAAW,IAAA2M,GAAAw0C,UAAAnqD,EAAAiqD,SAAAzsD,KAAAwR,EAAA,SAAAA,GAAoDE,EAAAlP,EAAAkvC,MAAA3hC,KAAA2hC,MAAAlgC,MAA0BjS,EAAAuoB,IAAM6pC,YAAA,SAAAngD,GAAyBhG,KAAA6lC,SAAA7/B,GAAgBsiD,WAAA,SAAAtiD,GAAwB,GAAAE,GAAAlG,KAAA6lC,QAA6F,OAAzE,UAAA3/B,EAAAF,IAAA1Q,QAAA0vB,KAAA,0CAAAhf,GAAyEE,EAAAF,IAAYkgC,MAAA,SAAAlgC,GAAmB,GAAAE,GAAA,GAAAyG,GAAA3G,EAAA7K,KAGW,IAHa,SAAA6K,EAAA68B,OAAA38B,EAAA28B,KAAA78B,EAAA68B,MAAiC,SAAA78B,EAAAnP,OAAAqP,EAAArP,KAAAmP,EAAAnP,MAAiC,SAAAmP,EAAAkL,OAAAhL,EAAAgL,MAAAuT,OAAAze,EAAAkL,OAA0C,SAAAlL,EAAAuiD,YACreriD,EAAAqiD,UAAAviD,EAAAuiD,WAA0B,SAAAviD,EAAAwiD,YAAAtiD,EAAAsiD,UAAAxiD,EAAAwiD,WAAgD,SAAAxiD,EAAA28C,UAAAz8C,EAAAy8C,SAAAl+B,OAAAze,EAAA28C,UAAmD,SAAA38C,EAAA08C,UAAAx8C,EAAAw8C,SAAAj+B,OAAAze,EAAA08C,UAAmD,SAAA18C,EAAA48C,YAAA18C,EAAA08C,UAAA58C,EAAA48C,WAAgD,SAAA58C,EAAAyiD,WAAAviD,EAAAuiD,SAAAziD,EAAAyiD,UAA6C,SAAAziD,EAAA0iD,eAAAxiD,EAAAwiD,aAAA1iD,EAAA0iD,cAAyD,SAAA1iD,EAAA2iD,iBAAAziD,EAAAyiD,eAAA3iD,EAAA2iD,gBAA+D,SAAA3iD,EAAAqgC,eAAAngC,EAAAmgC,aAAArgC,EAAAqgC,cAAyD,SAAArgC,EAAA4iD,UAAA1iD,EAAA0iD,QAAA5iD,EAAA4iD,SAA0C,SAAA5iD,EAAAy8C,WACxev8C,EAAAu8C,SAAAz8C,EAAAy8C,UAAwB,SAAAz8C,EAAAggD,OAAA9/C,EAAA8/C,KAAAhgD,EAAAggD,MAAiC,SAAAhgD,EAAAigD,UAAA//C,EAAA+/C,QAAAjgD,EAAAigD,SAA0C,SAAAjgD,EAAAkgD,cAAAhgD,EAAAggD,YAAAlgD,EAAAkgD,aAAsD,SAAAlgD,EAAA6iD,YAAA3iD,EAAA2iD,UAAA7iD,EAAA6iD,WAAgD,SAAA7iD,EAAA8iD,YAAA5iD,EAAA4iD,UAAA9iD,EAAA8iD,WAAgD,SAAA9iD,EAAA+iD,aAAA7iD,EAAA6iD,WAAA/iD,EAAA+iD,YAAmD,SAAA/iD,EAAAgjD,aAAA9iD,EAAA8iD,WAAAhjD,EAAAgjD,YAAmD,SAAAhjD,EAAAijD,YAAA/iD,EAAA+iD,UAAAjjD,EAAAijD,WAAgD,SAAAjjD,EAAAkjD,qBAAAhjD,EAAAgjD,mBAAAljD,EAAAkjD,oBAA2E,SAAAljD,EAAAsK,OAAApK,EAAAoK,KAAAtK,EAAAsK,MAC1d,SAAAtK,EAAAmjD,kBAAAjjD,EAAAijD,gBAAAnjD,EAAAmjD,iBAAkE,SAAAnjD,EAAAgF,MAAA9E,EAAA8E,IAAAhL,KAAAsoD,WAAAtiD,EAAAgF,MAA+C,SAAAhF,EAAA2/C,WAAAz/C,EAAAy/C,SAAA3lD,KAAAsoD,WAAAtiD,EAAA2/C,UAAAz/C,EAAAggD,aAAA,GAA+E,SAAAlgD,EAAAg+C,UAAA99C,EAAA89C,QAAAhkD,KAAAsoD,WAAAtiD,EAAAg+C,UAA2D,SAAAh+C,EAAAq+C,YAAAn+C,EAAAm+C,UAAAr+C,EAAAq+C,WAAgD,SAAAr+C,EAAAs+C,YAAAp+C,EAAAo+C,UAAAtkD,KAAAsoD,WAAAtiD,EAAAs+C,YAAiE,SAAAt+C,EAAA2+C,YAAA,CAA2B,GAAA5wD,GAAAiS,EAAA2+C,aAAoB,IAAA16C,MAAA04B,QAAA5uC,cAAiCmS,EAAAy+C,aAAA,GAAAh4C,GAAAykB,SAAA9K,UAAAvyB,GAEA,GAF+C,SAAAiS,EAAAojD,kBAC3eljD,EAAAkjD,gBAAAppD,KAAAsoD,WAAAtiD,EAAAojD,kBAAuD,SAAApjD,EAAAqjD,oBAAAnjD,EAAAmjD,kBAAArjD,EAAAqjD,mBAAwE,SAAArjD,EAAAsjD,mBAAApjD,EAAAojD,iBAAAtjD,EAAAsjD,kBAAqE,SAAAtjD,EAAAs/C,eAAAp/C,EAAAo/C,aAAAtlD,KAAAsoD,WAAAtiD,EAAAs/C,eAA0E,SAAAt/C,EAAAi/C,eAAA/+C,EAAA++C,aAAAjlD,KAAAsoD,WAAAtiD,EAAAi/C,eAA0E,SAAAj/C,EAAAi9C,cAAA/8C,EAAA+8C,YAAAjjD,KAAAsoD,WAAAtiD,EAAAi9C,cAAuE,SAAAj9C,EAAAujD,oBAAArjD,EAAAqjD,kBAAAvjD,EAAAujD,mBAAwE,SAAAvjD,EAAA4+C,cACve1+C,EAAA0+C,YAAA5kD,KAAAsoD,WAAAtiD,EAAA4+C,cAA+C,SAAA5+C,EAAAwjD,SAAAtjD,EAAAsjD,OAAAxpD,KAAAsoD,WAAAtiD,EAAAwjD,QAAAtjD,EAAAujD,QAAA98C,EAAAgT,mBAA0F,SAAA3Z,EAAA0jD,eAAAxjD,EAAAwjD,aAAA1jD,EAAA0jD,cAAyD,SAAA1jD,EAAAs9C,WAAAp9C,EAAAo9C,SAAAtjD,KAAAsoD,WAAAtiD,EAAAs9C,WAA8D,SAAAt9C,EAAA2jD,oBAAAzjD,EAAAyjD,kBAAA3jD,EAAA2jD,mBAAwE,SAAA3jD,EAAA29C,QAAAz9C,EAAAy9C,MAAA3jD,KAAAsoD,WAAAtiD,EAAA29C,QAAqD,SAAA39C,EAAA4jD,iBAAA1jD,EAAA0jD,eAAA5jD,EAAA4jD,gBAA+D,SAAA5jD,EAAA4/B,UAAA,OAAA7xC,GAAA,EAAAuoB,EAAAtW,EAAA4/B,UAAApvC,OAAyDzC,EACrfuoB,EAAEvoB,IAAAmS,EAAA0/B,UAAA/lC,KAAAG,KAAAkmC,MAAAlgC,EAAA4/B,UAAA7xC,IAAiD,OAAAmS,MAAYyG,EAAAk9C,aAAA,SAAA7jD,GAA+BhG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,sBAAsDlhD,KAAA0nD,YAAA,IACpJzrC,OAAAI,OAAA1P,EAAAk9C,aAAAniD,WAA4ClT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,KAAAtc,KAAA0nD,cAAA1nD,KAAA0nD,YAAA1hD,EAAAmhD,UAAA,EAAAnhD,EAAA8jD,YAAA,QAA8E,IAAA9yD,GAAAgJ,IAAW,IAAA2M,GAAAw0C,UAAAnqD,EAAAiqD,SAAAzsD,KAAAwR,EAAA,SAAAA,GAAoDhP,EAAAkvC,MAAA3hC,KAAA2hC,MAAAlgC,GAAAE,IAAyBnS,EAAAuoB,IAAMqrC,eAAA,SAAA3hD,GAA4BhG,KAAA0nD,YAAA1hD,GAAmBk8C,eAAA,SAAAl8C,GAA4BhG,KAAA6hD,YAAA77C,GAAmBkgC,MAAA,SAAAlgC,EAAAE,GAAqB,GAAAnS,GAAAiM,KAAA+pD,gBAAA/jD,EAAA2/B,YAAArpB,EAAAtc,KAAAgqD,YAAAhkD,EAAA8/B,OAAA,WAAgF,SAAA5/B,KAAAlP,KAAiBslB,EAAAtc,KAAAiqD,cAAAjkD,EAAA6/B,SAAAvpB,KAAAtc,KAAAkqD,eAAAlkD,EAAA4/B,UACnctpB,GAAAtlB,EAAAgJ,KAAAmqD,YAAAnkD,EAAAmQ,OAAApiB,EAAAuoB,EAA6J,OAAzHtW,GAAAksC,aAAAl7C,EAAAk7C,WAAAlyC,KAAAoqD,gBAAApkD,EAAAksC,aAAgE,SAAAlsC,EAAA8/B,QAAA,IAAA9/B,EAAA8/B,OAAAtvC,QAAA,SAAA0P,KAAAlP,GAAyDA,GAAS+yD,gBAAA,SAAA/jD,GAA6B,GAAAE,KAAS,aAAAF,EAAA,OAAAjS,GAAA,GAAA4Y,GAAA86C,WAAAnrC,EAAA,GAAA3P,GAAAw7C,qBAAAnxD,EAAA,EAAAsS,EAAAtD,EAAAxP,OAA6FQ,EAAAsS,EAAItS,IAAA,CAAK,GAAAutB,GAAA1S,EAAA7L,EAAAhP,EAAa,QAAA6a,EAAA1W,MAAe,8CAAAopB,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAA1T,MAAA0T,EAAAzT,OAAAyT,EAAAw4C,cAAAx4C,EAAAy4C,eAAuH,MAAM,8DAAA/lC,EAC3c,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAA1T,MAAA0T,EAAAzT,OAAAyT,EAAA04C,MAAA14C,EAAAw4C,cAAAx4C,EAAAy4C,eAAAz4C,EAAA24C,cAA6F,MAAM,iDAAAjmC,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAAsiB,OAAAtiB,EAAA44C,SAAA54C,EAAA64C,WAAA74C,EAAA84C,YAAsH,MAAM,qDAAApmC,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAA+4C,UAAA/4C,EAAAg5C,aAAAh5C,EAAAzT,OAAAyT,EAAAi5C,eAAAj5C,EAAAy4C,eAAAz4C,EAAAk5C,UAAAl5C,EAAA64C,WAAA74C,EAAA84C,YAAwL,MAAM,6CAAApmC,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAAsiB,OAAAtiB,EAAAzT,OAAAyT,EAAAi5C,eAC7Zj5C,EAAAy4C,eAAAz4C,EAAAk5C,UAAAl5C,EAAA64C,WAAA74C,EAAA84C,YAAyD,MAAM,iDAAApmC,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAAsiB,OAAAtiB,EAAAw4C,cAAAx4C,EAAAy4C,eAAAz4C,EAAAm5C,SAAAn5C,EAAAo5C,UAAAp5C,EAAA64C,WAAA74C,EAAA84C,YAAmK,MAAM,yGAAApmC,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAAsiB,OAAAtiB,EAAAq5C,OAAmJ,MAAM,6CAAA3mC,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAAs5C,YAAAt5C,EAAAu5C,YAAAv5C,EAAAw5C,cAAAx5C,EAAAy5C,YACjYz5C,EAAA64C,WAAA74C,EAAA84C,YAA4B,MAAM,+CAAApmC,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAAsiB,OAAAtiB,EAAA05C,KAAA15C,EAAAi5C,eAAAj5C,EAAA25C,gBAAA35C,EAAA45C,IAA8H,MAAM,uDAAAlnC,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAAsiB,OAAAtiB,EAAA05C,KAAA15C,EAAA25C,gBAAA35C,EAAAi5C,eAAAj5C,EAAA7d,EAAA6d,EAAAsf,EAAwI,MAAM,+CAAA5M,EAAA,GAAA5X,GAAAkF,EAAA1W,MAAA0W,EAAAhY,OAAAgY,EAAA44C,SAAA54C,EAAAm5C,SAAAn5C,EAAAo5C,UAAgH,MAAM,sBAAA1mC,EAAAjI,EAAA4pB,MAAAr0B,EAAmC,MAAM,gBAAA0S,EAAAxwB,EAAAmyC,MAAAr0B,EAAA5c,KAAA+K,KAAA0nD,aAAAxwB,QACnd,MAAM,SAAA5hC,QAAA0vB,KAAA,kDAAAnT,EAAA1W,KAAA,IAAmF,UAASopB,EAAAse,KAAAhxB,EAAAgxB,KAAc,SAAAhxB,EAAAhb,OAAA0tB,EAAA1tB,KAAAgb,EAAAhb,MAAiCqP,EAAA2L,EAAAgxB,MAAAte,EAAY,MAAAre,IAASgkD,eAAA,SAAAlkD,EAAAE,GAA8B,GAAAnS,KAAS,aAAAiS,EAAA,CAAe,GAAAsW,GAAA,GAAA3P,GAAA61C,cAA+BlmC,GAAA6pC,YAAAjgD,EAAiB,QAAAlP,GAAA,EAAAsS,EAAAtD,EAAAxP,OAAuBQ,EAAAsS,EAAItS,IAAA,CAAK,GAAAutB,GAAAjI,EAAA4pB,MAAAlgC,EAAAhP,GAAoBjD,GAAAwwB,EAAAse,MAAAte,GAAa,MAAAxwB,IAASq2D,gBAAA,SAAApkD,GAA6B,OAAAE,MAAAnS,EAAA,EAAiBA,EAAAiS,EAAAxP,OAAWzC,IAAA,CAAK,GAAAuoB,GAAA3P,EAAA0kC,cAAAnL,MAAAlgC,EAAAjS,GAAsCmS,GAAArG,KAAAyc,GAAU,MAAApW,IAAS8jD,YAAA,SAAAhkD,EAAAE,GAA2B,QAAAnS,GAAAiS,GACxe,MADsfsW,GAAA2kC,QAAA8F,UAAA/gD,GACtfue,EAAA/vB,KAAAwR,EAAA,WAA2BsW,EAAA2kC,QAAAyF,QAAA1gD,KAAuB,GAAAsW,GAAAtc,KAAAhJ,IAAgB,aAAAgP,GAAA,EAAAA,EAAAxP,OAAA,CAA2B,GAAA8S,GAAA,GAAAqD,GAAAm7C,eAAA5hD,GAAAqe,EAAA,GAAA5X,GAAA06C,YAAA/9C,EAA6Dib,GAAA29B,eAAAliD,KAAA6hD,YAAmC,QAAAv4C,GAAA,EAAAuI,EAAA7L,EAAAxP,OAAuB8S,EAAAuI,EAAIvI,IAAA,CAAK,GAAAwc,GAAA9f,EAAAsD,GAAAuc,EAAA,4BAAA9gB,KAAA+gB,EAAA4lC,KAAA5lC,EAAA4lC,IAAApvC,EAAAorC,YAAA5hC,EAAA4lC,GAA+E10D,GAAA8uB,EAAA+c,MAAA9uC,EAAA8xB,IAAgB,MAAA7uB,IAASizD,cAAA,SAAAjkD,EAAAE,GAA6B,QAAAnS,GAAAiS,GAAc,sBAAAA,MAAgC1Q,QAAA0vB,KAAA,uEAAAhf,GAAuF2G,EAAA3G,IACve,GAAAsW,KAAS,aAAAtW,EAAA,OAAAhP,GAAA,EAAAsS,EAAAtD,EAAAxP,OAAqCQ,EAAAsS,EAAItS,IAAA,CAAK,GAAAutB,GAAAve,EAAAhP,EAAW,UAAAutB,EAAAlU,OAAA/a,QAAA0vB,KAAA,+CAAAT,EAAAse,MAAsF,SAAA38B,EAAAqe,EAAAlU,QAAA/a,QAAA0vB,KAAA,sCAAAT,EAAAlU,MAAiF,IAAAwB,GAAA,GAAAlF,GAAAg/C,QAAAzlD,EAAAqe,EAAAlU,OAAoCwB,GAAA+0B,aAAA,EAAiB/0B,EAAAgxB,KAAAte,EAAAse,KAAc,SAAAte,EAAA1tB,OAAAgb,EAAAhb,KAAA0tB,EAAA1tB,MAAiC,SAAA0tB,EAAAqnC,UAAA/5C,EAAA+5C,QAAA73D,EAAAwwB,EAAAqnC,UAA6C,SAAArnC,EAAA3W,SAAAiE,EAAAjE,OAAA,GAAAjB,GAAAykB,QAAA7M,EAAA3W,OAAA,GAAA2W,EAAA3W,OAAA,KAAyE,SAAA2W,EAAA49B,SAAAtwC,EAAAswC,OAAA,GAAAx1C,GAAAykB,QAAA7M,EAAA49B,OAAA,GACnc59B,EAAA49B,OAAA,KAAc,SAAA59B,EAAAk6B,YAAA5sC,EAAA4sC,UAAA1qD,EAAAwwB,EAAAk6B;AAAmD,SAAAl6B,EAAAi6B,YAAA3sC,EAAA2sC,UAAAzqD,EAAAwwB,EAAAi6B,YAAmD,SAAAj6B,EAAA+9B,aAAAzwC,EAAAywC,WAAA/9B,EAAA+9B,YAAmDr4C,MAAA04B,QAAApe,EAAAsnC,QAAAh6C,EAAAuwC,MAAAruD,EAAAwwB,EAAAsnC,KAAA,IAAAh6C,EAAAwwC,MAAAtuD,EAAAwwB,EAAAsnC,KAAA,KAAmEvvC,EAAAiI,EAAAse,MAAAhxB,EAAY,MAAAyK,IAAS6tC,YAAA,WAAwB,GAAAnkD,GAAA,GAAA2G,GAAA2mB,OAAwB,iBAAAptB,EAAAnS,EAAAuoB,GAAuB,QAAAtlB,GAAAgP,GAAsF,MAAxE,UAAAjS,EAAAiS,IAAA1Q,QAAA0vB,KAAA,yCAAAhf,GAAwEjS,EAAAiS,GAAY,QAAAsD,GAAAtD,GAAc,YAAAA,EAAA,gBAAAsW,EAAAtW,IAAA1Q,QAAA0vB,KAAA,yCACtbhf,GAAAsW,EAAAtW,GAAQ,GAAAue,EAAM,QAAAre,EAAA/K,MAAe,YAAAopB,EAAA,GAAA5X,GAAAuN,KAA+B,MAAM,yBAAAqK,EAAA,GAAA5X,GAAAwN,kBAAAjU,EAAA8L,IAAA9L,EAAA4H,OAAA5H,EAAA47B,KAAA57B,EAAA67B,KAAoF,SAAA77B,EAAAo5C,QAAA/6B,EAAA+6B,MAAAp5C,EAAAo5C,OAAoC,SAAAp5C,EAAAsP,OAAA+O,EAAA/O,KAAAtP,EAAAsP,MAAiC,SAAAtP,EAAAq5C,YAAAh7B,EAAAg7B,UAAAr5C,EAAAq5C,WAAgD,SAAAr5C,EAAAs5C,aAAAj7B,EAAAi7B,WAAAt5C,EAAAs5C,YAAmD,SAAAt5C,EAAA64C,OAAAx6B,EAAAw6B,KAAA9iC,OAAAI,UAAyCnW,EAAA64C,MAAU,MAAM,0BAAAx6B,EAAA,GAAA5X,GAAA61B,mBAAAt8B,EAAAlI,KAAAkI,EAAAjI,MAAAiI,EAAAnI,IAAAmI,EAAAhI,OAAAgI,EAAA47B,KAAA57B,EAAA67B,IAAqG,MAAM,oBAAAxd,EACle,GAAA5X,GAAA2N,aAAApU,EAAAgL,MAAAhL,EAAAi6C,UAA4C,MAAM,wBAAA57B,EAAA,GAAA5X,GAAA4N,iBAAArU,EAAAgL,MAAAhL,EAAAi6C,UAA0E,MAAM,kBAAA57B,EAAA,GAAA5X,GAAAk0C,WAAA36C,EAAAgL,MAAAhL,EAAAi6C,UAAAj6C,EAAAuvB,SAAAvvB,EAAAm6C,MAAiF,MAAM,iBAAA97B,EAAA,GAAA5X,GAAAm0C,UAAA56C,EAAAgL,MAAAhL,EAAAi6C,UAAAj6C,EAAAuvB,SAAAvvB,EAAAqsB,MAAArsB,EAAAo6C,SAAAp6C,EAAAm6C,MAAkG,MAAM,uBAAA97B,EAAA,GAAA5X,GAAAi0C,gBAAA16C,EAAAgL,MAAAhL,EAAAk6C,YAAAl6C,EAAAi6C,UAAsF,MAAM,YAAA57B,EAAAvtB,EAAAkP,EAAAgxB,SAA4B,IAAArlB,GAAAvI,EAAApD,EAAA+/B,SAAoB1hB,KAAAm0B,OAAA,EAAAn0B,EAAAm0B,MAAAliD,OAAA,GAAAmW,GAAAm/C,YAAAvnC,EAC7c1S,GAAA,GAAAlF,GAAAyE,KAAAmT,EAAA1S,EAAuB,MAAM,WAAA0S,EAAA,GAAA5X,GAAAs1B,GAA2B,MAAM,YAAA1d,EAAA,GAAA5X,GAAA+M,KAAA1iB,EAAAkP,EAAAgxB,UAAA5tB,EAAApD,EAAA+/B,UAAA//B,EAAA6lD,KAAiE,MAAM,+BAAAxnC,EAAA,GAAA5X,GAAAu1B,OAAAlrC,EAAAkP,EAAAgxB,UAAA5tB,EAAApD,EAAA+/B,UAAgF,MAAM,cAAA1hB,EAAA,GAAA5X,GAAAy1B,OAAA94B,EAAApD,EAAA+/B,UAAgD,MAAM,aAAA1hB,EAAA,GAAA5X,GAAAq/C,KAA+B,MAAM,SAAAznC,EAAA,GAAA5X,GAAAsC,SACZ,GADyCsV,EAAAse,KAAA38B,EAAA28B,KAAc,SAAA38B,EAAArP,OAAA0tB,EAAA1tB,KAAAqP,EAAArP,MAAiC,SAAAqP,EAAAo9B,QAAAt9B,EAAAsgB,UAAApgB,EAAAo9B,QAAAt9B,EAAA20B,UAAApW,EAAAvrB,SAAAurB,EAAA4e,WAAA5e,EAAA2V,SAAA,SAAAh0B,EAAAlN,UAAAurB,EAAAvrB,SAAAstB,UAAApgB,EAAAlN,UAClY,SAAAkN,EAAAg9B,UAAA3e,EAAA2e,SAAA5c,UAAApgB,EAAAg9B,UAAA,SAAAh9B,EAAAg0B,OAAA3V,EAAA2V,MAAA5T,UAAApgB,EAAAg0B,QAAoG,SAAAh0B,EAAA09B,aAAArf,EAAAqf,WAAA19B,EAAA09B,YAAmD,SAAA19B,EAAAy9B,gBAAApf,EAAAof,cAAAz9B,EAAAy9B,eAA4D,SAAAz9B,EAAAy7B,UAAApd,EAAAod,QAAAz7B,EAAAy7B,SAA0C,SAAAz7B,EAAA69B,WAAAxf,EAAAwf,SAAA79B,EAAA69B,UAA6C,SAAA79B,EAAA27B,SAAA,OAAA/b,KAAA5f,GAAA27B,SAAAtd,EAAApV,IAAAnP,KAAAmqD,YAAAjkD,EAAA27B,SAAA/b,GAAA/xB,EAAAuoB,GAA0F,YAAApW,EAAA/K,KAAA,IAAA+K,IAAA+lD,OAAAp6C,EAAA,EAAqCA,EAAA3L,EAAA1P,OAAWqb,IAAA,CAAK,GAAAgU,GAAA3f,EAAA2L,EAAWiU,GAAAvB,EAAAygB,oBAAA,OAAAnf,EAAA1P,QAAyC,SAC7e2P,GAAAvB,EAAA2nC,SAAApmC,EAAAD,EAAA4P,UAA4B,MAAAlR,SAAe5X,EAAA41C,cAAA,SAAAv8C,GAAgChG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,uBAAuDjlC,OAAAI,OAAA1P,EAAA41C,cAAA76C,WAA6ClT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,GAAAtlB,GAAA,GAAA2V,GAAAg/C,QAAAriD,EAAA,GAAAqD,GAAA06C,YAAArnD,KAAAihD,QAA6L,OAA/H33C,GAAA44C,eAAAliD,KAAA6hD,aAAmCv4C,EAAA09C,QAAAhnD,KAAA01C,MAAqBpsC,EAAA9U,KAAAwR,EAAA,SAAAA,GAAqBhP,EAAAqZ,MAAArK,EAAUhP,EAAA4vC,aAAA,EAAiB,SAAA1gC,KAAAlP,IAAiBjD,EAAAuoB,GAAMtlB,GAASkrD,eAAA,SAAAl8C,GAA+C,MAAnBhG,MAAA6hD,YAAA77C,EAAmBhG,MAAYgnD,QAAA,SAAAhhD,GAAiC,MAAZhG,MAAA01C,KAAA1vC,EAAYhG,QACxe2M,EAAAw/C,kBAAA,SAAAnmD,GAAoChG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,uBACpCjlC,OAAAI,OAAA1P,EAAAw/C,kBAAAzkD,WAAiDlT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,QAAAtlB,GAAAjD,GAAcwwB,EAAA/vB,KAAAwR,EAAAjS,GAAA,SAAAiS,GAAwBsD,EAAAw8B,OAAA/xC,GAAAiS,EAAc6L,IAAI,IAAAA,IAAAvI,EAAAs9B,aAAA,EAAA1gC,KAAAoD,KAAkC,OAAAgT,GAAW,GAAAhT,GAAA,GAAAqD,GAAAy/C,YAAA7nC,EAAA,GAAA5X,GAAA06C,YAAArnD,KAAAihD,QAAkE18B,GAAA29B,eAAAliD,KAAA6hD,aAAmCt9B,EAAAyiC,QAAAhnD,KAAA01C,KAAqB,IAAA7jC,GAAA,CAAQ,KAAA9d,EAAA,EAAQA,EAAAiS,EAAAxP,SAAWzC,EAAAiD,EAAAjD,EAAS,OAAAuV,IAAS44C,eAAA,SAAAl8C,GAA+C,MAAnBhG,MAAA6hD,YAAA77C,EAAmBhG,MAAYgnD,QAAA,SAAAhhD,GAAiC,MAAZhG,MAAA01C,KAAA1vC,EAAYhG,QAChb2M,EAAA0/C,kBAAA1/C,EAAA2/C,oBAAA,SAAAtmD,GAA8DhG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,sBAAsDlhD,KAAAusD,QAAA,MACpHtwC,OAAAI,OAAA1P,EAAA2/C,oBAAA5kD,WAAmDlT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,GAAAtlB,GAAAgJ,KAAAsJ,EAAA,GAAAqD,GAAA6/C,YAAAjoC,EAAA,GAAA5X,GAAAw0C,UAAAnhD,KAAAihD,QAC2P,OADpL18B,GAAA68B,gBAAA,eAAiC78B,EAAA/vB,KAAAwR,EAAA,SAAAA,IAAqBA,EAAAhP,EAAAu1D,QAAAvmD,MAAA,SAAAA,EAAAqK,MAAA/G,EAAA+G,MAAArK,EAAAqK,MAAA,SAAArK,EAAA/Q,OAAAqU,EAAA+G,MAAAlS,MAAA6H,EAAA7H,MAAAmL,EAAA+G,MAAAjS,OAAA4H,EAAA5H,OAAAkL,EAAA+G,MAAApb,KAAA+Q,EAAA/Q,MAAAqU,EAAA84C,MAAA,SAAAp8C,EAAAo8C,MAAAp8C,EAAAo8C,MAAAz1C,EAAAiU,oBAAAtX,EAAA+4C,MAAA,SAAAr8C,EAAAq8C,MAAAr8C,EAAAq8C,MAAA11C,EAAAiU,oBAAAtX,EAAAk1C,UAAA,SAAAx4C,EAAAw4C,UAAAx4C,EAAAw4C,UAAA7xC,EAAAsU,aACvM3X,EAAAm1C,UAAA,SAAAz4C,EAAAy4C,UAAAz4C,EAAAy4C,UAAA9xC,EAAAwU,yBAAA7X,EAAAg5C,WAAA,SAAAt8C,EAAAs8C,WAAAt8C,EAAAs8C,WAAA,WAAAt8C,EAAAu4C,SAAAj1C,EAAAi1C,OAAAv4C,EAAAu4C,QAAA,SAAAv4C,EAAA7K,OAAAmO,EAAAnO,KAAA6K,EAAA7K,MAAA,SAAA6K,EAAAymD,UAAAnjD,EAAAmjD,QAAAzmD,EAAAymD,SAAA,IAAAzmD,EAAA0mD,cAAApjD,EAAAm1C,UAAA9xC,EAAAsU,cAAA3X,EAAAs9B,aAAA,EAAA1gC,KAAAoD,EAAAtD,KAA+TjS,EAAAuoB,GAAMhT,KAAYqD,EAAAggD,wBAAA,SAAA3mD,GAA0ChG,KAAAihD,QAAA,SAAAj7C,IAAA2G,EAAAu0C,sBAAsDlhD,KAAAusD,QAAA,MACjbtwC,OAAAI,OAAA1P,EAAAggD,wBAAAjlD,WAAuDlT,KAAA,SAAAwR,EAAAE,EAAAnS,EAAAuoB,GAAuB,QAAAtlB,MAAc8uB,EAAAtxB,KAAAwR,EAAAhP,GAAA,SAAAgP,GAAwBA,EAAAsD,EAAAijD,QAAAvmD,GAAA,GAAkBue,EAAAvtB,IAAMmH,MAAA6H,EAAA7H,MAAAC,OAAA4H,EAAA5H,OAAAmgD,OAAAv4C,EAAAu4C,OAAAkO,QAAAzmD,EAAAymD,SAAiE5mC,GAAA,EAAK,IAAAA,IAAA,IAAA7f,EAAA0mD,cAAA76C,EAAA4sC,UAAA9xC,EAAAsU,cAAApP,EAAA0sC,OAAAv4C,EAAAu4C,OAAA1sC,EAAA+0B,aAAA,EAAA1gC,KAAA2L,KAAwG9d,EAAAuoB,GAAM,GAAAhT,GAAAtJ,KAAAukB,KAAA1S,EAAA,GAAAlF,GAAAigD,iBAA8C/6C,GAAAxB,MAAAkU,CAAU,IAAAuB,GAAA,GAAAnZ,GAAAw0C,UAAAnhD,KAAAihD,QAA8F,IAAtDn7B,EAAAkhC,QAAAhnD,KAAA01C,MAAqB5vB,EAAAs7B,gBAAA,eAAiCn3C,MAAA04B,QAAA38B,GAAA,OAAA6f,GAAA,EACtdqL,EAAA,EAAAl9B,EAAAgS,EAAAxP,OAAe06B,EAAAl9B,IAAIk9B,EAAAl6B,EAAAk6B,OAASpL,GAAAtxB,KAAAwR,EAAA,SAAAA,GAA4C,GAAlBA,EAAAsD,EAAAijD,QAAAvmD,GAAA,GAAkBA,EAAA6mD,UAAA,OAAA94D,GAAAiS,EAAAymD,QAAAj2D,OAAAwP,EAAA0mD,YAAApwC,EAAA,EAA4DA,EAAAvoB,EAAIuoB,IAAA,CAAKiI,EAAAjI,IAAMmwC,WAAY,QAAAz1D,GAAA,EAAYA,EAAAgP,EAAA0mD,YAAgB11D,IAAAutB,EAAAjI,GAAAmwC,QAAA5sD,KAAAmG,EAAAymD,QAAAnwC,EAAAtW,EAAA0mD,YAAA11D,IAAAutB,EAAAjI,GAAAiiC,OAAAv4C,EAAAu4C,OAAAh6B,EAAAjI,GAAAne,MAAA6H,EAAA7H,MAAAomB,EAAAjI,GAAAle,OAAA4H,EAAA5H,WAAiHyT,GAAAxB,MAAAlS,MAAA6H,EAAA7H,MAAA0T,EAAAxB,MAAAjS,OAAA4H,EAAA5H,OAAAyT,EAAA46C,QAAAzmD,EAAAymD,OAAuE,KAAAzmD,EAAA0mD,cAAA76C,EAAA4sC,UAAA9xC,EAAAsU,cAAoDpP,EAAA0sC,OAAAv4C,EAAAu4C,OAAkB1sC,EAAA+0B,aAAA,EAAiB1gC,KAAA2L,IAAQ9d,EAAAuoB,EAAM,OAAAzK,IAASm1C,QAAA,SAAAhhD,GAC/d,MADofhG,MAAA01C,KACtf1vC,EAAEhG,QACF2M,EAAAmgD,SAAA,WAA0B7wC,OAAAC,eAAAlc,KAAA,MAAiCuH,MAAAoF,EAAAogD,oBAAgC/sD,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAAnJ,KAAA,GAAamJ,KAAA7E,KAAA,WAAqB6E,KAAAgtD,OAAAhtD,KAAAitD,KAAA,EAAwBjtD,KAAAyiD,SAAA91C,EAAAmR,eAAmC9d,KAAAgmD,KAAAr5C,EAAA0Q,UAA0Brd,KAAA4oD,QAAAj8C,EAAA8Q,cAAiCzd,KAAAqmC,aAAA15B,EAAA+Q,SAAiC1d,KAAAimD,QAAA,EAAejmD,KAAAkmD,aAAA,EAAoBlmD,KAAAktD,SAAAvgD,EAAAiS,eAAmC5e,KAAAmtD,SAAAxgD,EAAAkS,uBAA2C7e,KAAAotD,cAAAzgD,EAAAwR,YAAqCne,KAAAqtD,mBAAArtD,KAAAstD,cAC9cttD,KAAAutD,cAAA,KAAwBvtD,KAAAwtD,UAAA7gD,EAAA2S,eAAoCtf,KAAA+oD,WAAA/oD,KAAA8oD,WAAA,EAAkC9oD,KAAAytD,eAAA,KAAyBztD,KAAA0tD,aAAA,EAAoB1tD,KAAAgpD,YAAA,EAAmBhpD,KAAA2tD,UAAA,KAAoB3tD,KAAA4tD,eAAA,EAAsB5tD,KAAA6oD,UAAA7oD,KAAA6tD,mBAAA7tD,KAAA8tD,oBAAA,EAAkE9tD,KAAA+tD,oBAAA,EAA2B/tD,KAAAguD,SAAA,EAAgBhuD,KAAAiuD,aAAAjuD,KAAA2hC,SAAA,GACrTh1B,EAAAmgD,SAAAplD,WAA0B7S,YAAA8X,EAAAmgD,SAAAlmB,kBAA6C,MAAA5mC,MAAAiuD,cAAyBrnB,gBAAA5gC,IAAoB,IAAAA,GAAAhG,KAAA4C,SAAsB5C,KAAAiuD,aAAAjoD,GAAoBkoD,UAAA,SAAAloD,GAAuB,YAAAA,EAAA,OAAAE,KAAAF,GAAA,CAA8B,GAAAjS,GAAAiS,EAAAE,EAAW,aAAAnS,EAAAuB,QAAA0vB,KAAA,oBAAA9e,EAAA,iCAA8E,CAAK,GAAAoW,GAAAtc,KAAAkG,EAAc,UAAAoW,EAAAhnB,QAAA0vB,KAAA,SAAAhlB,KAAA7E,KAAA,MAAA+K,EAAA,yCAAAoW,YAAA3P,GAAA0X,MAAA/H,EAAAjL,IAAAtd,GAAAuoB,YAAA3P,GAAA8G,SAAA1f,YAAA4Y,GAAA8G,QAAA6I,EAAAkI,KAAAzwB,GAC/TiM,KAAAkG,GAAA,aAAAA,EAAA2V,OAAA9nB,QAAqC0xC,OAAA,SAAAz/B,GAAoB,QAAAE,GAAAF,GAAc,GAAAjS,GAAAmS,IAAW,KAAAnS,IAAAiS,GAAA,CAAY,GAAAsW,GAAAtW,EAAAjS,SAAWuoB,GAAAopB,SAAkBx/B,EAAArG,KAAAyc,GAAU,MAAApW,GAAS,GAAAnS,GAAA,SAAAiS,CAAiBjS,KAAAiS,GAAO6/B,YAAWC,WAAa,IAAAxpB,IAAOopB,UAAUK,QAAA,IAAA5qC,KAAA,WAAA6qC,UAAA,mBAK5I,OALsM1pB,GAAAumB,KAAA7iC,KAAA6iC,KAAiBvmB,EAAAnhB,KAAA6E,KAAA7E,KAAiB,KAAA6E,KAAAnJ,OAAAylB,EAAAzlB,KAAAmJ,KAAAnJ,MAAmCmJ,KAAAkR,gBAAAvE,GAAA0X,QAAA/H,EAAApL,MAAAlR,KAAAkR,MAAAuU,UAAiE,SAAAzlB,KAAAuoD,YAAAjsC,EAAAisC,UAAAvoD,KAAAuoD,WAAsD,SAAAvoD,KAAAwoD,YAAAlsC,EAAAksC,UAAAxoD,KAAAwoD,WACrcxoD,KAAA2iD,mBAAAh2C,GAAA0X,QAAA/H,EAAAqmC,SAAA3iD,KAAA2iD,SAAAl9B,UAA0EzlB,KAAA0iD,mBAAA/1C,GAAA0X,QAAA/H,EAAAomC,SAAA1iD,KAAA0iD,SAAAj9B,UAA0E,SAAAzlB,KAAA4iD,YAAAtmC,EAAAsmC,UAAA5iD,KAAA4iD,WAAsD5iD,KAAAgL,cAAA2B,GAAAg/C,UAAArvC,EAAAtR,IAAAhL,KAAAgL,IAAAy6B,OAAAz/B,GAAA68B,MAAmE7iC,KAAA2lD,mBAAAh5C,GAAAg/C,UAAArvC,EAAAqpC,SAAA3lD,KAAA2lD,SAAAlgB,OAAAz/B,GAAA68B,MAAkF7iC,KAAAsjD,mBAAA32C,GAAAg/C,UAAArvC,EAAAgnC,SAAAtjD,KAAAsjD,SAAA7d,OAAAz/B,GAAA68B,MAAkF7iC,KAAAgkD,kBAAAr3C,GAAAg/C,UAAArvC,EAAA0nC,QAAAhkD,KAAAgkD,QAAAve,OAAAz/B,GAAA68B,KACjbvmB,EAAA+nC,UAAArkD,KAAAqkD,WAA4BrkD,KAAAskD,oBAAA33C,GAAAg/C,UAAArvC,EAAAgoC,UAAAtkD,KAAAskD,UAAA7e,OAAAz/B,GAAA68B,KAAAvmB,EAAAqoC,YAAA3kD,KAAA2kD,YAAAp+B,WAA8HvmB,KAAAopD,0BAAAz8C,GAAAg/C,UAAArvC,EAAA8sC,gBAAAppD,KAAAopD,gBAAA3jB,OAAAz/B,GAAA68B,KAAAvmB,EAAA+sC,kBAAArpD,KAAAqpD,kBAAA/sC,EAAAgtC,iBAAAtpD,KAAAspD,kBAA2LtpD,KAAAslD,uBAAA34C,GAAAg/C,UAAArvC,EAAAgpC,aAAAtlD,KAAAslD,aAAA7f,OAAAz/B,GAAA68B,MAA8F7iC,KAAAilD,uBAAAt4C,GAAAg/C,UAAArvC,EAAA2oC,aAAAjlD,KAAAilD,aAAAxf,OAAAz/B,GAAA68B,MACnb7iC,KAAAijD,sBAAAt2C,GAAAg/C,UAAArvC,EAAA2mC,YAAAjjD,KAAAijD,YAAAxd,OAAAz/B,GAAA68B,MAA2F7iC,KAAA4kD,sBAAAj4C,GAAAg/C,UAAArvC,EAAAsoC,YAAA5kD,KAAA4kD,YAAAnf,OAAAz/B,GAAA68B,MAA2F7iC,KAAAwpD,iBAAA78C,GAAAg/C,UAAArvC,EAAAktC,OAAAxpD,KAAAwpD,OAAA/jB,OAAAz/B,GAAA68B,KAAAvmB,EAAAotC,aAAA1pD,KAAA0pD,cAA6G,SAAA1pD,KAAAsQ,OAAAgM,EAAAhM,KAAAtQ,KAAAsQ,MAAuC,SAAAtQ,KAAAmpD,kBAAA7sC,EAAA6sC,gBAAAnpD,KAAAmpD,iBAAwEnpD,KAAAyiD,WAAA91C,EAAAmR,iBAAAxB,EAAAmmC,SAAAziD,KAAAyiD,UAAiEziD,KAAA4oD,UAAAj8C,EAAA8Q,gBACndnB,EAAAssC,QAAA5oD,KAAA4oD,SAAyB5oD,KAAAgmD,OAAAr5C,EAAA0Q,YAAAf,EAAA0pC,KAAAhmD,KAAAgmD,MAAgDhmD,KAAAqmC,eAAA15B,EAAA+Q,WAAApB,EAAA+pB,aAAArmC,KAAAqmC,cAAuE,EAAArmC,KAAAimD,UAAA3pC,EAAA2pC,QAAAjmD,KAAAimD,UAAyC,IAAAjmD,KAAAkmD,cAAA5pC,EAAA4pC,YAAAlmD,KAAAkmD,aAAwD,EAAAlmD,KAAA6oD,YAAAvsC,EAAAusC,UAAA7oD,KAAA6oD,YAA+C,IAAA7oD,KAAA+tD,qBAAAzxC,EAAAyxC,mBAAA/tD,KAAA+tD,qBAA6E,IAAA/tD,KAAAipD,YAAA3sC,EAAA2sC,UAAAjpD,KAAAipD,WAAkD,EAAAjpD,KAAAkpD,qBAAA5sC,EAAA4sC,mBAAAlpD,KAAAkpD,oBAA0En1D,MAAAmS,EAAAF,EAAA6/B,UACze7/B,EAAAE,EAAAF,EAAA8/B,QAAA,EAAA/xC,EAAAyC,SAAA8lB,EAAAupB,SAAA9xC,GAAA,EAAAiS,EAAAxP,SAAA8lB,EAAAwpB,OAAA9/B,IAAmEsW,GAAS3lB,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GAAkBhG,KAAAnJ,KAAAmP,EAAAnP,KAAiBmJ,KAAAitD,IAAAjnD,EAAAinD,IAAejtD,KAAAgtD,OAAAhnD,EAAAgnD,OAAqBhtD,KAAAyiD,SAAAz8C,EAAAy8C,SAAyBziD,KAAAgmD,KAAAhgD,EAAAggD,KAAiBhmD,KAAA4oD,QAAA5iD,EAAA4iD,QAAuB5oD,KAAAqmC,aAAArgC,EAAAqgC,aAAiCrmC,KAAAimD,QAAAjgD,EAAAigD,QAAuBjmD,KAAAkmD,YAAAlgD,EAAAkgD,YAA+BlmD,KAAAktD,SAAAlnD,EAAAknD,SAAyBltD,KAAAmtD,SAAAnnD,EAAAmnD,SAAyBntD,KAAAotD,cAAApnD,EAAAonD,cAAmCptD,KAAAutD,cAAAvnD,EAAAunD,cAAmCvtD,KAAAstD,cAAAtnD,EAAAsnD,cAC7dttD,KAAAqtD,mBAAArnD,EAAAqnD,mBAA6CrtD,KAAAwtD,UAAAxnD,EAAAwnD,UAA2BxtD,KAAA8oD,UAAA9iD,EAAA8iD,UAA2B9oD,KAAA+oD,WAAA/iD,EAAA+iD,WAA6B/oD,KAAAgpD,WAAAhjD,EAAAgjD,WAA6BhpD,KAAA2tD,UAAA3nD,EAAA2nD,UAA2B3tD,KAAA4tD,cAAA5nD,EAAA4nD,cAAmC5tD,KAAA8tD,oBAAA9nD,EAAA8nD,oBAA+C9tD,KAAA6tD,mBAAA7nD,EAAA6nD,mBAA6C7tD,KAAA6oD,UAAA7iD,EAAA6iD,UAA2B7oD,KAAA+tD,mBAAA/nD,EAAA+nD,mBAA6C/tD,KAAAguD,SAAAhoD,EAAAgoD,SAAyBhuD,KAAA2hC,QAAA37B,EAAA27B,QAAuB3hC,KAAA0tD,YAAA1nD,EAAA0nD,YAA+B1nD,IAAAynD,cAAmB,IAAAvnD,GAAA,IAAW,WAC5eF,EAAA,OAAAjS,GAAAiS,EAAAxP,OAAA0P,EAAA+D,MAAAlW,GAAAuoB,EAAA,EAAoCA,IAAAvoB,IAAMuoB,EAAApW,EAAAoW,GAAAtW,EAAAsW,GAAA3lB,OAA4C,OAAtBqJ,MAAAytD,eAAAvnD,EAAsBlG,MAAY4C,OAAA,WAAmB5C,KAAAqhC,eAAoBlmC,KAAA,YAAgBmwC,QAAA,WAAoBtrC,KAAAqhC,eAAoBlmC,KAAA,cAAmB8gB,OAAAI,OAAA1P,EAAAmgD,SAAAplD,UAAAiF,EAAAq0B,gBAAAt5B,WAAwEiF,EAAAogD,gBAAA,EAC5RpgD,EAAAuM,kBAAA,SAAAlT,GAAoC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAA7E,KAAA,oBAA8B6E,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAA,UAAqCrkB,KAAAmZ,UAAA,EAAiBnZ,KAAAqZ,SAAArZ,KAAAoZ,QAAA,QAAmCpZ,KAAAgtD,QAAA,EAAehtD,KAAAkuD,UAAAloD,IAAmB2G,EAAAuM,kBAAAxR,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAA0EiF,EAAAuM,kBAAAxR,UAAA7S,YAAA8X,EAAAuM,kBACjSvM,EAAAuM,kBAAAxR,UAAA8c,KAAA,SAAAxe,GAAkM,MAA/I2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAAmZ,UAAAnT,EAAAmT,UAA2BnZ,KAAAoZ,QAAApT,EAAAoT,QAAuBpZ,KAAAqZ,SAAArT,EAAAqT,SAAyBrZ,MAAa2M,EAAAwhD,mBAAA,SAAAnoD,GAAqC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAA7E,KAAA,qBAA+B6E,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAA,UAAqCrkB,KAAAk6B,MAAAl6B,KAAAmZ,UAAA,EAA4BnZ,KAAAouD,SAAA,EAAgBpuD,KAAAquD,QAAA,EAAeruD,KAAAgtD,QAAA,EAAehtD,KAAAkuD,UAAAloD,IAAmB2G,EAAAwhD,mBAAAzmD,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAC/aiF,EAAAwhD,mBAAAzmD,UAAA7S,YAAA8X,EAAAwhD,mBAAwExhD,EAAAwhD,mBAAAzmD,UAAA8c,KAAA,SAAAxe,GAAsN,MAAlK2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAAmZ,UAAAnT,EAAAmT,UAA2BnZ,KAAAk6B,MAAAl0B,EAAAk0B,MAAmBl6B,KAAAouD,SAAApoD,EAAAooD,SAAyBpuD,KAAAquD,QAAAroD,EAAAqoD,QAAuBruD,MAC9R2M,EAAA2hD,kBAAA,SAAAtoD,GAAoC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAA7E,KAAA,oBAA8B6E,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAA,UAAqCrkB,KAAA2jD,MAAA3jD,KAAAgL,IAAA,KAAyBhL,KAAA4pD,eAAA,EAAsB5pD,KAAAwpD,OAAAxpD,KAAA2lD,SAAA3lD,KAAA4kD,YAAA,KAAgD5kD,KAAAypD,QAAA98C,EAAAgT,kBAAqC3f,KAAA0pD,aAAA,EAAoB1pD,KAAAuuD,gBAAA,IAAyBvuD,KAAAipD,WAAA,EAAkBjpD,KAAAkpD,mBAAA,EAA0BlpD,KAAAwuD,kBAAAxuD,KAAAyuD,iBAAA,QAAqDzuD,KAAAgtD,OAAAhtD,KAAAopC,aAAAppC,KAAA0uD,UAAA,EAA+C1uD,KAAAkuD,UAAAloD,IAClc2G,EAAA2hD,kBAAA5mD,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAA0EiF,EAAA2hD,kBAAA5mD,UAAA7S,YAAA8X,EAAA2hD,kBAC1E3hD,EAAA2hD,kBAAA5mD,UAAA8c,KAAA,SAAAxe,GAC0D,MADP2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAAgL,IAAAhF,EAAAgF,IAAehL,KAAA2jD,MAAA39C,EAAA29C,MAAmB3jD,KAAA4pD,eAAA5jD,EAAA4jD,eAAqC5pD,KAAA4kD,YAAA5+C,EAAA4+C,YAA+B5kD,KAAA2lD,SAAA3/C,EAAA2/C,SAAyB3lD,KAAAwpD,OAAAxjD,EAAAwjD,OAAqBxpD,KAAAypD,QAAAzjD,EAAAyjD,QAAuBzpD,KAAA0pD,aAAA1jD,EAAA0jD,aAAiC1pD,KAAAuuD,gBAAAvoD,EAAAuoD,gBAAuCvuD,KAAAipD,UAAAjjD,EAAAijD,UAA2BjpD,KAAAkpD,mBAAAljD,EAAAkjD,mBAA6ClpD,KAAAyuD,iBAAAzoD,EAAAyoD,iBAAyCzuD,KAAAwuD,kBAAAxoD,EAAAwoD,kBAC3dxuD,KAAA0uD,SAAA1oD,EAAA0oD,SAAyB1uD,KAAAopC,aAAApjC,EAAAojC,aAAiCppC,MAAa2M,EAAAgiD,kBAAA,SAAA3oD,GAAoC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAA7E,KAAA,oBAA8B6E,KAAA4uD,aAAAjiD,EAAAwX,kBAA0CnkB,KAAAopC,aAAAppC,KAAA0uD,UAAA,EAAmC1uD,KAAAopD,gBAAAppD,KAAA2lD,SAAA3lD,KAAAgL,IAAA,KAAiDhL,KAAAqpD,kBAAA,EAAyBrpD,KAAAspD,iBAAA,EAAwBtpD,KAAAipD,WAAA,EAAkBjpD,KAAAkpD,mBAAA,EAA0BlpD,KAAAgtD,OAAAhtD,KAAAitD,KAAA,EAAwBjtD,KAAAkuD,UAAAloD,IAAmB2G,EAAAgiD,kBAAAjnD,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WACzaiF,EAAAgiD,kBAAAjnD,UAAA7S,YAAA8X,EAAAgiD,kBAAsEhiD,EAAAgiD,kBAAAjnD,UAAA8c,KAAA,SAAAxe,GAAoa,MAAjX2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAA4uD,aAAA5oD,EAAA4oD,aAAiC5uD,KAAA0uD,SAAA1oD,EAAA0oD,SAAyB1uD,KAAAopC,aAAApjC,EAAAojC,aAAiCppC,KAAAgL,IAAAhF,EAAAgF,IAAehL,KAAA2lD,SAAA3/C,EAAA2/C,SAAyB3lD,KAAAopD,gBAAApjD,EAAAojD,gBAAuCppD,KAAAqpD,kBAAArjD,EAAAqjD,kBAA2CrpD,KAAAspD,iBAAAtjD,EAAAsjD,iBAAyCtpD,KAAAipD,UAAAjjD,EAAAijD,UAA2BjpD,KAAAkpD,mBAAAljD,EAAAkjD,mBAA6ClpD,MAC1e2M,EAAAsE,oBAAA,SAAAjL,GAAsC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAA7E,KAAA,sBAAgC6E,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAA,UAAqCrkB,KAAAsjD,SAAAtjD,KAAAgL,IAAA,KAA4BhL,KAAA2pD,kBAAA,EAAyB3pD,KAAA2jD,MAAA,KAAgB3jD,KAAA4pD,eAAA,EAAsB5pD,KAAA2iD,SAAA,GAAAh2C,GAAA0X,MAAA,GAAiCrkB,KAAAupD,kBAAA,EAAyBvpD,KAAAwpD,OAAAxpD,KAAA2lD,SAAA3lD,KAAA4kD,YAAA5kD,KAAAijD,YAAA,KAAiEjjD,KAAAypD,QAAA98C,EAAAgT,kBAAqC3f,KAAA0pD,aAAA,EAAoB1pD,KAAAuuD,gBAAA,IAAyBvuD,KAAAipD,WAAA,EAAkBjpD,KAAAkpD,mBAAA,EAA0BlpD,KAAAwuD,kBAAAxuD,KAAAyuD,iBACzd,QAAQzuD,KAAAqpC,aAAArpC,KAAAopC,aAAAppC,KAAA0uD,UAAA,EAAqD1uD,KAAAkuD,UAAAloD,IAAmB2G,EAAAsE,oBAAAvJ,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAA4EiF,EAAAsE,oBAAAvJ,UAAA7S,YAAA8X,EAAAsE,oBAC5JtE,EAAAsE,oBAAAvJ,UAAA8c,KAAA,SAAAxe,GACyQ,MADpN2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAAgL,IAAAhF,EAAAgF,IAAehL,KAAAsjD,SAAAt9C,EAAAs9C,SAAyBtjD,KAAA2pD,kBAAA3jD,EAAA2jD,kBAA2C3pD,KAAA2jD,MAAA39C,EAAA29C,MAAmB3jD,KAAA4pD,eAAA5jD,EAAA4jD,eAAqC5pD,KAAA2iD,SAAAn+B,KAAAxe,EAAA28C,UAA+B3iD,KAAAijD,YAAAj9C,EAAAi9C,YAA+BjjD,KAAAupD,kBAAAvjD,EAAAujD,kBAA2CvpD,KAAA4kD,YAAA5+C,EAAA4+C,YAA+B5kD,KAAA2lD,SAAA3/C,EAAA2/C,SAAyB3lD,KAAAwpD,OAAAxjD,EAAAwjD,OAAqBxpD,KAAAypD,QAAAzjD,EAAAyjD,QAAuBzpD,KAAA0pD,aAAA1jD,EAAA0jD,aAAiC1pD,KAAAuuD,gBAClfvoD,EAAAuoD,gBAAkBvuD,KAAAipD,UAAAjjD,EAAAijD,UAA2BjpD,KAAAkpD,mBAAAljD,EAAAkjD,mBAA6ClpD,KAAAyuD,iBAAAzoD,EAAAyoD,iBAAyCzuD,KAAAwuD,kBAAAxoD,EAAAwoD,kBAA2CxuD,KAAA0uD,SAAA1oD,EAAA0oD,SAAyB1uD,KAAAopC,aAAApjC,EAAAojC,aAAiCppC,KAAAqpC,aAAArjC,EAAAqjC,aAAiCrpC,MAAa2M,EAAAkiD,mBAAA,SAAA7oD,GAAqC2G,EAAAmgD,SAAAj5D,KAAAmM,KAAAgG,GAA4BhG,KAAA7E,KAAA,qBAA+B6E,KAAAipD,WAAA,EAAkBjpD,KAAAkpD,mBAAA,EAA0BlpD,KAAAopC,aAAAppC,KAAAgtD,OAAAhtD,KAAAitD,KAAA,EAA0CjtD,KAAAkuD,UAAAloD,IAC5c2G,EAAAkiD,mBAAAnnD,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAA2EiF,EAAAkiD,mBAAAnnD,UAAA7S,YAAA8X,EAAAkiD,mBAAwEliD,EAAAkiD,mBAAAnnD,UAAA8c,KAAA,SAAAxe,GAAuK,MAAnH2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAipD,UAAAjjD,EAAAijD,UAA2BjpD,KAAAkpD,mBAAAljD,EAAAkjD,mBAA6ClpD,MAC1T2M,EAAAmiD,kBAAA,SAAA9oD,GAAoC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAA7E,KAAA,oBAA8B6E,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAA,UAAqCrkB,KAAA0iD,SAAA,GAAA/1C,GAAA0X,MAAA,SAAuCrkB,KAAA4iD,UAAA,GAAkB5iD,KAAAsjD,SAAAtjD,KAAAgL,IAAA,KAA4BhL,KAAA2pD,kBAAA,EAAyB3pD,KAAA2jD,MAAA,KAAgB3jD,KAAA4pD,eAAA,EAAsB5pD,KAAA2iD,SAAA,GAAAh2C,GAAA0X,MAAA,GAAiCrkB,KAAAupD,kBAAA,EAAyBvpD,KAAAgkD,QAAAhkD,KAAAijD,YAAA,KAAmCjjD,KAAAqkD,UAAA,EAAiBrkD,KAAAskD,UAAA,KAAoBtkD,KAAA2kD,YAAA,GAAAh4C,GAAAykB,QAAA,KAAwCpxB,KAAAopD,gBAAA,KAA0BppD,KAAAqpD,kBAAA,EAAyBrpD,KAAAspD,iBAClf,EAAEtpD,KAAAwpD,OAAAxpD,KAAA2lD,SAAA3lD,KAAA4kD,YAAA,KAAgD5kD,KAAAypD,QAAA98C,EAAAgT,kBAAqC3f,KAAA0pD,aAAA,EAAoB1pD,KAAAuuD,gBAAA,IAAyBvuD,KAAAipD,WAAA,EAAkBjpD,KAAAkpD,mBAAA,EAA0BlpD,KAAAwuD,kBAAAxuD,KAAAyuD,iBAAA,QAAqDzuD,KAAAqpC,aAAArpC,KAAAopC,aAAAppC,KAAA0uD,UAAA,EAAqD1uD,KAAAkuD,UAAAloD,IAAmB2G,EAAAmiD,kBAAApnD,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAA0EiF,EAAAmiD,kBAAApnD,UAAA7S,YAAA8X,EAAAmiD,kBACvXniD,EAAAmiD,kBAAApnD,UAAA8c,KAAA,SAAAxe,GAEiC,MAFkB2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAA0iD,SAAAl+B,KAAAxe,EAAA08C,UAA+B1iD,KAAA4iD,UAAA58C,EAAA48C,UAA2B5iD,KAAAgL,IAAAhF,EAAAgF,IAAehL,KAAAsjD,SAAAt9C,EAAAs9C,SAAyBtjD,KAAA2pD,kBAAA3jD,EAAA2jD,kBAA2C3pD,KAAA2jD,MAAA39C,EAAA29C,MAAmB3jD,KAAA4pD,eAAA5jD,EAAA4jD,eAAqC5pD,KAAA2iD,SAAAn+B,KAAAxe,EAAA28C,UAA+B3iD,KAAAijD,YAAAj9C,EAAAi9C,YAA+BjjD,KAAAupD,kBAAAvjD,EAAAujD,kBAA2CvpD,KAAAgkD,QAAAh+C,EAAAg+C,QAAuBhkD,KAAAqkD,UAAAr+C,EAAAq+C,UAA2BrkD,KAAAskD,UAAAt+C,EAAAs+C,UAA2BtkD,KAAA2kD,YAAAngC,KAAAxe,EAAA2+C,aAClf3kD,KAAAopD,gBAAApjD,EAAAojD,gBAAuCppD,KAAAqpD,kBAAArjD,EAAAqjD,kBAA2CrpD,KAAAspD,iBAAAtjD,EAAAsjD,iBAAyCtpD,KAAA4kD,YAAA5+C,EAAA4+C,YAA+B5kD,KAAA2lD,SAAA3/C,EAAA2/C,SAAyB3lD,KAAAwpD,OAAAxjD,EAAAwjD,OAAqBxpD,KAAAypD,QAAAzjD,EAAAyjD,QAAuBzpD,KAAA0pD,aAAA1jD,EAAA0jD,aAAiC1pD,KAAAuuD,gBAAAvoD,EAAAuoD,gBAAuCvuD,KAAAipD,UAAAjjD,EAAAijD,UAA2BjpD,KAAAkpD,mBAAAljD,EAAAkjD,mBAA6ClpD,KAAAyuD,iBAAAzoD,EAAAyoD,iBAAyCzuD,KAAAwuD,kBAAAxoD,EAAAwoD,kBAA2CxuD,KAAA0uD,SAAA1oD,EAAA0oD,SAAyB1uD,KAAAopC,aAAApjC,EAAAojC,aAC5dppC,KAAAqpC,aAAArjC,EAAAqjC,aAAiCrpC,MACjC2M,EAAAoiD,qBAAA,SAAA/oD,GAAuC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAAgvD,SAAcC,SAAA,IAAajvD,KAAA7E,KAAA,uBAAiC6E,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAA,UAAqCrkB,KAAAwoD,UAAAxoD,KAAAuoD,UAAA,GAAiCvoD,KAAAsjD,SAAAtjD,KAAAgL,IAAA,KAA4BhL,KAAA2pD,kBAAA,EAAyB3pD,KAAA2jD,MAAA,KAAgB3jD,KAAA4pD,eAAA,EAAsB5pD,KAAA2iD,SAAA,GAAAh2C,GAAA0X,MAAA,GAAiCrkB,KAAAupD,kBAAA,EAAyBvpD,KAAAgkD,QAAAhkD,KAAAijD,YAAA,KAAmCjjD,KAAAqkD,UAAA,EAAiBrkD,KAAAskD,UAAA,KAAoBtkD,KAAA2kD,YAAA,GAAAh4C,GAAAykB,QAAA,KAAwCpxB,KAAAopD,gBAAA,KAA0BppD,KAAAqpD,kBACle,EAAErpD,KAAAspD,iBAAA,EAAwBtpD,KAAAwpD,OAAAxpD,KAAA2lD,SAAA3lD,KAAAilD,aAAAjlD,KAAAslD,aAAA,KAAmEtlD,KAAAkvD,gBAAA,EAAuBlvD,KAAAuuD,gBAAA,IAAyBvuD,KAAAipD,WAAA,EAAkBjpD,KAAAkpD,mBAAA,EAA0BlpD,KAAAwuD,kBAAAxuD,KAAAyuD,iBAAA,QAAqDzuD,KAAAqpC,aAAArpC,KAAAopC,aAAAppC,KAAA0uD,UAAA,EAAqD1uD,KAAAkuD,UAAAloD,IAAmB2G,EAAAoiD,qBAAArnD,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAA6EiF,EAAAoiD,qBAAArnD,UAAA7S,YAAA8X,EAAAoiD,qBACnYpiD,EAAAoiD,qBAAArnD,UAAA8c,KAAA,SAAAxe,GAE2F,MAFrC2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAgvD,SAAcC,SAAA,IAAajvD,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAAuoD,UAAAviD,EAAAuiD,UAA2BvoD,KAAAwoD,UAAAxiD,EAAAwiD,UAA2BxoD,KAAAgL,IAAAhF,EAAAgF,IAAehL,KAAAsjD,SAAAt9C,EAAAs9C,SAAyBtjD,KAAA2pD,kBAAA3jD,EAAA2jD,kBAA2C3pD,KAAA2jD,MAAA39C,EAAA29C,MAAmB3jD,KAAA4pD,eAAA5jD,EAAA4jD,eAAqC5pD,KAAA2iD,SAAAn+B,KAAAxe,EAAA28C,UAA+B3iD,KAAAijD,YAAAj9C,EAAAi9C,YAA+BjjD,KAAAupD,kBAAAvjD,EAAAujD,kBAA2CvpD,KAAAgkD,QAAAh+C,EAAAg+C,QAAuBhkD,KAAAqkD,UAAAr+C,EAAAq+C,UAA2BrkD,KAAAskD,UACjft+C,EAAAs+C,UAAYtkD,KAAA2kD,YAAAngC,KAAAxe,EAAA2+C,aAAqC3kD,KAAAopD,gBAAApjD,EAAAojD,gBAAuCppD,KAAAqpD,kBAAArjD,EAAAqjD,kBAA2CrpD,KAAAspD,iBAAAtjD,EAAAsjD,iBAAyCtpD,KAAAslD,aAAAt/C,EAAAs/C,aAAiCtlD,KAAAilD,aAAAj/C,EAAAi/C,aAAiCjlD,KAAA2lD,SAAA3/C,EAAA2/C,SAAyB3lD,KAAAwpD,OAAAxjD,EAAAwjD,OAAqBxpD,KAAAkvD,gBAAAlpD,EAAAkpD,gBAAuClvD,KAAAuuD,gBAAAvoD,EAAAuoD,gBAAuCvuD,KAAAipD,UAAAjjD,EAAAijD,UAA2BjpD,KAAAkpD,mBAAAljD,EAAAkjD,mBAA6ClpD,KAAAyuD,iBAAAzoD,EAAAyoD,iBAAyCzuD,KAAAwuD,kBAAAxoD,EAAAwoD,kBAC3dxuD,KAAA0uD,SAAA1oD,EAAA0oD,SAAyB1uD,KAAAopC,aAAApjC,EAAAojC,aAAiCppC,KAAAqpC,aAAArjC,EAAAqjC,aAAiCrpC,MAAa2M,EAAAwiD,qBAAA,SAAAnpD,GAAuC2G,EAAAoiD,qBAAAl7D,KAAAmM,MAAsCA,KAAAgvD,SAAcI,SAAA,IAAapvD,KAAA7E,KAAA,uBAAiC6E,KAAA0pD,aAAA,GAAqB1pD,KAAAqvD,mBAAArvD,KAAAsvD,UAAA,EAAyCtvD,KAAAkuD,UAAAloD,IAAmB2G,EAAAwiD,qBAAAznD,UAAAuU,OAAA+jB,OAAArzB,EAAAoiD,qBAAArnD,WAAyFiF,EAAAwiD,qBAAAznD,UAAA7S,YAAA8X,EAAAwiD,qBAC3ZxiD,EAAAwiD,qBAAAznD,UAAA8c,KAAA,SAAAxe,GAAiP,MAA3L2G,GAAAoiD,qBAAArnD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAuDhG,KAAAgvD,SAAcI,SAAA,IAAapvD,KAAA0pD,aAAA1jD,EAAA0jD,aAAiC1pD,KAAAsvD,UAAAtpD,EAAAspD,UAA2BtvD,KAAAqvD,mBAAArpD,EAAAqpD,mBAA6CrvD,MAAa2M,EAAA4iD,cAAA,SAAAvpD,GAAgChG,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAA7E,KAAA,gBAA0B6E,KAAA4lC,UAAA5/B,YAAAiE,OAAAjE,KAAuChG,KAAA2hC,SAAA,GACnYh1B,EAAA4iD,cAAA7nD,WAA+B7S,YAAA8X,EAAA4iD,cAAA9pB,OAAA,SAAAz/B,GAAmD,OAAAE,IAAWw/B,UAAUK,QAAA,IAAA5qC,KAAA,WAAA6qC,UAAA,oBAAyDnD,KAAA7iC,KAAA6iC,KAAA1nC,KAAA6E,KAAA7E,KAAAyqC,cAA4C7xC,EAAAiM,KAAA4lC,UAAAtpB,EAAA,EAAAtlB,EAAAjD,EAAAyC,OAAiC8lB,EAAAtlB,EAAIslB,IAAA,CAAK,GAAAhT,GAAAvV,EAAAuoB,GAAAmpB,OAAAz/B,SAAqBsD,GAAAo8B,SAAkBx/B,EAAA0/B,UAAA/lC,KAAAyJ,GAA2C,MAAvBpD,GAAAy7B,QAAA3hC,KAAA2hC,QAAuBz7B,GAASvP,MAAA,WAAkB,OAAAqP,GAAA,GAAAhG,MAAAnL,YAAAqR,EAAA,EAAmCA,EAAAlG,KAAA4lC,UAAApvC,OAAwB0P,IAAAF,EAAA4/B,UAAA/lC,KAAAG,KAAA4lC,UAAA1/B,GAAAvP,QAAuE,OAAvBqP,GAAA27B,QAAA3hC,KAAA2hC,QAAuB37B,IACre2G,EAAA6iD,eAAA,SAAAxpD,GAAiC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAA7E,KAAA,iBAA2B6E,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAA,UAAqCrkB,KAAAgL,IAAA,KAAchL,KAAAsQ,KAAA,EAAYtQ,KAAAmpD,iBAAA,EAAwBnpD,KAAAgtD,QAAA,EAAehtD,KAAAkuD,UAAAloD,IAAmB2G,EAAA6iD,eAAA9nD,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAAuEiF,EAAA6iD,eAAA9nD,UAAA7S,YAAA8X,EAAA6iD,eACtR7iD,EAAA6iD,eAAA9nD,UAAA8c,KAAA,SAAAxe,GAA2L,MAA3I2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAAgL,IAAAhF,EAAAgF,IAAehL,KAAAsQ,KAAAtK,EAAAsK,KAAiBtQ,KAAAmpD,gBAAAnjD,EAAAmjD,gBAAuCnpD,MAC3L2M,EAAA8iD,eAAA,SAAAzpD,GAAiC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAA7E,KAAA,iBAA2B6E,KAAAgvD,WAAgBhvD,KAAAyoD,YAAiBzoD,KAAA0oD,aAAA,gGAAkH1oD,KAAA2oD,eAAA,iEAAqF3oD,KAAAmZ,UAAA,EAAiBnZ,KAAAipD,WAAA,EAAkBjpD,KAAAkpD,mBAAA,EAA0BlpD,KAAAqpC,aAAArpC,KAAAopC,aAAAppC,KAAA0uD,SAAA1uD,KAAA0vD,SAAA1vD,KAAAgtD,OAAAhtD,KAAAitD,KAAA,EAAwFjtD,KAAA2vD,YAAiBC,aAAA,EAAAC,WAAA,EACpeC,aAAA,EAAAC,kBAAA,GAAoC/vD,KAAAgwD,wBAA6B9+C,OAAA,OAAAi5B,IAAA,KAAAC,KAAA,MAAkCpqC,KAAAiwD,oBAAA,OAAgC,SAAAjqD,IAAA,SAAAA,EAAAoxB,YAAA9hC,QAAAC,MAAA,2FAAAyK,KAAAkuD,UAAAloD,KAAiK2G,EAAA8iD,eAAA/nD,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAAuEiF,EAAA8iD,eAAA/nD,UAAA7S,YAAA8X,EAAA8iD,eAC3W9iD,EAAA8iD,eAAA/nD,UAAA8c,KAAA,SAAAxe,GAA0d,MAA1a2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAA2oD,eAAA3iD,EAAA2iD,eAAqC3oD,KAAA0oD,aAAA1iD,EAAA0iD,aAAiC1oD,KAAAyoD,SAAA97C,EAAAujD,cAAAv5D,MAAAqP,EAAAyiD,UAAoDzoD,KAAAgvD,QAAAhpD,EAAAgpD,QAAuBhvD,KAAAipD,UAAAjjD,EAAAijD,UAA2BjpD,KAAAkpD,mBAAAljD,EAAAkjD,mBAA6ClpD,KAAAgtD,OAAAhnD,EAAAgnD,OAAqBhtD,KAAA0vD,SAAA1pD,EAAA0pD,SAAyB1vD,KAAA0uD,SAAA1oD,EAAA0oD,SAAyB1uD,KAAAopC,aAAApjC,EAAAojC,aAAiCppC,KAAAqpC,aAAArjC,EAAAqjC,aAAiCrpC,KAAA2vD,WAAA3pD,EAAA2pD,WAA6B3vD,MAC1d2M,EAAA8iD,eAAA/nD,UAAA+9B,OAAA,SAAAz/B,GAAgM,MAA9IA,GAAA2G,EAAAmgD,SAAAplD,UAAA+9B,OAAA5xC,KAAAmM,KAAAgG,GAA+CA,EAAAyiD,SAAAzoD,KAAAyoD,SAAyBziD,EAAA0iD,aAAA1oD,KAAA0oD,aAAiC1iD,EAAA2iD,eAAA3oD,KAAA2oD,eAAqC3iD,GAAU2G,EAAAwjD,kBAAA,SAAAnqD,GAAoC2G,EAAA8iD,eAAA57D,KAAAmM,KAAAgG,GAAkChG,KAAA7E,KAAA,qBAA+BwR,EAAAwjD,kBAAAzoD,UAAAuU,OAAA+jB,OAAArzB,EAAA8iD,eAAA/nD,WAAgFiF,EAAAwjD,kBAAAzoD,UAAA7S,YAAA8X,EAAAwjD,kBAC/XxjD,EAAAyjD,eAAA,SAAApqD,GAAiC2G,EAAAmgD,SAAAj5D,KAAAmM,MAA0BA,KAAA7E,KAAA,iBAA2B6E,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAA,UAAqCrkB,KAAAgL,IAAA,KAAchL,KAAAkjC,SAAA,EAAgBljC,KAAAgtD,OAAAhtD,KAAAitD,KAAA,EAAwBjtD,KAAAkuD,UAAAloD,IAAmB2G,EAAAyjD,eAAA1oD,UAAAuU,OAAA+jB,OAAArzB,EAAAmgD,SAAAplD,WAAuEiF,EAAAyjD,eAAA1oD,UAAA7S,YAAA8X,EAAAyjD,eAAgEzjD,EAAAyjD,eAAA1oD,UAAA8c,KAAA,SAAAxe,GAA4J,MAA5G2G,GAAAmgD,SAAAplD,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAkR,MAAAsT,KAAAxe,EAAAkL,OAAyBlR,KAAAgL,IAAAhF,EAAAgF,IAAehL,KAAAkjC,SAAAl9B,EAAAk9B,SAAyBljC,MACve2M,EAAA0jD,eAAA,WAAgC1jD,EAAA8iD,eAAA57D,KAAAmM,MAAgCyoD,SAAA97C,EAAAujD,cAAAplB,OAAAn+B,EAAA2jD,YAAAtD,QAA8D/G,SAAS1+C,MAAA,MAASmhD,aAAA/7C,EAAA4jD,YAAAC,YAAA7H,eAAAh8C,EAAA4jD,YAAAE,cAA6FzwD,KAAAkmD,YAAAlmD,KAAAgtD,QAAA,EAAgC/wC,OAAAomB,iBAAAriC,MAA8BimD,SAAShjB,YAAA,EAAA9mB,IAAA,WAA6B,MAAAnc,MAAAyoD,SAAAxC,QAAA1+C,OAAmC8J,IAAA,SAAArL,GAAiBhG,KAAAyoD,SAAAxC,QAAA1+C,MAAAvB,OAAmC2G,EAAA0jD,eAAA3oD,UAAAuU,OAAA+jB,OAAArzB,EAAA8iD,eAAA/nD,WACxaiF,EAAA0jD,eAAA3oD,UAAA7S,YAAA8X,EAAA0jD,eACA1jD,EAAAg/C,QAAA,SAAA3lD,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,GAA4C5J,OAAAC,eAAAlc,KAAA,MAAiCuH,MAAAoF,EAAA+jD,mBAA+B1wD,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAA2wD,WAAA3wD,KAAAnJ,KAAA,GAA6BmJ,KAAAqQ,MAAA,SAAArK,IAAA2G,EAAAg/C,QAAAiF,cAAoD5wD,KAAAysD,WAAgBzsD,KAAA4rD,QAAA,SAAA1lD,IAAAyG,EAAAg/C,QAAAkF,gBAAwD7wD,KAAAoiD,MAAA,SAAAruD,IAAA4Y,EAAAiU,oBAAkD5gB,KAAAqiD,MAAA,SAAA/lC,IAAA3P,EAAAiU,oBAAkD5gB,KAAAw+C,UAAA,SAAAxnD,IAAA2V,EAAAsU,aAA+CjhB,KAAAy+C,UAAA,SAAAn1C,IAAAqD,EAAAwU,yBAC5bnhB,KAAAsiD,WAAA,SAAAx8B,IAAA,EAA+B9lB,KAAAu+C,OAAA,SAAAh6B,IAAA5X,EAAAsV,WAA0CjiB,KAAA7E,KAAA,SAAA0W,IAAAlF,EAAAyU,iBAA8CphB,KAAA4N,OAAA,GAAAjB,GAAAykB,QAAA,KAAmCpxB,KAAAmiD,OAAA,GAAAx1C,GAAAykB,QAAA,KAAmCpxB,KAAA4+C,iBAAA,EAAwB5+C,KAAA8wD,kBAAA,EAAyB9wD,KAAA+wD,OAAA,EAAc/wD,KAAAgxD,gBAAA,EAAuBhxD,KAAAixD,SAAA,SAAAprC,IAAAlZ,EAAAgX,eAAgD3jB,KAAA+lC,QAAA,EAAe/lC,KAAAwT,SAAA,MAAoB7G,EAAAg/C,QAAAiF,cAAA,OAAmCjkD,EAAAg/C,QAAAkF,gBAAAlkD,EAAAwT,UACzYxT,EAAAg/C,QAAAjkD,WAAyB7S,YAAA8X,EAAAg/C,QAAA/kB,gBAAA5gC,IAA6C,IAAAA,GAAAhG,KAAA+lC,WAAuBpvC,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GACjD,MADmEhG,MAAAqQ,MAAArK,EAAAqK,MAAmBrQ,KAAAysD,QAAAzmD,EAAAymD,QAAAviD,MAAA,GAAgClK,KAAA4rD,QAAA5lD,EAAA4lD,QAAuB5rD,KAAAoiD,MAAAp8C,EAAAo8C,MAAmBpiD,KAAAqiD,MAAAr8C,EAAAq8C,MAAmBriD,KAAAw+C,UAAAx4C,EAAAw4C,UAA2Bx+C,KAAAy+C,UAAAz4C,EAAAy4C,UAA2Bz+C,KAAAsiD,WAAAt8C,EAAAs8C,WAA6BtiD,KAAAu+C,OAAAv4C,EAAAu4C,OAAqBv+C,KAAA7E,KAAA6K,EAAA7K,KAAiB6E,KAAA4N,OAAA4W,KAAAxe,EAAA4H,QAA2B5N,KAAAmiD,OAAA39B,KAAAxe,EAAAm8C,QAA2BniD,KAAA4+C,gBAAA54C,EAAA44C,gBAAuC5+C,KAAA8wD,iBAC/e9qD,EAAA8qD,iBAAmB9wD,KAAA+wD,MAAA/qD,EAAA+qD,MAAmB/wD,KAAAgxD,gBAAAhrD,EAAAgrD,gBAAuChxD,KAAAixD,SAAAjrD,EAAAirD,SAAyBjxD,MAAYylC,OAAA,SAAAz/B,GAAoB,YAAAA,EAAA6/B,SAAA7lC,KAAA6iC,MAAA,MAAA78B,GAAA6/B,SAAA7lC,KAAA6iC,KAA+D,IAAA38B,IAAOw/B,UAAUK,QAAA,IAAA5qC,KAAA,UAAA6qC,UAAA,kBAAsDnD,KAAA7iC,KAAA6iC,KAAAhsC,KAAAmJ,KAAAnJ,KAAA+0D,QAAA5rD,KAAA4rD,QAAAzJ,QAAAniD,KAAAmiD,OAAApjD,EAAAiB,KAAAmiD,OAAAnvC,GAAApF,QAAA5N,KAAA4N,OAAA7O,EAAAiB,KAAA4N,OAAAoF,GAAA64C,MAAA7rD,KAAAoiD,MAAApiD,KAAAqiD,OAAA5D,UAAAz+C,KAAAy+C,UAAAD,UAAAx+C,KAAAw+C,UAAA8D,WAAAtiD,KAAAsiD,WAC5Q,aAAAtiD,KAAAqQ,MAAA,CAAwB,GAAAtc,GAAAiM,KAAAqQ,KAAqE,IAApD,SAAAtc,EAAA8uC,OAAA9uC,EAAA8uC,KAAAl2B,EAAAnN,KAAAu9B,gBAAoD,SAAA/2B,EAAA8/B,OAAA/xC,EAAA8uC,MAAA,CAA8B,GAAAte,GAAAjI,EAAAtW,EAAA8/B,OAAA9uC,EAAAjD,EAAA8uC,KAAAv5B,EAAAvV,EAAA8uC,IAAmC,UAAA9uC,EAAAm9D,UAAA3sC,EAAAxwB,GAAAwwB,EAAAjiB,SAAAglD,gBAAA,yCAAA/iC,EAAApmB,MAAApK,EAAAoK,MAAAomB,EAAAnmB,OAAArK,EAAAqK,OAAAmmB,EAAA/X,WAAA,MAAA2kD,UAAAp9D,EAAA,IAAAA,EAAAoK,MAAApK,EAAAqK,SAAsLmmB,EAAA,KAAAA,EAAApmB,OAAA,KAAAomB,EAAAnmB,OAAAmmB,EAAA2sC,UAAA,iBAAA3sC,EAAA2sC,UAAA,aAAoF50C,EAAAtlB,IAAM6rC,KAAAv5B,EAAAoiD,IAAAnnC,GAAcre,EAAAmK,MAAAtc,EAAA8uC,KAAe,MAAA78B,GAAA6/B,SAAA7lC,KAAA6iC,MAAA38B,GAA+BolC,QAAA,WAAoBtrC,KAAAqhC,eAAoBlmC,KAAA,aAClhBi2D,YAAA,SAAAprD,GAAwB,GAAAhG,KAAA4rD,UAAAj/C,EAAAwT,UAAA,CAA8E,GAA3Cna,EAAAmgB,SAAAnmB,KAAAmiD,QAAwBn8C,EAAAmJ,IAAAnP,KAAA4N,QAAmB,EAAA5H,EAAAjH,GAAA,EAAAiH,EAAAjH,EAAA,OAAAiB,KAAAoiD,OAAmC,IAAAz1C,GAAAgU,eAAA3a,EAAAjH,GAAAS,KAAAzI,MAAAiP,EAAAjH,EAA+C,MAAM,KAAA4N,GAAAiU,oBAAA5a,EAAAjH,EAAA,EAAAiH,EAAAjH,EAAA,GAA6C,MAAM,KAAA4N,GAAAkU,uBAAA,IAAArhB,KAAA+wB,IAAA/wB,KAAAzI,MAAAiP,EAAAjH,GAAA,GAAAiH,EAAAjH,EAAAS,KAAA0yB,KAAAlsB,EAAAjH,GAAAiH,EAAAjH,EAAAiH,EAAAjH,GAAAS,KAAAzI,MAAAiP,EAAAjH,GAA8G,KAAAiH,EAAAgN,GAAA,EAAAhN,EAAAgN,EAAA,OAAAhT,KAAAqiD,OAAmC,IAAA11C,GAAAgU,eAAA3a,EAAAgN,GAAAxT,KAAAzI,MAAAiP,EAAAgN,EAA+C,MAAM,KAAArG,GAAAiU,oBAAA5a,EAAAgN,EAAA,EAAAhN,EAAAgN,EAAA,GAA6C,MAAM,KAAArG,GAAAkU,uBAAA,IAC1erhB,KAAA+wB,IAAA/wB,KAAAzI,MAAAiP,EAAAgN,GAAA,GAAAhN,EAAAgN,EAAAxT,KAAA0yB,KAAAlsB,EAAAgN,GAAAhN,EAAAgN,EAAAhN,EAAAgN,GAAAxT,KAAAzI,MAAAiP,EAAAgN,GAAwEhT,KAAA+wD,QAAA/qD,EAAAgN,EAAA,EAAAhN,EAAAgN,MAA2BiJ,OAAAI,OAAA1P,EAAAg/C,QAAAjkD,UAAAiF,EAAAq0B,gBAAAt5B,WAAuEiF,EAAA+jD,eAAA,EAC1K/jD,EAAA0kD,aAAA,SAAArrD,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,GAA+CnZ,EAAAg/C,QAAA93D,KAAAmM,KAAA,KAAAsc,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAlF,EAAA0V,YAAAtuB,EAAA+xB,GAA8D9lB,KAAAqQ,OAAYlS,MAAA6H,EAAA5H,OAAA8H,GAAkBlG,KAAA7E,KAAA,SAAApH,IAAA4Y,EAAA4U,kBAA+CvhB,KAAAw+C,UAAA,SAAAj6B,IAAA5X,EAAAmU,cAAgD9gB,KAAAy+C,UAAA,SAAA5sC,IAAAlF,EAAAmU,cAAgD9gB,KAAA4+C,gBAAA5+C,KAAA+wD,OAAA,GAAoCpkD,EAAA0kD,aAAA3pD,UAAAuU,OAAA+jB,OAAArzB,EAAAg/C,QAAAjkD,WAAoEiF,EAAA0kD,aAAA3pD,UAAA7S,YAAA8X,EAAA0kD,aAClY1kD,EAAA2kD,cAAA,SAAAtrD,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,GAAgDnZ,EAAAg/C,QAAA93D,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,GAA2C9lB,KAAA4mC,aAAA,GAAqBj6B,EAAA2kD,cAAA5pD,UAAAuU,OAAA+jB,OAAArzB,EAAAg/C,QAAAjkD,WAAqEiF,EAAA2kD,cAAA5pD,UAAA7S,YAAA8X,EAAA2kD,cAA8D3kD,EAAAy/C,YAAA,SAAApmD,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,GAAgD7f,EAAA,SAAAA,OAAkBE,EAAA,SAAAA,IAAAyG,EAAAyT,sBAA2CzT,EAAAg/C,QAAA93D,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,GAA6C7lB,KAAA+wD,OAAA,GAAepkD,EAAAy/C,YAAA1kD,UAAAuU,OAAA+jB,OAAArzB,EAAAg/C,QAAAjkD,WAC5ZiF,EAAAy/C,YAAA1kD,UAAA7S,YAAA8X,EAAAy/C,YAA0DnwC,OAAAC,eAAAvP,EAAAy/C,YAAA1kD,UAAA,UAA4DyU,IAAA,WAAe,MAAAnc,MAAAqQ,OAAkBgB,IAAA,SAAArL,GAAiBhG,KAAAqQ,MAAArK,KAAgB2G,EAAAigD,kBAAA,SAAA5mD,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,EAAAqL,EAAAl9B,GAA0D2Y,EAAAg/C,QAAA93D,KAAAmM,KAAA,KAAAsJ,EAAAib,EAAA1S,EAAAiU,EAAAD,EAAAvJ,EAAAtlB,EAAAk6B,EAAAl9B,GAAgDgM,KAAAqQ,OAAYlS,MAAA+H,EAAA9H,OAAArK,GAAkBiM,KAAAysD,QAAAzmD,EAAehG,KAAA4+C,gBAAA5+C,KAAA+wD,OAAA,GAAoCpkD,EAAAigD,kBAAAllD,UAAAuU,OAAA+jB,OAAArzB,EAAAg/C,QAAAjkD,WAAyEiF,EAAAigD,kBAAAllD,UAAA7S,YAAA8X,EAAAigD,kBAC5bjgD,EAAA6/C,YAAA,SAAAxmD,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,EAAAqL,EAAAl9B,GAAoD2Y,EAAAg/C,QAAA93D,KAAAmM,KAAA,KAAAsJ,EAAAib,EAAA1S,EAAAiU,EAAAD,EAAAvJ,EAAAtlB,EAAAk6B,EAAAl9B,GAAgDgM,KAAAqQ,OAAYpb,KAAA+Q,EAAA7H,MAAA+H,EAAA9H,OAAArK,GAAyBiM,KAAAw+C,UAAA,SAAA14B,IAAAnZ,EAAAmU,cAAgD9gB,KAAAy+C,UAAA,SAAA54B,IAAAlZ,EAAAmU,cAAgD9gB,KAAA4+C,gBAAA5+C,KAAA+wD,OAAA,GAAoCpkD,EAAA6/C,YAAA9kD,UAAAuU,OAAA+jB,OAAArzB,EAAAg/C,QAAAjkD,WAAmEiF,EAAA6/C,YAAA9kD,UAAA7S,YAAA8X,EAAA6/C,YAChV7/C,EAAA4kD,aAAA,SAAAvrD,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,GAA+C,QAAAD,KAAa7mB,sBAAA6mB,GAAyB7f,EAAAwrD,YAAAxrD,EAAAyrD,oBAAAvgC,EAAA0V,aAAA,GAAsDj6B,EAAAg/C,QAAA93D,KAAAmM,KAAAgG,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,GAA2C9lB,KAAA4+C,iBAAA,CAAwB,IAAA1tB,GAAAlxB,IAAW6lB,MAAKlZ,EAAA4kD,aAAA7pD,UAAAuU,OAAA+jB,OAAArzB,EAAAg/C,QAAAjkD,WAAoEiF,EAAA4kD,aAAA7pD,UAAA7S,YAAA8X,EAAA4kD,aAA4D5kD,EAAAq/C,MAAA,WAAuBr/C,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,SAAmBwR,EAAAq/C,MAAAtkD,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAA6E7S,YAAA8X,EAAAq/C,QAC/er/C,EAAAu1B,OAAA,SAAAl8B,EAAAE,GAA2ByG,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,SAAmB6E,KAAAk3B,SAAA,SAAAlxB,IAAA,GAAA2G,GAAAwqB,eAAoDn3B,KAAAimC,SAAA,SAAA//B,IAAA,GAAAyG,GAAA6iD,gBAAqDt+C,MAAA,SAAA1R,KAAAw9B,YACjLrwB,EAAAu1B,OAAAx6B,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAA8E7S,YAAA8X,EAAAu1B,OAAAN,QAAA,WAA4C,GAAA57B,GAAA,GAAA2G,GAAA2mB,QAAAptB,EAAA,GAAAyG,GAAAquB,IAAAjnC,EAAA,GAAA4Y,GAAA+qB,MAA2D,iBAAApb,EAAAtlB,GAAqB,QAAAsS,GAAAtD,EAAAjS,GAAgB,GAAAuV,GAAApD,EAAAk1B,kBAAAp1B,EAA6B,IAAAsD,EAAA4nB,EAAA,CAAQ,GAAArf,GAAA3L,EAAA0vB,oBAAA5vB,EAA+B6L,GAAAuhB,aAAAtN,EAAkB,IAAAhyB,GAAAwoB,EAAArF,IAAAgkB,OAAAzI,WAAA3gB,EAAiC/d,GAAAwoB,EAAAwlB,MAAAhuC,EAAAwoB,EAAAylB,KAAA/qC,EAAA6I,MAA2B41B,SAAA3hC,EAAA49D,cAAAlyD,KAAAgmB,KAAAlc,GAAA0N,MAAAnF,EAAAlb,QAAAkN,MAAA9P,EAAA49D,KAAA,KAAAx7C,OAAAoO,KAAoF,GAAAA,GAAAvkB,KAAA6R,EAAA7R,KAAAk3B,SAAApR,EAAA9lB,KAAA0zB,YAAA7N,EAAAvJ,EAAA0lB,OAAAE,OAAAC,SAClW,IAA9F,OAAAtwB,EAAAoqB,gBAAApqB,EAAAqqB,wBAAmDnoC,EAAAywB,KAAA3S,EAAAoqB,gBAAyBloC,EAAAq/B,aAAAtN,IAAkB,IAAAxJ,EAAArF,IAAAogB,iBAAAtjC,GAAA,CAAmCiS,EAAAytB,WAAA3N,GAAgB5f,EAAAse,KAAAlI,EAAArF,KAAAmc,aAAAptB,EAA8B,IAAA6f,OAAA7lB,KAAAk6B,MAAAn7B,EAAAiB,KAAAk6B,MAAAlnB,EAAAhT,KAAAk6B,MAAAjnB,GAAA,GAAAie,EAAArL,MAAA,GAAAlZ,GAAA8G,OAA+E,IAAA5B,YAAAlF,GAAAwqB,eAAA,CAAsC,GAAAnjC,GAAA6d,EAAAhO,MAAAgO,IAAAulB,WAAAp+B,SAAA65B,KAA4C,WAAA7+B,EAAA,OAAAF,GAAAE,EAAA6+B,MAAA7+B,EAAA,EAAAm9B,EAAAr9B,EAAA0C,OAA6CxC,EAAAm9B,EAAIn9B,IAAA,CAAK,GAAA8d,GAAAhe,EAAAE,EAAW6xB,GAAAS,UAAAzU,EAAA,EAAAC,GAAmBxI,EAAAuc,EAAA/T,OAAO,KAAA9d,EAAA,EAAAF,EAAA+d,EAAArb,OAAA,EAA0BxC,EAAAF,EAAIE,IAAA6xB,EAAAS,UAAAzU,EAAA,EAAA7d,GAAAsV,EAAAuc,EAAA7xB,OAA8B,KAAA6xB,EAAAhU,EAAA2H,SACvexlB,EAAA,EAAAF,EAAA+xB,EAAArvB,OAAexC,EAAAF,EAAIE,IAAAsV,EAAAuc,EAAA7xB,WAAgB2C,MAAA,WAAoB,UAAAqJ,MAAAnL,YAAAmL,KAAAk3B,SAAAl3B,KAAAimC,UAAAzhB,KAAAxkB,SAAwE2M,EAAA+M,KAAA,SAAA1T,EAAAE,EAAAnS,GAA2B,WAAAA,GAAAuB,QAAA0vB,KAAA,sGAAArY,GAAAilD,aAAA5rD,EAAAE,KAA4JyG,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,OAAiB6E,KAAAk3B,SAAA,SAAAlxB,IAAA,GAAA2G,GAAAwqB,oBAAoDn3B,KAAAimC,SAAA,SAAA//B,IAAA,GAAAyG,GAAAuM,mBAAwDhI,MAAA,SAAA1R,KAAAw9B,cAC7crwB,EAAA+M,KAAAhS,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAA4E7S,YAAA8X,EAAA+M,KAAAkoB,QAAA,WAA0C,GAAA57B,GAAA,GAAA2G,GAAA2mB,QAAAptB,EAAA,GAAAyG,GAAAquB,IAAAjnC,EAAA,GAAA4Y,GAAA+qB,MAA2D,iBAAApb,EAAAtlB,GAAqB,GAAAsS,GAAAgT,EAAAimB,cAAAj5B,MAAAib,EAAAvkB,KAAAk3B,SAAArlB,EAAA7R,KAAA0zB,WAA6J,IAA9F,OAAAnP,EAAA0X,gBAAA1X,EAAA2X,wBAAmDnoC,EAAAywB,KAAAD,EAAA0X,gBAAyBloC,EAAAq/B,aAAAvhB,IAAkB,IAAAyK,EAAArF,IAAAogB,iBAAAtjC,GAAA,CAAmCiS,EAAAytB,WAAA5hB,GAAgB3L,EAAAse,KAAAlI,EAAArF,KAAAmc,aAAAptB,EAA8B,IAAA8f,GAAA,GAAAnZ,GAAA8G,QAAAoS,EAAA,GAAAlZ,GAAA8G,QAAA5B,EAAA,GAAAlF,GAAA8G,QAAAyd,EACpb,GAAAvkB,GAAA8G,QAAAzf,EAAAgM,eAAA2M,GAAAilD,aAAA,GAA2D,IAAArtC,YAAA5X,GAAAwqB,eAAA,CAAsC,GAAArjC,GAAAywB,EAAA1gB,MAAAstB,EAAA5M,EAAA6S,WAAAp+B,SAAA65B,KAA4C,WAAA/+B,EAAA,OAAAA,KAAA++B,MAAAtO,EAAA,EAAAzS,EAAAhe,EAAA0C,OAAA,EAA+C+tB,EAAAzS,EAAIyS,GAAAvwB,EAAA,CAAM,GAAA4xB,GAAA9xB,EAAAywB,EAAA,EAAauB,GAAAQ,UAAA6K,EAAA,EAAAr9B,EAAAywB,IAAsBsB,EAAAS,UAAA6K,EAAA,EAAAvL,GAAmBA,EAAA1f,EAAAm1B,oBAAAvV,EAAAD,EAAAqL,EAAArf;AAAiC+T,EAAAtc,IAAA4nB,EAAAkC,aAAApzB,KAAA0zB,aAAA9N,EAAAtJ,EAAArF,IAAAgkB,OAAAzI,WAAAtB,GAAAtL,EAAAtJ,EAAAwlB,MAAAlc,EAAAtJ,EAAAylB,KAAA/qC,EAAA6I,MAA+F41B,SAAA7P,EAAA5O,MAAAnF,EAAAlb,QAAAy8B,aAAApzB,KAAA0zB,aAAA7vB,MAAA0gB,EAAAotC,KAAA,KAAAE,UAAA,KAAA17C,OAAAnW,YAA0G,KAAAukB,EAAA,EAAAzS,EACteqf,EAAA36B,OAAA,IAAa+tB,EAAAzS,EAAIyS,GAAAvwB,EAAA8xB,EAAAQ,UAAA6K,EAAA,EAAA5M,GAAAsB,EAAAS,UAAA6K,EAAA,EAAA5M,EAAA,GAAAqB,EAAA1f,EAAAm1B,oBAAAvV,EAAAD,EAAAqL,EAAArf,GAAA+T,EAAAtc,IAAA4nB,EAAAkC,aAAApzB,KAAA0zB,aAAA9N,EAAAtJ,EAAArF,IAAAgkB,OAAAzI,WAAAtB,GAAAtL,EAAAtJ,EAAAwlB,MAAAlc,EAAAtJ,EAAAylB,KAAA/qC,EAAA6I,MAA6K41B,SAAA7P,EAAA5O,MAAAnF,EAAAlb,QAAAy8B,aAAApzB,KAAA0zB,aAAA7vB,MAAA0gB,EAAAotC,KAAA,KAAAE,UAAA,KAAA17C,OAAAnW,YAA0G,IAAAukB,YAAA5X,GAAA4M,SAAA,IAAAuM,EAAAvB,EAAA/K,SAAAqM,EAAAC,EAAAtvB,OAAA+tB,EAAA,EAAoEA,EAAAsB,EAAA,EAAMtB,GAAAvwB,EAAA4xB,EAAA1f,EAAAm1B,oBAAAvV,EAAAvB,GAAAuB,EAAAvB,EAAA,GAAA2M,EAAArf,GAAA+T,EAAAtc,IAAA4nB,EAAAkC,aAAApzB,KAAA0zB,aAAA9N,EAAAtJ,EAAArF,IAAAgkB,OAAAzI,WAAAtB,GAAAtL,EAAAtJ,EAAAwlB,MAAAlc,EAAAtJ,EAAAylB,KAClX/qC,EAAA6I,MAAQ41B,SAAA7P,EAAA5O,MAAAnF,EAAAlb,QAAAy8B,aAAApzB,KAAA0zB,aAAA7vB,MAAA0gB,EAAAotC,KAAA,KAAAE,UAAA,KAAA17C,OAAAnW,aAA4GrJ,MAAA,WAAoB,UAAAqJ,MAAAnL,YAAAmL,KAAAk3B,SAAAl3B,KAAAimC,UAAAzhB,KAAAxkB,SAAwE2M,EAAAilD,aAAA,SAAA5rD,EAAAE,GAAiCyG,EAAA+M,KAAA7lB,KAAAmM,KAAAgG,EAAAE,GAA0BlG,KAAA7E,KAAA,gBAA0BwR,EAAAilD,aAAAlqD,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAA+M,KAAAhS,YAAgF7S,YAAA8X,EAAAilD,eACrXjlD,EAAAyE,KAAA,SAAApL,EAAAE,GAAyByG,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,OAAiB6E,KAAAk3B,SAAA,SAAAlxB,IAAA,GAAA2G,GAAAwqB,eAAoDn3B,KAAAimC,SAAA,SAAA//B,IAAA,GAAAyG,GAAA2hD,mBAAwDp9C,MAAA,SAAA1R,KAAAw9B,WAA+Bh9B,KAAA8xD,SAAAnlD,EAAA6W,kBAAsCxjB,KAAA+xD,sBACrPplD,EAAAyE,KAAA1J,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAA4E7S,YAAA8X,EAAAyE,KAAA4gD,YAAA,SAAAhsD,GAA+ChG,KAAA8xD,SAAA9rD,GAAgBwe,KAAA,SAAAxe,GAAsF,MAApE2G,GAAAsC,SAAAvH,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAA8xD,SAAA9rD,EAAA8rD,SAAyB9xD,MAAY+xD,mBAAA,WAA+B,YAAA/xD,KAAAk3B,SAAAkS,cAAA,EAAAppC,KAAAk3B,SAAAkS,aAAA5yC,OAAA,CAA6EwJ,KAAAiyD,mBAAwBjyD,KAAAkyD,yBAA8BlyD,KAAAmyD,wBAA8B,QAAAnsD,GAAA,EAAAE,EAAAlG,KAAAk3B,SAAAkS,aAAA5yC,OAAgDwP,EAAAE,EAAIF,IAAAhG,KAAAkyD,sBAAAryD,KAAA,GACjeG,KAAAmyD,sBAAAnyD,KAAAk3B,SAAAkS,aAAApjC,GAAAnP,MAAAmP,IAAkEosD,0BAAA,SAAApsD,GAAuC,gBAAAhG,KAAAmyD,sBAAAnsD,GAAAhG,KAAAmyD,sBAAAnsD,IAA+E1Q,QAAA0vB,KAAA,sDAAAhf,EAAA,iCAAsG,IAAS47B,QAAA,WAAoB,QAAA57B,KAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAutB,EAAAjb,GAAyJ,MAA/HqD,GAAA2xB,SAAAC,mBAAAv4B,EAAAE,EAAAnS,EAAAuoB,EAAAsJ,GAA6C5uB,EAAA2D,eAAAirB,EAAA7mB,GAAsBwlB,EAAA5pB,eAAAirB,EAAA5S,GAAsB1J,EAAA3O,eAAAirB,EAAA3S,GAAsBjc,EAAAmY,IAAAoV,GAAApV,IAAA7F,GAAgBtS,EAAAL,QAAiB,QAAAuP,GAAAF,EAAAE,EAAAnS,EACreuoB,EAAAtlB,EAAAutB,EAAAjb,GAAS,GAAAuI,GAAA7L,EAAAigC,QAAiB,gBAAAp0B,EAAAm0C,OAAAr5C,EAAA2Q,SAAAvpB,EAAA0nC,kBAAAlX,EAAAvtB,EAAAslB,GAAA,EAAAhT,GAAAvV,EAAA0nC,kBAAAnf,EAAAtlB,EAAAutB,EAAA1S,EAAAm0C,OAAAr5C,EAAA4Q,WAAAjU,IAAA,MAAuI0vB,EAAAxU,KAAAlb,GAAU0vB,EAAA5F,aAAAptB,EAAA0tB,aAA8B3/B,EAAAmS,EAAA+Q,IAAAgkB,OAAAzI,WAAAwG,GAA6BjlC,EAAAmS,EAAA47B,MAAA/tC,EAAAmS,EAAA67B,IAAA,MAA+BtM,SAAA1hC,EAAAijB,MAAAgiB,EAAAriC,QAAAwf,OAAAnQ,IAAqC,QAAAjS,KAAAuoB,EAAAtlB,EAAAsS,EAAAuc,EAAA7xB,EAAAk9B,EAAAtL,GAC1P,MADsRrB,GAAA+B,UAAAhd,EAAA,EAAAtV,GAAmB6d,EAAAyU,UAAAhd,EAAA,EAAA4nB,GAAmBpL,EAAAQ,UAAAhd,EAAA,EAAAsc,IAAmB7xB,EAAAmS,EAAAnS,EAAAuoB,EAAAtlB,EAAAutB,EAAA1S,EAAAiU,EAAA4S,MAAA7S,IAAA/xB,EAAAwyB,UAAAT,EAAA,EAAA7xB,GAAAm9B,EAAA7K,UAAAT,EAAA,EAAAqL,GAAApf,EAAAwU,UAAAT,EAAA,EAAAD,GAAA7xB,EAAAo2C,GAAAnkC,EAAA0yB,EAAAnU,EAAA1S,EAAAiU,EAAAhyB,EAAAq9B,EAAArf,IAAA/d,EAAA49D,KAAA,GAAAhlD,GAAAw5B,MAAAnyC,EAC/Xk9B,EAAAtL,EAAAjZ,EAAA2xB,SAAA/G,OAAAhT,EAAA1S,EAAAiU,IAAA/xB,EAAA89D,UAAA79D,GAAgDD,EAAS,GAAAuoB,GAAA,GAAA3P,GAAA2mB,QAAAt8B,EAAA,GAAA2V,GAAAquB,IAAA1xB,EAAA,GAAAqD,GAAA+qB,OAAAnT,EAAA,GAAA5X,GAAA8G,QAAA5B,EAAA,GAAAlF,GAAA8G,QAAAqS,EAAA,GAAAnZ,GAAA8G,QAAAoS,EAAA,GAAAlZ,GAAA8G,QAAAyd,EAAA,GAAAvkB,GAAA8G,QAAAzf,EAAA,GAAA2Y,GAAA8G,QAAA3f,EAAA,GAAA6Y,GAAAykB,QAAAD,EAAA,GAAAxkB,GAAAykB,QAAAtf,EAAA,GAAAnF,GAAAykB,QAAAxL,EAAA,GAAAjZ,GAAA8G,QAAAilB,EAAA,GAAA/rB,GAAA8G,QAAAulB,EAAA,GAAArsB,GAAA8G,OAA2S,iBAAAwlB,EAAArT,GAAqB,GAAAhU,GAAA5R,KAAAk3B,SAAA8B,EAAAh5B,KAAAimC,SAAAhzB,EAAAjT,KAAA0zB,WAAuD,aAAAsF,IAAA,OAAApnB,EAAAqqB,gBAAArqB,EAAAsqB,wBAAA5yB,EAAAkb,KAAA5S,EAAAqqB,gBAChb3yB,EAAA8pB,aAAAngB,IAAA,IAAAgmB,EAAAhiB,IAAAogB,iBAAA/tB,KAAAgT,EAAAmX,WAAAxgB,GAAAjc,EAAAwtB,KAAAyU,EAAAhiB,KAAAmc,aAAA9W,GAAA,OAAA1K,EAAA63B,cAAA,IAAAzyC,EAAAw/B,cAAA5kB,EAAA63B,eAAA,CAA8J,GAAAz2B,GAAAomB,CAAQ,IAAAxnB,YAAAjF,GAAAwqB,eAAA,CAAsC,GAAAkC,GAAAC,EAAAN,EAAApnB,EAAA/N,MAAAoP,EAAArB,EAAAwlB,WAAAxlB,EAAAqB,EAAAja,SAAA65B,KAAkF,IAA9B,SAAA5f,EAAAk3B,KAAAn3B,EAAAC,EAAAk3B,GAAAtX,OAA8B,OAAAmG,EAAA,OAAA/lB,GAAA+lB,EAAAnG,MAAA0G,EAAA,EAAAC,EAAAvmB,EAAAzc,OAA6C+iC,EAAAC,EAAID,GAAA,EAAMP,EAAA/lB,EAAAsmB,GAAAF,EAAApmB,EAAAsmB,EAAA,GAAAD,EAAArmB,EAAAsmB,EAAA,IAAAH,EAAArlC,EAAAiM,KAAAi5B,EAAAjiC,EAAA4a,EAAAoB,EAAAgmB,EAAAK,EAAAC,MAAAF,EAAAy4B,UAAAryD,KAAAzI,MAAAwiC,EAAA,GAAA3T,EAAA/lB,KAAAu5B,QAA0F,KAAAG,EAAA,EAAAC,EAAA5nB,EAAApb,OAAwB+iC,EAAAC,EAAID,GAAA,EAAAP,EAAAO,EAAA,EAAAF,EAAAL,EAAA,EAAAM,EAAAN,EAAA,GAAAI,EAAArlC,EAAAiM,KAAAi5B,EAAAjiC,EAAA4a,EAAAoB,EAC3cgmB,EAAAK,EAAAC,MAAAF,EAAAv1B,MAAAm1B,EAAApT,EAAA/lB,KAAAu5B,QAA2B,IAAAxnB,YAAAjF,GAAA4M,SAAA,CAAqC,GAAAkgB,GAAAC,EAAAzmB,EAAA+lB,YAAArsB,GAAA4iD,cAAAh2B,GAAA,IAAAtmB,EAAA+lB,EAAA4M,UAAA,KAAApM,EAAA5nB,EAAA4H,QAAkF6f,GAAAznB,EAAAs3B,MAAU5P,EAAA1nB,EAAAu3B,cAAA,GAAqB,EAAA7P,EAAA9iC,SAAAwc,EAAAsmB,EAAkB,QAAAK,GAAA,EAAAC,EAAAP,EAAA7iC,OAAuBmjC,EAAAC,EAAID,IAAA,CAAK,GAAAE,GAAAR,EAAAM,EAAyC,IAA9BP,GAAA,IAAAnmB,EAAAsmB,EAAAM,EAAAyM,eAAAtN,EAA8B,SAAAI,EAAA,CAA0C,GAA3BE,EAAAE,EAAAK,EAAA7zB,GAASyzB,EAAAD,EAAAK,EAAA3zB,GAASwzB,EAAAF,EAAAK,EAAA9lC,IAAS,IAAAqlC,EAAAgQ,aAAA,CAAwBhQ,EAAAxnB,EAAAw3B,YAAiB,IAAAtP,GAAA95B,KAAAkyD,qBAAiC3tC,GAAAlT,IAAA,OAAaQ,EAAAR,IAAA,OAAayU,EAAAzU,IAAA,MAAa,QAAAghD,GAAA,EAAAC,EAAAl5B,EAAA5iC,OAAuB67D,EAAAC,EAAID,IAAA,CAAK,GAAAE,GAAAz4B,EAAAu4B,EAAW,QAAAE,EAAA,CAAU,GAAAC,GAAAp5B,EAAAi5B,GAAA74C,QAAoB+K,GAAAmN,gBAAA7L,EAAA8L,WAAA6gC,EAAA34B,EAAA7zB,GAChfszB,GAAAi5B,GAAM1gD,EAAA6f,gBAAAR,EAAAS,WAAA6gC,EAAA34B,EAAA3zB,GAAAuzB,GAAA84B,GAA4CzsC,EAAA4L,gBAAA19B,EAAA29B,WAAA6gC,EAAA34B,EAAA9lC,GAAA2lC,GAAA64B,IAA6ChuC,EAAApV,IAAAmqB,GAASznB,EAAA1C,IAAAsqB,GAAS3T,EAAA3W,IAAAuqB,GAASJ,EAAA/U,EAAIkV,EAAA5nB,EAAI6nB,EAAA5T,GAAIsT,EAAAlzB,EAAAlG,KAAAi5B,EAAAjiC,EAAAsiC,EAAAG,EAAAC,EAAAhB,MAAA1lB,IAAA8mB,EAAA9mB,EAAA2mB,GAAA7lC,EAAA0wB,KAAAsV,EAAA,IAAA3I,EAAA3M,KAAAsV,EAAA,IAAAhoB,EAAA0S,KAAAsV,EAAA,IAAAV,EAAA+Q,GAAAnkC,EAAA0yB,EAAAY,EAAAG,EAAAC,EAAA5lC,EAAAq9B,EAAArf,IAAAsnB,EAAAu4B,KAAA93B,EAAAT,EAAAy4B,UAAAl4B,EAAA/T,EAAA/lB,KAAAu5B,YAAwIziC,MAAA,WAAoB,UAAAqJ,MAAAnL,YAAAmL,KAAAk3B,SAAAl3B,KAAAimC,UAAAzhB,KAAAxkB,SAAwE2M,EAAA8lD,KAAA,SAAAzsD,GAAuB2G,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,OAAiB6E,KAAA0yD,KAAA1sD,GAC5a2G,EAAA8lD,KAAA/qD,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAA4E7S,YAAA8X,EAAA8lD,KAAAjuC,KAAA,SAAAxe,GAAoG,MAA5D2G,GAAAsC,SAAAvH,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAA0yD,KAAA1sD,EAAA0sD,KAAiB1yD,QAChL2M,EAAAgmD,SAAA,SAAA3sD,EAAAE,EAAAnS,GACyD,GAD1BiM,KAAA4yD,iBAAA,SAAA7+D,KAAsCiM,KAAA6yD,eAAA,GAAAlmD,GAAA2mB,QAAsCttB,QAAQhG,KAAA04C,MAAA1yC,EAAAkE,MAAA,GAAsBlK,KAAA4yD,kBAAA5sD,EAAAxG,KAAAgmB,KAAA,EAAAxlB,KAAA04C,MAAAliD,QAAAwP,EAAA2G,EAAAnN,KAAAq+B,eAAAr+B,KAAA0yB,KAAAlsB,IAAAhG,KAAA8yD,kBAAA9yD,KAAA+yD,iBAAA/sD,EAAAxG,KAAAC,IAAAuG,EAAA,GAAAhG,KAAAgzD,aAAA,GAAAp7B,cAAA53B,KAAA+yD,iBAAA/yD,KAAA8yD,kBAAA,GAAA9yD,KAAAizD,YAAA,GAAAtmD,GAAA6/C,YAAAxsD,KAAAgzD,aAAAhzD,KAAA+yD,iBAAA/yD,KAAA8yD,kBAAAnmD,EAAAsV,WAAAtV,EAAA+U,YACzI1hB,KAAAgzD,aAAA,GAAAp7B,cAAA,GAAA53B,KAAA04C,MAAAliD,QAAyD,SAAA0P,EAAAlG,KAAAkzD,wBAAuC,IAAAlzD,KAAA04C,MAAAliD,SAAA0P,EAAA1P,OAAAwJ,KAAAmzD,aAAAjtD,EAAAgE,MAAA,OAAkE,KAAA5U,QAAA0vB,KAAA,mDAAAhlB,KAAAmzD,gBAAAjtD,EAAA,EAAAF,EAAAhG,KAAA04C,MAAAliD,OAAsH0P,EAAAF,EAAIE,IAAAlG,KAAAmzD,aAAAtzD,KAAA,GAAA8M,GAAA2mB,UAC5RrX,OAAAI,OAAA1P,EAAAgmD,SAAAjrD,WAAwCwrD,kBAAA,WAA6BlzD,KAAAmzD,eAAqB,QAAAntD,GAAA,EAAAE,EAAAlG,KAAA04C,MAAAliD,OAAgCwP,EAAAE,EAAIF,IAAA,CAAK,GAAAjS,GAAA,GAAA4Y,GAAA2mB,OAAwBtzB,MAAA04C,MAAA1yC,IAAAjS,EAAA0/B,WAAAzzB,KAAA04C,MAAA1yC,GAAA0tB,aAAuD1zB,KAAAmzD,aAAAtzD,KAAA9L,KAA2Bq/D,KAAA,WAAiB,OAAAptD,GAAAE,EAAA,EAAAnS,EAAAiM,KAAA04C,MAAAliD,OAAkC0P,EAAAnS,EAAImS,KAAAF,EAAAhG,KAAA04C,MAAAxyC,KAAAF,EAAA0tB,YAAAD,WAAAzzB,KAAAmzD,aAAAjtD,GAA0E,KAAJA,EAAA,EAAInS,EAAAiM,KAAA04C,MAAAliD,OAAwB0P,EAAAnS,EAAImS,KAAAF,EAAAhG,KAAA04C,MAAAxyC,MAAAF,EAAA88B,iBAAAn2B,GAAA8lD,MAAAzsD,EAAAs9B,OAAA7P,WAAAztB,EAAA88B,OAAApP,aAAA1tB,EAAAs9B,OAAAnd,SAAAngB,EAAA0tB,cAC1Y1tB,EAAAs9B,OAAA9e,KAAAxe,EAAA0tB,aAAA1tB,EAAAs9B,OAAA3I,UAAA30B,EAAAhN,SAAAgN,EAAAm9B,WAAAn9B,EAAAk0B,SAAiFt3B,OAAA,WAAmB,GAAAoD,GAAA,GAAA2G,GAAA2mB,OAAwB,mBAAkB,OAAAptB,GAAA,EAAAnS,EAAAiM,KAAA04C,MAAAliD,OAAgC0P,EAAAnS,EAAImS,IAAAF,EAAAutB,iBAAAvzB,KAAA04C,MAAAxyC,GAAAlG,KAAA04C,MAAAxyC,GAAAwtB,YAAA1zB,KAAA6yD,eAAA7yD,KAAAmzD,aAAAjtD,IAAAF,EAAAugB,QAAAvmB,KAAAgzD,aAAA,GAAA9sD,EAA2IlG,MAAA4yD,mBAAA5yD,KAAAizD,YAAArsB,aAAA,OAA0DjwC,MAAA,WAAoB,UAAAgW,GAAAgmD,SAAA3yD,KAAA04C,MAAA14C,KAAAmzD,aAAAnzD,KAAA4yD,qBAC3YjmD,EAAAm/C,YAAA,SAAA9lD,EAAAE,EAAAnS,GAA6L,GAA3J4Y,EAAAyE,KAAAvd,KAAAmM,KAAAgG,EAAAE,GAA0BlG,KAAA7E,KAAA,cAAwB6E,KAAAqzD,SAAA,WAAyBrzD,KAAAszD,WAAA,GAAA3mD,GAAA2mB,QAAkCtzB,KAAAuzD,kBAAA,GAAA5mD,GAAA2mB,QAAyCttB,KAAKhG,KAAAk3B,UAAA,SAAAl3B,KAAAk3B,SAAAwhB,MAAA,CAAgD,OAAAp8B,GAAAtlB,EAAA,EAAAsS,EAAAtJ,KAAAk3B,SAAAwhB,MAAAliD,OAA2CQ,EAAAsS,IAAItS,EAAAslB,EAAAtc,KAAAk3B,SAAAwhB,MAAA1hD,GAAAkP,EAAA,GAAAyG,GAAA8lD,KAAAzyD,MAAAgG,EAAAnG,KAAAqG,KAAArP,KAAAylB,EAAAzlB,KAAAqP,EAAAlN,SAAAstB,UAAAhK,EAAAk3C,KAAAttD,EAAAi9B,WAAA7c,UAAAhK,EAAAm3C,MAAA,SAAAn3C,EAAAo3C,KAAAxtD,EAAAg0B,MAAA5T,UAAAhK,EAAAo3C,IAAoL,KAAJ18D,EAAA,EAAIsS,EAAAtJ,KAAAk3B,SAAAwhB,MAAAliD,OAAiCQ,EAAAsS,IAAItS,EAAAslB,EACrftc,KAAAk3B,SAAAwhB,MAAA1hD,QAAAslB,EAAAwmB,QAAA,OAAAxmB,EAAAwmB,QAAA,SAAA98B,EAAAsW,EAAAwmB,QAAA98B,EAAAsW,EAAAwmB,QAAA3zB,IAAAnJ,EAAAhP,IAAAgJ,KAAAmP,IAAAnJ,EAAAhP,IAAiHgJ,KAAA2zD,uBAA4B3zD,KAAAg3B,mBAAA,GAA2Bh3B,KAAAmD,KAAA,GAAAwJ,GAAAgmD,SAAA3sD,GAAA,QAAAjS,GAAAiM,KAAA0zB,cACxK/mB,EAAAm/C,YAAApkD,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAyE,KAAA1J,YAA+E7S,YAAA8X,EAAAm/C,YAAA3oD,KAAA,SAAA6C,EAAAE,GAAiDlG,KAAAy4C,SAAAzyC,EAAgB,SAAAE,IAAAlG,KAAAg3B,mBAAA,GAAAh3B,KAAAy4C,SAAAya,oBAAAhtD,EAAAlG,KAAA0zB,aAA8F1zB,KAAAszD,WAAA9uC,KAAAte,GAAwBlG,KAAAuzD,kBAAA9/B,WAAAvtB,IAAqCktD,KAAA,WAAiBpzD,KAAAy4C,SAAA2a,QAAqBO,qBAAA,WAAiC,GAAA3zD,KAAAk3B,mBAAAvqB,GAAA4M,SAAA,OAAAvT,GAAA,EAAuDA,EAAAhG,KAAAk3B,SAAAoS,YAAA9yC,OAAmCwP,IAAA,CAAK,GAAAE,GAAAlG,KAAAk3B,SAAAoS,YAAAtjC,GAAAjS,EACjd,EAAAmS,EAAAosB,iBAAsBnnB,OAAApX,EAAAmS,EAAAvL,eAAA5G,GAAAmS,EAAAmL,IAAA,aAAgD,IAAArR,KAAAk3B,mBAAAvqB,GAAAwqB,eAAA,OAAAjxB,GAAA,GAAAyG,GAAA4nB,QAAAjY,EAAAtc,KAAAk3B,SAAAE,WAAAw8B,WAAA5tD,EAAA,EAA4HA,EAAAsW,EAAAoqB,MAAU1gC,IAAAE,EAAAnH,EAAAud,EAAA2b,KAAAjyB,GAAAE,EAAA8M,EAAAsJ,EAAA4b,KAAAlyB,GAAAE,EAAA+M,EAAAqJ,EAAA6b,KAAAnyB,GAAAE,EAAA0L,EAAA0K,EAAA+qB,KAAArhC,GAAAjS,EAAA,EAAAmS,EAAAosB,kBAAAnnB,MAAApX,EAAAmS,EAAAvL,eAAA5G,GAAAmS,EAAAmL,IAAA,SAAAiL,EAAAirB,QAAAvhC,EAAAE,EAAAnH,EAAAmH,EAAA8M,EAAA9M,EAAA+M,EAAA/M,EAAA0L,IAAiKolB,kBAAA,SAAAhxB,GAA+B2G,EAAAyE,KAAA1J,UAAAsvB,kBAAAnjC,KAAAmM,MAAA,GAAqD,aAAAA,KAAAqzD,SAAArzD,KAAAuzD,kBAAA9/B,WAAAzzB,KAAA0zB,aACjc,aAAA1zB,KAAAqzD,SAAArzD,KAAAuzD,kBAAA9/B,WAAAzzB,KAAAszD,YAAAh+D,QAAA0vB,KAAA,4CAAAhlB,KAAAqzD,WAAsJ18D,MAAA,WAAkB,UAAAqJ,MAAAnL,YAAAmL,KAAAk3B,SAAAl3B,KAAAimC,SAAAjmC,KAAAy4C,SAAAma,kBAAApuC,KAAAxkB,SAAuG2M,EAAAs1B,IAAA,WAAqBt1B,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,MAAgB8gB,OAAAomB,iBAAAriC,MAA8BisD,QAAQhpB,YAAA,EAAA17B,aACpXoF,EAAAs1B,IAAAv6B,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAA2E7S,YAAA8X,EAAAs1B,IAAAzd,KAAA,SAAAxe,GAAuC2G,EAAAsC,SAAAvH,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAAA,GAA8CA,IAAAimD,MAAW,QAAA/lD,GAAA,EAAAnS,EAAAiS,EAAAxP,OAAuB0P,EAAAnS,EAAImS,IAAA,CAAK,GAAAoW,GAAAtW,EAAAE,EAAWlG,MAAAksD,SAAA5vC,EAAAnG,OAAAxf,QAAA2lB,EAAAmZ,UAA2C,MAAAz1B,OAAYksD,SAAA,SAAAlmD,EAAAE,GAAwB,SAAAA,MAAA,GAAkBA,EAAA1G,KAAA+wB,IAAArqB,EAAc,QAAAnS,GAAAiM,KAAAisD,OAAA3vC,EAAA,EAA0BA,EAAAvoB,EAAAyC,UAAA0P,EAAAnS,EAAAuoB,GAAAmZ,UAA+BnZ,KAAKvoB,EAAAqO,OAAAka,EAAA,GAAcmZ,SAAAvvB,EAAAiQ,OAAAnQ,IAAsBhG,KAAAmP,IAAAnJ,IAAY6tD,qBAAA,SAAA7tD,GAAkC,OAAAE,GAAAlG,KAAAisD,OAAAl4D,EAAA,EAAAuoB,EAAApW,EAAA1P,OAAqCzC,EAC1fuoB,KAAAtW,EAAAE,EAAAnS,GAAA0hC,UAAsB1hC,KAAK,MAAAmS,GAAAnS,EAAA,GAAAoiB,QAAqByrB,QAAA,WAAoB,GAAA57B,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,EAAAnS,GAAqBiS,EAAAouB,sBAAAp0B,KAAA0zB,YAA0C,IAAApX,GAAApW,EAAA+Q,IAAAgkB,OAAAzI,WAAAxsB,EAAiChG,MAAA6zD,qBAAAv3C,GAAAslB,QAAA17B,EAAAnS,OAA2C6O,OAAA,WAAqB,GAAAoD,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,OAA4C,iBAAA1f,GAAmB,GAAAuoB,GAAAtc,KAAAisD,MAAkB,MAAA3vC,EAAA9lB,OAAA,CAAewP,EAAAouB,sBAAArgC,EAAA2/B,aAAuCxtB,EAAAkuB,sBAAAp0B,KAAA0zB,aAA0C3/B,EAAAiS,EAAAwsB,WAAAtsB,GAAkBoW,EAAA,GAAAnG,OAAAwrB,SAAA,CAAuB,QAAA3qC,GAAA,EAAAsS,EAAAgT,EAAA9lB,OAAuBQ,EAAAsS,GAAIvV,GACjfuoB,EAAAtlB,GAAAy+B,SADifz+B,IACjfslB,EAAAtlB,EAAA,GAAAmf,OAAAwrB,SAAA,EAAArlB,EAAAtlB,GAAAmf,OAAAwrB,SAAA,CAAyE,MAAK3qC,EAAAsS,EAAItS,IAAAslB,EAAAtlB,GAAAmf,OAAAwrB,SAAA,OAA6B8D,OAAA,SAAAz/B,GAAsBA,EAAA2G,EAAAsC,SAAAvH,UAAA+9B,OAAA5xC,KAAAmM,KAAAgG,GAA+CA,EAAAmQ,OAAA81C,SAAmB,QAAA/lD,GAAAlG,KAAAisD,OAAAl4D,EAAA,EAAAuoB,EAAApW,EAAA1P,OAAqCzC,EAAAuoB,EAAIvoB,IAAA,CAAK,GAAAiD,GAAAkP,EAAAnS,EAAWiS,GAAAmQ,OAAA81C,OAAApsD,MAAsBsW,OAAAnf,EAAAmf,OAAA0sB,KAAApN,SAAAz+B,EAAAy+B,WAA2C,MAAAzvB,MAAY2G,EAAAy1B,OAAA,SAAAp8B,GAAyB2G,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,SAAmB6E,KAAAimC,SAAA,SAAAjgC,IAAA,GAAA2G,GAAAyjD,gBACnZzjD,EAAAy1B,OAAA16B,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAA8E7S,YAAA8X,EAAAy1B,OAAAR,QAAA,WAA4C,GAAA57B,GAAA,GAAA2G,GAAA8G,OAAwB,iBAAAvN,EAAAnS,GAAqBiS,EAAAouB,sBAAAp0B,KAAA0zB,YAA0C,IAAApX,GAAApW,EAAA+Q,IAAAmkB,kBAAAp1B,EAAiCsW,GAAAtc,KAAAk6B,MAAAn7B,EAAAiB,KAAAk6B,MAAAlnB,EAAA,GAAAjf,EAAA8L,MAAuC41B,SAAAj2B,KAAAgmB,KAAAlJ,GAAAtF,MAAAhX,KAAAhH,SAAA24D,KAAA,KAAAx7C,OAAAnW,WAAmErJ,MAAA,WAAoB,UAAAqJ,MAAAnL,YAAAmL,KAAAimC,UAAAzhB,KAAAxkB,SAChX2M,EAAAmnD,UAAA,SAAA9tD,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAoC2V,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA+zD,cAAmB/zD,KAAAg0D,eAAA,GAAArnD,GAAA8G,QAAsCzT,KAAAi0D,qBAAA,OAAiC,SAAAjuD,GAAAhG,KAAAmP,IAAAnJ,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,IACxJ2V,EAAAmnD,UAAApsD,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,YAAiF7S,YAAA8X,EAAAmnD,UAAAtvC,KAAA,SAAAxe,GAA6C2G,EAAAsC,SAAAvH,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,GAA2ChG,KAAAg0D,eAAAxvC,KAAAxe,EAAAguD,gBAA2Ch0D,KAAAi0D,qBAAAjuD,EAAAiuD,oBAAiD,QAAA/tD,GAAA,EAAAnS,EAAAiS,EAAA+tD,WAAAv9D,OAAkC0P,EAAAnS,EAAImS,IAAAlG,KAAA+zD,WAAAl0D,KAAAmG,EAAA+tD,WAAA7tD,GAA0C,OAAAlG,OAAYmP,IAAA,SAAAnJ,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAA2B,SAAApD,UAAmB,SAAAnS,MAAA,GAAkB,SAAAuV,MAAA,GAAkB,SAAAtS,MAAA,GAAA2V,GAAA0X,MAAA,WAA0C,SAAA/H,MAAA3P,EAAAmR,gBAC7d/pB,EAAAyL,KAAAib,IAAA1mB,EAAAyL,KAAAC,IAAA,EAAA1L,IAA4BiM,KAAA+zD,WAAAl0D,MAAsB8+C,QAAA34C,EAAAsK,KAAApK,EAAAuvB,SAAA1hC,EAAAgL,EAAA,EAAAiU,EAAA,EAAAC,EAAA,EAAAinB,MAAA,EAAAgJ,SAAA,EAAA+iB,QAAA38C,EAAA4H,MAAAla,EAAAyrD,SAAAnmC,KAA0F43C,iBAAA,WAA6B,GAAAluD,GAAAjS,EAAAmS,EAAAlG,KAAA+zD,WAAAv9D,OAAA8lB,EAAA,GAAAtc,KAAAg0D,eAAAj1D,EAAA/H,EAAA,GAAAgJ,KAAAg0D,eAAAhhD,CAAuF,KAAAhN,EAAA,EAAQA,EAAAE,EAAIF,IAAAjS,EAAAiM,KAAA+zD,WAAA/tD,GAAAjS,EAAAgL,EAAAiB,KAAAg0D,eAAAj1D,EAAAud,EAAAvoB,EAAA0hC,SAAA1hC,EAAAif,EAAAhT,KAAAg0D,eAAAhhD,EAAAhc,EAAAjD,EAAA0hC,SAAA1hC,EAAAogE,eAAApgE,EAAAgL,EAAAS,KAAAyS,GAAA,IAAAle,EAAAmvC,UAAA,KAAAnvC,EAAAogE,eAAApgE,EAAAmvC,aAC5Qv2B,EAAAuN,MAAA,WAAuBvN,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAA7E,KAAA,QAAkB6E,KAAAo0D,iBAAAp0D,KAAAitD,IAAAjtD,KAAAq0D,WAAA,KAAoDr0D,KAAAs0D,YAAA,GAAoB3nD,EAAAuN,MAAAxS,UAAAuU,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,WAA8DiF,EAAAuN,MAAAxS,UAAA7S,YAAA8X,EAAAuN,MACzMvN,EAAAuN,MAAAxS,UAAA8c,KAAA,SAAAxe,EAAAE,GAA6U,MAApSyG,GAAAsC,SAAAvH,UAAA8c,KAAA3wB,KAAAmM,KAAAgG,EAAAE,GAA6C,OAAAF,EAAAquD,aAAAr0D,KAAAq0D,WAAAruD,EAAAquD,WAAA19D,SAA4D,OAAAqP,EAAAinD,MAAAjtD,KAAAitD,IAAAjnD,EAAAinD,IAAAt2D,SAAuC,OAAAqP,EAAAouD,mBAAAp0D,KAAAo0D,iBAAApuD,EAAAouD,iBAAAz9D,SAA8EqJ,KAAAs0D,WAAAtuD,EAAAsuD,WAA6Bt0D,KAAAujC,iBAAAv9B,EAAAu9B,iBAAyCvjC,MAAa2M,EAAA4nD,IAAA,SAAAvuD,EAAAE,EAAAnS,GAA0BiM,KAAAnJ,KAAA,GAAamJ,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAAre,GAA8BhG,KAAA8hC,KAAA,SAAA57B,IAAA,EAAyBlG,KAAA+hC,IAAA,SAAAhuC,IAAA,KACxb4Y,EAAA4nD,IAAA7sD,UAAA/Q,MAAA,WAAqC,UAAAgW,GAAA4nD,IAAAv0D,KAAAkR,MAAAuU,SAAAzlB,KAAA8hC,KAAA9hC,KAAA+hC,MAA8Dp1B,EAAA6nD,QAAA,SAAAxuD,EAAAE,GAA4BlG,KAAAnJ,KAAA,GAAamJ,KAAAkR,MAAA,GAAAvE,GAAA0X,MAAAre,GAA8BhG,KAAAy0D,QAAA,SAAAvuD,IAAA,OAAkCyG,EAAA6nD,QAAA9sD,UAAA/Q,MAAA,WAAyC,UAAAgW,GAAA6nD,QAAAx0D,KAAAkR,MAAAuU,SAAAzlB,KAAAy0D,UAA4D9nD,EAAA4jD,eAAqB5jD,EAAA4jD,YAAAmE,kBAAA,mFAAuH/nD,EAAA4jD,YAAAoE,uBAAA,+DAC7bhoD,EAAA4jD,YAAAqE,mBAAA,2EAAgHjoD,EAAA4jD,YAAAsE,eAAA,6aAChHloD,EAAA4jD,YAAAuE,oBAAA,wFAA8HnoD,EAAA4jD,YAAAwE,aAAA,2CAA0EpoD,EAAA4jD,YAAAyE,mBAAA,0CAA+EroD,EAAA4jD,YAAA0E,MAAA,89HACvRtoD,EAAA4jD,YAAA2E,sBAAA,yzBACAvoD,EAAA4jD,YAAA4E,yBAAA,yMAAoPxoD,EAAA4jD,YAAA6E,8BAAA,6LACpPzoD,EAAA4jD,YAAA8E,4BAAA,sHAAoK1oD,EAAA4jD,YAAA+E,uBAAA,4HAAqK3oD,EAAA4jD,YAAAgF,eAAA,0DAA2F5oD,EAAA4jD,YAAAiF,oBAAA,qDACpa7oD,EAAA4jD,YAAAkF,kBAAA,mDAAuF9oD,EAAA4jD,YAAAmF,aAAA,sDAAqF/oD,EAAA4jD,YAAAoF,OAAA,myDAC5KhpD,EAAA4jD,YAAAqF,4BAAA,2lIACAjpD,EAAA4jD,YAAAsF,qBAAA,sHAA6JlpD,EAAA4jD,YAAAuF,uBAAA,iJAA0LnpD,EAAA4jD,YAAAwF,4BAAA,oJACvVppD,EAAA4jD,YAAAyF,qBAAA,+MAAsPrpD,EAAA4jD,YAAA0F,0BAAA,qEAAiHtpD,EAAA4jD,YAAA2F,wBAAA,0vFACvWvpD,EAAA4jD,YAAA4F,mBAAA,0DAA+FxpD,EAAA4jD,YAAA6F,gBAAA,skDAC/FzpD,EAAA4jD,YAAA8F,qBAAA;AACA1pD,EAAA4jD,YAAA+F,mBAAA,iOAAsQ3pD,EAAA4jD,YAAAgG,cAAA,ugBACtQ5pD,EAAA4jD,YAAAiG,aAAA,gcACA7pD,EAAA4jD,YAAAkG,kBAAA,+KAAmN9pD,EAAA4jD,YAAAmG,kBAAA,+HAAmK/pD,EAAA4jD,YAAAoG,uBAAA,iGACtXhqD,EAAA4jD,YAAAqG,sBAAA,6oEACAjqD,EAAA4jD,YAAAsG,YAAA,wjOACAlqD,EAAA4jD,YAAAuG,sBAAA,wMAAgPnqD,EAAA4jD,YAAAwG,2BAAA,2xCAChPpqD,EAAA4jD,YAAAyG,yBAAA,8iBACArqD,EAAA4jD,YAAA0G,8BAAA,yhFACAtqD,EAAA4jD,YAAA2G,gBAAA,kqGACAvqD,EAAA4jD,YAAA4G,qBAAA,oIAA2KxqD,EAAA4jD,YAAA6G,0BAAA,0IAAsLzqD,EAAA4jD,YAAA8G,wBAAA,wIACjW1qD,EAAA4jD,YAAA+G,mBAAA,qQAA0S3qD,EAAA4jD,YAAAgH,aAAA,sJAC1S5qD,EAAA4jD,YAAAiH,kBAAA,qDAAyF7qD,EAAA4jD,YAAAkH,sBAAA,qMAA6O9qD,EAAA4jD,YAAAmH,2BAAA,mFAAgI/qD,EAAA4jD,YAAAoH,sBAAA,yKACtchrD,EAAA4jD,YAAAqH,2BAAA,qEAAkHjrD,EAAA4jD,YAAAsH,mBAAA,gVAClHlrD,EAAA4jD,YAAAuH,wBAAA,2KAAqNnrD,EAAA4jD,YAAAwH,mBAAA,0qBACrNprD,EAAA4jD,YAAAyH,YAAA,iIAA+JrrD,EAAA4jD,YAAA0H,gBAAA,ugBAC/JtrD,EAAA4jD,YAAA2H,wBAAA,gmBACAvrD,EAAA4jD,YAAA4H,QAAA,qyCACAxrD,EAAA4jD,YAAA6H,6BAAA,8EAA6HzrD,EAAA4jD,YAAA8H,eAAA,sMAAuO1rD,EAAA4jD,YAAA+H,sBAAA,yKACpW3rD,EAAA4jD,YAAAgI,2BAAA,qEAAkH5rD,EAAA4jD,YAAAiI,wBAAA;AAClH7rD,EAAA4jD,YAAAkI,sBAAA,0eACA9rD,EAAA4jD,YAAAmI,iBAAA,ihBACA/rD,EAAA4jD,YAAAoI,yBAAA,8oCACAhsD,EAAA4jD,YAAAqI,gBAAA,kOAAoQjsD,EAAA4jD,YAAAsI,qBAAA,sjCACpQlsD,EAAA4jD,YAAAuI,gBAAA,sXAAwZnsD,EAAA4jD,YAAAwI,kBAAA,8WACxZpsD,EAAA4jD,YAAAyI,qBAAA,0LAAiOrsD,EAAA4jD,YAAA0I,0BAAA,mEAA+GtsD,EAAA4jD,YAAA2I,qBAAA,+FAChVvsD,EAAA4jD,YAAA4I,0BAAA,o5BACAxsD,EAAA4jD,YAAA6I,kBAAA,oFAAwHzsD,EAAA4jD,YAAA8I,gBAAA,2GAA6I1sD,EAAA4jD,YAAA+I,WAAA,6EAA0G3sD,EAAA4jD,YAAAgJ,iBAAA,iQAC/W5sD,EAAA4jD,YAAAiJ,eAAA,iSAAkU7sD,EAAA4jD,YAAAkJ,UAAA,6RAClU9sD,EAAA4jD,YAAAmJ,gBAAA,iSACA/sD,EAAAujD,eAAqBplB,MAAA,SAAA9kC,GAAkB,OAAAE,MAAYnS,EAAA,EAAKA,EAAAiS,EAAAxP,OAAWzC,IAAA,CAAK,GAAAiD,GAAAslB,EAAAtc,KAAArJ,MAAAqP,EAAAjS,GAAyB,KAAAiD,IAAAslB,GAAApW,EAAAlP,GAAAslB,EAAAtlB,GAAqB,MAAAkP,IAASvP,MAAA,SAAAqP,GAAmB,GAAQjS,GAARmS,IAAW,KAAAnS,IAAAiS,GAAA,CAAYE,EAAAnS,KAAQ,QAAAuoB,KAAAtW,GAAAjS,GAAA,CAAmB,GAAAiD,GAAAgP,EAAAjS,GAAAuoB,EAActlB,aAAA2V,GAAA0X,OAAArtB,YAAA2V,GAAAykB,SAAAp6B,YAAA2V,GAAA8G,SAAAzc,YAAA2V,GAAA4nB,SAAAv9B,YAAA2V,GAAAgrB,SAAA3gC,YAAA2V,GAAA2mB,SAAAt8B,YAAA2V,GAAAg/C,QAAAzlD,EAAAnS,GAAAuoB,GAAAtlB,EAAAL,QAAAsT,MAAA04B,QAAA3rC,GAAAkP,EAAAnS,GAAAuoB,GAAAtlB,EAAAkT,QAAAhE,EAAAnS,GAAAuoB,GAAAtlB,GAAiQ,MAAAkP,KACndyG,EAAA2jD,aAAmBqF,QAAQgE,SAASpyD,MAAA,GAAAoF,GAAA0X,MAAA,WAAgC4hC,SAAU1+C,MAAA,GAAQyD,KAAMzD,MAAA,MAAWqyD,cAAeryD,MAAA,GAAAoF,GAAA4nB,QAAA,UAAiCqwB,aAAcr9C,MAAA,MAAWo+C,UAAWp+C,MAAA,MAAWiiD,QAASjiD,MAAA,MAAWsyD,YAAatyD,UAASmiD,cAAeniD,MAAA,GAAQgnD,iBAAkBhnD,MAAA,MAAWuyD,OAAQnW,OAAOp8C,MAAA,MAAWqiD,gBAAiBriD,MAAA,IAASwyD,UAAWzW,UAAU/7C,MAAA,MAAWoiD,mBAAoBpiD,MAAA,IAASyyD,aAAc/W,aAAa17C,MAAA,OAAY0yD,SAAUjW,SAASz8C,MAAA,MAAW88C,WAAY98C,MAAA,IAAS2yD,WAAY5V,WAAW/8C,MAAA,MACtgBo9C,aAAap9C,MAAA,GAAAoF,GAAAykB,QAAA,OAA8B+oC,iBAAkB/Q,iBAAiB7hD,MAAA,MAAW8hD,mBAAoB9hD,MAAA,GAAQ+hD,kBAAmB/hD,MAAA,IAAS6yD,cAAe9U,cAAc/9C,MAAA,OAAY8yD,cAAepV,cAAc19C,MAAA,OAAY0lD,KAAMqN,YAAY/yD,MAAA,OAAagzD,SAAUhzD,MAAA,GAAQizD,QAASjzD,MAAA,KAAUkzD,UAAWlzD,MAAA,GAAAoF,GAAA0X,MAAA,YAAiC2oC,QAAS0N,mBAAmBnzD,UAASozD,mBAAoBpzD,SAAAqzD,YAAqB1/B,aAAYhqB,SAASwvC,UAAUma,cAAcC,gBAAgBC,mBAAmBC,sBAAuBzzD,UACxgB0zD,yBAAyB1zD,UAAS2zD,YAAa3zD,SAAAqzD,YAAqB1pD,SAAQlY,YAAYkiC,aAAazF,YAAY0lC,WAAWC,eAAe/a,SAASK,UAAUma,cAAcC,gBAAgBC,mBAAmBM,eAAgB9zD,UAAS+zD,kBAAmB/zD,UAASg0D,aAAch0D,SAAAqzD,YAAqB1pD,SAAQlY,YAAYqnD,SAAS5qB,YAAYirB,UAAUma,cAAcC,gBAAgBC,mBAAmBS,gBAAiBj0D,UAASk0D,mBAAoBl0D,UAASm0D,kBAAmBn0D,SAAAqzD,YAAqB1/B,aAC1eygC,YAAWvb,kBAAkBvmD,QAAS8/D,SAASpyD,MAAA,GAAAoF,GAAA0X,MAAA,WAAgC4hC,SAAU1+C,MAAA,GAAQ+I,MAAO/I,MAAA,GAAQ2yB,OAAQ3yB,MAAA,GAAQyD,KAAMzD,MAAA,MAAWqyD,cAAeryD,MAAA,GAAAoF,GAAA4nB,QAAA,YAAoC5nB,EAAA4jD,YAAAqL,UAAA,+WACpMjvD,EAAA4jD,YAAAsL,UAAA,iVAA6WlvD,EAAA4jD,YAAAuL,WAAA,ivBAC7WnvD,EAAA4jD,YAAAwL,WAAA,ohBACApvD,EAAA4jD,YAAAyL,kBAAA,+RAAmUrvD,EAAA4jD,YAAA0L,kBAAA,8aACnUtvD,EAAA4jD,YAAA2L,cAAA,khBACAvvD,EAAA4jD,YAAA4L,cAAA,iVAAiXxvD,EAAA4jD,YAAA6L,gBAAA,qyBACjXzvD,EAAA4jD,YAAA8L,gBAAA,6dACA1vD,EAAA4jD,YAAA+L,eAAA,80CACA3vD,EAAA4jD,YAAAgM,eAAA,kzBACA5vD,EAAA4jD,YAAAiM,iBAAA,wiEACA7vD,EAAA4jD,YAAAkM,iBAAA,ugCACA9vD,EAAA4jD,YAAAmM,eAAA,+yDACA/vD,EAAA4jD,YAAAoM,eAAA,knCACAhwD,EAAA4jD,YAAAqM,kBAAA,koEACAjwD,EAAA4jD,YAAAsM,kBAAA,gmCACAlwD,EAAA4jD,YAAAuM,YAAA,oUAAkWnwD,EAAA4jD,YAAAwM,YAAA,+XAClWpwD,EAAA4jD,YAAAyM,YAAA,0xBACArwD,EAAA4jD,YAAA0M,YAAA,ujBACAtwD,EAAA4jD,YAAAE,YAAA,sRAAoT9jD,EAAA4jD,YAAAC,YAAA,4KACpT7jD,EAAAuwD,WAAiBC,OAAO1U,SAAA97C,EAAAujD,cAAAplB,OAAAn+B,EAAA2jD,YAAAqF,OAAAhpD,EAAA2jD,YAAAwJ,MAAAntD,EAAA2jD,YAAArD,MAAAvE,aAAA/7C,EAAA4jD,YAAAgM,eAAA5T,eAAAh8C,EAAA4jD,YAAA+L,gBAA2Mc,SAAU3U,SAAA97C,EAAAujD,cAAAplB,OAAAn+B,EAAA2jD,YAAAqF,OAAAhpD,EAAA2jD,YAAAwJ,MAAAntD,EAAA2jD,YAAAyJ,SAAAptD,EAAA2jD,YAAA0J,YAAArtD,EAAA2jD,YAAArD,IAAAtgD,EAAA2jD,YAAAtD,QAA8LrK,UAAUp7C,MAAA,GAAAoF,GAAA0X,MAAA,OAA0BqkC,aAAA/7C,EAAA4jD,YAAAkM,iBAC/c9T,eAAAh8C,EAAA4jD,YAAAiM,kBAAkDa,OAAQ5U,SAAA97C,EAAAujD,cAAAplB,OAAAn+B,EAAA2jD,YAAAqF,OAAAhpD,EAAA2jD,YAAAwJ,MAAAntD,EAAA2jD,YAAAyJ,SAAAptD,EAAA2jD,YAAA0J,YAAArtD,EAAA2jD,YAAA2J,QAAAttD,EAAA2jD,YAAA4J,UAAAvtD,EAAA2jD,YAAA6J,gBAAAxtD,EAAA2jD,YAAArD,IAAAtgD,EAAA2jD,YAAAtD,QAAsRrK,UAAUp7C,MAAA,GAAAoF,GAAA0X,MAAA,IAAyBq+B,UAAWn7C,MAAA,GAAAoF,GAAA0X,MAAA,UAA+Bu+B,WAAYr7C,MAAA,OAAUmhD,aAAA/7C,EAAA4jD,YAAAoM,eAAAhU,eAAAh8C,EAAA4jD,YAAAmM,gBACnbY,UAAU7U,SAAA97C,EAAAujD,cAAAplB,OAAAn+B,EAAA2jD,YAAAqF,OAAAhpD,EAAA2jD,YAAAwJ,MAAAntD,EAAA2jD,YAAAyJ,SAAAptD,EAAA2jD,YAAA0J,YAAArtD,EAAA2jD,YAAA2J,QAAAttD,EAAA2jD,YAAA4J,UAAAvtD,EAAA2jD,YAAA6J,gBAAAxtD,EAAA2jD,YAAA8J,aAAAztD,EAAA2jD,YAAA+J,aAAA1tD,EAAA2jD,YAAArD,IAAAtgD,EAAA2jD,YAAAtD,QAAoVrK,UAAUp7C,MAAA,GAAAoF,GAAA0X,MAAA,IAAyBkkC,WAAYhhD,MAAA,IAASihD,WAAYjhD,MAAA,GAAQ2nD,iBAAkB3nD,MAAA,MAASmhD,aAAA/7C,EAAA4jD,YAAAsM,kBACrclU,eAAAh8C,EAAA4jD,YAAAqM,mBAAmD/iE,QAAS4uD,SAAA97C,EAAAujD,cAAAplB,OAAAn+B,EAAA2jD,YAAAz2D,OAAA8S,EAAA2jD,YAAArD,MAAAvE,aAAA/7C,EAAA4jD,YAAA0M,YAAAtU,eAAAh8C,EAAA4jD,YAAAyM,aAA6KO,QAAS9U,SAAA97C,EAAAujD,cAAAplB,OAAAn+B,EAAA2jD,YAAAqF,OAAAhpD,EAAA2jD,YAAArD,KAAoF/yB,OAAO3yB,MAAA,GAAQ6mD,UAAW7mD,MAAA,GAAQi2D,WAAYj2D,MAAA,MAASmhD,aAAA/7C,EAAA4jD,YAAA8L,gBAAA1T,eAAAh8C,EAAA4jD,YAAA6L,iBAAmG7R,OAAQ9B,SAAA97C,EAAAujD,cAAAplB,OAAAn+B,EAAA2jD,YAAAqF,OACxehpD,EAAA2jD,YAAA6J,kBAAAzR,aAAA/7C,EAAA4jD,YAAAwL,WAAApT,eAAAh8C,EAAA4jD,YAAAuL,YAA0HvkC,QAASkxB,UAAUxC,SAAS1+C,MAAA,IAASmhD,aAAA/7C,EAAA4jD,YAAAwM,YAAApU,eAAAh8C,EAAA4jD,YAAAuM,aAAyFW,MAAOhV,UAAUiV,OAAOn2D,MAAA,MAAWo2D,OAAQp2D,WAAUmhD,aAAA/7C,EAAA4jD,YAAAsL,UAAAlT,eAAAh8C,EAAA4jD,YAAAqL,WAAqFgC,UAAWnV,UAAUoV,WAAWt2D,MAAA,MAAWo2D,OAAQp2D,WAAUmhD,aAAA/7C,EAAA4jD,YAAA4L,cAAAxT,eAAAh8C,EAAA4jD,YAAA2L,eAC/b4B,cAAcrV,UAAUsV,UAAUx2D,MAAA,GAAAoF,GAAA8G,UAAyBi1C,aAAA/7C,EAAA4jD,YAAA0L,kBAAAtT,eAAAh8C,EAAA4jD,YAAAyL,oBAAuGrvD,EAAAuwD,UAAAc,UAA0BvV,SAAA97C,EAAAujD,cAAAplB,OAAAn+B,EAAAuwD,UAAAI,SAAA7U,UAAuE6G,WAAW/nD,MAAA,GAAQ8nD,oBAAqB9nD,MAAA,MAASmhD,aAAA/7C,EAAA4jD,YAAAsM,kBAAAlU,eAAAh8C,EAAA4jD,YAAAqM;EACpTjwD,EAAAmN,cAAA,SAAA9T,GAAgC,QAAAE,GAAAF,EAAAE,EAAAnS,EAAAuoB,IAAoB,IAAA8c,IAAApzB,GAAAsW,EAAApW,GAAAoW,EAAAvoB,GAAAuoB,GAAyB2hD,GAAAC,WAAAl4D,EAAAE,EAAAnS,EAAAuoB,GAAsB,QAAAvoB,KAAakqE,GAAAhmE,OAASgmE,GAAAE,QAAAC,EAAA55C,KAAA65C,GAAA1jE,eAAA1G,IAAwCgqE,GAAAK,SAAAC,EAAA/5C,KAAAg6C,GAAA7jE,eAAA1G,IAA0CiS,EAAAu4D,EAAA3sD,EAAA2sD,EAAAl6C,EAAAk6C,EAAAv4D,EAAAw4D,GAAiB,QAAApiD,KAAaqiD,EAAAtM,EAAA,KAASuM,EAAA,GAAMpM,KAAKyL,GAAA/uB,QAAU,QAAAl4C,GAAAgP,GAAcA,EAAA9N,iBAAmBokB,IAAIvoB,IAAI8qE,GAAArd,QAAU,QAAAl4C,GAAAtD,GAAcA,IAAAs7B,OAAWt7B,EAAAo7B,oBAAA,UAAA93B,GAAmCib,EAAAve,GAAK64D,aAAA74D,GAAY,QAAAue,GAAAve,GAAc,GAAAE,GAAA24D,GAAA1iD,IAAAnW,GAAA84D,OAAuB94D,GAAA84D,QAAA,OAAiB,SAAA54D,GAAA+U,GAAA8jD,eAAA74D,GAAiC,QAAA2L,GAAA7L,EAAAE,GAAgB,MAAA1G,MAAA+wB,IAAArqB,EAAA,IAC9e1G,KAAA+wB,IAAAvqB,EAAA,IAAe,QAAA8f,GAAA9f,EAAAE,GAAgB,MAAAF,GAAAmQ,OAAA2tB,cAAA59B,EAAAiQ,OAAA2tB,YAAA99B,EAAAmQ,OAAA2tB,YAAA59B,EAAAiQ,OAAA2tB,YAAA99B,EAAAigC,SAAAtyC,KAAAuS,EAAA+/B,SAAAtyC,GAAAqS,EAAAigC,SAAAtyC,GAAAuS,EAAA+/B,SAAAtyC,GAAAqS,EAAAiN,IAAA/M,EAAA+M,EAAAjN,EAAAiN,EAAA/M,EAAA+M,EAAAjN,EAAArS,GAAAuS,EAAAvS,GAAmL,QAAAkyB,GAAA7f,EAAAE,GAAgB,MAAAF,GAAAmQ,OAAA2tB,cAAA59B,EAAAiQ,OAAA2tB,YAAA99B,EAAAmQ,OAAA2tB,YAAA59B,EAAAiQ,OAAA2tB,YAAA99B,EAAAiN,IAAA/M,EAAA+M,EAAA/M,EAAA+M,EAAAjN,EAAAiN,EAAAjN,EAAArS,GAAAuS,EAAAvS,GAAyH,QAAAu9B,GAAAlrB,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAsB,GAAAsS,EAAMvV,GAAAmyD,aAAA5pC,EAAAmd,EAAAnwB,IAAAowB,IAAApd,EAAAid,EAAAjwB,IAAAkwB,GAAsClwB,EAAAgT,EAAAhT,GAAO,SAAAA,KAAA3V,GAAAqS,EAAArS,GAAA2V,EAAA6M,OAAAnQ,EAAAsD,EAAA4tB,SAAAhxB,EAAAoD,EAAA28B,SAAAlyC,EAAAuV,EAAA2J,EAAA+rD,GAAA/rD,EAAA3J,EAAA21D,MAAAjoE,IAAAsS,GACna3V,GAAAqS,EAAArS,GAAAwiB,OAAAnQ,EAAAkxB,SAAAhxB,EAAA+/B,SAAAlyC,EAAAkf,EAAA+rD,GAAA/rD,EAAAgsD,MAAAjoE,GAAqDslB,EAAAzc,KAAAyJ,IAAY,QAAAtV,GAAAgS,GAAc,IAAAk5D,GAAA7nC,iBAAArxB,GAAA,QAAoC,IAAAE,GAAAi5D,GAAAC,SAAmB,QAAAl5D,EAAA,QAAkB,IAAAnS,GAAA+lC,EAAA2zB,eAAAnxC,EAAAtW,EAAAhL,MAAkCgL,MAAAmuB,MAAY,IAAAn9B,GAAA,CAAQ,OAAAjD,EAAAiD,GAAA0/B,gBAAApa,GAAAtW,EAAA,iBAAyChP,IAAAkP,EAAe,UAAS,QAAApS,GAAAkS,EAAAE,GAAgB,QAAAF,EAAA27B,QAAA,CAAmB,GAAA37B,EAAA09B,OAAA3+B,KAAAmB,EAAAw9B,QAAA,GAAA19B,YAAA2G,GAAAuzC,MAAA5mB,EAAAz5B,KAAAmG,OAAiE,IAAAA,YAAA2G,GAAAy1B,OAAA,CAAmC,GAAAruC,IAAMA,GAAA,IAAAiS,EAAA69B,iBAAAw7B,GAAArkE,OAAAqW,IAAA,OAAAguD,GAAAlrC,OAAA,kBAAAkrC,GAAAjsC,aAAAptB,EAAA0tB,aAC7Z3/B,GAAA,IAAAC,EAAAqrE,KAActrE,GAAA6lC,EAAA/5B,KAAAmG,OAAa,IAAAA,YAAA2G,GAAAmnD,UAAAj6B,EAAAh6B,KAAAmG,OAA+C,IAAAA,YAAA2G,GAAA2yD,uBAAA,IAAAxlC,EAAAylC,cAAAP,GAAA5qC,sBAAApuB,EAAA0tB,aAAAsrC,GAAA3rC,gBAAAmsC,KAAAtuC,EAAAlrB,EAAA,KAAAA,EAAAigC,SAAA+4B,GAAA/rD,EAAA,UAAkK,KAAAjN,YAAA2G,GAAAyE,MAAApL,YAAA2G,GAAA+M,MAAA1T,YAAA2G,GAAAu1B,UAAAl8B,YAAA2G,GAAAm/C,aAAA9lD,EAAAyyC,SAAA71C,UAAA7O,GAAA,IAAAiS,EAAA69B,iBAAA9vC,EAAAiS,EAAAkxB,SAAA,OAAAnjC,EAAAkoC,gBAAAloC,EAAAmoC,wBAAAmjC,GAAA76C,KAAAzwB,EAAAkoC,gBAAA7I,aAAAptB,EAAA0tB,aAC5O3/B,GAAA,IAAAC,EAAAqrE,KAAAtrE,GAAA,CAAiB,GAAAuoB,GAAAtW,EAAAigC,QAAiB,SAAA3pB,EAAAqlB,QAAA,QAAA7H,EAAAylC,cAAAP,GAAA5qC,sBAAApuB,EAAA0tB,aAAAsrC,GAAA3rC,gBAAAmsC,KAAAzrE,EAAA0rE,GAAA78D,OAAAoD,GAAAsW,YAAA3P,GAAA4iD,cAAA,OAAAv4D,GAAAjD,EAAAs2C,OAAA/gC,EAAAgT,EAAAspB,UAAAtpB,EAAA,EAAAiI,EAAAvtB,EAAAR,OAAwM8lB,EAAAiI,EAAIjI,IAAA,CAAK,GAAAzK,GAAA7a,EAAAslB,GAAAwJ,EAAAxc,EAAAuI,EAAAy0B,gBAAgC,IAAAxgB,EAAA6b,SAAAzQ,EAAAlrB,EAAAjS,EAAA+xB,EAAAk5C,GAAA/rD,EAAApB,OAA+Bqf,GAAAlrB,EAAAjS,EAAAuoB,EAAA0iD,GAAA/rD,EAAA,MAAwC,IAAjBlf,EAAAiS,EAAA67B,SAAavlB,EAAA,EAAIiI,EAAAxwB,EAAAyC,OAAe8lB,EAAAiI,EAAIjI,IAAAxoB,EAAAC,EAAAuoB,GAAApW,IAAe,QAAAirB,GAAAnrB,EAAAE,EAAAnS,EAAAuoB,GAAoB,OAAAtlB,GAAA,EAAAsS,EAAAtD,EAAAxP,OAAuBQ,EAAAsS,EAAItS,IAAA,CAAK,GAAAutB,GAAAve,EAAAhP,GAAA6a,EAAA0S,EAAApO,OAAA2P,EAAAvB,EAAA2S,SAAApjC,EAAA,SAAAwoB,EAAAiI,EAAA0hB,SAAA3pB,EAAAiI,IAAA06C,KACvT,IAAzHptD,EAAAuxB,gBAAA7P,iBAAArtB,EAAAi4C,mBAAAtsC,EAAA6hB,aAAuE7hB,EAAAwxB,aAAA7K,gBAAA3mB,EAAAuxB,iBAAkDvxB,YAAAlF,GAAA2yD,sBAAA,CAA6CxtD,EAAAhe,EAAK,IAAA+xB,GAAAD,EAAA1f,EAAAnS,EAAAD,EAAA+d,EAAiB+sD,GAAA,GAAM/sD,EAAAL,OAAA,SAAAxL,GAAqB8zB,EAAA4lC,sBAAA15D,EAAA6f,EAAA/xB,SAAiCgmC,GAAA6lC,mBAAAz5D,EAAAnS,EAAA+xB,EAAAhyB,EAAA+d,EAAA0S,IAAwC,QAAAzS,GAAA9L,GAAcA,EAAAggD,OAAAr5C,EAAA4Q,WAAA0gD,GAAAx8B,OAAA1iC,GAAA6gE,WAAA3B,GAAAv8B,QAAA3iC,GAAA6gE,WAAuE3B,GAAA4B,aAAA75D,EAAAggD,OAAAr5C,EAAA2Q,WAAwC,IAAAtX,EAAAkgD,YAAA+X,GAAA6B,YAAA95D,EAAAy8C,SAAAz8C,EAAAonD,cAAApnD,EAAAknD,SAAAlnD,EAAAmnD,SAAAnnD,EAAAqnD,mBAC7ZrnD,EAAAunD,cAAAvnD,EAAAsnD,cAAAtnD,EAAA+nD,oBAAAkQ,GAAA6B,YAAAnzD,EAAAkR,YAAsFogD,GAAA8B,aAAA/5D,EAAAwnD,WAA4ByQ,GAAA+B,aAAAh6D,EAAA8iD,WAA4BmV,GAAAgC,cAAAj6D,EAAA+iD,YAA8BkV,GAAAiC,cAAAl6D,EAAAgjD,YAA8BiV,GAAAkC,iBAAAn6D,EAAA4nD,cAAA5nD,EAAA8nD,oBAAA9nD,EAAA6nD,oBAA+E,QAAAjoC,GAAA5f,EAAAE,EAAAnS,EAAAuoB,GAAoB8jD,EAAA,CAAK,IAAAppE,GAAA6nE,GAAA1iD,IAAApoB,EAC9N,IAD6OssE,MAAAC,IAAAt6D,IAAA24D,IAAAQ,GAAAoB,SAAAxsE,EAAA05D,eAAA15D,EAAA25D,YAAA1nD,EAAAhP,EAAAgP,IAAA24D,GAAA5qE,EAAAJ,KAAA6+D,GAAA,SAAAx7D,EAAAwpE,mBAAAxpE,EAAAwpE,oBAAArB,GAAAC,YAAArrE,EAAA6yC,aAAA,IAAwK,SAAA5vC,EAAA8nE,UACze/qE,EAAA6yC,aAAA,GAAmB,SAAA5vC,EAAAypE,YAAAzpE,EAAAypE,aAAAC,GAAAC,OAAA5sE,EAAA6yC,aAAA,GAAiE7yC,EAAA6yC,YAAA,CAAkB5gC,EAAA,CAAG,GAAA6L,GAAAgtD,GAAA1iD,IAAApoB,GAAA+xB,EAAA7K,GAAA2lD,cAAA7sE,EAAA2sE,GAAAx6D,EAAAi5D,GAAAC,UAAA9iD,GAAAxoB,EAAAmnB,GAAA4lD,eAAA9sE,EAAA+xB,GAAAD,EAAAhU,EAAAitD,QAAA9qE,GAAA,CAAkG,aAAA6xB,EAAA9xB,EAAAktC,iBAAA,UAAA33B,OAA8C,IAAAuc,EAAAi7C,OAAAhtE,EAAAywB,EAAAxwB,OAAwB,aAAA+xB,EAAAi7C,SAAA,KAAA/6D,EAAoChS,IAAA,EAC/F,GADyGA,IAAA8xB,EAAAi7C,UAAAl7C,EAAAlZ,EAAAuwD,UAAAp3C,EAAAi7C,UAAAlvD,EAAAmvD,eAA+DnqE,KAAA9C,EAAAoH,KAAAstD,SAAA97C,EAAAujD,cAAAv5D,MAAAkvB,EAAA4iC,UAAAC,aAAA7iC,EAAA6iC,aAAAC,eAAA9iC,EAAA8iC,iBAC9X92C,EAAAmvD,eAAiBnqE,KAAA9C,EAAAoH,KAAAstD,SAAA10D,EAAA00D,SAAAC,aAAA30D,EAAA20D,aAAAC,eAAA50D,EAAA40D,gBAA4F50D,EAAAitE,cAAAnvD,EAAAmvD,cAAAn7C,EAAA5K,GAAAgmD,eAAAltE,EAAA+xB,EAAAhyB,GAAA+d,EAAAitD,QAAAj5C,EAAA9xB,EAAA+qE,QAAAj5C,GAAqFC,EAAAD,EAAAq7C,gBAAoBntE,EAAAq1C,aAAA,IAAAt1C,EAAAC,EAAAotE,yBAAA,EAAqDrtE,EAAAgmC,EAAAsnC,gBAAoBttE,IAAA,GAAAgyB,EAAA,cAAAhyB,IAAAC,EAAAotE,0BAAwD,IAAAptE,EAAAs1C,aAAA,IAAAv1C,EAAAC,EAAAstE,yBAAA,EAAqDvtE,EAAAgmC,EAAAwnC,gBAAoBxtE,IAAA,GAAAgyB,EAAA,cAAAhyB,IAAAC,EAAAstE,0BAAwDv7C,GAAAjU,EAAAmvD,cAAAvY,UAA2B10D,YACnf4Y,GAAA8iD,gBAAA17D,YAAA4Y,GAAAwjD,qBAAA,IAAAp8D,EAAA27D,WAAA79C,EAAA2uD,kBAAArB,GAAAC,UAAAt5C,EAAA2nC,eAAA0R,GAAAoC,SAA6IxtE,EAAAi5D,SAAAn7C,EAAA4uD,WAAAC,GAAAC,KAAA76C,EAAA40C,kBAAAnzD,MAAAm5D,GAAAc,QAAA17C,EAAA60C,kBAAApzD,MAAAm5D,GAAAe,YAAA37C,EAAAo1C,WAAA3zD,MAAAm5D,GAAAgB,KAAA57C,EAAAy1C,YAAAh0D,MAAAm5D,GAAA1pD,MAAA8O,EAAA41C,iBAAAn0D,MAAAm5D,GAAAiB,KAAA77C,EAAAk1C,qBAAAzzD,MAAAm5D,GAAA1F,qBAAAl1C,EAAAm1C,wBAAA1zD,MAAAm5D,GAAAzF,wBAAAn1C,EAAAu1C,cAAA9zD,MAAAm5D,GAAArF,cAAAv1C,EAAAw1C,iBAAA/zD,MAC7Im5D,GAAApF,iBAAAx1C,EAAA01C,eAAAj0D,MAAAm5D,GAAAlF,eAAA11C,EAAA21C,kBAAAl0D,MAAAm5D,GAAAjF,mBAA0G3nE,EAAA+d,EAAAitD,QAAA8C,cAA0B9tE,EAAA6Y,EAAAk1D,cAAAC,aAAAhuE,EAAAiuE,IAAAj8C,GAA4CjU,EAAAmwD,aAAAluE,EAAiB+d,EAAAowD,gBAAAt1D,EAAAk1D,cAAAK,aAAApuE,EAAAgyB,GAAwD/xB,EAAA6yC,aAAA,EAAiB,GAAA1V,IAAA,EAAAl9B,EAAA6xB,GAAA,EAAAhU,EAAA7a,EAAA8nE,QAAAhrE,EAAA+d,EAAA+vD,cAAA97C,EAAA9uB,EAAAgqE,cAAAvY,QAEoE,IAFK52C,EAAAle,KAAA0+D,IAAAtzD,GAAAojE,WAAAtwD,EAAAitD,SAAAzM,EAAAxgD,EAAAle,GAAAK,EAAA6xB,EAAAqL,GAAA,GAAoDn9B,EAAAJ,KAAA6+D,MAAAz+D,EAAAJ,GAAAkyB,GAAA,IAAwBqL,GAAAlrB,IAAA24D,KAAa7qE,EAAAud,IAAAtS,GAAAiH,EAAA,oBAA8Bo8D,GAAAC,wBAAAvuE,EAAAokD,SAAAn5C,GAAA,gBAC1c,GAAAS,KAAA1G,IAAAkN,EAAA+7B,IAAA,GAAAviC,KAAAo+B,MAAgC53B,IAAA24D,MAAA34D,EAAAhS,EAAA6xB,GAAA,IAAoB9xB,YAAA4Y,GAAA8iD,gBAAA17D,YAAA4Y,GAAAmiD,mBAAA/6D,YAAA4Y,GAAAoiD,sBAAAh7D,EAAAy1D,UAAAt4B,EAAAp9B,EAAAkX,IAAAs3D,eAAA,SAAApxC,KAAAgnB,SAAAn5C,GAAAigE,GAAA5qC,sBAAApuB,EAAA0tB,gBAAsN3/B,YAAA4Y,GAAAmiD,mBAAA/6D,YAAA4Y,GAAAsE,qBAAAld,YAAA4Y,GAAA2hD,mBAAAv6D,YAAA4Y,GAAAoiD,sBAAAh7D,YAAA4Y,GAAA8iD,gBAAA17D,EAAA26D,WAAA56D,EAAAokD,SAAAn5C,GAAA,aAAAiH,EAAAm4C,oBAC1QrqD,EAAAud,IAAAtS,GAAA+6B,EAAA,uBAAiChmC,EAAAud,IAAAtS,GAAA+6B,EAAA,0BAAmC/lC,EAAA26D,WAAA56D,EAAAyuE,YAAAxjE,GAAAud,EAAA,cAAAxoB,EAAAyuE,YAAAxjE,GAAAud,EAAA,qBAAA4U,EAAA5U,EAAAm8B,YAAA2pB,GAAAI,qBAAAtxC,EAAA0hC,kBAAA9+D,EAAAud,IAAAtS,GAAAmyB,EAAA,eAAAp9B,EAAAud,IAAAtS,GAAAmyB,EAAA,oBAAAp9B,EAAAud,IAAAtS,GAAAmyB,EAAA,sBAAAp9B,EAAAyuE,YAAAxjE,GAAAmyB,EAAA,iBAA0QrL,EAAA,CACtK,GAD4K9xB,EAAAi5D,SAAAnnC,EAAA7xB,EAAA8xB,EAAA40C,kBAAA9zB,YAAA/gB,EAAAC,EAAA60C,kBAAA/zB,YAAA/gB,EAAAC,EAAAy1C,YAAA30B,YAAA/gB,EAAAC,EAAAo1C,WAAAt0B,YAAA/gB,EAAAC,EAAA41C,iBAAA90B,YACpV/gB,GAAG3f,GAAAnS,EAAAk5D,MAAAnnC,EAAA20C,SAAAlzD,MAAArB,EAAAgL,MAAAhL,YAAAyG,GAAA4nD,KAAAzuC,EAAAy0C,QAAAhzD,MAAArB,EAAA47B,KAAAhc,EAAA00C,OAAAjzD,MAAArB,EAAA67B,KAAA77B,YAAAyG,GAAA6nD,UAAA1uC,EAAAw0C,WAAA/yD,MAAArB,EAAAuuD,UAAqK1gE,YAAA4Y,GAAA2hD,mBAAAv6D,YAAA4Y,GAAAsE,qBAAAld,YAAA4Y,GAAAmiD,mBAAA/6D,YAAA4Y,GAAAoiD,sBAAAh7D,YAAA4Y,GAAAgiD,kBAAA,CAAsM7oC,EAAAmgC,QAAA1+C,MAAAxT,EAAAkyD,QAA0BngC,EAAA6zC,QAAApyD,MAAAxT,EAAAmd,MAAwBnd,EAAA4uD,UAAA78B,EAAA68B,SAAAp7C,MAAAid,KAAAzwB,EAAA4uD,UAAAhoD,eAAA5G,EAAAw1D,mBAAkFzjC,EAAA9a,IAAAzD,MAClfxT,EAAAiX,IAAM8a,EAAA8+B,YAAAr9C,MAAAxT,EAAA6wD,YAAkC9+B,EAAA6/B,SAAAp+C,MAAAxT,EAAA4xD,SAA4B5xD,EAAA4vD,QAAA79B,EAAA69B,MAAAp8C,MAAAxT,EAAA4vD,MAAA79B,EAAA8jC,eAAAriD,MAAAxT,EAAA61D,eAAyE,IAAAz4B,EAAMp9B,GAAAiX,IAAAmmB,EAAAp9B,EAAAiX,IAAAjX,EAAA6wD,YAAAzzB,EAAAp9B,EAAA6wD,YAAA7wD,EAAAq1D,gBAAAj4B,EAAAp9B,EAAAq1D,gBAAAr1D,EAAAuwD,UAAAnzB,EAAAp9B,EAAAuwD,UAAAvwD,EAAAiwD,QAAA7yB,EAAAp9B,EAAAiwD,QAAAjwD,EAAAuxD,aAAAn0B,EAAAp9B,EAAAuxD,aAAAvxD,EAAAkxD,aAAA9zB,EAAAp9B,EAAAkxD,aAAAlxD,EAAA4xD,SAAAx0B,EAAAp9B,EAAA4xD,SAAA5xD,EAAAkvD,cAAA9xB,EAAAp9B,EAAAkvD,aAA2P,SAAA9xB,gBAAAxkB,GAAA81D,oBAAAtxC,IAAAwtB,SAAAz4C,EAAAirB,EAAAvjB,OAAAujB,IAAAgxB,OAAAr8B,EAAA8zC,aAAAryD,MAAA8J,IAAAnL,EAAAnH,EAC9YmH,EAAA8M,EAAAme,EAAApyB,EAAAoyB,EAAAne,IAAc8S,EAAA0jC,OAAAjiD,MAAAxT,EAAAy1D,OAAwB1jC,EAAA+zC,WAAAtyD,MAAAxT,EAAAy1D,iBAAA78C,GAAAy/C,eAAA,EAA8DtmC,EAAA4jC,aAAAniD,MAAAxT,EAAA21D,aAAoC5jC,EAAAyoC,gBAAAhnD,MAAAxT,EAAAw6D,gBAA0Cx6D,YAAA4Y,GAAAuM,mBAAA4M,EAAA6zC,QAAApyD,MAAAxT,EAAAmd,MAAA4U,EAAAmgC,QAAA1+C,MAAAxT,EAAAkyD,SAAAlyD,YAAA4Y,GAAAwhD,oBAAAroC,EAAA6zC,QAAApyD,MAAAxT,EAAAmd,MAAA4U,EAAAmgC,QAAA1+C,MAAAxT,EAAAkyD,QAAAngC,EAAAsoC,SAAA7mD,MAAAxT,EAAAq6D,SAAAtoC,EAAA03C,UAAAj2D,MAAAxT,EAAAq6D,SAAAr6D,EAAAs6D,QAAAvoC,EAAAoU,MAAA3yB,MAAAxT,EAAAmmC,OAAAnmC,YAAA4Y,GAAA6iD,gBAAA1pC,EAAA6zC,QAAApyD,MAAAxT,EAAAmd,MAClL4U,EAAAmgC,QAAA1+C,MAAAxT,EAAAkyD,QAAAngC,EAAAxV,KAAA/I,MAAAxT,EAAAuc,KAAArc,EAAA6xB,EAAAoU,MAAA3yB,MAAA,GAAA0xB,EAAAypC,aAAA58C,EAAA9a,IAAAzD,MAAAxT,EAAAiX,IAAA,OAAAjX,EAAAiX,MAAAmmB,EAAAp9B,EAAAiX,IAAA4C,OAAA7Z,IAAAiX,IAAAm3C,OAAAr8B,EAAA8zC,aAAAryD,MAAA8J,IAAA8f,EAAApyB,EAAAoyB,EAAAne,EAAAjf,EAAAgL,EAAAhL,EAAAif,KAAAjf,YAAA4Y,GAAAsE,qBAAAld,EAAAuvD,WAAAx9B,EAAAw9B,SAAA/7C,MAAAxT,EAAAuvD,SAAAx9B,EAAA6jC,kBAAApiD,MAAAxT,EAAA41D,mBAAA51D,EAAAkvD,cAAAn9B,EAAAm9B,YAAA17C,MAAAxT,EAAAkvD,cAAAlvD,YAAA4Y,GAAAmiD,mBAAAhpC,EAAA48B,SAAAn7C,MAAAxT,EAAA2uD,SAAA58B,EAAA88B,UAAAr7C,MAAA/H,KAAAC,IAAA1L,EAAA6uD,UAAA,MAAA7uD,EAAAuvD,WAAAx9B,EAAAw9B,SAAA/7C,MACAxT,EAAAuvD,SAAAx9B,EAAA6jC,kBAAApiD,MAAAxT,EAAA41D,mBAAA51D,EAAAkvD,cAAAn9B,EAAAm9B,YAAA17C,MAAAxT,EAAAkvD,aAAAlvD,EAAAiwD,UAAAl+B,EAAAk+B,QAAAz8C,MAAAxT,EAAAiwD,QAAAl+B,EAAAu+B,UAAA98C,MAAAxT,EAAAswD,WAAAtwD,EAAAuwD,YAAAx+B,EAAAw+B,UAAA/8C,MAAAxT,EAAAuwD,UAAAx+B,EAAA6+B,YAAAp9C,MAAAid,KAAAzwB,EAAA4wD,cAAA5wD,EAAAq1D,kBAAAtjC,EAAAsjC,gBAAA7hD,MAAAxT,EAAAq1D,gBAAAtjC,EAAAujC,kBAAA9hD,MAAAxT,EAAAs1D,kBAAAvjC,EAAAwjC,iBAAA/hD,MAAAxT,EAAAu1D,mBAAAv1D,YAAA4Y,GAAAwiD,sBAAArpC,EAAAwpC,UAAA/nD,MAAAxT,EAAAu7D,UAAAxpC,EAAAupC,mBAAA9nD,MACAxT,EAAAs7D,mBAAA32B,EAAA5S,EAAA/xB,gBAAA4Y,GAAAoiD,qBAAAr2B,EAAA5S,EAAA/xB,eAAA4Y,GAAAgiD,kBAAA56D,EAAAq1D,kBAAAtjC,EAAAsjC,gBAAA7hD,MAAAxT,EAAAq1D,gBAAAtjC,EAAAujC,kBAAA9hD,MAAAxT,EAAAs1D,kBAAAvjC,EAAAwjC,iBAAA/hD,MAAAxT,EAAAu1D,kBAAAv1D,YAAA4Y,GAAAkiD,qBAAA/oC,EAAAmgC,QAAA1+C,MAAAxT,EAAAkyD,SAA6Ut5C,EAAAk1D,cAAAc,OAAA5jE,GAAA/H,EAAAgrE,aAAAl8C,EAAAgU,GAC3P,MAD4ShmC,GAAAud,IAAAtS,GAAAud,EAAA,mBAA6BxoB,EAAAud,IAAAtS,GAAAud,EAAA,gBAA0BxoB,EAAAokD,SAAAn5C,GAAA,cAAAud,EAAAoX,aAA0C18B,IAAAirE,gBAAoB,OACnfjrE,IAAA2V,EAAAk1D,cAAAe,YAAA5rE,EAAA8uB,EAAAxJ,EAAAtW,GAAA2G,EAAAk1D,cAAAc,OAAA5jE,GAAA/H,EAAA8uB,EAAAgU,IAAkFjoB,EAAS,QAAA6mB,GAAA1yB,EAAAE,GAAgBF,EAAAuiD,UAAAhhD,MAAArB,EAAAqiD,UAA8BviD,EAAAwiD,UAAAjhD,MAAArB,EAAAsiD,UAA8BtiD,EAAAo/C,eAAAt/C,EAAAs/C,aAAA/9C,MAAArB,EAAAo/C,cAAsDp/C,EAAA++C,eAAAj/C,EAAAi/C,aAAA19C,MAAArB,EAAA++C,cAAsD/+C,EAAAo9C,WAAAt9C,EAAAs9C,SAAA/7C,MAAArB,EAAAo9C,SAAAt9C,EAAA2jD,kBAAApiD,MAAArB,EAAAyjD,mBAAwFzjD,EAAA+8C,cAAAj9C,EAAAi9C,YAAA17C,MAAArB,EAAA+8C,aAAmD/8C,EAAA89C,UAAAh+C,EAAAg+C,QAAAz8C,MAAArB,EAAA89C,QAAAh+C,EAAAq+C,UAAA98C,MAAArB,EAAAm+C,WAAqEn+C,EAAAo+C,YAAAt+C,EAAAs+C,UAAA/8C,MACnerB,EAAAo+C,UAAAt+C,EAAA2+C,YAAAp9C,MAAAid,KAAAte,EAAAy+C,cAAqDz+C,EAAAkjD,kBAAApjD,EAAAojD,gBAAA7hD,MAAArB,EAAAkjD,gBAAApjD,EAAAqjD,kBAAA9hD,MAAArB,EAAAmjD,kBAAArjD,EAAAsjD,iBAAA/hD,MAAArB,EAAAojD,kBAAyJpjD,EAAAsjD,SAAAxjD,EAAAkpD,gBAAA3nD,MAAArB,EAAAgpD,iBAAsD,QAAAl2B,GAAAhzB,GAAc,GAAAE,EAAM,IAAAF,IAAA2G,EAAAgU,eAAA,MAAA5hB,IAAA8jE,MAA4C,IAAA78D,IAAA2G,EAAAiU,oBAAA,MAAA7hB,IAAA+jE,aAAwD,IAAA98D,IAAA2G,EAAAkU,uBAAA,MAAA9hB,IAAAgkE,eAA6D,IAAA/8D,IAAA2G,EAAAmU,cAAA,MAAA/hB,IAAAikE,OAA4C,IAAAh9D,IAAA2G,EAAAoU,2BAAA,MAAAhiB,IAAAkkE,sBACre,IAAAj9D,IAAA2G,EAAAqU,0BAAA,MAAAjiB,IAAAmkE,qBAAsE,IAAAl9D,IAAA2G,EAAAsU,aAAA,MAAAliB,IAAAokE,MAA0C,IAAAn9D,IAAA2G,EAAAuU,0BAAA,MAAAniB,IAAAqkE,qBAAsE,IAAAp9D,IAAA2G,EAAAwU,yBAAA,MAAApiB,IAAAskE,oBAAoE,IAAAr9D,IAAA2G,EAAAyU,iBAAA,MAAAriB,IAAAukE,aAAqD,IAAAt9D,IAAA2G,EAAAiV,sBAAA,MAAA7iB,IAAAwkE,sBAAmE,IAAAv9D,IAAA2G,EAAAkV,sBAAA,MAAA9iB,IAAAykE,sBAAmE,IAAAx9D,IAAA2G,EAAAmV,qBAAA,MAAA/iB,IAAA0kE,oBACrb,IAAAz9D,IAAA2G,EAAA0U,SAAA,MAAAtiB,IAAA2kE,IAAoC,IAAA19D,IAAA2G,EAAA2U,UAAA,MAAAviB,IAAA4kE,KAAsC,IAAA39D,IAAA2G,EAAA4U,kBAAA,MAAAxiB,IAAA6kE,cAAuD,IAAA59D,IAAA2G,EAAA6U,QAAA,MAAAziB,IAAA8kE,GAAkC,IAAA79D,IAAA2G,EAAA8U,gBAAA,MAAA1iB,IAAA+kE,YAAmD,IAAA99D,IAAA2G,EAAA+U,UAAA,MAAA3iB,IAAAglE,KAAwE,IAAlC79D,EAAA89D,GAAA7nD,IAAA,0BAAkC,OAAAjW,GAAAF,IAAA2G,EAAAgV,cAAA,MAAAzb,GAAA+9D,cAA6D,IAAAj+D,IAAA2G,EAAAoV,YAAA,MAAAhjB,IAAAmlE,KAAwC,IAAAl+D,IAAA2G,EAAAqV,UAAA,MAAAjjB,IAAAolE,GAAoC,IAAAn+D,IAAA2G,EAAAsV,WAAA,MAAAljB,IAAAqlE,IAAsC,IAAAp+D,IAAA2G,EAAAuV,gBAAA,MAAAnjB,IAAAslE,SAC7c,IAAAr+D,IAAA2G,EAAAwV,qBAAA,MAAApjB,IAAAulE,eAA2D,IAAAt+D,IAAA2G,EAAA0V,YAAA,MAAAtjB,IAAAwlE,eAAkD,IAAAv+D,IAAA2G,EAAAwR,YAAA,MAAApf,IAAAylE,QAA2C,IAAAx+D,IAAA2G,EAAAyR,iBAAA,MAAArf,IAAA0lE,aAAqD,IAAAz+D,IAAA2G,EAAA0R,wBAAA,MAAAtf,IAAA2lE,qBAAoE,IAAA1+D,IAAA2G,EAAA6R,WAAA,MAAAzf,IAAA8K,IAAsC,IAAA7D,IAAA2G,EAAA8R,UAAA,MAAA1f,IAAA4lE,GAAoC,IAAA3+D,IAAA2G,EAAA+R,eAAA,MAAA3f,IAAA6lE,SAA+C,IAAA5+D,IAAA2G,EAAAgS,uBAAA,MAAA5f,IAAA8lE,mBAAiE,IAAA7+D,IAAA2G,EAAAiS,eAAA,MAAA7f,IAAA+lE,SAC3c,IAAA9+D,IAAA2G,EAAAkS,uBAAA,MAAA9f,IAAAgmE,mBAAiE,IAAA/+D,IAAA2G,EAAAmS,eAAA,MAAA/f,IAAAimE,SAA+C,IAAAh/D,IAAA2G,EAAAoS,uBAAA,MAAAhgB,IAAAkmE,mBAAiE,IAAAj/D,IAAA2G,EAAAqS,eAAA,MAAAjgB,IAAAmmE,SAA+C,IAAAl/D,IAAA2G,EAAAsS,uBAAA,MAAAlgB,IAAAomE,mBAAiE,IAAAn/D,IAAA2G,EAAAuS,uBAAA,MAAAngB,IAAAqmE,kBAAyG,IAAzCl/D,EAAA89D,GAAA7nD,IAAA,iCAAyC,OAAAjW,EAAA,CAAa,GAAAF,IAAA2G,EAAA2V,qBAAA,MAAApc,GAAAm/D,4BAAwE,IAAAr/D,IAAA2G,EAAA4V,sBAAA,MAAArc,GAAAo/D,6BAC/d,IAAAt/D,IAAA2G,EAAA6V,sBAAA,MAAAtc,GAAAq/D,6BAA0E,IAAAv/D,IAAA2G,EAAA8V,sBAAA,MAAAvc,GAAAs/D,8BAAoH,GAA1Ct/D,EAAA89D,GAAA7nD,IAAA,kCAA0C,OAAAjW,EAAA,CAAa,GAAAF,IAAA2G,EAAA+V,wBAAA,MAAAxc,GAAAu/D,+BAA8E,IAAAz/D,IAAA2G,EAAAgW,wBAAA,MAAAzc,GAAAw/D,+BAA8E,IAAA1/D,IAAA2G,EAAAiW,yBAAA,MAAA1c,GAAAy/D,gCAAgF,IAAA3/D,IAAA2G,EAAAkW,yBAAA,MAAA3c,GAAA0/D,iCAChZ,GADge1/D,EACvgB89D,GAAA7nD,IAAA,iCAAuC,OAAAjW,GAAAF,IAAA2G,EAAAmW,gBAAA,MAAA5c,GAAA2/D,yBAAsG,IAA5B3/D,EAAA89D,GAAA7nD,IAAA,oBAA4B,OAAAjW,EAAA,CAAa,GAAAF,IAAA2G,EAAA2R,YAAA,MAAApY,GAAA4/D,OAA0C,IAAA9/D,IAAA2G,EAAA4R,YAAA,MAAArY,GAAA6/D,QAA0C,SAASzwE,QAAAwD,IAAA,sBAAA6T,EAAAiP,UAAkD5V,OAAQ,IAAAizB,GAAA,SAAAjzB,EAAAggE,OAAAhgE,EAAAggE,OAAA1jE,SAAAglD,gBAAA,yCAAApuB,EAAA,SAAAlzB,EAAAo0C,QAAAp0C,EAAAo0C,QAAA,KAAAxoC,EAAA,SAAA5L,EAAAigE,OAAAjgE,EAAAigE,MAAA9sC,EAAA,SAAAnzB,EAAAukD,OAAAvkD,EAAAukD,MAAAt3C,EACjT,SAAAjN,EAAAkgE,SAAAlgE,EAAAkgE,QAAAlzD,EAAA,SAAAhN,EAAAmgE,WAAAngE,EAAAmgE,UAAA/sC,EAAA,SAAApzB,EAAA+nD,oBAAA/nD,EAAA+nD,mBAAA10B,EAAA,SAAArzB,EAAAogE,uBAAApgE,EAAAogE,sBAAA9sC,KAAAC,KAAAC,KAAAC,KAAAC,KAAAC,EAAA,GAAA/B,cAAA,GAAAgC,KAAAC,IAAqP75B,MAAAga,WAAAif,EAAkBj5B,KAAAo6C,QAAA,KAAkBp6C,KAAAu/D,YAAAv/D,KAAAqmE,iBAAArmE,KAAAsmE,eAAAtmE,KAAAumE,eAAAvmE,KAAAwmE,WAAA,EAAiGxmE,KAAAytD,kBAAuBztD,KAAAymE,sBAAA,EAA6BzmE,KAAA0mE,YAAA,EAAmB1mE,KAAA2mE,wBAAA3mE,KAAA4mE,YAAA5mE,KAAA6mE,YACjc,EAAG7mE,KAAA8mE,YAAAn6D,EAAAoT,kBAAyC/f,KAAA+mE,sBAAA/mE,KAAAgnE,oBAAA,EAAsDhnE,KAAAohE,gBAAA,EAAuBphE,KAAAshE,gBAAA,CAAuB,IAAAxnC,GAAA95B,KAAAqyD,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,KAAAoM,EAAA,GAAAD,EAAA,KAAAP,EAAA,GAAAzxD,GAAA4nB,QAAA0yC,EAAA,KAAA1I,EAAA,GAAA5xD,GAAA4nB,QAAA6rC,EAAA,EAAA3B,EAAA,GAAA9xD,GAAA0X,MAAA,GAAAq6C,EAAA,EAAAwI,EAAAjuC,EAAA96B,MAAAgpE,EAAAluC,EAAA76B,OAAAnK,EAAA,EAAAoqE,EAAA,GAAA1xD,GAAA4nB,QAAA,IAAA2yC,EAAAC,GAAAC,GAAA,EAAA5I,EAAA,GAAA7xD,GAAA4nB,QAAA,IAAA2yC,EAAAC,GAAAjI,GAAA,GAAAvyD,GAAAivB,QAAAujC,GAAA,GAAAxyD,GAAA06D,cAAAhH,IAAA,EAAAC,IAAA,EAAAjB,GAAA,GAAA1yD,GAAA+qB,OAAA8nC,GAAA,GAAA7yD,GAAA2mB,QAAA0rC,GAAA,GAAAryD,GAAA8G,QAAAitD,IAA8VC,KAAA,GAC9ea,SAAA,OAAAC,eAAAzG,wBAAAC,2BAAAyG,QAAArG,iBAAAC,oBAAAtkD,SAAAwkD,kBAAAC,qBAAAkG,QAAA2F,YAAkMC,IAAKC,MAAA,EAAAhuD,SAAA,EAAA0vB,MAAA,EAAArvC,OAAA,EAAqCmG,MAAAynE,MAAWj2D,OAAA+1D,GAAAG,QAAkB/hC,WAAA,EAAAE,SAAA,GAAwB8hC,SAAA,KAAgB,IAAA5oE,GAAM,KAA8J,GAA1J6S,GAAGq0D,MAAAr0D,EAAA24C,MAAApxB,EAAA+sC,QAAAjzD,EAAAkzD,UAAAnzD,EAAA+6C,mBAAA30B,EAAAgtC,sBAAA/sC,GAAoFt6B,GAAAm6B,GAAAD,EAAAzsB,WAAA,QAAAoF,IAAAqnB,EAAAzsB,WAAA,qBAAAoF,GAAmE,OAAA7S,GAAA,CAAa,UAAAk6B,EAAAzsB,WAAA,2EACle,sCAAsC,SAAAzN,GAAA6oE,2BAAA7oE,GAAA6oE,yBAAA,WAA4E,OAAOC,SAAA,EAAAC,SAAA,EAAAna,UAAA,KAAqC10B,EAAAgI,iBAAA,mBAAAjqC,GAAA,GAA4C,MAAA+wE,IAAUzyE,QAAAC,MAAA,wBAAAwyE,IAA0C,GAAA/D,IAAA,GAAAr3D,GAAAq7D,gBAAAjpE,GAAmCilE,IAAA7nD,IAAA,uBAA6B6nD,GAAA7nD,IAAA,qBAA2B6nD,GAAA7nD,IAAA,4BAAkC6nD,GAAA7nD,IAAA,0BAAgC6nD,GAAA7nD,IAAA,iCAAuC6nD,GAAA7nD,IAAA,4BAAkC6nD,GAAA7nD,IAAA,0BACpe6nD,GAAA7nD,IAAA,4BAAAxP,EAAAwqB,eAAA0V,SAAA,WAA4E,IAAAu1B,IAAA,GAAAz1D,GAAAs7D,kBAAAlpE,GAAAilE,GAAAh+D,GAAAi4D,GAAA,GAAAtxD,GAAAu7D,WAAAnpE,GAAAilE,GAAAhrC,GAAA6lC,GAAA,GAAAlyD,GAAAw7D,gBAAAC,GAAA,GAAAz7D,GAAA07D,cAAAtpE,GAAAilE,GAAA/F,GAAAY,GAAAuD,GAAAppC,EAAAh5B,KAAAynE,MAAAhI,GAAA,GAAA9yD,GAAA27D,aAAAvpE,GAAA8/D,GAAA7+D,KAAAynE,MAAAxsD,GAAA,GAAAtO,GAAA47D,cAAAvoE,KAAAoiE,IAAAoG,GAAA,GAAA77D,GAAA87D,WAA6PzoE,MAAAynE,KAAAE,SAAA1sD,GAAA0sD,QAA+B,IAAAe,IAAA,GAAA/7D,GAAAg8D,oBAAA5pE,GAAAilE,GAAAuD,IAAAqB,GAAA,GAAAj8D,GAAAk8D,2BAAA9pE,GAAAilE,GAAAuD,IAAAuB,GAAA,GAAAn8D,GAAA61B,wBAAA,cAAAumC,GACxW,GAAAp8D,GAAAwN,kBAAA6uD,GAAA,GAAAr8D,GAAAyE,KAAA,GAAAzE,GAAAs8D,oBAAA,QAAAt8D,GAAA2hD,mBAA8GxF,WAAA,EAAAC,YAAA,IAA8B/iD,GAAA2G,EAAAuwD,UAAAO,IAAuB,IAAAyL,IAAA,GAAAv8D,GAAAyE,KAAA,GAAAzE,GAAAw8D,kBAAA,UAAAx8D,GAAA8iD,gBAAmFhH,SAAAziD,EAAAyiD,SAAAC,aAAA1iD,EAAA0iD,aAAAC,eAAA3iD,EAAA2iD,eAAAG,WAAA,EAAAC,YAAA,EAAA/C,KAAAr5C,EAAA2Q,WAAkImiD,IAAA78D,OAAAomE,IAAcvJ,GAAA78D,OAAAsmE,IAAcn1E,IAAIiM,KAAAo6C,QAAAr7C,GAAeiB,KAAAopE,aAAAhH,GAAqBpiE,KAAA2vD,WAAAqU,GAAkBhkE,KAAA46D,WAAAiE,GAAkB7+D,KAAAqpE,MAAApL,EAAa,IAAAqL,IAAA,GAAA38D,GAAA48D,eAAAvpE,KAC7e0gE,GAAAjB,GAAMz/D,MAAAwpE,UAAAF,EAAkB,IAAAG,IAAA,GAAA98D,GAAA+8D,aAAA1pE,KAAA45B,GAAA+vC,GAAA,GAAAh9D,GAAAi9D,gBAAA5pE,KAAA65B,EAA2E75B,MAAAwM,WAAA,WAA2B,MAAAzN,KAAUiB,KAAA6pE,qBAAA,WAAqC,MAAA9qE,IAAA8qE,wBAAiC7pE,KAAA8pE,iBAAA,WAAiC9F,GAAA7nD,IAAA,sBAAA4tD,eAA2C/pE,KAAAgqE,iBAAA,WAAiC,MAAA5H,IAAA4H,oBAA8BhqE,KAAAiqE,aAAA,WAA6B,MAAA7H,IAAAzU,WAAqB3tD,KAAAkqE,cAAA,WAA8B,MAAAj2E,IAAU+L,KAAAmqE,cAAA,SAAAnkE,GAA+B,SAAAA,IAAA/R,EAAA+R,EAAAhG,KAAAyN,QAAA+wD,EAAAvrD,EACldurD,EAAA5sD,GAAA,KAAW5R,KAAAoqE,QAAA,WAAwB,OAAOjsE,MAAA+oE,EAAA9oE,OAAA+oE,IAAqBnnE,KAAAyN,QAAA,SAAAzH,EAAAE,EAAAnS,GAA6BmzE,EAAAlhE,EAAKmhE,EAAAjhE,EAAK+yB,EAAA96B,MAAA6H,EAAA/R,EAAYglC,EAAA76B,OAAA8H,EAAAjS,GAAa,IAAAF,IAAAklC,EAAAoxC,MAAAlsE,MAAA6H,EAAA,KAAAizB,EAAAoxC,MAAAjsE,OAAA8H,EAAA,MAAqDlG,KAAAsqE,YAAA,IAAAtkE,EAAAE,IAA2BlG,KAAAsqE,YAAA,SAAAtkE,EAAAE,EAAAnS,EAAAuoB,GAAmC2hD,GAAAK,SAAAE,EAAAntD,IAAArL,EAAAE,EAAAnS,EAAAuoB,KAA6Btc,KAAAuqE,WAAA,SAAAvkE,EAAAE,EAAAnS,EAAAuoB,GAAkC2hD,GAAAE,QAAAE,EAAAhtD,IAAArL,EAAAE,EAAAnS,EAAAuoB,KAA4Btc,KAAAwqE,eAAA,SAAAxkE,GAAgCi4D,GAAAuM,eAAApD,EAAAphE,IAAwBhG,KAAAyqE,cAAA,WAA8B,MAAAhM,IAAUz+D,KAAA+Z,cAAA,SAAA/T,EAAAjS,GAAiC0qE,EAAAptD,IAAArL,GAAS04D,EAAA,SAAA3qE,IAAA,EAAiBmS,EAAAu4D,EAAA3sD,EAAA2sD,EAAAl6C,EAAAk6C,EAAAv4D,EACxew4D,IAAI1+D,KAAA0qE,cAAA,WAA8B,MAAAhM,IAAU1+D,KAAA2qE,cAAA,SAAA3kE,GAA+B04D,EAAA14D,EAAIE,EAAAu4D,EAAA3sD,EAAA2sD,EAAAl6C,EAAAk6C,EAAAv4D,EAAAw4D,IAAkB1+D,KAAAwhD,MAAA,SAAAx7C,EAAAE,EAAAnS,GAA2B,GAAAuoB,GAAA,GAAQ,SAAAtW,QAAAsW,GAAAvd,GAAA6rE,mBAAuC,SAAA1kE,QAAAoW,GAAAvd,GAAA8rE,mBAAuC,SAAA92E,QAAAuoB,GAAAvd,GAAA+rE,oBAAyC/rE,GAAAyiD,MAAAllC,IAAYtc,KAAAk+D,WAAA,WAA2Bl+D,KAAAwhD,OAAA,UAAsBxhD,KAAA+qE,WAAA,WAA2B/qE,KAAAwhD,OAAA,UAAsBxhD,KAAAgrE,aAAA,WAA6BhrE,KAAAwhD,OAAA,UAAsBxhD,KAAAirE,YAAA,SAAAjlE,EAAAE,EAAAnS,EAAAuoB,GAAmCtc,KAAA8+C,gBAAA94C,GAAwBhG,KAAAwhD,MAAAt7C,EAAAnS,EAAAuoB,IAAmBtc,KAAAkrE,aAC1e5uD,EAAEtc,KAAAsrC,QAAA,WAAwB7R,KAAKC,KAAKH,KAAKC,KAAKP,EAAAmI,oBAAA,mBAAApqC,GAAA,IAAgDgJ,KAAA0/D,sBAAA,SAAA15D,EAAAE,EAAAnS,GAA2CkqE,GAAAkN,gBAAmB,IAAA7uD,GAAAuiD,GAAA1iD,IAAAnW,EAC1E,IADyFA,EAAAolE,eAAA9uD,EAAAtjB,WAAAsjB,EAAAtjB,SAAA+F,GAAAssE,gBAA2DrlE,EAAAslE,aAAAhvD,EAAAib,SAAAjb,EAAAib,OAAAx4B,GAAAssE,gBAAqDrlE,EAAAulE,SAAAjvD,EAAA6tB,KAAA7tB,EAAA6tB,GAAAprC,GAAAssE,gBAAyCrlE,EAAAwlE,YAAAlvD,EAAApL,QAAAoL,EAAApL,MAAAnS,GAAAssE,gBAAkDnlE,IAAAg7D,gBAAoBl7D,EAAAolE,eAAArsE,GAAA0sE,WAAA1sE,GAAA2sE,aAAApvD,EAAAtjB,UAAA+F,GAAA4sE,WAAA5sE,GAAA2sE,aAAA1lE,EAAA4lE,cAAA7sE,GAAA8sE,cAC1Y5N,GAAA6N,gBAAA5lE,EAAAlN,UAAA+F,GAAAgtE,oBAAA7lE,EAAAlN,SAAA,EAAA+F,GAAAglE,OAAA,QAAkF/9D,EAAAslE,WAAA,CAAuD,GAAtCvsE,GAAA0sE,WAAA1sE,GAAA2sE,aAAApvD,EAAAib,QAAsC,sBAAAxjC,EAAAoH,MAAA,yBAAApH,EAAAoH,MAAA,yBAAApH,EAAAoH,MAAApH,EAAA60D,UAAAj8C,EAAA6Q,YAAA,OAAAxmB,GAAA,EAAAsS,EAAA,EAAAtD,EAAA0gC,MAAyJ1vC,EAAAsS,EAAItS,GAAA,GAAM,GAAAutB,GAAAve,EAAAgmE,YAAAn6D,GAAA0S,EAAAvtB,EAAA,GAAAutB,EAAAvtB,EAAA,GAAAutB,EAAAvtB,EAAA,MAAA8uB,GAAAvB,EAAAvtB,EAAA,GAAAutB,EAAAvtB,EAAA,GAAAutB,EAAAvtB,EAAA,MAAAlD,GAAAywB,EAAAvtB,EAAA,GAAAutB,EAAAvtB,EAAA,GAAAutB,EAAAvtB,EAAA,KAAqGutB,GAAAvtB,EAAA,GAAA6a,EAAS0S,EAAAvtB,EAAA,GAAA8uB,EAASvB,EAAAvtB,EAAA,GAAAlD,EAASywB,EAAAvtB,EAAA,GAAA6a,EAAS0S,EAAAvtB,EAAA,GAAA8uB,EAASvB,EAAAvtB,EAAA,GAAAlD,EAASywB,EAAAvtB,EAAA,GAAA6a,EAAS0S,EAAAvtB,EAAA,GAAA8uB,EAASvB,EAAAvtB,EAAA,GAAAlD,EAASiL,GAAA4sE,WAAA5sE,GAAA2sE,aACle1lE,EAAAgmE,YAAAjtE,GAAA8sE,cAA8B5N,GAAA6N,gBAAA5lE,EAAAqxB,QAA4Bx4B,GAAAgtE,oBAAA7lE,EAAAqxB,OAAA,EAAAx4B,GAAAglE,OAAA,OAAiD/9D,EAAAulE,QAAAx3E,EAAAiX,MAAAjM,GAAA0sE,WAAA1sE,GAAA2sE,aAAApvD,EAAA6tB,IAAAprC,GAAA4sE,WAAA5sE,GAAA2sE,aAAA1lE,EAAAimE,QAAAltE,GAAA8sE,cAAA5N,GAAA6N,gBAAA5lE,EAAAikC,IAAAprC,GAAAgtE,oBAAA7lE,EAAAikC,GAAA,EAAAprC,GAAAglE,OAAA,QAAgL/9D,EAAAwlE,WAAAz3E,EAAAsyC,eAAA15B,EAAA+Q,WAAA3e,GAAA0sE,WAAA1sE,GAAA2sE,aAAApvD,EAAApL,OAAAnS,GAAA4sE,WAAA5sE,GAAA2sE,aAAA1lE,EAAAkmE,WAAAntE,GAAA8sE,cAAA5N,GAAA6N,gBAAA5lE,EAAAgL,OAAAnS,GAAAgtE,oBAAA7lE,EAAAgL,MAAA,EAAAnS,GAAAglE,OAAA,QAAyN9F,GAAAkO,0BACpfptE,GAAAqtE,WAAArtE,GAAAstE,UAAA,EAAArmE,EAAA0gC,OAAoC1gC,EAAA0gC,MAAA,GAAW1mC,KAAA2/D,mBAAA,SAAA35D,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAutB,GAA8CzS,EAAAwK,EAAK,IAAAhT,GAAAsc,EAAA5f,EAAAE,EAAAoW,EAAAtlB,GAAA8uB,GAAA,CAAoG,IAA9E9f,EAAAjS,EAAAJ,GAAA,IAAA2V,EAAA3V,GAAA,IAAA2oB,EAAA2sC,UAAgCjjD,IAAA44D,MAAA54D,EAAA8f,GAAA,GAAoB5f,EAAAlP,EAAAk7D,sBAA0B,SAAAhsD,EAAA,CAAeF,IAAK,QAAAlS,GAAA,EAAAgyB,EAAA5f,EAAA1P,OAAuB1C,EAAAgyB,EAAIhyB,IAAA,CAAK,GAAA+xB,GAAA3f,EAAApS,EAAWkS,GAAAnG,MAAAgmB,EAAA/xB,IAAckS,EAAAy8B,KAAA5wB,GAAU,EAAA7L,EAAAxP,SAAAwP,EAAAxP,OAAA,EAAyB,QAAA06B,GAAAn9B,EAAA63C,gBAAA93C,EAAA,EAAAgyB,EAAA9f,EAAAxP,OAA2C1C,EAAAgyB,EAAIhyB,IAAA+xB,EAAA7f,EAAAlS,GAAA6lC,EAAA7lC,GAAA+xB,EAAA,OAAAA,EAAA,IAAA3f,EAAA2f,EAAA,QAAAvJ,EAAA8sB,cAAAlY,EAAAl4B,UAAAjF,EAAAi4C,aAAA,cAAAl4C,EAAAo9B,EAAAl4B,SAAAkN,KAAA,IAAAoW,EAAA+sB,cAAAnY,EAAAqG,QACrWxjC,EAAAi4C,aAAA,cAAAl4C,EAAAo9B,EAAAqG,OAAArxB,OAAA,IAAAoW,EAAA8sB,cAAAr1C,EAAAm4C,gBAAA,cAAAp4C,IAAA,IAAAwoB,EAAA+sB,cAAAt1C,EAAAm4C,gBAAA,cAAAp4C,GAA+JwV,GAAAs4D,cAAA1pB,SAAAn5C,GAAA,wBAAA46B,GAAsD7T,GAAA,EAA4H,GAAvH5f,EAAAnS,EAAA8P,MAAU/P,EAAAC,EAAAqjC,WAAAp+B,UAAwB,IAAAsjB,EAAA2sC,YAAA/iD,EAAAu5D,GAAA6M,sBAAAv4E,IAAkD,OAAAmS,GAAAF,EAAA4iE,GAAA5iE,EAAA+lC,SAAA7lC,IAAAF,EAAA0iE,GAAmC5iD,EAAA,CAAS,GAAA9xB,GAAA8xB,EAAA,MAAe,IAAA/xB,YAAA4Y,GAAAmgC,0BAAA94C,EAAAgwE,GAAA7nD,IAAA,iCAAAnoB,GAA6FsB,QAAAC,MAAA,sJAA7F,CACjW,SAAAuwB,MAAA,GAAkBm4C,GAAAkN,gBAAmB,IAAAh6C,GAAAtL,EAAA9xB,EAAAqjC,WAAA9tB,IAAA43D,gBAAAhwC,EAAA5U,EAAA0zC,sBAAoE,KAAA7+B,IAAA7nB,GAAA,CAAY,GAAA2vB,GAAA3vB,EAAA6nB,EAAW,OAAA8H,EAAA,CAAS,GAAAD,GAAAnT,EAAAsL,EAAW,aAAA6H,EAAA,CAAe,GAAApnB,GAAA7S,GAAAglE,MAAA7qC,EAAAF,EAAAnG,MAAA6F,EAAAM,EAAA2N,UAAuCzN,aAAAtB,cAAAhmB,EAAA7S,GAAAglE,MAAA7qC,YAAAsP,cAAAlzC,QAAA0vB,KAAA,gDAAAkU,YAAA+O,aAAAr2B,EAAA7S,GAAA6kE,eAAA1qC,YAAA6O,YAAAn2B,EAAA7S,GAAA4kE,MAAAzqC,YAAAmP,aAAAz2B,EAAA7S,GAAA+kE,aAAA5qC,YAAAiP,YAAAv2B,EAAA7S,GAAA8kE,IAAA3qC,YAAAuO,WAClN71B,EAAA7S,GAAA2kE,KAAAxqC,YAAAyO,cAAA/1B,EAAA7S,GAAAukE,cAAsD,IAAApqC,GAAAF,EAAApG,SAAA5f,EAAAysD,GAAA8M,mBAAAvzC,EAA4C,IAAAA,YAAArsB,GAAAo8B,2BAAA,CAAkD,GAAA91B,GAAA+lB,EAAA/jC,KAAAmkC,EAAAnmB,EAAA41B,OAAA7P,IAAAprB,MAAmCqF,aAAAtG,GAAAm8B,4BAAAm1B,GAAAuO,0BAAAvzC,EAAAhmB,EAAA01B,iBAAA30C,GAAA,SAAAD,EAAAg5C,oBAAAh5C,EAAAg5C,kBAAA95B,EAAA01B,iBAAA11B,EAAAyzB,QAAAu3B,GAAA6N,gBAAA7yC,GAAwMl6B,GAAA0sE,WAAA1sE,GAAA2sE,aAAA14D,GAA+BjU,GAAAgtE,oBAAA9yC,EAAAC,EAAAtnB,EAAA8mB,EAAAU,EAAAnmB,EAAA4f,MAAAgkB,mBAAA/wB,EAAAsT,EAAAJ,GAAA/lB,EAAA4f,MAAAgkB,uBAA6F7d,aAC3frsB,GAAA+7B,0BAAAu1B,GAAAuO,0BAAAvzC,EAAAD,EAAA2P,iBAAA30C,GAAA,SAAAD,EAAAg5C,oBAAAh5C,EAAAg5C,kBAAA/T,EAAA2P,iBAAA3P,EAAA0N,QAAAu3B,GAAA6N,gBAAA7yC,GAAAl6B,GAAA0sE,WAAA1sE,GAAA2sE,aAAA14D,GAAAjU,GAAAgtE,oBAAA9yC,EAAAC,EAAAtnB,EAAA8mB,EAAA,EAAA5S,EAAAoT,EAAAF,EAAAnG,MAAAgkB,uBAAuR,aAAA3lB,IAAAtf,EAAAsf,EAAAC,GAAA,SAAAvf,GAAA,OAAAA,EAAApb,QAAyD,OAAAuI,GAAA0tE,gBAAAxzC,EAAArnB,EAA8B,MAAM,QAAA7S,GAAA2tE,gBAAAzzC,EAAArnB,EAA8B,MAAM,QAAA7S,GAAA4tE,gBAAA1zC,EAAArnB,EAA8B,MAAM,SAAA7S,GAAA6tE,gBAAA3zC,EAAArnB,KAAiCqsD,GAAAkO,0BAA4B,OACzfjmE,GAAAnH,GAAA0sE,WAAA1sE,GAAA8tE,qBAAApN,GAAA8M,mBAAArmE,IAAgR,GAA/MlS,EAAAmX,IAAW,OAAAjF,EAAAlS,EAAAkS,EAAAwgC,MAAA,SAAA5yC,IAAAE,EAAAF,EAAA4yC,OAA2CvV,EAAAp9B,EAAA83C,UAAAh4B,MAAoB3N,EAAAnS,EAAA83C,UAAAnF,MAAoB5yC,EAAA,OAAAywB,IAAA1Q,MAAA,EAAqBiS,EAAA,OAAAvB,IAAAmiB,MAAAv7B,IAA4BoZ,EAAA/kB,KAAAC,IAAA,EAAA0xB,EAAAr9B,GAAkBE,EAAAwL,KAAAib,IAAA,EAAAzmB,EAAAm9B,EAAAjrB,EAAApS,EAAAgyB,GAAA,EAA0B9xB,EAAAwL,KAAAC,IAAA,EAAAzL,EAAAuwB,EAAA,GAAoBvtB,YAAA2V,GAAAyE,KAAA,QAAAkL,EAAA2sC,UAAAgV,GAAA6O,aAAAxwD,EAAA4sC,oBAAA,OAAAoJ,EAAAr+D,EAAA,IAAA+R,EAAA+mE,QAAAhuE,GAAAiuE,WAAsH,QAAAh2E,EAAA86D,UAAwB,IAAAnlD,GAAA6W,kBAAAxd,EAAA+mE,QAAAhuE,GAAAstE,UAAoD,MAAM,KAAA1/D,GAAA8W,sBAAAzd,EAAA+mE,QAAAhuE,GAAAkuE,eACxd,MAAM,KAAAtgE,GAAA+W,oBAAA1d,EAAA+mE,QAAAhuE,GAAAmuE,kBAAyDl2E,aAAA2V,GAAA+M,MAAA4C,IAAAnD,UAAA,SAAAmD,MAAA,GAAA2hD,GAAA6O,aAAAxwD,GAAA,OAAAg2C,EAAAr+D,EAAA,IAAA+C,YAAA2V,GAAAilD,aAAA5rD,EAAA+mE,QAAAhuE,GAAAiuE,OAAAhnE,EAAA+mE,QAAAhuE,GAAAouE,aAAAn2E,YAAA2V,GAAAu1B,QAAAl8B,EAAA+mE,QAAAhuE,GAAAquE,OAA0Nr5E,aAAA4Y,GAAAmgC,wBAAA,EAAA/4C,EAAAg5C,mBAAA/mC,EAAAqnE,gBAAAt5E,EAAAwwB,EAAAvwB,GAAAgS,EAAAwL,OAAA+S,EAAAvwB,IAA0GgM,KAAAwR,OAAA,SAAAxL,EAAAjS,EAAAuoB,EAAAtlB,GAA8B,OAAAjD,YAAA4Y,GAAAuxC,OAAA5oD,QAAAC,MAAA,8EACja,CAAK,GAAAgvB,GAAAve,EAAAinD,GAAY2R,GAAA,GAAMpM,KAAKmM,EAAA,MAAO,IAAA34D,EAAAsuD,YAAAtuD,EAAAgxB,oBAAyC,OAAAjjC,EAAA+uC,QAAA/uC,EAAAijC,oBAAuCjjC,EAAAoqD,mBAAA1qB,WAAA1/B,EAAA2/B,aAA+C8rC,GAAAjsC,iBAAAx/B,EAAAy/B,iBAAAz/B,EAAAoqD,oBAA6D+gB,GAAApjC,cAAA0jC,IAAqBlmC,EAAA9iC,OAAA,EAAWkjC,EAAAF,KAAOI,EAAApjC,OAAA,EAAWqjC,EAAArjC,OAAA,EAAW8pE,GAAAtgE,KAAAymE,qBAA6BpG,GAAAlB,GAAAlnE,KAAA+H,KAAAytD,eAAA6S,GAAAvsE,GAAqCD,EAAAkS,EAAAjS,GAAOwlC,EAAA/iC,OAAAgjC,EAAA,EAAaC,EAAAjjC,OAAAkjC,EAAA,GAAa,IAAAI,EAAAylC,cAAAhmC,EAAAkJ,KAAA3c,GAAA2T,EAAAgJ,KAAA5c,IAA0Cw6C,IAAAlB,GAAAmO,cAAsB,QAAAhkE,GAAAgwB,EAAAznB,EAAA,EAAA7d,EAAA,EAAAk9B,EAAA5nB,EAAA9S,OAA+BxC,EAAAk9B,EAAIl9B,IAAA,CAAK,GAAAilC,GAAA3vB,EAAAtV,EAAWilC,GAAA2K,aAClf88B,GAAA4G,QAAAz1D,KAAAonB,GAAmBynC,GAAA4G,QAAA9wE,OAAAqb,EAAmBy3D,GAAA93D,OAAAxL,EAAAjS,EAAe,QAAAilC,GAAApnB,EAAAsnB,EAAAR,EAAApvB,EAAAgwB,EAAAxnB,EAAAmnB,EAAA,EAAArT,EAAA,EAAA+T,EAAA5lC,EAAAoqD,mBAAAnrC,EAAA,EAAAC,EAAA,EAAAq/C,EAAA,EAAAl5B,EAAA,EAAAvnB,EAAA,EAAA7d,EAAAsV,EAAA9S,OAAoFqb,EAAA7d,EAAI6d,IAAA,GAAAqf,EAAA5nB,EAAAuI,GAAAmnB,EAAA9H,EAAAhgB,MAAAU,EAAAsf,EAAAivB,UAAAjnB,EAAAhI,EAAAuE,SAAAiD,EAAAxH,EAAAwvB,QAAAxvB,EAAAwvB,OAAA11C,IAAAkmB,EAAAwvB,OAAA11C,IAAA2zC,QAAA,KAAAztB,YAAAvkB,GAAA2N,aAAA2e,GAAAD,EAAAlnB,EAAAF,EAAAE,GAAAknB,EAAAzU,EAAA3S,EAAAgU,GAAAoT,EAAA9yB,EAAA0L,MAAiK,IAAAsf,YAAAvkB,GAAA4N,iBAAA,CAA6C,GAAAg4C,GAAAiW,GAAArsD,IAAA+U,EAAgBqhC,GAAArhD,MAAAsT,KAAA0M,EAAAhgB,OAAAvW,eAAAu2B,EAAAivB,WAAkDoS,EAAAr3B,UAAA9G,sBAAAlD,EAAAwC,aAAiDsrC,GAAA5qC,sBAAAlD,EAAAoQ,OAAA5N,aAC9c6+B,EAAAr3B,UAAAtmB,IAAAoqD,IAAmBzM,EAAAr3B,UAAAtH,mBAAA+F,IAAkC44B,EAAA7R,OAAAxvB,EAAA0S,cAAA2uB,EAAAsI,WAAA3pC,EAAAwvB,OAAAF,KAAA+R,EAAAuI,aAAA5pC,EAAAwvB,OAAAvsB,OAAAo+B,EAAAwI,cAAA7pC,EAAAwvB,OAAAD,SAAoHigB,GAAA1F,qBAAAhoD,GAAA0lB,EAA4BgoC,GAAAzF,wBAAAjoD,GAAAke,EAAAwvB,OAAApd,OAA6Co9B,GAAAe,YAAAzuD,KAAAu/C,MAAqBrhC,aAAAvkB,GAAAm0C,WAAsCyR,EAAAiW,GAAArsD,IAAA+U,GAAYqhC,EAAAv5D,SAAAo7B,sBAAAlD,EAAAwC,aAAgD6+B,EAAAv5D,SAAAo6B,aAAAuG,GAA2B44B,EAAArhD,MAAAsT,KAAAwU,GAAAr+B,eAAAiX,GAAkC2gD,EAAA98B,SAAAyD,EAAaq5B,EAAAr3B,UAAA9G,sBAAAlD,EAAAwC,aAAiDsrC,GAAA5qC,sBAAAlD,EAAAoQ,OAAA5N,aACpe6+B,EAAAr3B,UAAAtmB,IAAAoqD,IAAmBzM,EAAAr3B,UAAAtH,mBAAA+F,GAAkC44B,EAAA4I,QAAA37D,KAAA2S,IAAA+e,EAAAqB,OAA4BggC,EAAA6I,YAAA57D,KAAA2S,IAAA+e,EAAAqB,OAAA,EAAArB,EAAAovB,WAA+CiS,EAAAlS,MAAA,IAAAnvB,EAAAuE,SAAA,EAAAvE,EAAAmvB,OAAiCkS,EAAA7R,OAAAxvB,EAAA0S,cAAA2uB,EAAAsI,WAAA3pC,EAAAwvB,OAAAF,KAAA+R,EAAAuI,aAAA5pC,EAAAwvB,OAAAvsB,OAAAo+B,EAAAwI,cAAA7pC,EAAAwvB,OAAAD,SAAoHigB,GAAArF,cAAA/I,GAAA55B,EAAqBgoC,GAAApF,iBAAAhJ,GAAAphC,EAAAwvB,OAAApd,OAAsCo9B,GAAAgB,KAAApP,KAAAC,GAAcrhC,YAAAvkB,GAAAk0C,YAAuC0R,EAAAiW,GAAArsD,IAAA+U,GAAYqhC,EAAAv5D,SAAAo7B,sBAAAlD,EAAAwC,aAAgD6+B,EAAAv5D,SAAAo6B,aAAAuG,GAA2B44B,EAAArhD,MAAAsT,KAAA0M,EAAAhgB,OAAAvW,eAAAu2B,EAAAivB,WAC5doS,EAAA98B,SAAAvE,EAAAuE,SAAsB88B,EAAAlS,MAAA,IAAAnvB,EAAAuE,SAAA,EAAAvE,EAAAmvB,OAAiCkS,EAAA7R,OAAAxvB,EAAA0S,cAAA2uB,EAAAsI,WAAA3pC,EAAAwvB,OAAAF,KAAA+R,EAAAuI,aAAA5pC,EAAAwvB,OAAAvsB,OAAAo+B,EAAAwI,cAAA7pC,EAAAwvB,OAAAD,SAAoHigB,GAAAlF,eAAAvoD,GAAAylB,EAAsB,SAAAgoC,GAAAjF,kBAAAxoD,KAAAytD,GAAAjF,kBAAAxoD,GAAA,GAAAtG,GAAA2mB,SAA4E0rC,GAAA5qC,sBAAAlD,EAAAwC,aAAArB,SAAgDquC,GAAAjF,kBAAAxoD,GAAA4kB,WAAAoC,YAAA+kC,IAAiD0B,GAAA1pD,MAAA/D,KAAAs/C,GAAerhC,YAAAvkB,GAAAi0C,kBAAA2R,EAAAiW,GAAArsD,IAAA+U,GAAAqhC,EAAAr3B,UAAA9G,sBAAAlD,EAAAwC,aAAA6+B,EAAAr3B,UAAAtH,mBAAA+F,GAC7X44B,EAAAr3B,UAAA7mB,YAAAk+C,EAAAoJ,SAAAn3C,KAAA0M,EAAAhgB,OAAAvW,eAAAiX,GAAA2gD,EAAAnS,YAAA57B,KAAA0M,EAAAkvB,aAAAzlD,eAAAiX,GAAA8uD,GAAAiB,KAAAvoC,KAAAm5B,EAAsImO,IAAAc,QAAA,GAAAvoC,EAAeynC,GAAAc,QAAA,GAAA1vD,EAAe4uD,GAAAc,QAAA,GAAA57C,EAAe86C,GAAAe,YAAAjrE,OAAAwc,EAAuB0tD,GAAAgB,KAAAlrE,OAAA87D,EAAgBoO,GAAA1pD,MAAAxgB,OAAAyc,EAAiBytD,GAAAiB,KAAAnrE,OAAA4iC,EAAgBsnC,GAAAC,KAAA3tD,EAAA,IAAAC,EAAA,IAAAq/C,EAAA,IAAAl5B,EAAA,IAAAsnC,GAAA4G,QAAA9wE,OAAgD6pE,IAAAlB,GAAAoO,aAAoBhG,GAAAC,MAAA,EAAWD,GAAA/tD,SAAA,EAAc+tD,GAAAr+B,MAAA,EAAWq+B,GAAA1tE,OAAA,EAAY,SAAAyiB,MAAA,MAAqBtc,KAAA8+C,gBAAAxiC,GAAwBhT,EAAAtD,EAAAquD,WAAe,OAAA/qD,EAAApD,EAAAu4D,EAAA3sD,EAAA2sD,EAAAl6C,EAAAk6C,EAAAv4D,EAAAw4D,GAAAp1D,YAAAqD,GAAA0X,OAAAne,EAAAoD,EAAAwI,EAAAxI,EAAAib,EAAAjb,EAAApD,EAAA,IAAqElG,KAAAwmE,WAChfxvE,IAAAgJ,KAAAwhD,MAAAxhD,KAAAumE,eAAAvmE,KAAAsmE,eAAAtmE,KAAAqmE,kBAA8E/8D,YAAAqD,GAAAy/C,aAAA2c,GAAAv1C,iBAAAhP,KAAAzwB,EAAAy/B,kBAAAu1C,GAAAr1C,YAAAoF,gBAAA/kC,EAAA2/B,aAAAq1C,GAAA5qB,mBAAA1qB,WAAAs1C,GAAAr1C,aAAAw1C,GAAAjjC,SAAAwiB,SAAAiV,MAAAn2D,MAAA+B,EAAA4/D,GAAA9lC,gBAAA7P,iBAAAw1C,GAAA5qB,mBAAA+qB,GAAAx1C,aAAAoG,EAAA6lC,mBAAAoJ,GAAA,KAAAG,GAAAhyC,SAAAgyC,GAAAjjC,SAAAijC,GAAA,OAAA5/D,YAAAqD,GAAAg/C,UAAAqd,GAAA/iC,SAAAj7B,IAAA1B,EAAAwwB,EAAA6lC,mBAAAmJ,GAAA,KAAAE,GAAA9xC,SAC9E8xC,GAAA/iC,SAAA+iC,GAAA,OAAsBhjE,EAAAouD,kBAAAp9D,EAAAgP,EAAAouD,iBAAAjjC,EAAAoI,EAAAxlC,EAAAwwB,EAAAvtB,GAAAm6B,EAAAsI,EAAA1lC,EAAAwwB,EAAAvtB,KAAAinE,GAAA6B,YAAAnzD,EAAAkR,YAAAsT,EAAAoI,EAAAxlC,EAAAwwB,GAAA4M,EAAAsI,EAAA1lC,EAAAwwB,IAAoHklD,GAAAj4D,OAAAxL,EAAAjS,GAAe41E,GAAAn4D,OAAAxL,EAAAjS,EAAAwqE,GAAkBjiD,GAAA8rD,GAAAoF,yBAAAlxD,GAAkC2hD,GAAA+B,cAAA,GAAmB/B,GAAAgC,eAAA,GAAoBhC,GAAAiC,eAAA,KAAsBlgE,KAAAytE,eAAA,SAAAznE,EAAAE,GAAkC+3D,GAAAyP,YAAA1nE,GAAiBi4D,GAAA4B,aAAA35D,IAAAyG,EAAAqQ,uBAAgDhd,KAAA2tE,iBAAA,WAAiC,GAAA3nE,GAAAo6D,CACxX,OADiYp6D,IAAAo8D,GAAAwL,aAAAt4E,QAAA0vB,KAAA,gCAAAhf,EAAA,+CACvZo8D,GAAAwL,aAAgBxN,GAAA,EAAMp6D,GAAUhG,KAAA6tE,aAAA,WAA6B,GAAA7nE,IAAA,CAAS,iBAAAE,EAAAnS,GAAqBmS,YAAAyG,GAAA81D,oBAAAz8D,IAAA1Q,QAAA0vB,KAAA,gHAAAhf,GAAA,GAAAE,IAAAy4C,SAA2LypB,GAAAyF,aAAA3nE,EAAAnS,OAAyBiM,KAAA8tE,WAAA,WAA2B,GAAA9nE,IAAA,CAAS,iBAAAE,EAAAnS,GAAqBiS,IAAA1Q,QAAA0vB,KAAA,6EAAAhf,GAAA,GAAoGoiE,GAAAyF,aAAA3nE,EAAAnS,OAAyBiM,KAAA+tE,eACre,WAAW,GAAA/nE,IAAA,CAAS,iBAAAE,EAAAnS,GAAqBmS,YAAAyG,GAAA2xC,wBAAAt4C,IAAA1Q,QAAA0vB,KAAA,uHAAAhf,GAAA,GAAAE,IAAAy4C,SAAsMz4C,YAAAyG,GAAAy/C,aAAAniD,MAAA04B,QAAAz8B,EAAAmK,QAAA,IAAAnK,EAAAmK,MAAA7Z,OAAA4xE,GAAA2F,eAAA7nE,EAAAnS,GAAAq0E,GAAA4F,sBAAA9nE,EAAAnS,OAAoIiM,KAAAiuE,uBAAA,WAAuC,MAAA3b,IAAUtyD,KAAA8+C,gBAAA,SAAA94C,IAAiCssD,EAAAtsD,IAAA,SAAA64D,GAAA1iD,IAAAnW,GAAAkoE,oBAAA9F,GAAA+F,kBAAAnoE,EACrc,IAAAjS,GAAAmS,EAAAF,YAAA2G,GAAA2xC,qBAAiDt4C,IAAAjS,EAAA8qE,GAAA1iD,IAAAnW,GAAAjS,EAAAmS,EAAAnS,EAAAm6E,mBAAAloE,EAAA64C,gBAAA9qD,EAAAm6E,mBAAA9P,EAAA55C,KAAAxe,EAAAm4D,SAAA8I,EAAAjhE,EAAAooE,YAAA7P,EAAA/5C,KAAAxe,EAAAs4D,YAAAvqE,EAAA,KAAAqqE,EAAA55C,KAAA65C,GAAA1jE,eAAA1G,GAAAgzE,EAAAG,EAAA7I,EAAA/5C,KAAAg6C,GAAA7jE,eAAA1G,IAAgNs+D,IAAAx+D,IAAAgL,GAAAsvE,gBAAAtvE,GAAAuvE,YAAAv6E,GAAAw+D,EAAAx+D,GAAgDkqE,GAAAE,QAAAC,GAAaH,GAAAuM,eAAAvD,GAAqBhJ,GAAAK,SAAAC,GAAer4D,MAAA24D,GAAA1iD,IAAAnW,EAAA24C,SAAA5/C,GAAAwvE,qBAAAxvE,GAAAuvE,YAAAvvE,GAAAyvE,kBAAAzvE,GAAA0vE,4BAAAzoE,EAAA64C,eAAA34C,EAAAwoE,eAAA1oE,EAAA2oE,qBAClW3uE,KAAA4uE,uBAAA,SAAA5oE,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAkD,OAAAtD,YAAA2G,GAAA81D,kBAAAntE,QAAAC,MAAA,gGAAuJ,CAAK,GAAAgvB,GAAAs6C,GAAA1iD,IAAAnW,GAAAkoE,kBAAkC,IAAA3pD,EAAA,CAAM,GAAA1S,IAAA,CAAS0S,KAAAguC,IAAAxzD,GAAAsvE,gBAAAtvE,GAAAuvE,YAAA/pD,GAAA1S,GAAA,EAAiD,KAAI,GAAAiU,GAAA9f,EAAA24C,OAAgB74B,GAAAy4B,SAAA5xC,EAAAsV,YAAA+W,EAAAlT,EAAAy4B,UAAAx/C,GAAAw3B,aAAAx3B,GAAA8vE,kCAAAv5E,QAAAC,MAAA,6GACpUuwB,EAAA3qB,OAAAwR,EAAAyU,kBAAA4X,EAAAlT,EAAA3qB,QAAA4D,GAAAw3B,aAAAx3B,GAAA+vE,iCAAAhpD,EAAA3qB,OAAAwR,EAAA+U,WAAAsiD,GAAA7nD,IAAA,6BAAA2J,EAAA3qB,OAAAwR,EAAAgV,eAAAqiD,GAAA7nD,IAAA,+BAAApd,GAAAgwE,uBAAAhwE,GAAAuvE,eAAAvvE,GAAAiwE,qBAAA,GAAA9oE,MAAAF,EAAA7H,MAAAme,GAAA,GAAAvoB,MAAAiS,EAAA5H,OAAApH,GAAA+H,GAAAkwE,WAAA/oE,EAAAnS,EAAAuoB,EAAAtlB,EAAAgiC,EAAAlT,EAAAy4B,QAAAvlB,EAAAlT,EAAA3qB,MAAAmO,GAAAhU,QAAAC,MAAA,8GAAAD,QAAAC,MAAA,uHAAwnB,QAAQsc,GAChoB9S,GAAAsvE,gBAAAtvE,GAAAuvE,YAAA/b,QACA5lD,EAAA81D,kBAAA,SAAAz8D,EAAAE,EAAAnS,GAAwCiM,KAAA6iC,KAAAl2B,EAAAnN,KAAAu9B,eAAoC/8B,KAAA7B,MAAA6H,EAAahG,KAAA5B,OAAA8H,EAAclG,KAAAm+D,QAAA,GAAAxxD,GAAA4nB,QAAA,IAAAvuB,EAAAE,GAAwClG,KAAAouE,aAAA,EAAoBpuE,KAAAs+D,SAAA,GAAA3xD,GAAA4nB,QAAA,IAAAvuB,EAAAE,GAAyCnS,QAAQ,SAAAA,EAAA0qD,YAAA1qD,EAAA0qD,UAAA9xC,EAAAsU,cAAuDjhB,KAAA2+C,QAAA,GAAAhyC,GAAAg/C,SAAA,iBAAA53D,EAAAquD,MAAAruD,EAAAsuD,MAAAtuD,EAAAyqD,UAAAzqD,EAAA0qD,UAAA1qD,EAAAwqD,OAAAxqD,EAAAoH,KAAApH,EAAAuuD,WAAAvuD,EAAAk9D,UAA8HjxD,KAAAkvE,YAAA,SAAAn7E,EAAAm7E,aAAAn7E,EAAAm7E,YAAyDlvE,KAAAmvE,cAAA,SAAAp7E,EAAAo7E,eAAAp7E,EAAAo7E,cAC/bnvE,KAAAovE,aAAA,MACHnzD,OAAAI,OAAA1P,EAAA81D,kBAAA/6D,UAAAiF,EAAAq0B,gBAAAt5B,WAAiF+F,QAAA,SAAAzH,EAAAE,GAAsBlG,KAAA7B,QAAA6H,GAAAhG,KAAA5B,SAAA8H,IAAAlG,KAAA7B,MAAA6H,EAAAhG,KAAA5B,OAAA8H,EAAAlG,KAAAsrC,WAA6EtrC,KAAAs+D,SAAAjtD,IAAA,IAAArL,EAAAE,GAA2BlG,KAAAm+D,QAAA9sD,IAAA,IAAArL,EAAAE,IAA0BvP,MAAA,WAAkB,UAAAqJ,MAAAnL,aAAA2vB,KAAAxkB,OAAwCwkB,KAAA,SAAAxe,GACnS,MADqThG,MAAA7B,MAAA6H,EAAA7H,MAAmB6B,KAAA5B,OAAA4H,EAAA5H,OAAqB4B,KAAAs+D,SAAA95C,KAAAxe,EAAAs4D,UAA+Bt+D,KAAA2+C,QAAA34C,EAAA24C,QAAAhoD,QAA+BqJ,KAAAkvE,YAAAlpE,EAAAkpE,YAA+BlvE,KAAAmvE,cAAAnpE,EAAAmpE,cAAmCnvE,KAAAovE,aAAAppE,EAAAopE,aAC7dpvE,MAAYsrC,QAAA,WAAoBtrC,KAAAqhC,eAAoBlmC,KAAA,eAAoBwR,EAAA2xC,sBAAA,SAAAt4C,EAAAE,EAAAnS,GAA4C4Y,EAAA81D,kBAAA5uE,KAAAmM,KAAAgG,EAAAE,EAAAnS,GAAyCiM,KAAA2uE,kBAAA3uE,KAAA6+C,eAAA,GAA8ClyC,EAAA2xC,sBAAA52C,UAAAuU,OAAA+jB,OAAArzB,EAAA81D,kBAAA/6D,WAAuFiF,EAAA2xC,sBAAA52C,UAAA7S,YAAA8X,EAAA2xC,sBAClS3xC,EAAAg8D,oBAAA,SAAA3iE,EAAAE,EAAAnS,GAA0C,GAAAuoB,EAAMtc,MAAA+sE,QAAA,SAAA/mE,GAAyBsW,EAAAtW,GAAKhG,KAAAwR,OAAA,SAAAtL,EAAAoD,GAA0BtD,EAAAomE,WAAA9vD,EAAApW,EAAAoD,GAAoBvV,EAAAyzE,QAAUzzE,EAAAylB,UAAAlQ,EAAcgT,IAAAtW,EAAAqmE,YAAAt4E,EAAAm1C,OAAA5/B,EAAA,IAAiCtJ,KAAAqtE,gBAAA,SAAAr2E,GAAiC,GAAAsS,GAAApD,EAAAiW,IAAA,yBAAsC,WAAA7S,EAAAhU,QAAAC,MAAA,sIAA4J;AAAK,GAAAgvB,GAAAvtB,EAAAogC,WAAAp+B,SAAA6Y,EAAA,EAAAA,EAAA0S,YAAA5X,GAAAo8B,2BAAAxkB,EAAAtvB,KAAAyxC,MAC7ZniB,EAAAmiB,KAAQp9B,GAAA+lE,yBAAA/yD,EAAA,EAAAzK,EAAA7a,EAAA+1C,mBAAsDh5C,EAAAyzE,QAAUzzE,EAAAylB,UAAA3H,EAAA7a,EAAA+1C,kBAAkCzwB,IAAAtW,EAAAqmE,YAAAt4E,EAAAm1C,OAAAlyC,EAAA+1C,kBAAAl7B,EAAA,MAC1GlF,EAAA06D,cAAA,WAA+B,QAAArhE,KAAa6f,EAAAte,QAAA+U,IAAAuJ,EAAAte,MAAA+U,EAAAuJ,EAAA+gB,YAAA,EAAA5vC,GAA2CjD,EAAAqrE,UAAApoE,EAAc,QAAAkP,GAAAF,EAAAE,EAAAoW,EAAAtlB,GAAoB,GAAAsS,GAAA,OAAAtD,IAAAxP,OAAA,EAAA+tB,EAAA,IAAiC,QAAAjb,EAAA,CAAoB,GAAVib,EAAAsB,EAAAte,OAAU,IAAAvQ,GAAA,OAAAutB,EAAuH,IAAlGvtB,EAAAslB,EAAA,EAAAhT,EAAQpD,IAAAi4C,mBAAuBr4B,EAAA0S,gBAAAtyB,IAAqB,OAAAqe,KAAA/tB,OAAAQ,KAAAutB,EAAA,GAAAqT,cAAA5gC,IAA8CA,EAAA,EAAQA,IAAAsS,IAAMtS,EAAAslB,GAAA,EAAAzK,EAAA2S,KAAAxe,EAAAhP,IAAAo8B,aAAAltB,EAAA4f,GAAAjU,EAAA0lB,OAAAhR,QAAAhC,EAAAjI,GAAAiI,EAAAjI,EAAA,GAAAzK,EAAA2lB,QAAgF3R,GAAAte,MAAAgd,EAAUsB,EAAA+gB,aAAA,EAA+B,MAAd7yC,GAAAqrE,UAAA91D,EAAcib,EAAS,GAAAxwB,GAAAiM,KAAAsc,EAAA,KAAAtlB,EAAA,EAAAsS,GAAA,EAAAib,GAAA,EAAA1S,EAAA,GAAAlF,GAAA8O,MAAAqK,EAAA,GAAAnZ,GAAAgrB,QACrb9R,GAAGte,MAAA,KAAAq/B,aAAA,EAA2B5mC,MAAAuhE,QAAA17C,EAAe7lB,KAAAo/D,UAAA,EAAiBp/D,KAAA/H,KAAA,SAAA+N,EAAAjS,EAAAwwB,GAA0B,GAAA1S,GAAA,IAAA7L,EAAAxP,QAAAzC,GAAA,IAAAiD,GAAAsS,CAA0D,OAA1BA,GAAAvV,EAAIuoB,EAAApW,EAAAF,EAAAue,EAAA,GAAWvtB,EAAAgP,EAAAxP,OAAWqb,GAAU7R,KAAAstE,aAAA,WAA6B/oD,GAAA,EAAKre,EAAA,OAASlG,KAAAutE,WAAA,WAA2BhpD,GAAA,EAAKve,KAAKhG,KAAAugE,SAAA,SAAAxsE,EAAA8d,EAAAiU,EAAAqL,EAAArf,GAAkC,IAAAxI,GAAA,OAAAvV,GAAA,IAAAA,EAAAyC,QAAA+tB,IAAA1S,EAAA0S,EAAAre,EAAA,MAAAF,QAAmD,CAAK6L,EAAA0S,EAAA,EAAAvtB,CAAQ,IAAA4uB,GAAA,EAAA/T,EAAA6mB,EAAAvH,EAAAm+C,eAAA,IAAyD,KAAvBzpD,EAAAte,MAAAmxB,EAAUA,EAAAxyB,EAAAnS,EAAA+xB,EAAAF,EAAA9T,GAAa/d,EAAA,EAAQA,IAAA6xB,IAAM7xB,EAAA2kC,EAAA3kC,GAAAuoB,EAAAvoB,EAAco9B,GAAAm+C,cAAA52C,EAAkB14B,KAAAo/D,WAAAvtD,KACrblF,EAAAk8D,2BAAA,SAAA7iE,EAAAE,EAAAnS,GAAiD,GAAAuoB,GAAAtlB,EAAAsS,CAAUtJ,MAAA+sE,QAAA,SAAA/mE,GAAyBsW,EAAAtW,GAAKhG,KAAA+rC,SAAA,SAAAh4C,GAA0BA,EAAA8+B,gBAAAwV,cAAAniC,EAAAiW,IAAA,2BAAAnlB,EAAAgP,EAAA89D,aAAAx6D,EAAA,IAAAtS,EAAAgP,EAAA49D,eAAAt6D,EAAA,IAAiHtJ,KAAAwR,OAAA,SAAAtL,EAAA2L,GAA0B7L,EAAAupE,aAAAjzD,EAAAzK,EAAA7a,EAAAkP,EAAAoD,GAA0BvV,EAAAyzE,QAAUzzE,EAAAylB,UAAA3H,EAAcyK,IAAAtW,EAAAqmE,YAAAt4E,EAAAm1C,OAAAr3B,EAAA,IAAiC7R,KAAAqtE,gBAAA,SAAA9oD,EAAA1S,EAAAiU,GAAqC,GAAAD,GAAA3f,EAAAiW,IAAA,yBAAsC,QAAA0J,EAAAvwB,QAAAC,MAAA,mIAC5ZswB,EAAA2pD,2BAAAlzD,EAAAwJ,EAAA9uB,EAAA6a,EAAAvI,EAAAib,EAAAwoB,mBAAAh5C,EAAAyzE,QAAAzzE,EAAAylB,UAAAsM,EAAAvB,EAAAwoB,kBAAAzwB,IAAAtW,EAAAqmE,YAAAt4E,EAAAm1C,OAAA3kB,EAAAwoB,kBAAAjnB,EAAA,MACAnZ,EAAAq7D,gBAAA,SAAAhiE,GAAkC,GAAAE,KAASlG,MAAAmc,IAAA,SAAApoB,GAAqB,YAAAmS,EAAAnS,GAAA,MAAAmS,GAAAnS,EAA6B,IAAAuoB,EAAM,QAAAvoB,GAAU,0BAAAuoB,EAAAtW,EAAAypE,aAAA,wBAAAzpE,EAAAypE,aAAA,4BAAAzpE,EAAAypE,aAAA,6BAA4J,MAAM,sCAAAnzD,EAAAtW,EAAAypE,aAAA,mCAAAzpE,EAAAypE,aAAA,uCAAAzpE,EAAAypE,aAAA,wCAAwM,MAAM,qCAAAnzD,EAC7dtW,EAAAypE,aAAA,kCAAAzpE,EAAAypE,aAAA,sCAAAzpE,EAAAypE,aAAA,uCAA6J,MAAM,sCAAAnzD,EAAAtW,EAAAypE,aAAA,mCAAAzpE,EAAAypE,aAAA,wCAAkJ,MAAM,qCAAAnzD,EAAAtW,EAAAypE,aAAA,gCAAuF,MAAM,SAAAnzD,EAAAtW,EAAAypE,aAAA17E,GACxZ,MADob,QAAAuoB,GAAAhnB,QAAA0vB,KAAA,wBAAAjxB,EAAA,6BACpbmS,EAAAnS,GAAAuoB,IACA3P,EAAAs7D,kBAAA,SAAAjiE,EAAAE,EAAAnS,GAAwC,QAAAuoB,GAAApW,GAAc,aAAAA,EAAA,CAAgB,KAAAF,EAAA4hE,yBAAA5hE,EAAA0pE,cAAA1pE,EAAA2pE,YAAAhiB,WAAA,EAAA3nD,EAAA4hE,yBAAA5hE,EAAA4pE,gBAAA5pE,EAAA2pE,YAAAhiB,UAAA,aAA8JznD,GAAA,UAAY,kBAAAA,GAAA,EAAAF,EAAA4hE,yBAAA5hE,EAAA0pE,cAAA1pE,EAAA6pE,cAAAliB,WAAA,EAAA3nD,EAAA4hE,yBAAA5hE,EAAA4pE,gBAAA5pE,EAAA6pE,cAAAliB,UAAA,iBAAuL,GAAA32D,EAAMgJ,MAAAgqE,iBAAA,WAAiC,YAAAhzE,EAAA,MAAAA,EAAuB,IAAAjD,GAAAmS,EAAAiW,IAAA,iCACre,OAAAnlB,GAAA,OAAAjD,EAAAiS,EAAAuwB,aAAAxiC,EAAA+7E,gCAAA,GAAsE9vE,KAAA+vE,gBAAAzzD,EAAuBtc,KAAA2tD,UAAA,SAAA55D,EAAA45D,UAAA55D,EAAA45D,UAAA,QAAwD3tD,KAAAqiE,uBAAA,SAAAtuE,EAAAsuE,wBAAAtuE,EAAAsuE,uBAA0FriE,KAAA4tE,YAAA5nE,EAAAuwB,aAAAvwB,EAAAgqE,yBAA2DhwE,KAAAiwE,kBAAAjqE,EAAAuwB,aAAAvwB,EAAAkqE,gCAAwElwE,KAAAmwE,eAAAnqE,EAAAuwB,aAAAvwB,EAAAoqE,kBAAuDpwE,KAAAqwE,eAAArqE,EAAAuwB,aAAAvwB,EAAAsqE,2BAAgEtwE,KAAAuwE,cACzevqE,EAAAuwB,aAAAvwB,EAAAwqE,oBAAqCxwE,KAAAywE,kBAAAzqE,EAAAuwB,aAAAvwB,EAAA0qE,4BAAoE1wE,KAAA2wE,YAAA3qE,EAAAuwB,aAAAvwB,EAAA4qE,qBAAuD5wE,KAAA6wE,oBAAA7qE,EAAAuwB,aAAAvwB,EAAA8qE,8BAAwE9wE,KAAA+wE,eAAA,EAAA/wE,KAAAiwE,kBAA6CjwE,KAAAgxE,wBAAA9qE,EAAAiW,IAAA,qBAAwDnc,KAAAwiE,oBAAAxiE,KAAA+wE,gBAAA/wE,KAAAgxE,sBAAyEj9E,EAAAuoB,EAAAtc,KAAA2tD,WAAoB55D,IAAAiM,KAAA2tD,YAAAr4D,QAAA0vB,KAAA,uBAAAhlB,KAAA2tD,UAAA,uBAC1a55D,EAAA,YAAAiM,KAAA2tD,UAAA55D,GAAgCiM,KAAAqiE,yBAAAriE,KAAAqiE,yBAAAn8D,EAAAiW,IAAA,oBAChCxP,EAAAskE,gBAAA,SAAAjrE,EAAAE,EAAAnS,GAAsC,QAAAuoB,GAAAtW,GAAc,GAAA6L,GAAA7L,EAAAs7B,MAAet7B,GAAAsD,EAAAuI,EAAAle,IAAU,OAAAqS,EAAAnC,OAAA7M,EAAAgP,EAAAnC,MAA2B,IAAAgiB,GAAAC,EAAA9f,EAAAoxB,UAAqB,KAAAvR,IAAAC,GAAA9uB,EAAA8uB,EAAAD,GAAmBhU,GAAAuvB,oBAAA,UAAA9kB,SAAmChT,GAAAuI,EAAAle,IAAekyB,EAAA3f,EAAAiW,IAAAtK,GAAWgU,EAAAojC,WAAAjyD,EAAA6uB,EAAAojC,WAA4B/iD,YAAA2L,GAAYA,EAAA3L,EAAAiW,IAAAnW,GAAW6L,EAAAo3C,WAAAjyD,EAAA6a,EAAAo3C,WAA4B/iD,YAAAF,GAAYjS,EAAA2zE,OAAA/hC,aAAsB,QAAA3uC,GAAAjD,GAAc,GAAAuoB,EAAMA,GAAAvoB,YAAA4Y,GAAAo8B,2BAAA7iC,EAAAiW,IAAApoB,EAAAkB,MAAAi8E,cAAAhrE,EAAAiW,IAAApoB,GAAAm9E,cAAmG,SAAA50D,IAAAtW,EAAAmrE,aAAA70D,GAAAvoB,YAAA4Y,GAAAo8B,2BACrb7iC,YAAAnS,EAAAkB,MAAAiR,YAAAnS,IAA8B,GAAAuV,KAAStJ,MAAAmc,IAAA,SAAAnW,GAAqB,GAAAE,GAAAF,EAAAkxB,QAAiB,aAAA5tB,EAAApD,EAAAvS,IAAA,MAAA2V,GAAApD,EAAAvS,GAAmCuS,GAAA+6B,iBAAA,UAAA3kB,EAAgC,IAAAtlB,EAA2N,OAArNkP,aAAAyG,GAAAwqB,eAAAngC,EAAAkP,cAAAyG,GAAA4M,WAAA,SAAArT,EAAAkrE,kBAAAlrE,EAAAkrE,iBAAA,GAAAzkE,GAAAwqB,gBAAAJ,cAAA/wB,IAAAhP,EAAAkP,EAAAkrE,iBAAqL9nE,EAAApD,EAAAvS,IAAAqD,EAAUjD,EAAA2zE,OAAA/hC,aAAsB3uC,IAC3W2V,EAAA87D,YAAA,WAA6B,GAAAziE,KAAShG,MAAAmc,IAAA,SAAAjW,GAAqB,YAAAF,EAAAE,EAAAvS,IAAA,MAAAqS,GAAAE,EAAAvS,GAAmC,IAAAI,EAAM,QAAAmS,EAAA/K,MAAe,uBAAApH,GAA2BmnC,UAAA,GAAAvuB,GAAA8G,QAAAvC,MAAA,GAAAvE,GAAA0X,MAAAq8B,QAAA,EAAAma,WAAA,EAAAC,aAAA,EAAAC,cAAA,GAAApuD,GAAAykB,QAAyH,MAAM,iBAAAr9B,GAAoBiF,SAAA,GAAA2T,GAAA8G,QAAAynB,UAAA,GAAAvuB,GAAA8G,QAAAvC,MAAA,GAAAvE,GAAA0X,MAAAoR,SAAA,EAAA0lC,QAAA,EAAAC,YAAA,EAAA/a,MAAA,EAAAK,QAAA,EAAAma,WAAA,EAAAC,aAAA,EAAAC,cAAA,GAAApuD,GAAAykB,QAA+L,MAAM,kBAAAr9B,GACreiF,SAAA,GAAA2T,GAAA8G,QAAAvC,MAAA,GAAAvE,GAAA0X,MAAAoR,SAAA,EAAA4qB,MAAA,EAAAK,QAAA,EAAAma,WAAA,EAAAC,aAAA,EAAAC,cAAA,GAAApuD,GAAAykB,QAA2I,MAAM,uBAAAr9B,GAA0BmnC,UAAA,GAAAvuB,GAAA8G,QAAAkoD,SAAA,GAAAhvD,GAAA0X,MAAA+7B,YAAA,GAAAzzC,GAAA0X,OAAkF,MAAAre,GAAAE,EAAAvS,IAAAI,IAC9P4Y,EAAA27D,aAAA,SAAAtiE,EAAAE,EAAAnS,GAAmC,QAAAuoB,GAAAvoB,EAAAuoB,GAAgB,GAAAtlB,GAAAjD,YAAA4Y,GAAAo8B,2BAAAh1C,EAAAkB,KAAAlB,EAAAuV,EAAApD,EAAAiW,IAAAnlB,EAAwE,UAAAsS,EAAA4nE,eAAA5nE,EAAA4nE,cAAAlrE,EAAAqlE,eAAArlE,EAAAylE,WAAAnvD,EAAAhT,EAAA4nE,eAAAlrE,EAAA2lE,WAAArvD,EAAAtlB,EAAA67B,MAAA77B,EAAAwvC,QAAAxgC,EAAA6lE,aAAA7lE,EAAAqrE,aAAA/nE,EAAAy8B,QAAA/uC,EAAA+uC,SAAAz8B,EAAAy8B,UAAA/uC,EAAA+uC,UAAA//B,EAAAylE,WAAAnvD,EAAAhT,EAAA4nE,gBAAA,IAAAl6E,EAAAwvC,cAAAxvC,EAAAyvC,YAAAC,MAAA1gC,EAAAsrE,cAAAh1D,EAAA,EAAAtlB,EAAA67B,OAAA,IAAA77B,EAAAyvC,YAAAC,MAAApxC,QAAAC,MAAA,4KAC3HyQ,EAAAsrE,cAAAh1D,EAAAtlB,EAAAyvC,YAAA74B,OAAA5W,EAAA67B,MAAAgkB,kBAAA7/C,EAAA67B,MAAA8jB,SAAA3/C,EAAAyvC,YAAA74B,OAAA5W,EAAAyvC,YAAA74B,OAAA5W,EAAAyvC,YAAAC,QAAA1vC,EAAAyvC,YAAAC,MAAA,GAAAp9B,EAAAy8B,QAAA/uC,EAAA+uC,SAA+L,QAAA/uC,GAAAgP,EAAAE,EAAAnS,GAAkB,GAAAmS,EAAAnS,EAAA,CAAQ,GAAAuoB,GAAApW,CAAQA,GAAAnS,EAAIA,EAAAuoB,EAAW,MAAPA,GAAAtW,EAAAE,GAAO,SAAAoW,GAAAtW,EAAAE,IAAAnS,IAAA,QAAAuoB,EAAAna,QAAApO,KAAAuoB,EAAAzc,KAAA9L,IAAA,GAAoE,GAAAuV,GAAA,GAAAqD,GAAAskE,gBAAAjrE,EAAAE,EAAAnS,EAAuCiM,MAAAusE,mBAAA,SAAAvmE,GAAoC,MAAAA,aAAA2G,GAAAo8B,2BAAA7iC,EAAAiW,IAAAnW,EAAA/Q,MAAAi8E,cAAAhrE,EAAAiW,IAAAnW,GAAAkrE,eAAyGlxE,KAAAssE,sBACxe,SAAAv4E,GAAY,GAAAuV,GAAApD,EAAAiW,IAAApoB,EAAe,aAAAuV,EAAA2/C,UAAA,MAAA3/C,GAAA2/C,SAA2C,IAAAnjC,MAAAD,EAAA9xB,EAAA8P,MAAAqtB,EAAAn9B,EAAAqjC,UAA+C,IAAbrjC,EAAAm9B,EAAAl4B,SAAa,OAAA6sB,EAAA,OAAAqL,MAAwBrL,IAAAgN,MAAA7+B,EAAA,EAAAF,EAAA+xB,EAAArvB,OAA0BxC,EAAAF,EAAIE,GAAA,GAAM,GAAAm9B,GAAAtL,EAAA7xB,EAAA,GAAA8d,EAAA+T,EAAA7xB,EAAA,GAAA4xB,EAAAC,EAAA7xB,EAAA,EAA+BgD,GAAAk6B,EAAAC,EAAArf,IAAAgU,EAAAjmB,KAAAsxB,EAAArf,GAAsB9a,EAAAk6B,EAAApf,EAAA8T,IAAAE,EAAAjmB,KAAAiS,EAAA8T,GAAsB5uB,EAAAk6B,EAAAtL,EAAAuL,IAAArL,EAAAjmB,KAAA+lB,EAAAuL,OAAsB,KAAAtL,EAAAqL,EAAAl4B,SAAA65B,MAAA7+B,EAAA,EAAAF,EAAA+xB,EAAArvB,OAAA,IAA+CxC,EAAAF,EAAIE,GAAA,EAAAm9B,EAAAn9B,EAAA,EAAA8d,EAAA9d,EAAA,EAAA4xB,EAAA5xB,EAAA,EAAA8xB,EAAAjmB,KAAAsxB,EAAArf,IAAA8T,IAAAuL,EAAqJ,OAA1GrL,GAAA,GAAAnZ,GAAA45B,gBAAA,UAAAxyC,EAAA2yC,MAAA2B,YAAAJ,aAAAniB,GAAA,GAA8ExJ,EAAAwJ,EAAA9f,EAAA6mE,sBAA4BvjE,EAAA2/C,UAAAnjC,GAAsB9lB,KAAA4C,OAChf,SAAAsD,GAAY,GAAAnS,GAAAuV,EAAA6S,IAAAjW,EAAeA,GAAAgxB,mBAAAvqB,GAAA4M,UAAAxlB,EAAAu4C,iBAAApmC,GAA4DA,EAAAnS,EAAA8P,KAAU,IAAA7M,GAAAjD,EAAAqjC,UAAmB,QAAAlxB,GAAAoW,EAAApW,EAAAF,EAAA6mE,qBAAsC,QAAAhnD,KAAA7uB,GAAAslB,EAAAtlB,EAAA6uB,GAAA7f,EAAA0lE,aAAsCxlE,GAAAnS,EAAA63C,eAAoB,KAAA/lB,IAAA3f,GAAA,OAAAlP,GAAAkP,EAAA2f,GAAAqL,EAAA,EAAAl9B,EAAAgD,EAAAR,OAAyC06B,EAAAl9B,EAAIk9B,IAAA5U,EAAAtlB,EAAAk6B,GAAAlrB,EAAA0lE,aAA2B,OAAA33E,KAC5R4Y,EAAA4kE,aAAA,WAA8B,QAAAvrE,MAAc,OAAAA,GAAU,IAAA2G,GAAAgX,eAAA,4BAAuD,KAAAhX,GAAAiX,aAAA,0BAAmD,KAAAjX,GAAAmX,aAAA,0BAAmD,KAAAnX,GAAAqX,cAAA,+BAAyD,KAAArX,GAAAsX,eAAA,gCAA2D,KAAAtX,GAAAuX,aAAA,iCAA0D,KAAAvX,GAAAkX,cAAA,kDAA4E,cAAA/hB,OAAA,yBAC7ckE,IAAK,QAAAE,KAAAnS,GAAgB,GAAAuoB,GAAAtW,EAAAjS,EAAW,eAAAmS,EAAA,2BAAiCoW,EAAA,cAAAA,EAAA,SAAqC,QAAAvoB,GAAAmS,EAAAnS,GAAgB,GAAAuoB,GAAAtW,EAAAjS,EAAW,eAAAmS,EAAA,mCAAiCoW,EAAA,GAAAA,EAAA,SAAkC,QAAAA,GAAAtW,EAAAE,GAAgB,GAAAnS,EAAM,QAAAmS,GAAU,IAAAyG,GAAAoT,kBAAAhsB,EAAA,QAAwC,MAAM,KAAA4Y,GAAAqT,oBAAAjsB,EAAA,UAA4C,MAAM,KAAA4Y,GAAAsT,sBAAAlsB,EAAA,YAAgD,MAAM,KAAA4Y,GAAAuT,kBAAAnsB,EAAA,iBAAiD,MAAM,cAAA+N,OAAA,4BAAAoE,GAAoD,cAAAF,EACre,2BAAiBjS,EAAA,0BAAsC,QAAAiD,GAAAgP,EAAAE,EAAAnS,GAA0B,MAARiS,UAAQA,EAAA4pD,aAAA1pD,EAAAsrE,cAAAtrE,EAAA89C,SAAA99C,EAAAo+C,WAAAp+C,EAAAurE,YAAA,sDAAAzrE,EAAA6pD,WAAA3pD,EAAAm8D,yBAAAtuE,EAAAooB,IAAA,6DAAAnW,EAAA8pD,aAAA/7D,EAAAooB,IAAA,qEAAAnW,EAAA+pD,kBAAA7pD,EAAAsjD,SAAAz1D,EAAAooB,IAAA,0EACjF,IAAA3W,OAAA+e,GAAArkB,KAAA,MAAyB,QAAAoJ,GAAAtD,GAAc,GAAAjS,GAAAmS,IAAW,KAAAnS,IAAAiS,GAAA,CAAY,GAAAsW,GAAAtW,EAAAjS,IAAW,IAAAuoB,GAAApW,EAAArG,KAAA,WAAA9L,EAAA,IAAAuoB,GAAmC,MAAApW,GAAAhG,KAAA,MAAoB,QAAAqkB,GAAAve,GAAc,WAAAA,EAAa,QAAA6L,GAAA7L,EAAAE,GAAgB,MAAAF,GAAA0rE,QAAA,kBAAAxrE,EAAAyrE,cAAAD,QAAA,mBAAAxrE,EAAA0rE,eAAAF,QAAA,oBAAAxrE,EAAA2rE,gBAAAH,QAAA,mBAAAxrE,EAAA4rE,eAAyL,QAAAhsD,GAAA9f,GAAc,MAAAA,GAAA0rE,QAAA,mCAAA1rE,EAAAE,GAAyD,GAAAnS,GAAA4Y,EAAA4jD,YAAArqD,EAA2B,aAAAnS,EAAA,KAAA+N,OAAA,6BACtcoE,EAAA,IAAO,OAAA4f,GAAA/xB,KAAc,QAAA8xB,GAAA7f,GAAc,MAAAA,GAAA0rE,QAAA,sEAAoF,SAAA1rE,EAAAE,EAAAnS,EAAAuoB,GAA0B,IAALtW,EAAA,GAAKE,EAAA7I,SAAA6I,GAAkBA,EAAA7I,SAAAtJ,GAAcmS,IAAAF,GAAAsW,EAAAo1D,QAAA,gBAAAxrE,EAAA,KAAyC,OAAAF,KAAW,GAAAkrB,GAAA,CAAQ,iBAAAlrB,EAAAlS,EAAAq9B,EAAArf,GAAyB,GAAA8T,GAAA5f,EAAAo0C,QAAA1hB,EAAAvH,EAAAw+B,WAAA32B,EAAA7H,EAAA69B,QAAA/1B,EAAA9H,EAAA6vC,cAAAtY,aAAAxvB,EAAA/H,EAAA6vC,cAAArY,eAAA/2C,EAAA,sBAAoIE,GAAAigE,gBAAAplE,EAAAwQ,aAAAvL,EAAA,qBAAAE,EAAAigE,gBAAAplE,EAAAyQ,mBAAAxL,EAAA,0BAC1Y,IAAAunB,GAAA,mBAAAlmB,EAAA,yBAAAD,EAAA,0BAAiF,IAAAlB,EAAA03C,OAAA,CAAa,OAAAr4B,EAAAq4B,OAAAoC,SAAyB,IAAAj/C,GAAAyT,sBAAA,IAAAzT,GAAA0T,sBAAA8Y,EAAA,kBAAuF,MAAM,KAAAxsB,GAAA8T,wBAAA,IAAA9T,GAAA+T,wBAAAyY,EAAA,qBAA8F,MAAM,KAAAxsB,GAAA2T,iCAAA,IAAA3T,GAAA4T,iCAAA4Y,EAAA,qBAAgH,MAAM,KAAAxsB,GAAA6T,2BAAA2Y,EAAA,qBAA6D,OAAAhI,EAAAq4B,OAAAoC,SAAyB,IAAAj/C,GAAA0T,sBAAA,IAAA1T,GAAA4T,iCAAAtN,EACpgB,yBAAyB,OAAAke,EAAAs4B,SAAkB,IAAA98C,GAAAgT,kBAAA3M,EAAA,0BAA0D,MAAM,KAAArG,GAAAiT,aAAA5M,EAAA,qBAAgD,MAAM,KAAArG,GAAAkT,aAAA7M,EAAA,uBAAiD,GAAAomB,GAAA,EAAApzB,EAAA0gE,YAAA1gE,EAAA0gE,YAAA,EAAAhuC,EAAA1hC,EAAA0hC,EAAA5mB,EAAA9L,EAAA2pD,YAAAt2B,EAAA/vB,EAAA0vB,GAAAM,EAAA1T,EAAAosD,eAAuF7gD,aAAAxkB,GAAAwjD,mBAAAn3B,GAAAK,GAAA7zB,OAAA+e,GAAArkB,KAAA,MAAA0R,GAAAynB,GAAA7zB,OAAA+e,GAAArkB,KAAA,QAAA84B,GAAA,aAAAlnB,EAAA67C,UAAA,UAAkI,aAAA77C,EAAA67C,UAAA,QAAiC,uBAAAx8B,EAAA6vC,cAAAnqE,KAC5cwiC,EAAAvnB,EAAAmgE,uBAAA,qDAAA74C,EAAA,qBAAAtnB,EAAAogE,SAAApgE,EAAA9G,IAAA,qBAAA8G,EAAA03C,OAAA,wBAAA13C,EAAA03C,OAAA,WAAAv2C,EAAA,GAAAnB,EAAAwxC,SAAA,0BAAAxxC,EAAA6xC,MAAA,uBAAA7xC,EAAAmxC,YAAA,6BAAAnxC,EAAAkyC,QAAA,yBAAAlyC,EAAAwyC,UAAA,2BAAAxyC,EAAAs3C,iBAAAt3C,EAAAmgE,uBAAA,iCAAAngE,EAAA8yC,YAAA,0BACA,GAAA9yC,EAAAwzC,aAAA,8BAAAxzC,EAAAmzC,aAAA,8BAAAnzC,EAAA6zC,SAAA,0BAAA7zC,EAAAu0B,aAAA,uBAAAv0B,EAAA2/D,YAAA,yBAAA3/D,EAAA48C,SAAA,0BAAA58C,EAAA8gD,iBAAA,0BAAA9gD,EAAAs3B,aAAA,8BAAAt3B,EAAAu3B,eAAA,IAAAv3B,EAAA2/D,YAAA,8BAAA3/D,EAAAqgE,YAAA,0BAAArgE,EAAAsgE,UAAA,uDACAtgE,EAAA0uD,kBAAA1uD,EAAAugE,iBAAA,2BAAAvgE,EAAAugE,iBAAA,WAAAzgE,EAAA,GAAAE,EAAAq3C,gBAAA,iCAAAr3C,EAAAuwD,uBAAA,6BAAAvwD,EAAAuwD,wBAAAr8D,EAAA2pD,WAAAxzC,IAAA,+EAAsU,gCAAgC,iCAAiC,2BAA2B,6BAA6B,+BAA+B,2BAC9d,yBAAuB,qBAAqB,6CAA6C,oEAAoE,iCAAiC,iCAAiC,iCAAiC,+DAA+D,mCAAmC,mCAAmC,mCAAmC,6CAA6C,mCACrd,mCAAiC,mCAAmC,wEAAwE,+BAA+B,eAAA3W,OAAA+e,GAAArkB,KAAA,MAAA0R,GAAA8mB,EAAA,aAAA5mB,EAAA67C,UAAA,UAA4E,aAAA77C,EAAA67C,UAAA,QAAiC,uBAAAx8B,EAAA6vC,cAAAnqE,KAAAwiC,EAAAvnB,EAAA+2C,UAAA,qBAAA/2C,EAAA+2C,UAAA,2BAAAzvB,EAAAtnB,EAAAwgE,QAAAxgE,EAAAm7C,IAAA,qBAAAn7C,EAAAwgE,QAAAxgE,EAAAygE,OAAA,sBAAAzgE,EAAA9G,IAAA,kBACxR,GAAA8G,EAAA03C,OAAA,wBAAA13C,EAAA03C,OAAA,WAAArwB,EAAA,GAAArnB,EAAA03C,OAAA,WAAAv2C,EAAA,GAAAnB,EAAA03C,OAAA,WAAAx2C,EAAA,GAAAlB,EAAAwxC,SAAA,0BAAAxxC,EAAA6xC,MAAA,uBAAA7xC,EAAAmxC,YAAA,6BAAAnxC,EAAAkyC,QAAA,yBAAAlyC,EAAAwyC,UAAA,2BAAAxyC,EAAA8yC,YAAA,6BAAA9yC,EAAAwzC,aAAA,8BAAAxzC,EAAAmzC,aAAA,8BAAAnzC,EAAA6zC,SAAA,0BAAA7zC,EAAAu0B,aAAA,oBACA,GAAAv0B,EAAA2/D,YAAA,yBAAA3/D,EAAAqgE,YAAA,0BAAArgE,EAAAsgE,UAAA,uDAAAtgE,EAAA0uD,kBAAA1uD,EAAAugE,iBAAA,2BAAAvgE,EAAAugE,iBAAA,WAAAzgE,EAAA,GAAAE,EAAAi8C,mBAAA,iCAAAj8C,EAAA60D,wBAAA,uCAAA70D,EAAAuwD,uBAAA,6BAAAvwD,EAAAuwD,wBAAAr8D,EAAA2pD,WAAAxzC,IAAA,gDACA,GAAArK,EAAA03C,QAAAxjD,EAAA2pD,WAAAxzC,IAAA,kFAA8G,+BAA+BrK,EAAAg1D,cAAAn6D,EAAAmT,cAAA,0BAAAhO,EAAAg1D,cAAAn6D,EAAAmT,cAAAnT,EAAA4jD,YAAA4I,0BAAA,GAAArnD,EAAAg1D,cAAAn6D,EAAAmT,cAAAxD,EAAA,cAAAxK,EAAAg1D,aAAA,GAAAh1D,EAAA0gE,gBAAA1gE,EAAA2gE,aAAA3gE,EAAA4gE,gBAAA5gE,EAAA6gE,oBAAAhmE,EAAA4jD,YAAA2F,wBAAA,GAAApkD,EAAA2gE,YAAAvsE,EAAA,mBAC7I4L,EAAA2gE,aAAA,GAAA3gE,EAAA4gE,eAAAxsE,EAAA,sBAAA4L,EAAA4gE,gBAAA,GAAA5gE,EAAA6gE,oBAAAzsE,EAAA,2BAAA4L,EAAA6gE,qBAAA,GAAA7gE,EAAA0gE,eAAAz+E,EAAA,sBAAA+d,EAAA0gE,gBAAA,GAAA1gE,EAAA88C,aAAA,yBAAAz9B,EAAAy9B,aAAA,SAAAppD,OAAA+e,GAAArkB,KAAA,OAAiT+4B,EAAAnT,EAAAmT,EAAAnnB,GAASmnB,EAAApnB,EAAAonB,EAAAnnB,GAASonB,EAAApT,EAAAoT,EAAApnB,GAASonB,EAAArnB,EAAAqnB,EAAApnB,IAAS,GAAAqf,YAAAxkB,GAAA8iD,iBAAAx2B,EAAApT,EAAAoT,GAAAC,EAAArT,EAAAqT,IAAwDA,EAAAtnB,EAAAsnB,EAAMD,EAAAtsB,EAAAimE,YAAAhtD,IAAA8pD,cAAA12C,EAAAC,GAA2CC,EAAAvsB,EAAAimE,YAAAhtD,IAAAgqD,gBAAA12C,GAA2CtT,EAAAitD,aAAAv5C,EACzeL,GAAGrT,EAAAitD,aAAAv5C,EAAAJ,GAAoB,SAAA/H,EAAA8+B,oBAAArqC,EAAAktD,mBAAAx5C,EAAA,EAAAnI,EAAA8+B,sBAAA,IAAAn+C,EAAAs3B,cAAAxjB,EAAAktD,mBAAAx5C,EAAA,cAAyI1T,EAAAmtD,YAAAz5C,GAAiBxnB,EAAA8T,EAAAotD,kBAAA15C,GAAyBH,EAAAvT,EAAAqtD,iBAAAh6C,GAAwBhmB,EAAA2S,EAAAqtD,iBAAA/5C,GAAwBE,EAAApmB,GAAA,GAAO,IAAA4S,EAAAstD,oBAAA55C,EAAA1T,EAAAutD,cAAAngE,GAAA,EAAA1d,QAAAC,MAAA,qCAAAqwB,EAAAwtD,WAAA,qBAAAxtD,EAAAstD,oBAAA55C,EAAA1T,EAAAytD,iBAAA,uBAAAvhE,EAAAqnB,EAAAlmB,IAAkN,KAAAnB,EAAAxc,QAAA0vB,KAAA,6CACndlT,GAAG,KAAAqnB,GAAA,KAAAlmB,IAAAmmB,GAAA,GAA4BA,IAAAp5B,KAAAszE,aAAsBC,SAAAvgE,EAAAizB,SAAA9U,EAAAqiD,WAAA1hE,EAAA42C,cAAiD5vD,IAAAqgC,EAAAs6C,OAAAz6C,GAAe2vB,gBAAiB7vD,IAAAma,EAAAwgE,OAAA7hE,KAAkBgU,EAAA8tD,aAAAz6C,GAAkBrT,EAAA8tD,aAAAx6C,EAAkB,IAAAK,EAAMv5B,MAAA4hE,YAAA,WAA2E,MAA/C,UAAAroC,MAAA,GAAA5sB,GAAAk1D,cAAAj8C,EAAA0T,EAAAtzB,IAA+CuzB,EAAU,IAAAC,EAC4H,OADtHx5B,MAAAkhE,cAAA,WAA8B,YAAA1nC,EAAA,CAAe,OAAAxzB,MAAYE,EAAA0f,EAAAstD,oBAAA55C,EAAA1T,EAAA+tD,mBAAA5/E,EAAA,EAAoDA,EAAAmS,EAAInS,IAAA,CAAK,GAAAuoB,GAAAsJ,EAAAguD,gBAAAt6C,EAAAvlC,GAAA8C,IAAkCmP,GAAAsW,GAAAsJ,EAAAiuD,kBAAAv6C,EAAAhd,GAA8Bkd,EAAAxzB,EAAI,MAAAwzB,IAAUx5B,KAAA8zE,QAAA,WAAwBluD,EAAAmuD,cAAAz6C,GACzft5B,KAAA8+D,QAAA,QAAqB7iD,OAAAomB,iBAAAriC,MAA8ByoD,UAAUtsC,IAAA,WAAoF,MAArE7mB,SAAA0vB,KAAA,wDAAqEhlB,KAAA4hE,gBAA2BxqC,YAAajb,IAAA,WAAwF,MAAzE7mB,SAAA0vB,KAAA,4DAAyEhlB,KAAAkhE,oBAAgClhE,KAAArM,GAAAu9B,IAAYlxB,KAAA8gE,KAAAhtE,EAAYkM,KAAAg0E,UAAA,EAAiBh0E,KAAA8+D,QAAAxlC,EAAet5B,KAAA0oD,aAAAzvB,EAAoBj5B,KAAA2oD,eAAAzvB,EAAsBl5B,SACnZ2M,EAAA47D,cAAA,SAAAviE,EAAAE,GAAkC,QAAAnS,GAAAiS,EAAAE,GAAgB,GAAAnS,EAAmU,OAA7TiS,eAAA2G,GAAAg/C,QAAA53D,EAAAiS,EAAAirD,SAAAjrD,YAAA2G,GAAA81D,oBAAAntE,QAAA0vB,KAAA,6HAAAjxB,EAAAiS,EAAA24C,QAAAsS,UAAAl9D,EAAA4Y,EAAAgX,eAAwQ5vB,IAAA4Y,EAAAgX,gBAAAzd,IAAAnS,EAAA4Y,EAAAkX,eAAqD9vB,EAAS,GAAAuoB,MAAAtlB,GAAY23D,kBAAA,QAAAE,mBAAA,SAAAP,kBAAA,QAAAr9C,oBAAA,UAC1Y69C,kBAAA,QAAAC,qBAAA,WAAAI,qBAAA,WAAAj2C,kBAAA,QAAAi1C,mBAAA,SAAAqB,eAAA,UAAwKlmD,EAAA,wlBAAAwrB,MAAA,IACxK90B,MAAA4gE,cAAA,SAAAtkD,EAAAhT,EAAAwc,EAAAD,EAAAqL,GAAuC,GAAAp9B,GAAAE,EAAAgD,EAAAslB,EAAAnhB,KAAkB+K,GAAAs8D,qBAAAtxC,KAAAunB,UAAAvnB,EAAAunB,SAAAma,iBAAA9+D,EAAA,MAAAA,EAAA0L,KAAAzI,OAAAmP,EAAAuqE,kBAAA,gBAAAv/C,eAAAvkB,GAAAm/C,cAAAh4D,EAAA0L,KAAAib,IAAAyW,EAAAunB,SAAAC,MAAAliD,OAAA1C,KAAAo9B,EAAAunB,SAAAC,MAAAliD,QAAAlB,QAAA0vB,KAAA,mCAAAkM,EAAAunB,SAAAC,MAAAliD,OAAA,4BAAA1C,EAAA,mCAA2W,IAAAq9B,GAAAnrB,EAAAikE,cAAuB,QAAA3tD,EAAAqxC,YAAAx8B,EAAAjrB,EAAA6pE,gBAAAzzD,EAAAqxC,WAAAx8B,IAC3b7U,EAAAqxC,WAAAr4D,QAAA0vB,KAAA,oCAAA1I,EAAAqxC,UAAA,uBAAAx8B,EAAA,YAAgH,IAAArf,GAAA9L,EAAAioE,wBAAiC,QAAOlN,SAAA/sE,EAAA25D,UAAAx8B,EAAA8gD,uBAAA/rE,EAAA6qE,eAAAyB,eAAAz+E,EAAA+d,IAAA6sC,QAAA,KAAA34C,EAAA4gE,aAAA57D,MAAAsR,EAAAtR,IAAAynE,YAAA1+E,EAAAuoB,EAAAtR,IAAAhF,EAAA6gE,YAAArd,SAAAltC,EAAAktC,OAAAyqB,WAAA33D,EAAAktC,QAAAltC,EAAAktC,OAAAoC,QAAA8mB,eAAA3+E,EAAAuoB,EAAAktC,OAAAxjD,EAAA6gE,YAAA2K,eAAAl1D,EAAAktC,SAAAltC,EAAAktC,OAAAoC,UAAAj/C,EAAA8T,yBAAAnE,EAAAktC,OAAAoC,UACxJj/C,EAAA+T,yBAAA4iC,WAAAhnC,EAAAgnC,SAAAK,QAAArnC,EAAAqnC,MAAAV,cAAA3mC,EAAA2mC,YAAA0vB,oBAAA5+E,EAAAuoB,EAAA2mC,YAAAj9C,EAAA6gE,YAAA7iB,UAAA1nC,EAAA0nC,QAAAM,YAAAhoC,EAAAgoC,UAAA8E,kBAAA9sC,EAAA8sC,gBAAA9D,eAAAhpC,EAAAgpC,aAAAL,eAAA3oC,EAAA2oC,aAAAL,cAAAtoC,EAAAsoC,YAAAe,WAAArpC,EAAAqpC,SAAA8D,QAAAntC,EAAAmtC,QAAApjB,aAAA/pB,EAAA+pB,aAAA4mB,IAAAnnC,EAAAwsD,OAAAh2D,EAAA2wC,IAAAslB,OAAAzsD,YAAAnZ,GAAA6nD,QAAAid,YAAAn1D,EAAAssC,UAAAj8C,EAAA6Q,YAAA2rC,gBAAA7sC,EAAA6sC,gBACAkZ,uBAAAn8D,EAAAm8D,uBAAA3T,SAAApyC,EAAAoyC,SAAAwjB,SAAAp+E,EAAA8+D,iBAAA1sD,EAAAs8D,qBAAAtxC,KAAAunB,UAAAvnB,EAAAunB,SAAAma,iBAAAxpB,aAAA9sB,EAAA8sB,aAAAC,aAAA/sB,EAAA+sB,aAAA+3B,gBAAAp7D,EAAAo7D,gBAAAE,gBAAAt7D,EAAAs7D,gBAAAqQ,aAAAroE,EAAAm4D,YAAAjrE,OAAAq7E,eAAAvoE,EAAA0N,MAAAxgB,OAAAo7E,cAAAtoE,EAAAo4D,KAAAlrE,OAAAs7E,cAAAxoE,EAAAq4D,KAAAnrE,OAAAgqE,kBAAA36C,EAAAwsD,iBAAArsE,EAAAwjE,UAAA76B,SAAAzd,EAAAyS,eAAA,EAAAr6B,EAAAg+D,QAAA9wE,OAAAu7E,cAAA/rE,EAAAwjE,UAAAruE,KACA2rE,YAAA9gE,EAAA8gE,YAAAH,wBAAA3gE,EAAA2gE,wBAAA5Y,mBAAAzxC,EAAAyxC,mBAAAlF,UAAAvsC,EAAAusC,UAAAspB,YAAA71D,EAAA0pC,OAAAr5C,EAAA4Q,WAAA60D,UAAA91D,EAAA0pC,OAAAr5C,EAAA2Q,SAAAsxC,aAAA,SAAAtyC,EAAAsyC,cAAAtyC,EAAAsyC,eAA2Q5uD,KAAA6gE,eAAA,SAAA76D,EAAAE,GAAkC,GAAAnS,KAAyF,IAAhFmS,EAAA66D,SAAAhtE,EAAA8L,KAAAqG,EAAA66D,WAAAhtE,EAAA8L,KAAAmG,EAAA2iD,gBAAA50D,EAAA8L,KAAAmG,EAAA0iD,eAAgF,SAAA1iD,EAAAgpD,QAAA,OAAA1yC,KAAAtW,GAAAgpD,QAAAj7D,EAAA8L,KAAAyc,GAAAvoB,EAAA8L,KAAAmG,EAAAgpD,QAAA1yC,GAA4E,KAAAA,EAAA,EAAQA,EAAAhT,EAAA9S,OAAW8lB,IAAAvoB,EAAA8L,KAAAqG,EAAAoD,EAAAgT,IACre,OAAAvoB,GAAAmM,QAAiBF,KAAAihE,eAAA,SAAA/6D,EAAAnS,EAAAiD,GAAoC,OAAAsS,GAAA4nB,EAAA,EAAAl9B,EAAAsoB,EAAA9lB,OAAyB06B,EAAAl9B,EAAIk9B,IAAA,CAAK,GAAAp9B,GAAAwoB,EAAA4U,EAAW,IAAAp9B,EAAAgtE,OAAA9pE,EAAA,CAAesS,EAAAxV,IAAIwV,EAAA0qE,SAAc,QAAiE,MAA1D,UAAA1qE,MAAA,GAAAqD,GAAA4kE,aAAAvrE,EAAAhP,EAAAkP,EAAAnS,GAAAuoB,EAAAzc,KAAAyJ,IAA0DA,GAAUtJ,KAAA++D,eAAA,SAAA/4D,GAAgC,SAAAA,EAAAguE,UAAA,CAAsB,GAAA9tE,GAAAoW,EAAAna,QAAA6D,EAAmBsW,GAAApW,GAAAoW,IAAA9lB,OAAA,GAAmB8lB,EAAAjR,MAAQrF,EAAA8tE,YAAc9zE,KAAA2nE,SAAArrD,GAChU3P,EAAAw7D,gBAAA,WAAiC,GAAAniE,KAAShG,MAAAmc,IAAA,SAAAjW,GAAqBA,IAAA28B,IAAS,IAAA9uC,GAAAiS,EAAAE,EAAqC,OAA1B,UAAAnS,SAAiBiS,EAAAE,GAAAnS,GAASA,GAAUiM,eAAA,SAAAkG,SAAwBF,GAAAE,EAAA28B,OAAkB7iC,KAAAwhD,MAAA,WAAsBx7C,OACvL2G,EAAAimE,YAAA,WAA6B,QAAA5sE,MAAcA,IAAA8uB,MAAA,KAAgB,QAAA/gC,GAAA,EAAYA,EAAAiS,EAAAxP,OAAWzC,IAAAiS,EAAAjS,KAAA,OAAAiS,EAAAjS,EAAuB,OAAAiS,GAAA9F,KAAA,MAAoB,gBAAAgG,EAAAnS,EAAAuoB,GAAuB,GAAAtlB,GAAAkP,EAAAguE,aAAAngF,EAAmU,OAA3SmS,GAAAiuE,aAAAn9E,EAAAslB,GAAoBpW,EAAAkuE,cAAAp9E,IAAmB,IAAAkP,EAAAmuE,mBAAAr9E,EAAAkP,EAAAouE,iBAAAh/E,QAAAC,MAAA,+CAA4G,KAAA2Q,EAAA+sE,iBAAAj8E,IAAA1B,QAAA0vB,KAAA,2CAAAjxB,IAAAmS,EAAAwpE,cAAA,oBAAAxpE,EAAA+sE,iBAAAj8E,GAAAgP,EAAAsW,IAAwJtlB,MACvd2V,EAAA48D,eAAA,SAAAvjE,EAAAE,EAAAnS,GAAqC,QAAAuoB,GAAApW,EAAAnS,EAAAuoB,EAAAtlB,GAAoB,GAAAsS,GAAApD,EAAAgxB,SAAA3S,EAAA,KAAAA,EAAAzS,EAAAD,EAAA3L,EAAAquE,mBAC+T,OAD3Qj4D,KAAAiI,EAAAqB,EAAA/T,EAAA3L,EAAAsuE,wBAAoC3iE,EAAA0S,EAAA1S,GAAA3L,cAAAyG,GAAAm/C,aAAA/3D,EAAA26D,SAAA78C,EAAA,WAAAvI,EAAA8/B,cAAA,EAAA9/B,EAAA8/B,aAAA5yC,QAAAzC,EAAAq1C,eAAAv3B,GAAA,GAAA3L,IAAA2L,GAAA,GAAA0S,IAAA1S,IAAmJ7L,EAAAygE,uBAAA,IAAA1yE,EAAA25D,aAAA,IAAA35D,EAAA05D,eAAAj3D,SAAAqb,EAAA0S,EAAAse,KAAAv5B,EAAAvV,EAAA8uC,KAAA38B,EAAAwyB,EAAA7mB,GAAA,SAAA3L,SAAoHwyB,EAAA7mB,GAAA3L,GAAA2L,EAAA3L,EAAAoD,GAAA,SAAAuI,MAAA0S,EAAA5tB,QAAAuP,EAAAoD,GAAAuI,GAAA0S,EAAA1S,GAAsD0S,EAAAod,QAAA5tC,EAAA4tC,QAAoBpd,EAAA0kC,UAAAl1D,EAAAk1D,UACle3/C,EAAAvV,EAAAiyD,KAAS1sB,EAAAm7C,mBAAAnrE,GAAAqD,EAAA4Q,aAAAjU,EAAAqD,EAAA0Q,WAA8Dic,EAAAo7C,qBAAAprE,IAAAqD,EAAA0Q,UAAA/T,EAAAqD,EAAA2Q,SAAAhU,IAAAqD,EAAA2Q,WAAAhU,EAAAqD,EAAA0Q,YAAqGkH,EAAAyhC,KAAA18C,EAASib,EAAAmpC,YAAA35D,EAAA25D,YAA4BnpC,EAAAkpC,eAAA15D,EAAA05D,eAAkClpC,EAAA2kC,mBAAAn1D,EAAAm1D,mBAA0C3kC,EAAApL,UAAAplB,EAAAolB,UAAwBmD,GAAA,SAAAiI,EAAAkkC,SAAAsV,UAAAx5C,EAAAkkC,SAAAsV,SAAAx2D,MAAAid,KAAAxtB,GAAmEutB,EAAS,QAAAvtB,GAAAgP,EAAAE,EAAAnS,GAAkB,QAAAiS,EAAA27B,QAAA,CAAmB37B,EAAA09B,OAAA3+B,KAAAmB,EAAAw9B,UAAA19B,YAAA2G,GAAAyE,MAAApL,YAAA2G,GAAA+M,MAAA1T,YACta2G,GAAAu1B,SAAAl8B,EAAA49B,cAAA,IAAA59B,EAAA69B,gBAAA,IAAAhyB,EAAAmqB,iBAAAh2B,MAAA,IAAAA,EAAAigC,SAAAtE,UAAA37B,EAAAo9B,gBAAA7P,iBAAAx/B,EAAAoqD,mBAAAn4C,EAAA0tB,aAAAvC,EAAAtxB,KAAAmG,IAA6LA,IAAA67B,QAAa,QAAAvlB,GAAA,EAAAhT,EAAAtD,EAAAxP,OAAuB8lB,EAAAhT,EAAIgT,IAAAtlB,EAAAgP,EAAAsW,GAAApW,EAAAnS,IAAiB,GAAAuV,GAAAtD,EAAAo0C,QAAA71B,EAAAve,EAAAqjE,MAAAx3D,EAAA,GAAAlF,GAAAivB,QAAA9V,EAAA,GAAAnZ,GAAA2mB,QAAAzN,EAAA3f,EAAAohE,QAAAp2C,EAAA,GAAAvkB,GAAAykB,QAAAp9B,EAAA,GAAA2Y,GAAA8G,QAAA3f,EAAA,GAAA6Y,GAAA8G,QAAA0d,KAAArf,EAAA7H,MAAA,GAAA2b,EAAA3b,MAAA,GAAAyuB,KAAyKM,GAAA,GAAArsB,GAAA8G,QAAA,UAAA9G,GAAA8G,aAAA,QAAA9G,GAAA8G,QAAA,UAAA9G,GAAA8G,QAAA,EAC/Z,WAAA9G,GAAA8G,QAAA,UAAA9G,GAAA8G,QAAA,WAAAwlB,GAAA,GAAAtsB,GAAA8G,QAAA,UAAA9G,GAAA8G,QAAA,UAAA9G,GAAA8G,QAAA,UAAA9G,GAAA8G,QAAA,UAAA9G,GAAA8G,QAAA,UAAA9G,GAAA8G,QAAA,WAAAylB,GAAA,GAAAvsB,GAAA4nB,QAAA,GAAA5nB,GAAA4nB,QAAA,GAAA5nB,GAAA4nB,QAAA,GAAA5nB,GAAA4nB,QAAA,GAAA5nB,GAAA4nB,QAAA,GAAA5nB,GAAA4nB,QAAqUruB,GAAA,GAAAyG,GAAAgiD,kBAA8BzoD,EAAA0oD,aAAAjiD,EAAAyX,iBAAsCle,EAAAwpD,UAAA,CAAc,QAAA99C,GAAAjF,EAAAuwD,UAAAY,aAAA3kC,EAAAxsB,EAAAujD,cAAAv5D,MAAAib,EAAA62C,UAAAx1C,EAAA,EAAmF,IAAAA,IAAMA,EAAA,CAAK,GAAAD,GACrf,OAAAC,GAAAmmB,EAAA,OAAAnmB,GAAAomB,EAAAnzB,EAAAvP,OAAkC0iC,GAAA+P,aAAAp2B,EAAiBqmB,EAAAq1B,SAAAt1B,EAAatnB,EAAAmB,GAAAomB,EAAOrmB,EAAA,GAAArG,GAAA8iD,gBAA4BT,SAAS2lB,cAAA,IAAiBlsB,SAAAtvB,EAAAuvB,aAAA92C,EAAA82C,aAAAC,eAAA/2C,EAAA+2C,eAAAvf,aAAAp2B,EAAA07C,SAAAt1B,EAAAs2B,UAAA,IAAgH9pC,EAAA3S,GAAAD,EAAO,GAAAsmB,GAAAt5B,IAAWA,MAAA2uC,SAAA,EAAgB3uC,KAAAs0D,YAAA,EAAmBt0D,KAAA4mC,aAAA,EAAoB5mC,KAAA7E,KAAAwR,EAAAwQ,aAA6Bnd,KAAAy0E,kBAAAz0E,KAAA00E,oBAAA,EAAkD10E,KAAAwR,OAAA,SAAAtL,EAAA4L,GAA0B,QAAAwnB,EAAAqV,WAAA,IAAArV,EAAAg7B,aAAA,IAAAh7B,EAAAsN,cAAA,IAAA/gB,EAAArvB,OAAA,CAA0E+tB,EAAA25C,WAAA,EACze,OAAO35C,EAAAmd,QAAAp4B,EAAAsrE,OAAmBrwD,EAAAy7C,cAAA,GAAmBz7C,EAAAimD,gBAAA,EAAqB,QAAA54D,GAAAgU,EAAA8S,EAAA,EAAA1lB,EAAA6S,EAAArvB,OAA2BkiC,EAAA1lB,EAAI0lB,IAAA,CAAK,GAAAzlB,GAAA4S,EAAA6S,GAAAU,EAAAnmB,EAAAytC,MAAsB,aAAAtnB,EAAA9jC,QAAA0vB,KAAA,wBAAA/R,EAAA,sBAAuE,CAAK,GAAAkmB,GAAAC,EAAAvrB,MAAiC,IAAlBqjB,EAAA1M,KAAA4U,EAAAqnB,SAAkBxtC,YAAAtG,GAAAk0C,WAAA,CAAkCjvC,EAAA,EAAIgU,GAAA,CAAK,IAAA0sC,GAAAphC,EAAAnyB,EAAAwzD,EAAArhC,EAAAle,CAAgBkmB,GAAA,GAAA7nB,IAAA,EAAAihD,EAAAC,EAAAD,EAAAC,GAAoBr5B,EAAA,GAAA7nB,IAAA,EAAAkhD,EAAAD,EAAAC,GAAkBr5B,EAAA,GAAA7nB,IAAA,EAAAihD,EAAAC,EAAAD,EAAAC,GAAoBr5B,EAAA,GAAA7nB,IAAAihD,EAAAC,EAAAD,EAAAC,GAAkBr5B,EAAA,GAAA7nB,IAAA,EAAAihD,EAAA,EAAAA,EAAAC,GAAoBr5B,EAAA,GAAA7nB,IAAAihD,EAAA,EAAAA,EAAAC,GAAkBrhC,EAAAnyB,GAAA,EAAOmyB,EAAAle,GAAA,MAAOpB,GAAA,EAAAgU,GAAA,CACpL,KADkM,OAAAwT,EAAApuB,MAAAouB,EAAApuB,IAAA,GAAA2B,GAAA81D,kBAAAvxC,EAAAnyB,EAAAmyB,EAAAle,GAA0DyrC,UAAA9xC,EAAAmU,cAC5e09B,UAAA7xC,EAAAmU,cAAAy9B,OAAA5xC,EAAAsV,aAAsDkX,EAAAnrB,0BAA8BorB,YAAAzsB,GAAAo0C,iBAAA3nB,EAAAx2B,OAAAqQ,GAAgDq/C,EAAAl5B,EAAApuB,IAAQouB,IAAAkK,OAAWxvC,EAAAsgC,sBAAAnhB,EAAAygB,aAAuCyF,EAAAngC,SAAAwrB,KAAA1wB,GAAmBkS,EAAA84C,gBAAAwT,GAAqBtsD,EAAAw7C,QAAU8Q,EAAA,EAAQA,EAAA1gD,EAAI0gD,IAAA,CAAK1sC,GAAA5xB,EAAAwwB,KAAA2U,EAAAngC,UAAAhF,EAAAmb,IAAA6pB,EAAAs5B,IAAAn5B,EAAA4J,GAAAve,KAAAyU,EAAAq5B,IAAAn5B,EAAA3kB,OAAAxgB,GAAAuwB,EAAA+5C,SAAAplC,EAAAo5B,MAAAt+D,EAAAogC,sBAAAnhB,EAAAquB,OAAA5N,aAAAyF,EAAA3kB,OAAAxgB,IAA4ImlC,EAAAnC,oBAAsBmC,EAAAglB,mBAAA1qB,WAAA0F,EAAAzF,aAA+C0F,EAAA/nB,IAAA,8BACld,SAAS+nB,EAAAjT,SAAAgT,EAAA3F,kBAA+B4F,EAAAjT,SAAAgT,EAAAglB,oBAAiCr4B,EAAAyN,iBAAA4F,EAAA3F,iBAAA2F,EAAAglB,oBAA4DtsC,EAAAiqB,cAAAhW,GAAmBqL,EAAA36B,OAAA,EAAWQ,EAAAkP,EAAA4L,EAAAqnB,EAAS,QAAAo5B,GAAA,EAAAC,EAAArhC,EAAA36B,OAAuB+7D,EAAAC,EAAID,IAAA,CAAK,GAAAl5B,GAAAlI,EAAAohC,GAAAoM,EAAA5qE,EAAA6O,OAAAy2B,GAAA+kC,EAAA/kC,EAAA4M,QAAsC,IAAAm4B,YAAAzxD,GAAA4iD,cAAA,OAAA0X,GAAAtI,EAAAt0B,OAAA+zB,IAAAx4B,UAAA24B,EAAA,EAAA6B,EAAA6G,EAAAzwE,OAAwF+nE,EAAA6B,EAAM7B,IAAA,CAAM,GAAAE,GAAAwI,EAAA1I,GAAAG,EAAAN,EAAAK,EAAAn4B,gBAAkC,IAAAo4B,EAAA/8B,UAAA+8B,EAAApiD,EAAA+c,EAAAqlC,EAAA94C,EAAA9xB,GAAAkS,EAAA25D,mBAAAxmC,EAAA,KAAAwlC,EAAAD,EAAArlC,EAAAolC,QAAoEC,GAAApiD,EAAA+c,EAAA+kC,EAAAx4C,EAAA9xB,GAAAkS,EAAA25D,mBAAAxmC,EAAA,KAAAwlC,EAAAD,EAAArlC,EAAA,SAA6DznB,EACzf5L,EAAAykE,gBAAkB7kD,EAAA5f,EAAA0kE,gBAAoB1kE,EAAA+T,cAAAnI,EAAAgU,GAAqB0T,EAAAsN,aAAA,KAC3Dj6B,EAAAu7D,WAAA,SAAAliE,EAAAE,EAAAnS,GAAiC,QAAAuoB,GAAApW,EAAAnS,EAAAuoB,GAAkB,GAAAtlB,GAAA,GAAA2wC,YAAA,GAAAr+B,EAAAtD,EAAA6uE,eAAmK,KAAvH7uE,EAAA8uE,YAAA5uE,EAAAoD,GAAmBtD,EAAA+uE,cAAA7uE,EAAAF,EAAAgvE,mBAAAhvE,EAAAg9D,SAAkDh9D,EAAA+uE,cAAA7uE,EAAAF,EAAAivE,mBAAAjvE,EAAAg9D,SAAkD98D,EAAA,EAAQA,EAAAoW,EAAIpW,IAAAF,EAAAkvE,WAAAnhF,EAAAmS,EAAA,EAAAF,EAAAo+D,KAAA,MAAAp+D,EAAAo+D,KAAAp+D,EAAAs9D,cAAAtsE,EAA8D,OAAAsS,GAAS,GAAAtS,GAAAgJ,IAAWA,MAAAm1E,SAAcjkE,MAAA,GAAAvE,GAAAyoE,iBAAApvE,EAAAhG,MAAAuqD,MAAA,GAAA59C,GAAA0oE,iBAAArvE,EAAAhG,MAAAkmE,QAAA,GAAAv5D,GAAA2oE,mBAAAtvE,EAAAhG,MAAgI,IAAAsJ,GAAAtD,EAAAuwB,aAAAvwB,EAAAwqE,oBAAAjsD,EAAA,GAAAojB,YAAAr+B,GAClcuI,EAAA,GAAA81B,YAAAr+B,GAAAwc,EAAA,GAAA6hB,YAAAr+B,GAAAuc,KAA4CqL,EAAA,KAAAl9B,EAAA,KAAAF,EAAA,KAAAq9B,EAAA,KAAArf,EAAA,KAAA8T,EAAA,KAAA8S,EAAA,KAAAM,EAAA,KAAAC,GAAA,EAAAC,EAAA,KAAAtnB,EAAA,KAAAunB,EAAA,KAAAlmB,EAAA,KAAAD,EAAA,KAAAomB,EAAA,KAAAC,EAAArzB,EAAAuwB,aAAAvwB,EAAAgqE,yBAAA12C,EAAA,KAAAC,KAA+JC,EAAA,GAAA7sB,GAAA4nB,QAAAkF,EAAA,GAAA9sB,GAAA4nB,QAAAmF,IAA8CA,GAAA1zB,EAAAuvE,YAAAj5D,EAAAtW,EAAAuvE,WAAAvvE,EAAAuvE,WAAA,GAA+C77C,EAAA1zB,EAAAwvE,kBAAAl5D,EAAAtW,EAAAwvE,iBAAAxvE,EAAAyoE,4BAAA,GAA4EzuE,KAAA/H,KAAA,WAAqB+H,KAAAk+D,WAAA,SAAyBl+D,KAAA+qE,WAAA,GAAmB/qE,KAAAgrE,aAAA,GAAqBhrE,KAAAyhC,OAAAz7B,EAAAyvE,YAA0Bz1E,KAAA+/D,aAAApzD,EAAA2S,gBACpetf,KAAA6/D,cAAA,GAAsB7/D,KAAA0tE,YAAA/gE,EAAAkQ,cAAqC7c,KAAAyhC,OAAAz7B,EAAA45D,WAAyB5/D,KAAAyhC,OAAAz7B,EAAA4uE,OAAqB50E,KAAA8/D,YAAAnzD,EAAAmR,iBAAwC9d,KAAAmrE,eAAA,WAA+B,OAAAnlE,GAAA,EAAAE,EAAAqe,EAAA/tB,OAAuBwP,EAAAE,EAAIF,IAAAue,EAAAve,GAAA,GAAYhG,KAAA8rE,gBAAA,SAAA/3E,GAAiCwwB,EAAAxwB,GAAA,EAAO,IAAA8d,EAAA9d,KAAAiS,EAAA0vE,wBAAA3hF,GAAA8d,EAAA9d,GAAA,GAAgD,IAAA+xB,EAAA/xB,KAAAmS,EAAAiW,IAAA,0BAAAw5D,yBAAA5hF,EAAA,GAAA+xB,EAAA/xB,GAAA,IAAkFiM,KAAAwsE,0BAAA,SAAAtmE,EAAAnS,EAAAuoB,GAA+CiI,EAAAre,GAAA,EAAO,IAAA2L,EAAA3L,KAAAF,EAAA0vE,wBAAAxvE,GAAA2L,EAAA3L,GAAA,GAAgD4f,EAAA5f,KAAAnS,IAAAuoB,EAAAq5D,yBAAAzvE,EACvenS,GAAA+xB,EAAA5f,GAAAnS,IAAYiM,KAAAmsE,wBAAA,WAAwC,OAAAjmE,GAAA,EAAAnS,EAAA8d,EAAArb,OAAuB0P,IAAAnS,IAAMmS,EAAA2L,EAAA3L,KAAAqe,EAAAre,KAAAF,EAAA4vE,yBAAA1vE,GAAA2L,EAAA3L,GAAA,IAAyDlG,KAAAyhC,OAAA,SAAAv7B,IAAwB,IAAA2f,EAAA3f,KAAAF,EAAAy7B,OAAAv7B,GAAA2f,EAAA3f,IAAA,IAAkClG,KAAA0hC,QAAA,SAAAx7B,IAAyB,IAAA2f,EAAA3f,KAAAF,EAAA07B,QAAAx7B,GAAA2f,EAAA3f,IAAA,IAAmClG,KAAA61E,4BAAA,WAA4C,UAAA3kD,SAAAhrB,EAAAiW,IAAA,mCAAAjW,EAAAiW,IAAA,kCAAAjW,EAAAiW,IAAA,yCAAApoB,GAAAiS,EAAAuwB,aAAAvwB,EAAA8vE,4BAAAx5D,EAAA,EAAuMA,EACnfvoB,EAAAyC,OAAS8lB,IAAA4U,EAAArxB,KAAA9L,EAAAuoB,GAAiB,OAAA4U,IAAUlxB,KAAA8/D,YAAA,SAAA55D,EAAAoW,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,GAA2C3f,IAAAyG,EAAAkR,YAAyB7d,KAAAyhC,OAAAz7B,EAAA4uE,OAAqB1uE,IAAAlS,GAAA6xB,IAAAoT,IAAA/yB,IAAAyG,EAAAoR,iBAAA8H,GAAA7f,EAAA+vE,sBAAA/vE,EAAAw+D,SAAAx+D,EAAAw+D,UAAAx+D,EAAAgwE,kBAAAhwE,EAAA2+D,IAAA3+D,EAAA2+D,IAAA3+D,EAAA2+D,IAAA3+D,EAAA2+D,OAAA3+D,EAAAonD,cAAApnD,EAAAw+D,UAAAx+D,EAAAiwE,UAAAjwE,EAAA8+D,UAAA9+D,EAAA2+D,MAAAz+D,IAAAyG,EAAAqR,oBAAA6H,GAAA7f,EAAA+vE,sBAAA/vE,EAAAw+D,SAAAx+D,EAAAw+D,UAAAx+D,EAAAgwE,kBAAAhwE,EAAA6D,KAAA7D,EAAA6D,KAAA7D,EAAA6+D,oBAAA7+D,EAAA++D,uBAAA/+D,EAAAonD,cAAApnD,EAAAw+D,UAC7Hx+D,EAAAiwE,UAAAjwE,EAAA6D,KAAA7D,EAAA6+D,sBAAA3+D,IAAAyG,EAAAsR,iBAAA4H,GAAA7f,EAAA+vE,sBAAA/vE,EAAAw+D,SAAAx+D,EAAAw+D,UAAAx+D,EAAAgwE,kBAAAhwE,EAAA6D,KAAA7D,EAAA4+D,UAAA5+D,EAAA6D,KAAA7D,EAAA8+D,aAAA9+D,EAAAonD,cAAApnD,EAAAw+D,UAAAx+D,EAAAiwE,UAAAjwE,EAAA6D,KAAA7D,EAAA4+D,YAAA/+C,GAAA7f,EAAA+vE,sBAAA/vE,EAAAw+D,SAAAx+D,EAAAw+D,UAAAx+D,EAAAgwE,kBAAAhwE,EAAA2+D,IAAA3+D,EAAA++D,oBAAA/+D,EAAA2+D,IAAA3+D,EAAA++D,uBAAA/+D,EAAA+vE,sBAAA/vE,EAAAw+D,SAAAx+D,EAAAw+D,UAAAx+D,EAAAgwE,kBAAAhwE,EAAA8+D,UAAA9+D,EAAA++D,oBAAA/+D,EAAA2+D,IAAA3+D,EAAA++D,sBACA/wE,EAAAkS,EAAA+yB,EAAApT,GAAQ3f,IAAAyG,EAAAuR,gBAA6BqG,KAAAjI,EAAOzK,KAAA7a,EAAO8uB,KAAAxc,EAAOgT,IAAAxoB,GAAAywB,IAAAqB,IAAA5f,EAAA+vE,sBAAAhiF,EAAAuoB,GAAAvoB,EAAAwwB,IAAAzwB,EAAAwoB,EAAAsJ,EAAArB,GAA2DvtB,IAAAm6B,GAAA7nB,IAAAwI,GAAAD,IAAA6mB,GAAA5S,IAAAkT,IAAAhzB,EAAAgwE,kBAAAjiF,EAAAiD,GAAAjD,EAAAuV,GAAAvV,EAAA8d,GAAA9d,EAAA+xB,IAAAqL,EAAAn6B,EAAA8a,EAAAxI,EAAAovB,EAAA7mB,EAAAmnB,EAAAlT,IAAuFkT,EAAAN,EAAA9S,EAAA9T,EAAAqf,EAAAr9B,EAAA,OAAsBkM,KAAA0hC,QAAA17B,EAAA4uE,OAAA5gF,EAAAkS,IAAgClG,KAAAkgE,cAAA,SAAAl6D,GAA+BhG,KAAAm1E,QAAAjkE,MAAAglE,QAAAlwE,IAA+BhG,KAAAggE,aAAA,SAAAh6D,GAA8BhG,KAAAm1E,QAAA5qB,MAAA4rB,QAAAnwE,IAA+BhG,KAAAigE,cAAA,SAAAj6D,GAA+BhG,KAAAm1E,QAAA5qB,MAAA2rB,QAAAlwE,IAA+BhG,KAAA+/D,aAAA,SAAA/5D,GAA8BhG,KAAAm1E,QAAA5qB,MAAA6rB,QAAApwE,IACzdhG,KAAAq2E,eAAA,SAAArwE,GAAgChG,KAAAm1E,QAAAjP,QAAAiQ,QAAAnwE,IAAiChG,KAAAs2E,gBAAA,SAAAtwE,GAAiChG,KAAAm1E,QAAAjP,QAAAgQ,QAAAlwE,IAAiChG,KAAAu2E,eAAA,SAAAvwE,EAAAE,EAAAnS,GAAoCiM,KAAAm1E,QAAAjP,QAAAkQ,QAAApwE,EAAAE,EAAAnS,IAAqCiM,KAAAw2E,aAAA,SAAAxwE,EAAAE,EAAAnS,GAAkCiM,KAAAm1E,QAAAjP,QAAAuQ,MAAAzwE,EAAAE,EAAAnS,IAAmCiM,KAAA6/D,aAAA,SAAA35D,GAA8BgzB,IAAAhzB,MAAAF,EAAA0wE,UAAA1wE,EAAA2wE,IAAA3wE,EAAA0wE,UAAA1wE,EAAA4wE,KAAA19C,EAAAhzB,IAAqDlG,KAAA0tE,YAAA,SAAAxnE,GAA6BA,IAAAyG,EAAAiQ,cAAA5c,KAAAyhC,OAAAz7B,EAAA45D,WAAA15D,IAAA0L,IAAA1L,IAAAyG,EAAAkQ,aAAA7W,EAAA6wE,SAAA7wE,EAAA8wE,MAAA5wE,IAAAyG,EAAAmQ,cACjY9W,EAAA6wE,SAAA7wE,EAAA+wE,OAAA/wE,EAAA6wE,SAAA7wE,EAAAgxE,kBAAAh3E,KAAA0hC,QAAA17B,EAAA45D,WAA6EhuD,EAAA1L,GAAKlG,KAAA8sE,aAAA,SAAA5mE,GAA8BA,IAAAizB,IAAAnzB,EAAAixE,UAAA/wE,GAAAizB,EAAAjzB,IAA6BlG,KAAAmgE,iBAAA,SAAAj6D,EAAAnS,EAAAuoB,GAAsCpW,GAAMlG,KAAAyhC,OAAAz7B,EAAAkxE,sBAAAjkE,IAAAlf,GAAAif,IAAAsJ,KAAAtW,EAAA4nD,cAAA75D,EAAAuoB,GAAArJ,EAAAlf,EAAAif,EAAAsJ,IAAgFtc,KAAA0hC,QAAA17B,EAAAkxE,sBAA0Cl3E,KAAAm3E,eAAA,WAA+B,MAAA/9C,IAAUp5B,KAAAwqE,eAAA,SAAAtkE,IAAgCkzB,EAAAlzB,GAAAlG,KAAAyhC,OAAAz7B,EAAAoxE,cAAAp3E,KAAA0hC,QAAA17B,EAAAoxE,eAAgEp3E,KAAAq3E,cAAA,SAAAnxE,GAA+B,SAAAA,MAAAF,EAAAsxE,SAC3dj+C,EAAA,GAAKC,IAAApzB,IAAAF,EAAAqxE,cAAAnxE,GAAAozB,EAAApzB,IAAiClG,KAAA80E,YAAA,SAAA5uE,EAAAnS,GAA+B,OAAAulC,GAAAtiC,EAAAqgF,eAA4B,IAAA/6D,GAAAid,EAAAD,EAAW,UAAAhd,OAAgBnhB,KAAA,OAAAwjD,QAAA,QAA2BplB,EAAAD,GAAAhd,GAASA,EAAAnhB,OAAA+K,GAAAoW,EAAAqiC,UAAA5qD,IAAAiS,EAAA8uE,YAAA5uE,EAAAnS,GAAA2lC,EAAAxzB,IAAAoW,EAAAnhB,KAAA+K,EAAAoW,EAAAqiC,QAAA5qD,IAA4EiM,KAAAu3E,qBAAA,WAAqC,IAAIvxE,EAAAuxE,qBAAAz7E,MAAAkK,EAAAvK,WAA0C,MAAAyK,GAAS5Q,QAAAC,MAAA2Q,KAAmBlG,KAAAk1E,WAAA,WAA2B,IAAIlvE,EAAAkvE,WAAAp5E,MAAAkK,EAAAvK,WAAgC,MAAAyK,GAAS5Q,QAAAC,MAAA2Q,KAAmBlG,KAAAk+D,WAAA,SAAAl4D,EAAAE,EAAAnS,EAAAuoB,GAAkCtc,KAAAm1E,QAAAjkE,MAAAsmE,SAAAxxE,EACxdE,EAAAnS,EAAAuoB,IAAQtc,KAAA+qE,WAAA,SAAA/kE,GAA4BhG,KAAAm1E,QAAA5qB,MAAAitB,SAAAxxE,IAAgChG,KAAAgrE,aAAA,SAAAhlE,GAA8BhG,KAAAm1E,QAAAjP,QAAAsR,SAAAxxE,IAAkChG,KAAAm+D,QAAA,SAAAj4D,IAAyB,IAAAszB,EAAAnT,OAAAngB,KAAAF,EAAAm4D,QAAAj4D,EAAAnH,EAAAmH,EAAA8M,EAAA9M,EAAA+M,EAAA/M,EAAA0L,GAAA4nB,EAAAhV,KAAAte,KAA0DlG,KAAAs+D,SAAA,SAAAp4D,IAA0B,IAAAuzB,EAAApT,OAAAngB,KAAAF,EAAAs4D,SAAAp4D,EAAAnH,EAAAmH,EAAA8M,EAAA9M,EAAA+M,EAAA/M,EAAA0L,GAAA6nB,EAAAjV,KAAAte,KAA2DlG,KAAAkvC,MAAA,WAAsB,OAAAhpC,GAAA,EAAYA,EAAA2L,EAAArb,OAAW0P,IAAA,IAAA2L,EAAA3L,KAAAF,EAAA4vE,yBAAA1vE,GAAA2L,EAAA3L,GAAA,EAAqD2f,MAAKyT,EAAApI,EAAA,KAASqI,KAAK3nB,EAAAsnB,EAAAllC,EAAA,KAAWgM,KAAAm1E,QAAAjkE,MAAAg+B,QAA2BlvC,KAAAm1E,QAAA5qB,MAAArb,QAA2BlvC,KAAAm1E,QAAAjP,QAAAh3B,UACleviC,EAAAyoE,iBAAA,SAAApvE,EAAAE,GAAqC,GAAAnS,IAAA,EAAAuoB,EAAA,GAAA3P,GAAA4nB,QAAAv9B,EAAA,KAAAsS,EAAA,GAAAqD,GAAA4nB;AAAwDv0B,KAAAk2E,QAAA,SAAAhwE,GAAyBlP,IAAAkP,GAAAnS,IAAAiS,EAAAyxE,UAAAvxE,SAAAlP,EAAAkP,IAAsClG,KAAA03E,UAAA,SAAA1xE,GAA2BjS,EAAAiS,GAAKhG,KAAAw3E,SAAA,SAAAtxE,EAAAnS,EAAAiD,EAAA6uB,GAAgCvJ,EAAAjL,IAAAnL,EAAAnS,EAAAiD,EAAA6uB,IAAe,IAAAvc,EAAA+c,OAAA/J,KAAAtW,EAAAk4D,WAAAh4D,EAAAnS,EAAAiD,EAAA6uB,GAAAvc,EAAAkb,KAAAlI,KAAqDtc,KAAAkvC,MAAA,WAAsBn7C,GAAA,EAAKiD,EAAA,KAAOsS,EAAA,GAAAqD,GAAA4nB,UAClU5nB,EAAA0oE,iBAAA,SAAArvE,EAAAE,GAAqC,GAAAnS,IAAA,EAAAuoB,EAAA,KAAAtlB,EAAA,KAAAsS,EAAA,IAA8BtJ,MAAAm2E,QAAA,SAAApiF,GAAyBA,EAAAmS,EAAAu7B,OAAAz7B,EAAAyvE,YAAAvvE,EAAAw7B,QAAA17B,EAAAyvE,aAAkDz1E,KAAAk2E,QAAA,SAAAhwE,GAAyBoW,IAAApW,GAAAnS,IAAAiS,EAAA2xE,UAAAzxE,GAAAoW,EAAApW,IAAgClG,KAAAo2E,QAAA,SAAAlwE,GAAyB,GAAAlP,IAAAkP,EAAA,CAAU,GAAAA,EAAA,OAAAA,GAAe,IAAAyG,GAAAwS,WAAAnZ,EAAAwnD,UAAAxnD,EAAA4xE,MAA2C,MAAM,KAAAjrE,GAAAyS,YAAApZ,EAAAwnD,UAAAxnD,EAAA6xE,OAA6C,MAAM,KAAAlrE,GAAA0S,UAAArZ,EAAAwnD,UAAAxnD,EAAA8xE,KAAyC,MAAM,KAAAnrE,GAAA2S,eAAAtZ,EAAAwnD,UAAAxnD,EAAA+xE,OAAgD,MAAM,KAAAprE,GAAA4S,WAAAvZ,EAAAwnD,UAAAxnD,EAAAgyE,MAA2C,MAAM,KAAArrE,GAAA6S,kBAAAxZ,EAAAwnD,UAAAxnD,EAAAiyE,OACnf,MAAM,KAAAtrE,GAAA8S,aAAAzZ,EAAAwnD,UAAAxnD,EAAAkyE,QAA+C,MAAM,KAAAvrE,GAAA+S,cAAA1Z,EAAAwnD,UAAAxnD,EAAAmyE,SAAiD,MAAM,SAAAnyE,EAAAwnD,UAAAxnD,EAAA+xE,YAA8B/xE,GAAAwnD,UAAAxnD,EAAA+xE,OAA2B/gF,GAAAkP,IAAMlG,KAAA03E,UAAA,SAAA1xE,GAA2BjS,EAAAiS,GAAKhG,KAAAw3E,SAAA,SAAAtxE,GAA0BoD,IAAApD,IAAAF,EAAA+kE,WAAA7kE,GAAAoD,EAAApD,IAA8BlG,KAAAkvC,MAAA,WAAsBn7C,GAAA,EAAKuV,EAAAtS,EAAAslB,EAAA,OACpS3P,EAAA2oE,mBAAA,SAAAtvE,EAAAE,GAAuC,GAAAnS,IAAA,EAAAuoB,EAAA,KAAAtlB,EAAA,KAAAsS,EAAA,KAAAib,EAAA,KAAA1S,EAAA,KAAAiU,EAAA,KAAAD,EAAA,KAAAqL,EAAA,IAAiElxB,MAAAm2E,QAAA,SAAApiF,GAAyBA,EAAAmS,EAAAu7B,OAAAz7B,EAAAoyE,cAAAlyE,EAAAw7B,QAAA17B,EAAAoyE,eAAsDp4E,KAAAk2E,QAAA,SAAAhwE,GAAyBoW,IAAApW,GAAAnS,IAAAiS,EAAAqyE,YAAAnyE,GAAAoW,EAAApW,IAAkClG,KAAAo2E,QAAA,SAAAlwE,EAAAnS,EAAAuoB,GAA6BtlB,IAAAkP,GAAAoD,IAAAvV,GAAAwwB,IAAAjI,IAAAtW,EAAAsyE,YAAApyE,EAAAnS,EAAAuoB,GAAAtlB,EAAAkP,EAAAoD,EAAAvV,EAAAwwB,EAAAjI,IAAyDtc,KAAAy2E,MAAA,SAAAvwE,EAAAnS,EAAAuoB,GAA2BzK,IAAA3L,GAAA4f,IAAA/xB,GAAA8xB,IAAAvJ,IAAAtW,EAAAuyE,UAAAryE,EAAAnS,EAAAuoB,GAAAzK,EAAA3L,EAAA4f,EAAA/xB,EAAA8xB,EAAAvJ,IAAuDtc,KAAA03E,UAAA,SAAA1xE,GAA2BjS,EAAAiS,GAAKhG,KAAAw3E,SAAA,SAAAtxE,GAA0BgrB,IAAAhrB,IAAAF,EAAAglE,aAAA9kE,GAAAgrB,EAAAhrB,IAAgClG,KAAAkvC,MACpf,WAAWn7C,GAAA,EAAKm9B,EAAArL,EAAAC,EAAAjU,EAAA0S,EAAAjb,EAAAtS,EAAAslB,EAAA,OAChB3P,EAAA07D,cAAA,SAAAriE,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAA4C,QAAA1S,GAAA7L,EAAAE,GAAgB,GAAAF,EAAA7H,MAAA+H,GAAAF,EAAA5H,OAAA8H,EAAA,CAA0B,GAAAnS,GAAAmS,EAAA1G,KAAAC,IAAAuG,EAAA7H,MAAA6H,EAAA5H,QAAAke,EAAAha,SAAAglD,gBAAA,wCAAoW,OAA7PhrC,GAAAne,MAAAqB,KAAAzI,MAAAiP,EAAA7H,MAAApK,GAA8BuoB,EAAAle,OAAAoB,KAAAzI,MAAAiP,EAAA5H,OAAArK,GAAgCuoB,EAAA9P,WAAA,MAAA2kD,UAAAnrD,EAAA,IAAAA,EAAA7H,MAAA6H,EAAA5H,OAAA,IAAAke,EAAAne,MAAAme,EAAAle,QAA0E9I,QAAA0vB,KAAA,0CAAAhf,EAAA7H,MAAA,IAAA6H,EAAA5H,OAAA,iBAAAke,EAAAne,MAAA,IAAAme,EAAAle,OAAA4H,GAAqHsW,EAAS,MAAAtW,GAAS,QAAA8f,GAAA9f,GAAc,MAAA2G,GAAAnN,KAAAk+B,aAAA13B,EAAA7H,QAAAwO,EAAAnN,KAAAk+B,aAAA13B,EAAA5H,QAC1d,QAAAynB,GAAA3f,GAAc,MAAAA,KAAAyG,EAAAmU,eAAA5a,IAAAyG,EAAAoU,4BAAA7a,IAAAyG,EAAAqU,0BAAAhb,EAAAg9D,QAAAh9D,EAAAm9D,OAA6H,QAAAjyC,GAAAhrB,GAAcA,IAAAo7B,OAAWp7B,EAAAk7B,oBAAA,UAAAlQ,EAAmClrB,GAAA,CAAG,GAAAjS,GAAAuoB,EAAAH,IAAAjW,EAAe,IAAAA,EAAAmK,OAAAtc,EAAAykF,0BAAAxyE,EAAAyyE,cAAA1kF,EAAAykF,+BAAqF,CAAK,YAAAzkF,EAAA2kF,YAAA,KAAA1yE,EAAkCA,GAAAyyE,cAAA1kF,EAAA26E,gBAAkCpyD,YAAApW,GAAYwyB,EAAAmN,WAAa,QAAA7xC,GAAAkS,GAAcA,IAAAo7B,OAAWp7B,EAAAk7B,oBAAA,UAAAptC,EAAmC,IAAAD,GAAAuoB,EAAAH,IAAAjW,GAAAlP,EAAAslB,EAAAH,IAAAjW,EAAAy4C,QAAkC,IAAAz4C,EAAA,CACjZ,GADuZ,SACpflP,EAAA03E,gBAAA1oE,EAAAyyE,cAAAzhF,EAAA03E,gBAAoDxoE,EAAAkpE,cAAAlpE,EAAAkpE,aAAA9jC,UAAyCplC,YAAAyG,GAAA2xC,sBAAA,IAAAtnD,EAAA,EAAoD,EAAAA,EAAIA,IAAAgP,EAAA2yE,kBAAA5kF,EAAAm6E,mBAAAl3E,IAAAjD,EAAA6kF,oBAAA5yE,EAAA6yE,mBAAA9kF,EAAA6kF,mBAAA5hF,QAAqHgP,GAAA2yE,kBAAA5kF,EAAAm6E,oBAAAn6E,EAAA6kF,oBAAA5yE,EAAA6yE,mBAAA9kF,EAAA6kF,mBAAgHt8D,aAAApW,EAAAy4C,SAAoBriC,YAAApW,GAAYwyB,EAAAmN,WAAa,QAAA/xC,GAAAoS,EAAAqe,GAAgB,GAAAzwB,GAAAwoB,EAAAH,IAAAjW,EAAe,MAAAA,EAAA6/B,SAAAjyC,EAAAglF,YAAA5yE,EAAA6/B,QAAA,CAAyC,GAAAlgB,GAC/e3f,EAAAmK,KAAQ,aAAAwV,EAAAvwB,QAAA0vB,KAAA,wEAAA9e,OAAsG,SAAA2f,EAAAkzD,SAAiH,CAAK,SAAAjlF,EAAA4kF,cAAA5kF,EAAA4kF,aAAA,EAAAxyE,EAAA+6B,iBAAA,UAAA/P,GAAAp9B,EAAA46E,eAAA1oE,EAAA6uE,gBAAAn8C,EAAAmN,YAA2H9xC,EAAAsjF,cAAArxE,EAAAsxE,SAAA/yD,GAA8BxwB,EAAA+gF,YAAA9uE,EAAAuvE,WAAAzhF,EAAA46E,gBAA6C1oE,EAAAgzE,YAAAhzE,EAAAizE,oBAAA/yE,EAAA6qD,OAA6C/qD,EAAAgzE,YAAAhzE,EAAAkzE,+BACvdhzE,EAAA4qD,kBAAoB9qD,EAAAgzE,YAAAhzE,EAAAmzE,iBAAAjzE,EAAA8qD,gBAAoD,IAAAh9D,GAAA6d,EAAA3L,EAAAmK,MAAArZ,EAAAm5E,eAAkC,KAAAjqE,EAAAk8C,QAAAz1C,EAAAiU,qBAAA1a,EAAAm8C,QAAA11C,EAAAiU,qBAAA1a,EAAAu4C,YAAA9xC,EAAAmU,eAAA5a,EAAAu4C,YAAA9xC,EAAAsU,gBAAA,IAAA6E,EAAA9xB,GAAA,GAAA6xB,EAAA7xB,EAAA6xB,YAAAuzD,mBAAAvzD,YAAAwzD,mBAAA,CAAoO,GAAAvnE,GAAAxP,SAAAglD,gBAAA,wCAAwEx1C,GAAA3T,MAAAwO,EAAAnN,KAAAm+B,kBAAA9X,EAAA1nB,OAA8C2T,EAAA1T,OAAAuO,EAAAnN,KAAAm+B,kBAAA9X,EAAAznB,QAAgD0T,EAAAtF,WAAA,MAAA2kD,UAAAtrC,EACpf,IAAA/T,EAAA3T,MAAA2T,EAAA1T,QAAsB9I,QAAA0vB,KAAA,mDAAAa,EAAA1nB,MAAA,IAAA0nB,EAAAznB,OAAA,iBAAA0T,EAAA3T,MAAA,IAAA2T,EAAA1T,OAAAynB,GAA8H7xB,EAAA8d,MAAI9d,GAAA6xB,CAAS,IAAAA,GAAAC,EAAA9xB,GAAA8d,EAAAxI,EAAApD,EAAAq4C,QAAA34B,EAAAtc,EAAApD,EAAA/K,KAAqCg2B,GAAAnrB,EAAAuvE,WAAArvE,EAAA2f,EAAoB,IAAAwT,GAAAnzB,EAAAumD,OAAgB,IAAAvmD,YAAAyG,GAAA0kD,aAAA,CAAwD,GAApBh4B,EAAArzB,EAAAu+D,gBAAoBr+D,EAAA/K,OAAAwR,EAAA+U,UAAA,CAA6B,IAAAsX,EAAA,KAAAl3B,OAAA,iDAAoEu3B,GAAArzB,EAAAszE,uBAAuBtgD,KAAAK,EAAArzB,EAAAuzE,kBAAgCxlF,GAAAmhF,WAAAlvE,EAAAuvE,WAAA,EAAAl8C,EAAArlC,EAAAmK,MAAAnK,EAAAoK,OAAA,EAAA0T,EAAA8T,EAAA,UAA2D,IAAA1f,YACrfyG,GAAA6/C,YAAA,KAAAnzB,EAAA7iC,QAAAqvB,EAAA,CAAoC,OAAAyT,GAAA,EAAAC,EAAAF,EAAA7iC,OAAuB8iC,EAAAC,EAAID,IAAAtlC,EAAAqlC,EAAAC,GAAAvlC,EAAAmhF,WAAAlvE,EAAAuvE,WAAAj8C,EAAAxnB,EAAA9d,EAAAmK,MAAAnK,EAAAoK,OAAA,EAAA0T,EAAA8T,EAAA5xB,EAAAiB,KAAwEiR,GAAA04C,iBAAA,MAAqB7qD,GAAAmhF,WAAAlvE,EAAAuvE,WAAA,EAAAzjE,EAAA9d,EAAAmK,MAAAnK,EAAAoK,OAAA,EAAA0T,EAAA8T,EAAA5xB,EAAAiB,UAAkE,IAAAiR,YAAAyG,GAAAigD,kBAAA,IAAAtzB,EAAA,EAAAC,EAAAF,EAAA7iC,OAAgE8iC,EAAAC,EAAID,IAAAtlC,EAAAqlC,EAAAC,GAAApzB,EAAAq4C,SAAA5xC,EAAAsV,YAAA/b,EAAAq4C,SAAA5xC,EAAAqV,aAAAjuB,EAAA8hF,8BAAA1zE,QAAA2P,GAAA/d,EAAAwjF,qBAAAvxE,EAAAuvE,WAAAj8C,EAAAxnB,EAAA9d,EAAAmK,MAAAnK,EAAAoK,OAAA,EAAApK,EAAAiB,MAAAK,QAAA0vB,KAAA,kGAClSjxB,EAAAmhF,WAAAlvE,EAAAuvE,WAAAj8C,EAAAxnB,EAAA9d,EAAAmK,MAAAnK,EAAAoK,OAAA,EAAA0T,EAAA8T,EAAA5xB,EAAAiB,UAA6D,MAAAokC,EAAA7iC,QAAAqvB,EAAA,CAA2B,IAAJyT,EAAA,EAAIC,EAAAF,EAAA7iC,OAAe8iC,EAAAC,EAAID,IAAAtlC,EAAAqlC,EAAAC,GAAAvlC,EAAAmhF,WAAAlvE,EAAAuvE,WAAAj8C,EAAAxnB,IAAA8T,EAAA5xB,EAAgDkS,GAAA04C,iBAAA,MAAqB7qD,GAAAmhF,WAAAlvE,EAAAuvE,WAAA,EAAAzjE,IAAA8T,EAAA5xB,EAAiJ,OAAvGkS,GAAA04C,iBAAA/4B,GAAA7f,EAAAwzE,eAAAxzE,EAAAuvE,YAAqDzhF,EAAAglF,UAAA5yE,EAAA6/B,aAAsB7/B,EAAAsN,UAAAtN,EAAAsN,SAAAtN,IAJvL5Q,QAAA0vB,KAAA,yEAAA9e,IAI2NnS,EAAAsjF,cAAArxE,EAAAsxE,SAAA/yD,GAA8BxwB,EAAA+gF,YAAA9uE,EAAAuvE,WAAAzhF,EAAA46E,gBAA6C,QAAAv9C,GAAAp9B,EAAAwwB,EAAA1S,GAAkBA,GAAA7L,EAAA+uE,cAAAhhF,EAAAiS,EAAAyzE,eAAAnwE,EAAAib,EAAA69B,QAAAp8C,EAAA+uE,cAAAhhF,EAAAiS,EAAA0zE,eACtapwE,EAAAib,EAAA89B,QAAAr8C,EAAA+uE,cAAAhhF,EAAAiS,EAAAivE,mBAAA3rE,EAAAib,EAAAi6B,YAAAx4C,EAAA+uE,cAAAhhF,EAAAiS,EAAAgvE,mBAAA1rE,EAAAib,EAAAk6B,cAAAz4C,EAAA+uE,cAAAhhF,EAAAiS,EAAAyzE,eAAAzzE,EAAA88D,eAAA98D,EAAA+uE,cAAAhhF,EAAAiS,EAAA0zE,eAAA1zE,EAAA88D,eAAAv+C,EAAA69B,QAAAz1C,EAAAiU,qBAAA2D,EAAA89B,QAAA11C,EAAAiU,qBAAAtrB,QAAA0vB,KAAA,gIAAAT,GAAAve,EAAA+uE,cAAAhhF,EAAAiS,EAAAivE,mBAAApvD,EAAAtB,EAAAi6B,YACAx4C,EAAA+uE,cAAAhhF,EAAAiS,EAAAgvE,mBAAAnvD,EAAAtB,EAAAk6B,YAAAl6B,EAAAk6B,YAAA9xC,EAAAmU,eAAAyD,EAAAk6B,YAAA9xC,EAAAsU,cAAA3rB,QAAA0vB,KAAA,kIAAAT,MAA+Q1S,EAAA3L,EAAAiW,IAAA,oCAAAoI,EAAAppB,OAAAwR,EAAA+U,WAAA,OAAAxb,EAAAiW,IAAA,6BAAAoI,EAAAppB,OAAAwR,EAAAgV,eAAA,OAAAzb,EAAAiW,IAAA,sCAAAoI,EAAA+9B,YAAAhmC,EAAAH,IAAAoI,GAAAo1D,uBAC/Q3zE,EAAA4zE,cAAA7lF,EAAA8d,EAAAgoE,2BAAAr6E,KAAAib,IAAA8J,EAAA+9B,WAAAtrD,EAAAgzE,qBAAA1tD,EAAAH,IAAAoI,GAAAo1D,oBAAAp1D,EAAA+9B,YAAwI,QAAAxwC,GAAA5L,EAAAlP,EAAAutB,EAAA1S,GAAoB,GAAAiU,GAAAxc,EAAAtS,EAAA2nD,QAAAJ,QAAA14B,EAAAvc,EAAAtS,EAAA2nD,QAAAxjD,KAA8CpH,GAAAmhF,WAAArjE,EAAA,EAAAiU,EAAA9uB,EAAAmH,MAAAnH,EAAAoH,OAAA,EAAA0nB,EAAAD,EAAA,MAAgD7f,EAAAqoE,gBAAAroE,EAAAsoE,YAAApoE,GAAmCF,EAAAuoE,qBAAAvoE,EAAAsoE,YAAA/pD,EAAA1S,EAAAyK,EAAAH,IAAAnlB,EAAA2nD,SAAA+vB,eAAA,GAA4E1oE,EAAAqoE,gBAAAroE,EAAAsoE,YAAA,MAAsC,QAAA1oD,GAAA1f,EAAAnS,GAAgBiS,EAAA8zE,iBAAA9zE,EAAA+zE,aAAA7zE,GAAqCnS,EAAAm7E,cAAAn7E,EAAAo7E,eAAAnpE,EAAAg0E,oBAAAh0E,EAAA+zE,aACpc/zE,EAAAuzE,kBAAAxlF,EAAAoK,MAAApK,EAAAqK,QAAA4H,EAAAi0E,wBAAAj0E,EAAAsoE,YAAAtoE,EAAAk0E,iBAAAl0E,EAAA+zE,aAAA7zE,IAAAnS,EAAAm7E,aAAAn7E,EAAAo7E,eAAAnpE,EAAAg0E,oBAAAh0E,EAAA+zE,aAAA/zE,EAAAm0E,cAAApmF,EAAAoK,MAAApK,EAAAqK,QAAA4H,EAAAi0E,wBAAAj0E,EAAAsoE,YAAAtoE,EAAAo0E,yBAAAp0E,EAAA+zE,aAAA7zE,IAAAF,EAAAg0E,oBAAAh0E,EAAA+zE,aAAA/zE,EAAAq0E,MAAAtmF,EAAAoK,MAAApK,EAAAqK,QAAgX4H,EAAA8zE,iBAAA9zE,EAAA+zE,aAAA,MAAwC,GAAArhD,GAAAnU,EAAAmjD,OAAA1uC,EAAA,mBAAAshD,yBAAAt0E,YAAAs0E,uBACxZt6E,MAAA6tE,aAAA/5E,EAAoBkM,KAAA+tE,eAAA,SAAA7nE,EAAAqe,GAAkC,GAAAsB,GAAAvJ,EAAAH,IAAAjW,EAAe,QAAAA,EAAAmK,MAAA7Z,OAAA,KAAA0P,EAAA6/B,SAAAlgB,EAAAizD,YAAA5yE,EAAA6/B,QAAA,CAA+DlgB,EAAA2yD,4BAAAtyE,EAAA+6B,iBAAA,UAAA/P,GAAArL,EAAA2yD,0BAAAxyE,EAAA6uE,gBAAAn8C,EAAAmN,YAA0H9xC,EAAAsjF,cAAArxE,EAAAsxE,SAAA/yD,GAA8BxwB,EAAA+gF,YAAA9uE,EAAAwvE,iBAAA3vD,EAAA2yD,2BAA8DxyE,EAAAgzE,YAAAhzE,EAAAizE,oBAAA/yE,EAAA6qD,MAA6C,QAAAj9D,GAAAoS,YAAAyG,GAAAigD,kBAAA54D,EAAAkS,EAAAmK,MAAA,YAAA1D,GAAA6/C,YAAA16C,KAAA8T,EAAA,EAAiG,EAAAA,EAAIA,IAAA9T,EAAA8T,GAC5e9xB,GAAAE,IAAAkS,EAAAmK,MAAAuV,GAAAvV,MAAAnK,EAAAmK,MAAAuV,GAAA/T,EAAA3L,EAAAmK,MAAAuV,GAAA5uB,EAAAq5E,eAAkE,IAAAr3C,GAAAlT,EAAAhU,EAAA,IAAAwnB,EAAAhwB,EAAApD,EAAAq4C,QAAAhlB,EAAAjwB,EAAApD,EAAA/K,KAAkE,KAA1Bg2B,EAAAnrB,EAAAwvE,iBAAAtvE,EAAA8yB,GAA0BpT,EAAA,EAAQ,EAAAA,EAAIA,IAAA,GAAA9xB,EAAA,OAAA0lC,GAAAC,EAAA3nB,EAAA8T,GAAA6mC,QAAA/yB,EAAA,EAAAC,EAAAF,EAAAjjC,OAAiDkjC,EAAAC,EAAID,IAAAF,EAAAC,EAAAC,GAAAxzB,EAAAq4C,SAAA5xC,EAAAsV,YAAA/b,EAAAq4C,SAAA5xC,EAAAqV,aAAAjuB,EAAA8hF,8BAAA1zE,QAAAm3B,GAAAvlC,EAAAwjF,qBAAAvxE,EAAAyoE,4BAAA7oD,EAAA8T,EAAAJ,EAAAE,EAAAr7B,MAAAq7B,EAAAp7B,OAAA,EAAAo7B,EAAAvkC,MAAAK,QAAA0vB,KAAA,mGACrMjxB,EAAAmhF,WAAAlvE,EAAAyoE,4BAAA7oD,EAAA8T,EAAAJ,EAAAE,EAAAr7B,MAAAq7B,EAAAp7B,OAAA,EAAAk7B,EAAAC,EAAAC,EAAAvkC,UAAgFjB,GAAAD,EAAAmhF,WAAAlvE,EAAAyoE,4BAAA7oD,EAAA,EAAA0T,EAAAxnB,EAAA8T,GAAAznB,MAAA2T,EAAA8T,GAAAxnB,OAAA,EAAAk7B,EAAAC,EAAAznB,EAAA8T,GAAA3wB,MAAAlB,EAAAmhF,WAAAlvE,EAAAyoE,4BAAA7oD,EAAA,EAAA0T,IAAAC,EAAAznB,EAAA8T,GAA2J1f,GAAA04C,iBAAA5lB,GAAAhzB,EAAAwzE,eAAAxzE,EAAAwvE,kBAA2D3vD,EAAAizD,UAAA5yE,EAAA6/B,QAAsB7/B,EAAAsN,UAAAtN,EAAAsN,SAAAtN,OAA4BnS,GAAAsjF,cAAArxE,EAAAsxE,SAAA/yD,GAAAxwB,EAAA+gF,YAAA9uE,EAAAwvE,iBAAA3vD,EAAA2yD,4BAAkGx4E,KAAAguE,sBAAA,SAAA9nE,EAAAlP,GAAyCjD,EAAAsjF,cAAArxE,EAAAsxE,SACnetgF,GAAGjD,EAAA+gF,YAAA9uE,EAAAwvE,iBAAAl5D,EAAAH,IAAAjW,GAAAwoE,iBAA2D1uE,KAAAmuE,kBAAA,SAAAjoE,GAAmC,GAAAlP,GAAAslB,EAAAH,IAAAjW,GAAAoD,EAAAgT,EAAAH,IAAAjW,EAAAy4C,QAAkCz4C,GAAA+6B,iBAAA,UAAAjtC,GAAgCsV,EAAAolE,eAAA1oE,EAAA6uE,gBAAmCn8C,EAAAmN,UAAa,IAAAthB,GAAAre,YAAAyG,GAAA2xC,sBAAAzsC,EAAAiU,EAAA5f,EAAsD,IAAAqe,EAAA,CAAMvtB,EAAAk3E,qBAAwB,QAAAroD,GAAA,EAAY,EAAAA,EAAIA,IAAA7uB,EAAAk3E,mBAAAroD,GAAA7f,EAAAu0E,wBAAkDvjF,GAAAk3E,mBAAAloE,EAAAu0E,mBAAgD,IAAAh2D,EAAA,CAA2F,IAArFxwB,EAAA+gF,YAAA9uE,EAAAwvE,iBAAAlsE,EAAAolE,gBAAmDv9C,EAAAnrB,EAAAwvE,iBAAAtvE,EAAAy4C,QAAA9sC,GAAkCgU,EACpf,EAAE,EAAAA,EAAIA,IAAA/T,EAAA9a,EAAAk3E,mBAAAroD,GAAA3f,EAAAF,EAAAwoE,kBAAAxoE,EAAAyoE,4BAAA5oD,EAAqF3f,GAAAy4C,QAAAC,iBAAA/sC,GAAA7L,EAAAwzE,eAAAxzE,EAAAwvE,kBAAmEzhF,EAAA+gF,YAAA9uE,EAAAwvE,iBAAA,UAAuCzhF,GAAA+gF,YAAA9uE,EAAAuvE,WAAAjsE,EAAAolE,gBAAAv9C,EAAAnrB,EAAAuvE,WAAArvE,EAAAy4C,QAAA9sC,GAAAC,EAAA9a,EAAAk3E,mBAAAhoE,EAAAF,EAAAwoE,kBAAAxoE,EAAAuvE,YAAArvE,EAAAy4C,QAAAC,iBAAA/sC,GAAA7L,EAAAwzE,eAAAxzE,EAAAuvE,YAAAxhF,EAAA+gF,YAAA9uE,EAAAuvE,WAAA,KAAuO,IAAArvE,EAAAgpE,YAAA,CAAwE,GAAtDl4E,EAAAslB,EAAAH,IAAAjW,GAAWoD,EAAApD,YAAAyG,GAAA2xC,sBAA2Cp4C,EAAAkpE,aAAA,CAAmB,GAAA9lE,EAAA,KAAAxH,OAAA,2DACvgB,IAAAoE,YAAAyG,GAAA2xC,sBAAA,KAAAx8C,OAAA,2DAA0K,IAAtDkE,EAAAqoE,gBAAAroE,EAAAsoE,YAAAt3E,EAAAk3E,sBAAsDhoE,EAAAkpE,uBAAAziE,GAAA0kD,cAAA,KAAAvvD,OAAA,sEAAsIwa,GAAAH,IAAAjW,EAAAkpE,cAAAV,gBAAAxoE,EAAAkpE,aAAA/+D,MAAAlS,QAAA+H,EAAA/H,OAAA+H,EAAAkpE,aAAA/+D,MAAAjS,SAAA8H,EAAA9H,SAAA8H,EAAAkpE,aAAA/+D,MAAAlS,MAAA+H,EAAA/H,MAAA+H,EAAAkpE,aAAA/+D,MAAAjS,OAAA8H,EAAA9H,OAAA8H,EAAAkpE,aAAAxoC,aAChT,GAAI9yC,EAAAoS,EAAAkpE,aAAA,GAAoBlpE,EAAAoW,EAAAH,IAAAjW,EAAAkpE,cAAAV,eAAuC1oE,EAAAuoE,qBAAAvoE,EAAAsoE,YAAAtoE,EAAAk0E,iBAAAl0E,EAAAuvE,WAAArvE,EAAA,OAA0E,IAAAoD,EAAA,IAAAtS,EAAA4hF,sBAAAtvE,EAAA,EAA0C,EAAAA,EAAIA,IAAAtD,EAAAqoE,gBAAAroE,EAAAsoE,YAAAt3E,EAAAk3E,mBAAA5kE,IAAAtS,EAAA4hF,mBAAAtvE,GAAAtD,EAAAw0E,qBAAA50D,EAAA5uB,EAAA4hF,mBAAAtvE,GAAApD,OAAyIF,GAAAqoE,gBAAAroE,EAAAsoE,YAAAt3E,EAAAk3E,oBAAAl3E,EAAA4hF,mBAAA5yE,EAAAw0E,qBAAA50D,EAAA5uB,EAAA4hF,mBAAA1yE,EAAiIF,GAAAqoE,gBAAAroE,EAAAsoE,YAAA,QAAwCtuE,KAAAwtE,yBACze,SAAAtnE,GAAY,GAAAlP,GAAAkP,EAAAy4C,OAAgB3nD,GAAA4nD,iBAAA94B,EAAA5f,IAAAlP,EAAAynD,YAAA9xC,EAAAmU,eAAA9pB,EAAAynD,YAAA9xC,EAAAsU,eAAA/a,cAAAyG,GAAA2xC,sBAAAt4C,EAAAwvE,iBAAAxvE,EAAAuvE,WAAAv+E,EAAAslB,EAAAH,IAAAnlB,GAAA03E,eAAA36E,EAAA+gF,YAAA5uE,EAAAlP,GAAAgP,EAAAwzE,eAAAtzE,GAAAnS,EAAA+gF,YAAA5uE,EAAA,SAC5ByG,EAAAk1D,cAAA,WAA+B,GAAA77D,GAAA,GAAA2G,GAAAg/C,QAAAzlD,EAAA,GAAAyG,GAAAy/C,YAAAr4D,KAAAuoB,KAAAtlB,EAAA,SAAAgP,EAAAE,EAAAoW,GAA4E,GAAAtlB,GAAAgP,EAAA,EAAW,OAAAhP,GAAA,EAAAA,EAAA,MAAAgP,EAAsB,IAAAsD,GAAApD,EAAAoW,EAAAiI,EAAAxwB,EAAAuV,EAA4D,IAA3C,SAAAib,MAAA,GAAAqT,cAAAtuB,GAAAvV,EAAAuV,GAAAib,GAA2C,IAAAre,EAAA,IAAAlP,EAAAuvB,QAAAhC,EAAA,GAAAvtB,EAAA,EAAAsS,EAAA,EAAoCtS,IAAAkP,IAAMlP,EAAAsS,GAAAgT,EAAAtW,EAAAhP,GAAAuvB,QAAAhC,EAAAjb,EAA2B,OAAAib,IAASjb,EAAA,SAAAtD,EAAAE,GAAiB,GAAAnS,GAAAuoB,EAAApW,EAAW,UAAAnS,MAAA,GAAAo0C,YAAAjiC,GAAAoW,EAAApW,GAAAnS,EAAyC,QAAAiD,GAAA,EAAYA,IAAAkP,IAAMlP,EAAAjD,EAAAiD,GAAAgP,EAAA2nE,kBAA8B,OAAA55E,IAASwwB,EAAA,SAAAve,EAAAE,GAAiBF,EAAAy0E,UAAAz6E,KAAA06E,KAAAx0E,IAAyB2L,EAAA,SAAA7L,EAAAE,GAAiBF,EAAA20E,UAAA36E,KAAA06E,KAAAx0E,IAAyB4f,EAAA,SAAA9f,EACxeE,GAAG,SAAAA,EAAAnH,EAAAiH,EAAA40E,WAAA56E,KAAA06E,KAAAx0E,GAAAF,EAAA60E,UAAA76E,KAAA06E,KAAAx0E,EAAAnH,EAAAmH,EAAA8M,IAAsE6S,EAAA,SAAA7f,EAAAE,GAAiB,SAAAA,EAAAnH,EAAAiH,EAAA80E,UAAA96E,KAAA06E,KAAAx0E,EAAAnH,EAAAmH,EAAA8M,EAAA9M,EAAA+M,GAAA,SAAA/M,EAAA4L,EAAA9L,EAAA80E,UAAA96E,KAAA06E,KAAAx0E,EAAA4L,EAAA5L,EAAAqe,EAAAre,KAAAF,EAAA+0E,WAAA/6E,KAAA06E,KAAAx0E,IAA0HgrB,EAAA,SAAAlrB,EAAAE,GAAiB,SAAAA,EAAAnH,EAAAiH,EAAAg1E,WAAAh7E,KAAA06E,KAAAx0E,GAAAF,EAAAi1E,UAAAj7E,KAAA06E,KAAAx0E,EAAAnH,EAAAmH,EAAA8M,EAAA9M,EAAA+M,EAAA/M,EAAA0L,IAA8E5d,EAAA,SAAAgS,EAAAE,GAAiBF,EAAAk1E,iBAAAl7E,KAAA06E,MAAA,EAAAx0E,EAAAmqB,UAAAnqB,IAA+CpS,EAAA,SAAAkS,EAAAE,GAAiBF,EAAAm1E,iBAAAn7E,KAAA06E,MAAA,EAAAx0E,EAAAmqB,UAAAnqB,IAA+CirB,EAAA,SAAAnrB,EAAAE,GAAiBF,EAAAo1E,iBAAAp7E,KAAA06E,MAAA,EAAAx0E,EAAAmqB,UAAAnqB,IAA+C4L,EACnf,SAAA5L,EAAAnS,EAAAuoB,GAAgB,GAAAtlB,GAAAslB,EAAAqxD,kBAA2BznE,GAAAy0E,UAAA36E,KAAA06E,KAAA1jF,GAAyBslB,EAAAuxD,aAAA95E,GAAAiS,EAAAhP,IAAuB4uB,EAAA,SAAA5f,EAAAjS,EAAAuoB,GAAmB,GAAAtlB,GAAAslB,EAAAqxD,kBAA2B3nE,GAAA20E,UAAA36E,KAAA06E,KAAA1jF,GAAyBslB,EAAAyxD,eAAAh6E,GAAAmS,EAAAlP,IAAyB0hC,EAAA,SAAA1yB,EAAAE,GAAiBF,EAAAq1E,WAAAr7E,KAAA06E,KAAAx0E,IAA0B8yB,EAAA,SAAAhzB,EAAAE,GAAiBF,EAAAs1E,WAAAt7E,KAAA06E,KAAAx0E,IAA0B+yB,EAAA,SAAAjzB,EAAAE,GAAiBF,EAAAu1E,WAAAv7E,KAAA06E,KAAAx0E,IAA0BgzB,EAAA,SAAAlzB,GAAe,OAAAA,GAAU,gBAAAue,EAAmB,kBAAAuB,EAAoB,kBAAAD,EAAoB,kBAAAqL,EAAoB,kBAAAl9B,EAAoB,kBAAAF,EAAoB,kBAAAq9B,EAAoB,kBAAArf,EAAoB,kBAAA8T,EACpf,4BAAA/T,EAA8B,6BAAA6mB,EAA+B,6BAAAM,EAA+B,6BAAAC,KAAgCrnB,EAAA,SAAA5L,EAAAE,GAAiBF,EAAAw1E,WAAAx7E,KAAA06E,KAAAx0E,IAA0BizB,EAAA,SAAAnzB,EAAAE,GAAiBF,EAAAy1E,WAAAz7E,KAAA06E,KAAAx0E,IAA0B+M,EAAA,SAAAjN,EAAAE,GAAiBF,EAAA40E,WAAA56E,KAAA06E,KAAA1jF,EAAAkP,EAAAlG,KAAAsQ,KAAA,KAAyC0C,EAAA,SAAAhN,EAAAE,GAAiBF,EAAA+0E,WAAA/6E,KAAA06E,KAAA1jF,EAAAkP,EAAAlG,KAAAsQ,KAAA,KAAyC8oB,EAAA,SAAApzB,EAAAE,GAAiBF,EAAAg1E,WAAAh7E,KAAA06E,KAAA1jF,EAAAkP,EAAAlG,KAAAsQ,KAAA,KAAyC+oB,EAAA,SAAArzB,EAAAE,GAAiBF,EAAAk1E,iBAAAl7E,KAAA06E,MAAA,EAAA1jF,EAAAkP,EAAAlG,KAAAsQ,KAAA,KAAkDgpB,EAAA,SAAAtzB,EAAAE,GAAiBF,EAAAm1E,iBAAAn7E,KAAA06E,MAAA,EAAA1jF,EAAAkP,EACpdlG,KAAAsQ,KAAA,KAAcipB,EAAA,SAAAvzB,EAAAE,GAAiBF,EAAAo1E,iBAAAp7E,KAAA06E,MAAA,EAAA1jF,EAAAkP,EAAAlG,KAAAsQ,KAAA,MAAmDkpB,EAAA,SAAAtzB,EAAAnS,EAAAuoB,GAAmB,GAAAtlB,GAAAjD,EAAAyC,OAAA+tB,EAAAjb,EAAAgT,EAAAtlB,EAAkD,KAA1BkP,EAAAu1E,WAAAz7E,KAAA06E,KAAAn2D,GAA0Bre,EAAA,EAAQA,IAAAlP,IAAMkP,EAAAoW,EAAAuxD,aAAA95E,EAAAmS,IAAAF,EAAAue,EAAAre,KAAiCuzB,EAAA,SAAAzzB,EAAAjS,EAAAuoB,GAAmB,GAAAtlB,GAAAjD,EAAAyC,OAAA+tB,EAAAjb,EAAAgT,EAAAtlB,EAAkD,KAA1BgP,EAAAy1E,WAAAz7E,KAAA06E,KAAAn2D,GAA0Bve,EAAA,EAAQA,IAAAhP,IAAMgP,EAAAsW,EAAAyxD,eAAAh6E,EAAAiS,IAAAE,EAAAqe,EAAAve,KAAmC0zB,EAAA,SAAA1zB,GAAe,OAAAA,GAAU,gBAAA4L,EAAmB,kBAAAqB,EAAoB,kBAAAD,EAAoB,kBAAAomB,EAAoB,kBAAAC,EAAoB,kBAAAC,EAAoB,kBAAAC,EAAoB,kBAAAC,EAAoB,kBAAAC,EACpf,4BAAAN,EAA8B,6BAAAT,EAA+B,6BAAAM,EAA+B,6BAAAC,KAAgCU,EAAA,SAAA3zB,EAAAE,EAAAnS,GAAmBiM,KAAArM,GAAAqS,EAAUhG,KAAA06E,KAAA3mF,EAAYiM,KAAAk4C,SAAAhf,EAAAhzB,EAAA/K,OAAwBy+B,EAAA,SAAA5zB,EAAAE,EAAAnS,GAAmBiM,KAAArM,GAAAqS,EAAUhG,KAAA06E,KAAA3mF,EAAYiM,KAAAsQ,KAAApK,EAAAoK,KAAiBtQ,KAAAk4C,SAAAxe,EAAAxzB,EAAA/K,OAAwB0+B,EAAA,SAAA7zB,GAAehG,KAAArM,GAAAqS,EAAUhG,KAAA+hE,OAAY/hE,KAAAgL,OAAa6uB,GAAAnyB,UAAAwwC,SAAA,SAAAlyC,EAAAE,GAAmC,OAAAnS,GAAAiM,KAAA+hE,IAAAzlD,EAAA,EAAAtlB,EAAAjD,EAAAyC,OAAkC8lB,IAAAtlB,IAAMslB,EAAA,CAAK,GAAAhT,GAAAvV,EAAAuoB,EAAWhT,GAAA4uC,SAAAlyC,EAAAE,EAAAoD,EAAA3V,MAAwB,IAAAmmC,GAAA,2BAAAu4B,EAAA,SAAArsD,EAAAE,EAAAnS,GAAmDiM,KAAA+hE,OAAY/hE,KAAAgL,OAChfhL,KAAAwN,SAAAzZ,EAAgBA,EAAAiS,EAAAktE,oBAAAhtE,EAAAF,EAAA01E,gBAA6C,QAAAp/D,GAAA,EAAYA,IAAAvoB,IAAMuoB,EAAA,CAAK,GAAAtlB,GAAAgP,EAAA21E,iBAAAz1E,EAAAoW,GAAAhT,EAAAtD,EAAA41E,mBAAA11E,EAAAlP,EAAAH,MAAA0tB,EAAAvkB,KAAA6R,EAAA7a,EAAAH,KAAAivB,EAAAjU,EAAArb,MAA0F,KAAAsjC,EAAA+f,UAAA,IAAmB,CAAE,GAAAh0B,GAAAiU,EAAA7U,KAAApT,GAAA/d,EAAAgmC,EAAA+f,UAAA3oB,EAAArL,EAAA,GAAA7xB,EAAA6xB,EAAA,EAA+D,IAAnB,MAAAA,EAAA,KAAAqL,GAAA,GAAmB,SAAAl9B,GAAA,MAAAA,GAAAF,EAAA,IAAAgyB,EAAA,CAAiCjU,EAAA0S,EAAIvtB,EAAA,SAAAhD,EAAA,GAAA2lC,GAAAzI,EAAAl6B,EAAAsS,GAAA,GAAAswB,GAAA1I,EAAAl6B,EAAAsS,GAAuCuI,EAAAkwD,IAAAliE,KAAA7I,GAAc6a,EAAA7G,IAAAhU,EAAArD,IAAAqD,CAAc,OAAMhD,EAAAuwB,EAAAvZ,IAAAkmB,GAAA,SAAAl9B,MAAA,GAAA6lC,GAAA3I,KAAA3M,IAAAvwB,EAAAk9B,EAAA6wC,IAAAliE,KAAA0kB,GAAA2M,EAAAlmB,IAAAuZ,EAAA5wB,IAAA4wB,KAAAvwB,IAE7F,OAFiLq+D,GAAA3qD,UAAAwwC,SAAA,SAAAlyC,EAAAE,EAAAnS,GAAqCmS,EAAAlG,KAAAgL,IAAA9E,GAC5e,SAAAA,KAAAgyC,SAAAlyC,EAAAjS,EAAAiM,KAAAwN,WAA2C6kD,EAAA3qD,UAAA2J,IAAA,SAAArL,EAAAE,EAAAnS,GAAgC,GAAAuoB,GAAAtc,KAAAgL,IAAAjX,EAAkB,UAAAuoB,KAAA47B,SAAAlyC,EAAAE,EAAAnS,GAAAiM,KAAAwN,WAA8C6kD,EAAA3qD,UAAA66D,YAAA,SAAAv8D,EAAAE,EAAAnS,GAAwCmS,IAAAnS,GAAO,SAAAmS,GAAAlG,KAAAk4C,SAAAlyC,EAAAjS,EAAAmS,IAAkCmsD,EAAAsQ,OAAA,SAAA38D,EAAAE,EAAAnS,EAAAuoB,GAA2B,OAAAtlB,GAAA,EAAAsS,EAAApD,EAAA1P,OAAuBQ,IAAAsS,IAAMtS,EAAA,CAAK,GAAAutB,GAAAre,EAAAlP,GAAA6a,EAAA9d,EAAAwwB,EAAA5wB,KAAqB,IAAAke,EAAA+0B,aAAAriB,EAAA2zB,SAAAlyC,EAAA6L,EAAAtK,MAAA+U,KAA8C+1C,EAAAyP,aAAA,SAAA97D,EAAAE,GAA6B,OAAAnS,MAAAuoB,EAAA,EAAAtlB,EAAAgP,EAAAxP,OAA4B8lB,IAAAtlB,IAAMslB,EAAA,CAAK,GAAAhT,GAAAtD,EAAAsW,EAAWhT,GAAA3V,KAAAuS,IAAAnS,EAAA8L,KAAAyJ,GAAqB,MAAAvV,IAAUs+D,EAAA6P,aAAA,SAAAl8D,EAAAE,GAA6B,OAAAnS,GAAA,KACveuoB,EAAAtW,EAAAxP,OAAAQ,EAAA,EAAAsS,EAAA,EAAmBA,IAAAgT,IAAMhT,EAAA,CAAK,GAAAib,GAAAve,EAAAsD,GAAAuI,EAAA3L,EAAAqe,EAAA5wB,GAAqBke,KAAA,IAAAA,EAAA20B,SAAA,OAAAzyC,YAAA8L,KAAA0kB,KAAAvtB,EAAAsS,IAAAtD,EAAAhP,GAAAutB,KAAAvtB,GAAqF,MAAlBA,GAAAslB,IAAAtW,EAAAxP,OAAAQ,GAAkBjD,GAAUs+D,EAAAuQ,YAAA,SAAA58D,EAAAE,EAAAnS,EAAAuoB,GAAgC,OAAAtlB,GAAA,EAAAsS,EAAAtD,EAAAxP,OAAuBQ,IAAAsS,IAAMtS,EAAA,CAAK,GAAAutB,GAAAre,EAAAF,EAAAhP,GAAArD,IAAAke,EAAA0S,EAAA2oB,gBAAsC,UAAAr7B,KAAAhe,KAAA0wB,EAAAxwB,EAAAuoB,KAA4B+1C,KACtR1lD,EAAAi9D,gBAAA,SAAA5jE,EAAAE,GAAoC,GAAAnS,GAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,EAAAqL,EAAAl9B,EAAA8d,EAAA8T,EAAA8S,EAAAM,EAAAC,EAAAC,EAAAplC,EAAAkS,EAAAo0C,QAAAjpB,EAAAnrB,EAAAqjE,KAA0DrpE,MAAAwR,OAAA,SAAAI,EAAAunB,EAAAlmB,GAA4B,OAAA/M,EAAA1P,OAAA,CAAiBob,EAAA,GAAAjF,GAAA8G,OAAoB,IAAAT,GAAAC,EAAArB,EAAAqB,IAAAmmB,EAAA,GAAAnmB,IAAAomB,EAAA,GAAApmB,EAAArB,EAAA0nB,EAAA,GAAArmB,EAAArB,EAAA2nB,EAAA,GAAA5sB,GAAAykB,QAAAkI,EAAAtmB,EAAAsmB,GAAAE,EAAA,GAAA7sB,GAAA8G,QAAA,OAAAgmB,EAAA,GAAA9sB,GAAAykB,QAAA,KAAAsI,EAAA,GAAA/sB,GAAAkpB,IAAiL,IAAxC6D,EAAAjf,IAAApJ,IAAA,KAAeqoB,EAAAj6B,IAAA4R,IAAA4B,IAAA,GAAAA,EAAArB,EAAA,IAAyB,SAAAonB,EAAA,CAAe,GAAAM,GAAA,GAAA1B,qBAAA,gCAAA+B,EAAA,GAAAsO,cAAA,aAA+Fn2B,GAAAhe,EAAAu3E,eAAmBzlD,EAAA9xB,EAAAu3E,eAAmBv3E,EAAA23E,WAAA33E,EAAA43E,aACpe55D,GAAGhe,EAAA63E,WAAA73E,EAAA43E,aAAApyC,EAAAxlC,EAAAu9E,aAA6Cv9E,EAAA23E,WAAA33E,EAAA+4E,qBAAAjnD,GAAuC9xB,EAAA63E,WAAA73E,EAAA+4E,qBAAAlzC,EAAA7lC,EAAAu9E,aAAqDp4C,EAAAnlC,EAAA+gF,gBAAoB37C,EAAAplC,EAAA+gF,gBAAoB1jD,EAAA2jD,YAAAhhF,EAAAyhF,WAAAt8C,GAA8BnlC,EAAAohF,WAAAphF,EAAAyhF,WAAA,EAAAzhF,EAAAqwE,IAAA,QAAArwE,EAAAqwE,IAAArwE,EAAAwvE,cAAA,MAAsExvE,EAAAihF,cAAAjhF,EAAAyhF,WAAAzhF,EAAA2lF,eAAA3lF,EAAAgvE,eAA+DhvE,EAAAihF,cAAAjhF,EAAAyhF,WAAAzhF,EAAA4lF,eAAA5lF,EAAAgvE,eAA+DhvE,EAAAihF,cAAAjhF,EAAAyhF,WAAAzhF,EAAAmhF,mBAAAnhF,EAAAkvE,SAA6DlvE,EAAAihF,cAAAjhF,EAAAyhF,WAAAzhF,EAAAkhF,mBACndlhF,EAAAkvE,SAAW7xC,EAAA2jD,YAAAhhF,EAAAyhF,WAAAr8C,GAA8BplC,EAAAohF,WAAAphF,EAAAyhF,WAAA,EAAAzhF,EAAAswE,KAAA,QAAAtwE,EAAAswE,KAAAtwE,EAAAwvE,cAAA,MAAwExvE,EAAAihF,cAAAjhF,EAAAyhF,WAAAzhF,EAAA2lF,eAAA3lF,EAAAgvE,eAA+DhvE,EAAAihF,cAAAjhF,EAAAyhF,WAAAzhF,EAAA4lF,eAAA5lF,EAAAgvE,eAA+DhvE,EAAAihF,cAAAjhF,EAAAyhF,WAAAzhF,EAAAmhF,mBAAAnhF,EAAAkvE,SAA6DlvE,EAAAihF,cAAAjhF,EAAAyhF,WAAAzhF,EAAAkhF,mBAAAlhF,EAAAkvE,QAA6D,IAAA1pC,GAAAZ,GAASgwB,aAAA,muCAClXC,eAAA,kcAAgdhvB,EAAA7lC,EAAAk+E,gBAAAp4C,EAAA9lC,EAAAogF,aAAApgF,EAAA87E,iBAChd/1C,EAAA/lC,EAAAogF,aAAApgF,EAAA47E,eAAA51C,EAAA,aAAA9zB,EAAAikE,eAAA,WAA8En2E,GAAAqgF,aAAAv6C,EAAAE,EAAAR,EAAAqvB,gBAAqC70D,EAAAqgF,aAAAt6C,EAAAC,EAAAR,EAAAovB,cAAmC50D,EAAAsgF,cAAAx6C,GAAmB9lC,EAAAsgF,cAAAv6C,GAAmB/lC,EAAA++E,aAAAl5C,EAAAC,GAAoB9lC,EAAA++E,aAAAl5C,EAAAE,GAAoB/lC,EAAAi/E,YAAAp5C,GAAiBX,EAAAW,EAAIzI,EAAAp9B,EAAA+/E,kBAAA76C,EAAA,YAAoChlC,EAAAF,EAAA+/E,kBAAA76C,EAAA,MAA8BjlC,EAAAD,EAAA8nF,mBAAA5iD,EAAA,cAAuC1c,EAAAxoB,EAAA8nF,mBAAA5iD,EAAA,OAAgChiC,EAAAlD,EAAA8nF,mBAAA5iD,EAAA,gBAAyC1vB,EAAAxV,EAAA8nF,mBAAA5iD,EAAA,WAAoCzU,EAAAzwB,EAAA8nF,mBAAA5iD,EAAA,SAAkCnnB,EAAA/d,EAAA8nF,mBAAA5iD,EACjf,SAASlT,EAAAhyB,EAAA8nF,mBAAA5iD,EAAA,YAAqCnT,EAAA/xB,EAAA8nF,mBAAA5iD,EAAA,kBAAiY,IAAtVllC,EAAAquE,WAAAnpC,GAAgB7H,EAAAg6C,iBAAmBh6C,EAAA26C,gBAAA56C,GAAqBC,EAAA26C,gBAAA93E,GAAqBm9B,EAAAg7C,0BAA4Br4E,EAAA6mF,UAAA3jF,EAAA,GAAiBlD,EAAA6mF,UAAAr+D,EAAA,GAAiBxoB,EAAA23E,WAAA33E,EAAA43E,aAAA55D,GAA+Bhe,EAAAi4E,oBAAA76C,EAAA,EAAAp9B,EAAAiwE,OAAA,QAA2CjwE,EAAAi4E,oBAAA/3E,EAAA,EAAAF,EAAAiwE,OAAA,QAA2CjwE,EAAA23E,WAAA33E,EAAA+4E,qBAAAjnD,GAAuCuL,EAAAuQ,QAAA5tC,EAAA8rE,WAAuBzuC,EAAA8uC,eAAA,GAAoBtmC,EAAA,EAAIC,EAAA1zB,EAAA1P,OAAemjC,EAAAC,EAAID,IAAA,GAAAL,EAAA,GAAArmB,EAAArB,EAAA2nB,EAAAloB,IAAAioB,EAAAtmB,EAAAsmB,GAAAO,EAAA3zB,EAAAyzB,GAAA/nB,EAAAP,IAAAwoB,EAAAnG,YAAArD,SAAA,IAClcwJ,EAAAnG,YAAArD,SAAA,IAAAwJ,EAAAnG,YAAArD,SAAA,KAAAze,EAAAwhB,aAAA+F,EAAAglB,oBAAAvsC,EAAAyhB,gBAAA8F,EAAA3F,kBAAAgG,EAAAhV,KAAA5S,GAAA6nB,EAAA16B,EAAAkU,EAAAlU,EAAAy6B,EAAAz6B,EAAAq6B,IAAA,EAAAK,EAAAzmB,EAAAC,EAAAD,EAAAwmB,EAAAxmB,EAAAqmB,IAAA,OAAAK,EAAArD,cAAAoD,GAAA,CAAyMtI,EAAAkmD,cAAAvjF,EAAAwjF,UAA4BnmD,EAAA2jD,YAAAhhF,EAAAyhF,WAAA,MAAiCpkD,EAAAkmD,cAAAvjF,EAAA+nF,UAA4B1qD,EAAA2jD,YAAAhhF,EAAAyhF,WAAAt8C,GAA8BnlC,EAAAgoF,eAAAhoF,EAAAyhF,WAAA,EAAAzhF,EAAAqwE,IAAA1qC,EAAA16B,EAAA06B,EAAAzmB,EAAA,SAAuDlf,EAAA6mF,UAAA5mF,EAAA,GAAiBD,EAAA+mF,UAAAhpE,EAAA0nB,EAAAx6B,EAAAw6B,EAAAvmB,GAAuBlf,EAAAgnF,UAAAj1D,EAAA2T,EAAAz6B,EAAAy6B,EAAAxmB,EAAAwmB,EAAAvmB,GAA2Bke,EAAAuQ,QAAA5tC,EAAA8gF,OAAmBzjD,EAAAsQ,OAAA3tC,EAAA2hF,YAAuB3hF,EAAAy7E,aAAAz7E,EAAAu4E,UACpe,EAAAv4E,EAAA8vE,eAAA,GAAsBzyC,EAAAkmD,cAAAvjF,EAAAwjF,UAA4BnmD,EAAA2jD,YAAAhhF,EAAAyhF,WAAAr8C,GAA8BplC,EAAAgoF,eAAAhoF,EAAAyhF,WAAA,EAAAzhF,EAAAswE,KAAA3qC,EAAA16B,EAAA06B,EAAAzmB,EAAA,SAAwDlf,EAAA6mF,UAAA5mF,EAAA,GAAiBo9B,EAAAuQ,QAAA5tC,EAAA2hF,YAAwBtkD,EAAAkmD,cAAAvjF,EAAA+nF,UAA4B1qD,EAAA2jD,YAAAhhF,EAAAyhF,WAAAt8C,GAA8BnlC,EAAAy7E,aAAAz7E,EAAAu4E,UAAA,EAAAv4E,EAAA8vE,eAAA,GAAiD/pC,EAAAm6B,eAAAxvC,KAAAgV,GAAyBK,EAAAo6B,qBAAAp6B,EAAAo6B,qBAAAp6B,KAAAq6B,mBAAsEpgE,EAAA6mF,UAAA5mF,EAAA,GAAiBo9B,EAAAsQ,OAAA3tC,EAAA8gF,MAAkB,QAAA96C,GAAA,EAAAu4B,EAAAx4B,EAAAk6B,WAAAv9D,OAAkCsjC,EAAAu4B,EAAIv4B,IAAA,CAAK,GAAAw4B,GAAAz4B,EAAAk6B,WAAAj6B,EAAsB,MAAAw4B,EAAArM,SAAA,KAAAqM,EAAAp4B,QAC/dV,EAAAz6B,EAAAuzD,EAAAvzD,EAAAy6B,EAAAxmB,EAAAs/C,EAAAt/C,EAAAwmB,EAAAvmB,EAAAq/C,EAAAr/C,EAAAqmB,EAAAg5B,EAAAhiD,KAAAgiD,EAAAp4B,MAAAjnB,EAAArB,EAAA2nB,EAAAx6B,EAAAu6B,EAAAtmB,EAAAumB,EAAAvmB,EAAAsmB,EAAAxlC,EAAAgnF,UAAAj1D,EAAA2T,EAAAz6B,EAAAy6B,EAAAxmB,EAAAwmB,EAAAvmB,GAAAnf,EAAA+mF,UAAAhpE,EAAA0nB,EAAAx6B,EAAAw6B,EAAAvmB,GAAAlf,EAAA2mF,UAAA30D,EAAAwsC,EAAApvB,UAAApvC,EAAA2mF,UAAAnxE,EAAAgpD,EAAArM,SAAAnyD,EAAAgnF,UAAAv2D,EAAA+tC,EAAAphD,MAAAY,EAAAwgD,EAAAphD,MAAAqT,EAAA+tC,EAAAphD,MAAAhL,GAAAirB,EAAA2uC,YAAAxN,EAAA7P,SAAA6P,EAAAlF,cAAAkF,EAAApF,SAAAoF,EAAAnF,UAAAnnD,EAAA6nE,aAAAvb,EAAA3T,QAAA,GAAA7qD,EAAAy7E,aAAAz7E,EAAAu4E,UAAA,EAAAv4E,EAAA8vE,eAAA,KAA6VzyC,EAAAsQ,OAAA3tC,EAAA8rE,WAAsBzuC,EAAAsQ,OAAA3tC,EAAA2hF,YAAuBtkD,EAAA8uC,eAAA,GAAoBj6D,EAAAklE,kBAC9Zv+D,EAAA+8D,aAAA,SAAA1jE,EAAAE,GAAuE,QAAAgzB,GAAAlzB,EAAAE,GAAgB,MAAAF,GAAA89B,cAAA59B,EAAA49B,YAAA99B,EAAA89B,YAAA59B,EAAA49B,YAAA99B,EAAAiN,IAAA/M,EAAA+M,EAAA/M,EAAA+M,EAAAjN,EAAAiN,EAAA/M,EAAAvS,GAAAqS,EAAArS,GAAtD,GAAAI,GAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,EAAAqL,EAAAl9B,EAAAF,EAAAq9B,EAAArf,EAAA8T,EAAA8S,EAAAM,EAAAC,EAAmJhmB,EAAAD,EAAAomB,EAAAC,EAAAznB,EAAA5L,EAAAo0C,QAAAjhB,EAAAnzB,EAAAqjE,MAAA/vC,EAAA,GAAA3sB,GAAA8G,QAAA8lB,EAAA,GAAA5sB,GAAA+iB,WAAA8J,EAAA,GAAA7sB,GAAA8G,OAAiGzT,MAAAwR,OAAA,SAAAioB,EAAAC,GAA0B,OAAAxzB,EAAA1P,OAAA,CAAiB,YAAA4iC,EAAA,CAAe,GAAAO,GAAA,GAAA/B,uBAAA,sCAAAgC,EAAA,GAAAqO,cAAA,aAAuGh1B,GAAArB,EAAAy5D,eAAmBr4D,EAAApB,EAAAy5D,eAAmBz5D,EAAA65D,WAAA75D,EAAA85D,aAC5dz4D,GAAGrB,EAAA+5D,WAAA/5D,EAAA85D,aAAA/xC,EAAA/nB,EAAAy/D,aAA6Cz/D,EAAA65D,WAAA75D,EAAAi7D,qBAAA75D,GAAuCpB,EAAA+5D,WAAA/5D,EAAAi7D,qBAAAjzC,EAAAhoB,EAAAy/D,YAAqD,IAAA13C,GAAA/nB,EAAAogE,gBAAAp4C,EAAAhoB,EAAAsiE,aAAAtiE,EAAA89D,eAAA71C,EAAAjoB,EAAAsiE,aAAAtiE,EAAAg+D,gBAA8Fh+D,GAAAuiE,aAAAv6C,GAAA,aAAA5zB,EAAAikE,eAAA,UAAwD,6tBAA4tB/pE,KAAA,OAC9/B0R,EAAAuiE,aAAAt6C,GAAA,aAAA7zB,EAAAikE,eAAA,UAAwD,8yBAA6yB/pE,KAAA,OACr2B0R,EAAAwiE,cAAAx6C,GAAmBhoB,EAAAwiE,cAAAv6C,GAAmBjoB,EAAAihE,aAAAl5C,EAAAC,GAAoBhoB,EAAAihE,aAAAl5C,EAAAE,GAAoBjoB,EAAAmhE,YAAAp5C,GAAiBP,EAAAO,EAAIX,EAAApnB,EAAAiiE,kBAAAz6C,EAAA,YAAoCH,EAAArnB,EAAAiiE,kBAAAz6C,EAAA,MAA8BrlC,EAAA6d,EAAAgqE,mBAAAxiD,EAAA,YAAqC9c,EAAA1K,EAAAgqE,mBAAAxiD,EAAA,WAAoCpiC,EAAA4a,EAAAgqE,mBAAAxiD,EAAA,YAAqC9vB,EAAAsI,EAAAgqE,mBAAAxiD,EAAA,SAAkC7U,EAAA3S,EAAAgqE,mBAAAxiD,EAAA,SAAkCvnB,EAAAD,EAAAgqE,mBAAAxiD,EAAA,OAAgCtT,EAAAlU,EAAAgqE,mBAAAxiD,EAAA,WAAoCvT,EAAAjU,EAAAgqE,mBAAAxiD,EAAA,mBAA4ClI,EAAAtf,EAAAgqE,mBAAAxiD,EAAA,oBAA6CplC,EACpf4d,EAAAgqE,mBAAAxiD,EAAA,WAAkCtlC,EAAA8d,EAAAgqE,mBAAAxiD,EAAA,cAAuCjI,EAAAvf,EAAAgqE,mBAAAxiD,EAAA,WAAoCtnB,EAAAF,EAAAgqE,mBAAAxiD,EAAA,UAAmCxT,EAAAhU,EAAAgqE,mBAAAxiD,EAAA,YAAqCV,EAAA9mB,EAAAgqE,mBAAAxiD,EAAA,aAAsCO,EAAAr3B,SAAAglD,gBAAA,yCAAoE3tB,EAAAx7B,MAAA,EAAUw7B,EAAAv7B,OAAA,EAAWw7B,EAAAD,EAAAntB,WAAA,MAAqBotB,EAAAmiD,UAAA,QAAoBniD,EAAAoiD,SAAA,SAAoB3iD,EAAA,GAAA1sB,GAAAg/C,QAAAhyB,GAAuBN,EAAAuN,aAAA,EAAiBh1B,EAAAuwD,WAAA/oC,GAAgBD,EAAAgyC,iBAAmBhyC,EAAA2yC,gBAAA9yC,GAAqBG,EAAA2yC,gBAAA7yC,GAAqBE,EAAAgzC,0BACtehzC,EAAAuI,QAAA9vB,EAAAguD,WAAuBzmC,EAAAsI,OAAA7vB,EAAAgjE,OAAkBhjE,EAAA65D,WAAA75D,EAAA85D,aAAAz4D,GAA+BrB,EAAAm6D,oBAAA/yC,EAAA,EAAApnB,EAAAmyD,OAAA,QAA2CnyD,EAAAm6D,oBAAA9yC,EAAA,EAAArnB,EAAAmyD,OAAA,QAA2CnyD,EAAA65D,WAAA75D,EAAAi7D,qBAAA75D,GAAuCpB,EAAAwpE,iBAAAlqD,GAAA,EAAAwI,EAAAlG,iBAAAnD,UAAqD8I,EAAAk+C,cAAAzlE,EAAA0lE,UAA4B1lE,EAAA+oE,UAAA9oE,EAAA,GAAiB+nB,EAAAD,EAAA,GAAME,EAAAJ,EAAAwzB,MAAAr7C,EAAAkpE,UAAAl1D,EAAAiU,EAAA3oB,MAAAY,EAAA+nB,EAAA3oB,MAAAqT,EAAAsV,EAAA3oB,MAAAhL,GAAA2zB,YAAAltB,GAAA4nD,KAAA3iD,EAAA6oE,UAAAtpD,EAAA0I,EAAAiI,MAAAlwB,EAAA6oE,UAAA3oE,EAAA+nB,EAAAkI,KAAAnwB,EAAA+oE,UAAA3mF,EAAA,GAAA4lC,EAAAD,EAAA,GAAAE,YAAAltB,GAAA6nD,UAAA5iD,EAAA6oE,UAAA3mF,EAAA+lC,EAAA46B,SAC7S7iD,EAAA+oE,UAAA3mF,EAAA,GAAA4lC,EAAAD,EAAA,KAAA/nB,EAAA+oE,UAAA3mF,EAAA,GAAA4lC,EAAAD,EAAA,EAAkD,QAAAE,GAAA,EAAAC,EAAA5zB,EAAA1P,OAAuBqjC,EAAAC,EAAID,IAAA,CAAK,GAAAw4B,GAAAnsD,EAAA2zB,EAAWw4B,GAAAjvB,gBAAA7P,iBAAAmG,EAAAykB,mBAAAkU,EAAA3+B,aAAuE2+B,EAAAp/C,GAAAo/C,EAAAjvB,gBAAA/S,SAAA,IAAoCnqB,EAAAu8B,KAAAvJ,EAAU,QAAAo5B,MAAAz4B,EAAA,EAAAC,EAAA5zB,EAAA1P,OAA4BqjC,EAAAC,EAAID,IAAA,CAAK,GAAAw4B,GAAAnsD,EAAA2zB,GAAA04B,EAAAF,EAAApsB,QAAwBr0B,GAAA6oE,UAAA/hD,EAAA65B,EAAA1J,WAA2Bj3C,EAAAwpE,iBAAAv1D,GAAA,EAAAwsC,EAAAjvB,gBAAA/S,UAAoDgiC,EAAA3+B,YAAAiH,UAAArB,EAAAC,EAAAC,GAA+B84B,EAAA,GAAA94B,EAAAz6B,EAASuzD,EAAA,GAAA94B,EAAAxmB,EAASq/C,EAAA,EAAI54B,EAAAwzB,KAAAsF,EAAAtF,MAAAoF,EAAAz4B,GAAoBD,IAAA04B,IAAAzgD,EAAA+oE,UAAA3mF,EAAAq+D,GAAA14B,EAAA04B,GAA8B,OAAAE,EAAAvnD,KAAA4G,EAAAipE,UAAA9mF,EAAAw+D,EAAAvnD,IAAA4C,OAAA7O,EAAAwzD,EAAAvnD,IAAA4C,OAAAoF,GACrcpB,EAAAipE,UAAAv+D,EAAAi2C,EAAAvnD,IAAAm3C,OAAApjD,EAAAwzD,EAAAvnD,IAAAm3C,OAAAnvC,KAAApB,EAAAipE,UAAA9mF,EAAA,KAAA6d,EAAAipE,UAAAv+D,EAAA,MAAsF1K,EAAA6oE,UAAA30D,EAAAysC,EAAAtM,SAAyBr0C,EAAAkpE,UAAAv2D,EAAAguC,EAAArhD,MAAAY,EAAAygD,EAAArhD,MAAAqT,EAAAguC,EAAArhD,MAAAhL,GAA6C0L,EAAA6oE,UAAAzjF,EAAAu7D,EAAArvB,UAA0BtxB,EAAAgpE,WAAAtxE,EAAAgpD,GAAkBn5B,EAAA2mC,YAAAvN,EAAA9P,SAAA8P,EAAAnF,cAAAmF,EAAArF,SAAAqF,EAAApF,UAAgEh0B,EAAA6mC,aAAAzN,EAAAzJ,WAA4B3vB,EAAA8mC,cAAA1N,EAAAxJ,YAA8BwJ,EAAAvnD,IAAAhF,EAAA6nE,aAAAtb,EAAAvnD,IAAA,GAAAhF,EAAA6nE,aAAAx0C,EAAA,GAAkDznB,EAAA29D,aAAA39D,EAAAy6D,UAAA,EAAAz6D,EAAAgyD,eAAA,GAAiDzqC,EAAAsI,OAAA7vB,EAAAguD,WAAsB55D,EAAAklE,kBAC3bjvD,OAAAI,OAAA1P,GAAqBsvE,MAAA,SAAAj2E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAAmH,MAArFjvB,SAAA0vB,KAAA,wEAAqF,GAAArY,GAAAw5B,MAAAngC,EAAAE,EAAAnS,EAAAiD,EAAAsS,EAAAib,IAAoC23D,UAAA,EAAAC,WAAA,EAAAC,iBAAAzvE,EAAA4iD,cAAAjtB,WAAA,SAAAt8B,EAAAE,GAA2J,MAAnE5Q,SAAA0vB,KAAA,sDAAmE,GAAArY,GAAAu1B,OAAAl8B,EAAAE,IAA6Bm2E,SAAA1vE,EAAAy1B,OAAAk6C,eAAA,SAAAt2E,EAAAE,GAA2H,MAAvE5Q,SAAA0vB,KAAA,0DAAuE,GAAArY,GAAAu1B,OAAAl8B,EAC/dE,IAAGq2E,mBAAA,SAAAv2E,GAAmH,MAAnF1Q,SAAA0vB,KAAA,sEAAmF,GAAArY,GAAA6iD,eAAAxpD,IAAmCw2E,sBAAA,SAAAx2E,GAAyH,MAAtF1Q,SAAA0vB,KAAA,yEAAsF,GAAArY,GAAA6iD,eAAAxpD,IAAmCy2E,uBAAA,SAAAz2E,GAA2H,MAAvF1Q,SAAA0vB,KAAA,0EAAuF,GAAArY,GAAA6iD,eAAAxpD,IAAmC02E,OAAA,SAAA12E,EAAAE,EAAAnS,GACnd,MAD2euB,SAAA0vB,KAAA,6DAC3e,GAAArY,GAAA8G,QAAAzN,EAAAE,EAAAnS,MAAmCkoB,OAAAI,OAAA1P,EAAAkpB,KAAAnuB,WAAoCg0B,MAAA,WAAsF,MAArEpmC,SAAA0vB,KAAA,wDAAqEhlB,KAAAk2B,WAAsBymD,kBAAA,SAAA32E,GAAsH,MAAvF1Q,SAAA0vB,KAAA,0EAAuFhlB,KAAAw2B,cAAAxwB,MACzSiW,OAAAI,OAAA1P,EAAAkqB,KAAAnvB,WAAoCg0B,MAAA,WAAsF,MAArEpmC,SAAA0vB,KAAA,wDAAqEhlB,KAAAk2B,WAAsBymD,kBAAA,SAAA32E,GAAsH,MAAvF1Q,SAAA0vB,KAAA,0EAAuFhlB,KAAAw2B,cAAAxwB,IAA6B42E,qBAAA,SAAA52E,GAA+H,MAA7F1Q,SAAA0vB,KAAA,gFAA6FhlB,KAAAq3B,iBAAArxB,MAClaiW,OAAAI,OAAA1P,EAAAgrB,QAAAjwB,WAAuCm1E,gBAAA,SAAA72E,GAA2I,MAA/G1Q,SAAA0vB,KAAA,kGAA+Ghf,EAAAmtB,aAAAnzB,OAA4B88E,qBAAA,SAAA92E,GAA4J,MAA1H1Q,SAAA0vB,KAAA,6GAA0HhlB,KAAA+3B,oBAAA/xB,MAC1WiW,OAAAI,OAAA1P,EAAA2mB,QAAA5rB,WAAuCq1E,gBAAA,SAAA/2E,GAAmH,MAAvF1Q,SAAA0vB,KAAA,0EAAuFhlB,KAAA24B,aAAA3yB,IAA4Bo+B,0BAAA,SAAAp+B,GAAsJ,MAA/G1Q,SAAA0vB,KAAA,kGAA+GhlB,KAAAi1B,2BAAAjvB,IAA0C62E,gBAAA,SAAA72E,GACtX,MADmZ1Q,SAAA0vB,KAAA,sIACnZhf,EAAAqtB,gBAAArzB,OAA+Bg9E,gBAAA,SAAAh3E,GAA4I,MAA/G1Q,SAAA0vB,KAAA,kGAA+Ghf,EAAAotB,aAAApzB,OAA4B88E,qBAAA,SAAA92E,GAA4J,MAA1H1Q,SAAA0vB,KAAA,6GAA0HhlB,KAAA+3B,oBAAA/xB,IAAmCi3E,WAAA,SAAAj3E,GAAwB1Q,QAAA0vB,KAAA,oGAC9Zhf,EAAA4tB,mBAAA5zB,OAA2Bk9E,YAAA,SAAAl3E,GAAoI,MAA3G1Q,SAAA0vB,KAAA,8FAA2Ghf,EAAAotB,aAAApzB,OAA4ByU,UAAA,SAAAzO,GAAuB1Q,QAAAC,MAAA,kDAA+D+uC,QAAA,SAAAt+B,GAAqB1Q,QAAAC,MAAA,gDAA6DgvC,QAAA,SAAAv+B,GAAqB1Q,QAAAC,MAAA,gDAA6DivC,QAAA,SAAAx+B,GAAqB1Q,QAAAC,MAAA,gDAC1c4nF,aAAA,SAAAn3E,EAAAE,GAA2B5Q,QAAAC,MAAA,uDAAqE0mB,OAAAI,OAAA1P,EAAA8O,MAAA/T,WAAqC01E,mBAAA,SAAAp3E,GAAyH,MAA1F1Q,SAAA0vB,KAAA,6EAA0FhlB,KAAA08B,eAAA12B,MAAiCiW,OAAAI,OAAA1P,EAAA+iB,WAAAhoB,WAA0Cm1E,gBAAA,SAAA72E,GAA4J,MAAhI1Q,SAAA0vB,KAAA,mHAAgIhf,EAAAktB,gBAAAlzB,SACreic,OAAAI,OAAA1P,EAAAquB,IAAAtzB,WAAmCi1E,kBAAA,SAAA32E,GAAoH,MAAtF1Q,SAAA0vB,KAAA,yEAAsFhlB,KAAAw2B,cAAAxwB,IAA6Bq3E,oBAAA,SAAAr3E,GAA2H,MAA1F1Q,SAAA0vB,KAAA,6EAA0FhlB,KAAAs3B,gBAAAtxB,IAA+B42E,qBAAA,SAAA52E,GAA8H,MAA5F1Q,SAAA0vB,KAAA,+EAA4FhlB,KAAAq3B,iBAAArxB,MAC5ciW,OAAAI,OAAA1P,EAAA8G,QAAA/L,WAAuC41E,2BAAA,WAAsChoF,QAAAC,MAAA,8GAA2HgoF,uBAAA,WAAmCjoF,QAAAC,MAAA,sGAAmHioF,sBAAA,SAAAx3E,GAAyI,MAAtG1Q,SAAA0vB,KAAA,yFAAsGhlB,KAAAo0B,sBAAApuB,IACvey3E,mBAAA,SAAAz3E,GAA+H,MAAhG1Q,SAAA0vB,KAAA;AAAgGhlB,KAAAs0B,mBAAAtuB,IAAkC03E,oBAAA,SAAA13E,EAAAE,GAAqI,MAAlG5Q,SAAA0vB,KAAA,qFAAkGhlB,KAAAq0B,oBAAAnuB,EAAAF,MACtSiW,OAAAI,OAAA1P,EAAAsC,SAAAvH,WAAwCi2E,eAAA,SAAA33E,GAAqH,MAA1F1Q,SAAA0vB,KAAA,6EAA0FhlB,KAAAwS,gBAAAxM,IAA+B43E,YAAA,SAAA53E,GAAyB1Q,QAAA0vB,KAAA,8EAA0FvQ,UAAA,SAAAzO,EAAAE,GAAwI,MAA/G5Q,SAAA0vB,KAAA,kGAA+GhlB,KAAAykC,gBAAAv+B,EAAAF,MACvbiW,OAAAomB,iBAAA11B,EAAAsC,SAAAvH,WAAkDm2E,YAAY1hE,IAAA,WAAmF,MAApE7mB,SAAA0vB,KAAA,uDAAoEhlB,KAAAkjC,SAAAhT,OAA2B7e,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,uDAAoEhlB,KAAAkjC,SAAAhT,MAAAlqB,IAAuB83E,eAAgB3hE,IAAA,WAAe7mB,QAAA0vB,KAAA,kGAA8G3T,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,qGACtb/I,OAAAomB,iBAAA11B,EAAAs1B,IAAAv6B,WAA6C0uC,SAASj6B,IAAA,WAAgF,MAAjE7mB,SAAA0vB,KAAA,oDAAiEhlB,KAAAisD,WAAuBt/C,EAAAwN,kBAAAzS,UAAAq2E,QAAA,SAAA/3E,EAAAE,GAAwD5Q,QAAA0vB,KAAA,+GAA4H,SAAA9e,IAAAlG,KAAAu/C,UAAAr5C,GAA+BlG,KAAAy/C,eAAAz5C,IAChXiW,OAAAomB,iBAAA11B,EAAAuzC,MAAAx4C,WAA+Cs2E,YAAY3sE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,gDAA4Di5D,iBAAkB5sE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,4DAAyEhlB,KAAA0gD,OAAA7yC,OAAAmE,IAAAhM,IAA0Bk4E,kBAAmB7sE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,8DAA2EhlB,KAAA0gD,OAAA7yC,OAAA7P,KAAAgI,IAA2Bm4E,mBAAoB9sE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,gEACzbhlB,KAAA0gD,OAAA7yC,OAAA5P,MAAA+H,IAA4Bo4E,iBAAkB/sE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,4DAAyEhlB,KAAA0gD,OAAA7yC,OAAA9P,IAAAiI,IAA0Bq4E,oBAAqBhtE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,kEAA+EhlB,KAAA0gD,OAAA7yC,OAAA3P,OAAA8H,IAA6Bs4E,kBAAmBjtE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,8DAA2EhlB,KAAA0gD,OAAA7yC,OAAAi0B,KAAA97B,IAA2Bu4E,iBAAkBltE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,4DAC7dhlB,KAAA0gD,OAAA7yC,OAAAk0B,IAAA/7B,IAA0Bw4E,qBAAsBntE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,oHAAgI61C,YAAaxpD,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,iDAA8DhlB,KAAA0gD,OAAAF,KAAAx6C,IAAoBy4E,gBAAiBptE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,oDAAgE05D,gBAAiBrtE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,8DACjbhlB,KAAA0gD,OAAAD,QAAAtiD,MAAA6H,IAA6B24E,iBAAkBttE,IAAA,SAAArL,GAAgB1Q,QAAA0vB,KAAA,gEAA6EhlB,KAAA0gD,OAAAD,QAAAriD,OAAA4H,MAAiCiW,OAAAomB,iBAAA11B,EAAA45B,gBAAA7+B,WAAyDlR,QAAQ2lB,IAAA,WAAsG,MAAvF7mB,SAAA0vB,KAAA,0EAAuFhlB,KAAA6yB,MAAAr8B,WACpVylB,OAAAI,OAAA1P,EAAAwqB,eAAAzvB,WAA8Ck3E,SAAA,SAAA54E,GAAqB1Q,QAAA0vB,KAAA,sEAAmFhlB,KAAA+rC,SAAA/lC,IAAiB64E,YAAA,SAAA74E,EAAAE,EAAAnS,GAA6B,SAAAA,GAAAuB,QAAA0vB,KAAA,wEAAiG1vB,QAAA0vB,KAAA,4DAAyEhlB,KAAAmsC,SAAAnmC,EAAAE,IAAmB44E,eAAA,WAA2BxpF,QAAA0vB,KAAA,kEAA+EhlB,KAAAosC,eAC3exB,gBAAA,WAA2Bt1C,QAAA0vB,KAAA,+DAA2E+5D,eAAA,WAA2BzpF,QAAA0vB,KAAA,gEAA6E/I,OAAAomB,iBAAA11B,EAAAwqB,eAAAzvB,WAAwD0gD,WAAWjsC,IAAA,WAA8F,MAA/E7mB,SAAAC,MAAA,iEAA+EyK,KAAAqqC,SAAoBge,SAAUlsC,IAAA,WAA2F,MAA5E7mB,SAAA0vB,KAAA,+DAA4EhlB,KAAAqqC,WACxepuB,OAAAomB,iBAAA11B,EAAAmgD,SAAAplD,WAAkDs3E,YAAY7iE,IAAA,WAAe7mB,QAAA0vB,KAAA,SAAAhlB,KAAA7E,KAAA,oCAAmEkW,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,SAAAhlB,KAAA7E,KAAA,qCAAoE8jF,SAAU9iE,IAAA,WAA+E,MAAhE7mB,SAAA0vB,KAAA,SAAAhlB,KAAA7E,KAAA,gCAAgE,GAAAwR,GAAA0X,UAC9TpI,OAAAomB,iBAAA11B,EAAAmiD,kBAAApnD,WAA2Dw3E,OAAO/iE,IAAA,WAAyH,MAA1G7mB,SAAA0vB,KAAA,8FAA0G,GAAS3T,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,gGACrN/I,OAAAomB,iBAAA11B,EAAA8iD,eAAA/nD,WAAwDkoD,aAAazzC,IAAA,WAA6G,MAA9F7mB,SAAA0vB,KAAA,iFAA8FhlB,KAAA2vD,WAAAC,aAAmCv+C,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,kFAA+FhlB,KAAA2vD,WAAAC,YAAA5pD,MACrU2G,EAAAq0B,gBAAAt5B,UAAAuU,OAAAI,OAAAJ,OAAA+jB,QAA6DnrC,YAAA8X,EAAAq0B,gBAAAllC,MAAA,SAAAkK,GAAoD1Q,QAAA0vB,KAAA,uGAAoH/I,OAAAI,OAAArW,EAAAhG,SAAuB2M,EAAAq0B,gBAAAt5B,WAC5PuU,OAAAI,OAAA1P,EAAAmN,cAAApS,WAA6Cy3E,sBAAA,WAA8I,MAA7G7pF,SAAA0vB,KAAA,gGAA6GhlB,KAAA2vD,WAAAxzC,IAAA,sBAAgDijE,0BAAA,WAA4J,MAAtH9pF,SAAA0vB,KAAA,yGAAsHhlB,KAAA2vD,WAAAxzC,IAAA,2BAAqDkjE,4BAAA,WAC5b,MADoe/pF,SAAA0vB,KAAA,6GACpehlB,KAAA2vD,WAAAxzC,IAAA,6BAAuDmjE,8BAAA,WAA2K,MAAjIhqF,SAAA0vB,KAAA,oHAAiIhlB,KAAA2vD,WAAAxzC,IAAA,kCAA4DojE,+BAAA,WAA8K,MAAnIjqF,SAAA0vB,KAAA,sHAAmIhlB,KAAA2vD,WAAAxzC,IAAA,mCAC5cqjE,oBAAA,WAAyI,MAA1GlqF,SAAA0vB,KAAA,6FAA0GhlB,KAAA2vD,WAAAxzC,IAAA,qBAA+C81D,uBAAA,WAAmC,MAAAjyE,MAAAopE,aAAA2H,gBAAwC0O,wBAAA,WAAwJ,MAApHnqF,SAAA0vB,KAAA,uGAAoHhlB,KAAA2vD,WAAAxzC,IAAA,2BAAqDujE,kBAAA,SAAA15E,GAA+B1Q,QAAA0vB,KAAA,uEAC/ehlB,KAAAwqE,eAAAxkE,IAAuB25E,aAAA,WAAyBrqF,QAAA0vB,KAAA,2DAAuE46D,aAAA,WAAyBtqF,QAAA0vB,KAAA,2DAAuE66D,cAAA,WAA0BvqF,QAAA0vB,KAAA,4DAAwE86D,gBAAA,WAA4BxqF,QAAA0vB,KAAA,gEACrV/I,OAAAomB,iBAAA11B,EAAAmN,cAAApS,WAAuD2qE,kBAAkBl2D,IAAA,WAAe,MAAAnc,MAAAwpE,UAAA76B,SAA8Bt9B,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,qEAAkFhlB,KAAAwpE,UAAA76B,QAAA3oC,IAA0B+rE,eAAgB51D,IAAA,WAAe,MAAAnc,MAAAwpE,UAAAruE,MAA2BkW,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,+DAA4EhlB,KAAAwpE,UAAAruE,KAAA6K,IAAuB+5E,mBAAoB5jE,IAAA,WAAe,MAAAnc,MAAAwpE,UAAAqN,UAA+BxlE,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,uEACpfhlB,KAAAwpE,UAAAqN,SAAA7wE,MAA8BiW,OAAAomB,iBAAA11B,EAAA48D,eAAA7hE,WAAwDmvE,UAAU16D,IAAA,WAAe,MAAAnc,MAAA00E,mBAAA/nE,EAAAmQ,cAAAnQ,EAAAkQ,cAAsExL,IAAA,SAAArL,GAAiBA,MAAA2G,EAAAkQ,aAAyBvnB,QAAA0vB,KAAA,0FAAAhf,EAAA,KAA8GhG,KAAA00E,mBAAA1uE,MAC7UiW,OAAAomB,iBAAA11B,EAAA81D,kBAAA/6D,WAA2D06C,OAAOjmC,IAAA,WAAsF,MAAvE7mB,SAAA0vB,KAAA,0DAAuEhlB,KAAA2+C,QAAAyD,OAA0B/wC,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,0DAAuEhlB,KAAA2+C,QAAAyD,MAAAp8C,IAAsBq8C,OAAQlmC,IAAA,WAAsF,MAAvE7mB,SAAA0vB,KAAA,0DAAuEhlB,KAAA2+C,QAAA0D,OAA0BhxC,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,0DAAuEhlB,KAAA2+C,QAAA0D,MAChfr8C,IAAGw4C,WAAYriC,IAAA,WAA8F,MAA/E7mB,SAAA0vB,KAAA,kEAA+EhlB,KAAA2+C,QAAAH,WAA8BntC,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,kEAA+EhlB,KAAA2+C,QAAAH,UAAAx4C,IAA0By4C,WAAYtiC,IAAA,WAA8F,MAA/E7mB,SAAA0vB,KAAA,kEAA+EhlB,KAAA2+C,QAAAF,WAA8BptC,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,kEAA+EhlB,KAAA2+C,QAAAF,UAC7ez4C,IAAGs8C,YAAanmC,IAAA,WAAgG,MAAjF7mB,SAAA0vB,KAAA,oEAAiFhlB,KAAA2+C,QAAA2D,YAA+BjxC,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,oEAAiFhlB,KAAA2+C,QAAA2D,WAAAt8C,IAA2B4H,QAASuO,IAAA,WAAwF,MAAzE7mB,SAAA0vB,KAAA,4DAAyEhlB,KAAA2+C,QAAA/wC,QAA2ByD,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,4DAAyEhlB,KAAA2+C,QAAA/wC,OACle5H,IAAGm8C,QAAShmC,IAAA,WAAwF,MAAzE7mB,SAAA0vB,KAAA,4DAAyEhlB,KAAA2+C,QAAAwD,QAA2B9wC,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,4DAAyEhlB,KAAA2+C,QAAAwD,OAAAn8C,IAAuBu4C,QAASpiC,IAAA,WAAwF,MAAzE7mB,SAAA0vB,KAAA,4DAAyEhlB,KAAA2+C,QAAAJ,QAA2BltC,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,4DAAyEhlB,KAAA2+C,QAAAJ,OAAAv4C,IAAuB7K,MAAOghB,IAAA,WACpe,MADmf7mB,SAAA0vB,KAAA,wDACnfhlB,KAAA2+C,QAAAxjD,MAAyBkW,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,wDAAqEhlB,KAAA2+C,QAAAxjD,KAAA6K,IAAqB44C,iBAAkBziC,IAAA,WAA0G,MAA3F7mB,SAAA0vB,KAAA,8EAA2FhlB,KAAA2+C,QAAAC,iBAAoCvtC,IAAA,SAAArL,GAAiB1Q,QAAA0vB,KAAA,8EAA2FhlB,KAAA2+C,QAAAC,gBAAA54C,MAChZiW,OAAAI,OAAA1P,EAAAwtC,MAAAzyC,WAAqClT,KAAA,SAAAwR,GAAiB1Q,QAAA0vB,KAAA,wEAAsF,IAAA9e,GAAAlG,IAAuE,QAA5D,GAAA2M,GAAAq0C,aAAAxsD,KAAAwR,EAAA,SAAAA,GAA2CE,EAAAm1C,UAAAr1C,KAAiBhG,QAAeic,OAAAI,OAAA1P,EAAAuvC,cAAAx0C,WAA6Cs4E,QAAA,SAAAh6E,GAAgG,MAA5E1Q,SAAA0vB,KAAA,+DAA4EhlB,KAAAu8C,sBAC/W5vC,EAAAszE,eAAqBn1C,MAAA,SAAA9kC,EAAAE,EAAAnS,GAAsBuB,QAAA0vB,KAAA,kIAAgJ,IAAA1I,EAAMpW,aAAAyG,GAAAyE,OAAAlL,EAAAq9B,kBAAAr9B,EAAAs/B,eAAAlpB,EAAApW,EAAAo9B,OAAAp9B,IAAAgxB,UAAwFlxB,EAAA8kC,MAAA5kC,EAAAoW,EAAAvoB,IAAeiH,OAAA,SAAAgL,GAA8H,MAA1G1Q,SAAA0vB,KAAA,6FAA0Ghf,EAAAhL,WACta2R,EAAAuzE,YAAkBr+B,YAAA,OAAAs+B,YAAA,SAAAn6E,EAAAE,EAAAnS,EAAAuoB,GAAiDhnB,QAAA0vB,KAAA,uFAAqG,IAAAhuB,GAAA,GAAA2V,GAAA41C,aAAyG,OAA3EvrD,GAAAkrD,eAAAliD,KAAA6hD,aAAmC77C,EAAAhP,EAAAxC,KAAAwR,EAAAjS,EAAA,OAAAuoB,GAAuBpW,IAAAF,EAAA4lD,QAAA1lD,GAAiBF,GAASo6E,gBAAA,SAAAp6E,EAAAE,EAAAnS,EAAAuoB,GAAmChnB,QAAA0vB,KAAA,+FAA6G,IAAAhuB,GAAA,GAAA2V,GAAAw/C,iBAC7Y,OAD+an1D,GAAAkrD,eAAAliD,KAAA6hD,aAAmC77C,EAAAhP,EAAAxC,KAAAwR,EAC/ejS,EAAA,OAAAuoB,GAAYpW,IAAAF,EAAA4lD,QAAA1lD,GAAiBF,GAASq6E,sBAAA,WAAkC/qF,QAAAC,MAAA,0FAAuG+qF,0BAAA,WAAsChrF,QAAAC,MAAA,+FACrNoX,EAAA4zE,UAAA,WAA2BjrF,QAAAC,MAAA,0EAAwFyK,KAAAwgF,cAAA,SAAAx6E,EAAAE,GAAiC5Q,QAAA0vB,KAAA,8DAA2Ehf,EAAA+Q,QAAA7Q,IAAclG,KAAAygF,gBAAA,SAAAz6E,EAAAE,GAAmC5Q,QAAA0vB,KAAA,kEAA+Ehf,EAAA2tB,UAAAztB,IAAgBlG,KAAA0gF,WAAA,SAAA16E,EAAAE,GAA8B5Q,QAAAC,MAAA,sEAC7YoX,EAAAg0E,eAAA,WAAgCrrF,QAAAC,MAAA,mFAAiGyK,KAAAga,WAAA1X,SAAAglD,gBAAA,yCAAkFtnD,KAAAwhD,MAAA,aAAwBxhD,KAAAwR,OAAA,aAAyBxR,KAAA+Z,cAAA,aAAgC/Z,KAAAyN,QAAA,cACpSd,EAAAi0E,YAAkBC,uBAAA,SAAA76E,EAAAE,EAAAnS,EAAAuoB,GAAyC,YAAAtW,IAAAjS,EAAAmS,GAAA,EAAAF,GAAAsW,EAAAvoB,IAA+B+sF,mBAAA,SAAA96E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAwC,SAAAkP,GAAA,EAAAF,IAAA,EAAAA,GAAA,EAAAjS,GAAA,EAAAiS,IAAA,EAAAA,GAAA,EAAAA,EAAAjS,GAAA,EAAAiS,GAAA,EAAAA,EAAAsW,GAAA,EAAAtW,GAAA,EAAAA,IAAAsW,EAAA,EAAAtW,IAAAhP,GAA+E+pF,cAAA,SAAA/6E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAmC,SAAAgP,IAAA,EAAAA,GAAA,EAAAA,IAAA,EAAAA,EAAA,OAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAA,EAAAA,IAAwDg7E,YAAA,SAAAh7E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAiCgP,EAAA,IAAAjS,EAAAiS,GAAWsW,EAAA,IAAAA,EAAApW,EAAW,IAAAoD,GAAAtS,GAAU,UAAAkP,EAAA,EAAAnS,EAAAiS,EAAAsW,GAAAtlB,EAAAsS,MAAApD,EAAA,EAAAnS,EAAA,EAAAiS,EAAAsW,GAAAhT,EAAAtD,EAAAhP,EAAAkP,IAC7WyG,EAAAs0E,YAAkBC,0BAAA,SAAAl7E,EAAAE,GAAwC,OAAAnS,GAAA,GAAA4Y,GAAAq/C,MAAA1vC,EAAA,EAAAtlB,EAAAkP,EAAA1P,OAAyC8lB,EAAAtlB,EAAIslB,IAAAvoB,EAAAob,IAAA,GAAAxC,GAAAyE,KAAApL,EAAAE,EAAAoW,IAAkC,OAAAvoB,IAASotF,OAAA,SAAAn7E,EAAAE,EAAAnS,GAAwBiS,EAAAg+B,YAAA99B,EAAAwtB,aAA6BxtB,EAAArD,OAAAmD,GAAYjS,EAAAob,IAAAnJ,IAASo7E,OAAA,SAAAp7E,EAAAE,EAAAnS,GAAwB,GAAAuoB,GAAA,GAAA3P,GAAA2mB,OAAwBhX,GAAAmX,WAAA1/B,EAAA2/B,aAA4B1tB,EAAAg+B,YAAA1nB,GAAiBpW,EAAArD,OAAAmD,GAAYjS,EAAAob,IAAAnJ,KACrU2G,EAAA00E,YAAkB5iD,KAAA,SAAAz4B,GAAiB,OAAAE,GAAAF,EAAAxP,OAAAzC,EAAA,EAAAuoB,EAAApW,EAAA,EAAAlP,EAAA,EAAiCA,EAAAkP,EAAIoW,EAAAtlB,IAAAjD,GAAAiS,EAAAsW,GAAAvd,EAAAiH,EAAAhP,GAAAgc,EAAAhN,EAAAhP,GAAA+H,EAAAiH,EAAAsW,GAAAtJ,CAAqC,UAAAjf,GAAWutF,YAAA,WAAwB,gBAAAt7E,EAAAE,GAAqB,GAAAnS,GAAAiS,EAAAxP,MAAe,MAAAzC,EAAA,WAAmB,IAAAwwB,GAAA1S,EAAAiU,EAAAxJ,KAAAtlB,KAAAsS,IAAyB,MAAAqD,EAAA00E,WAAA5iD,KAAAz4B,GAAA,IAAA6L,EAAA,EAAsCA,EAAA9d,EAAI8d,IAAA7a,EAAA6a,SAAW,KAAAA,EAAA,EAAaA,EAAA9d,EAAI8d,IAAA7a,EAAA6a,GAAA9d,EAAA,EAAA8d,CAAe,IAAAgU,GAAA,EAAA9xB,CAAU,KAAA8d,EAAA9d,EAAA,EAAU,EAAAA,GAAI,CAAE,MAAA8xB,IAAA,CAAWvwB,QAAA0vB,KAAA,oEAAkF,OAAMT,EAAA1S,EAAI9d,GAAAwwB,MAAA,GAAY1S,EAAA0S,EAAA,EAAMxwB,GAAA8d,MAAA,GAAYiU,EAAAjU,EAAA,EAAM9d,GAAA+xB,MAAA,EAAY,IAAAoL,EAAMlrB,GAAA,CAAG,GAAAhS,GAC/ek9B,EAAA,OAAAp9B,EAAA,OAAAq9B,EAAA,OAAArf,EAAA,OAAA8T,EAAA,OAAA8S,EAAA,OAAAM,EAAA,OAAAC,EAAA,OAAAjlC,EAAAgS,EAAAhP,EAAAutB,IAAAxlB,EAAAjL,EAAAkS,EAAAhP,EAAAutB,IAAAvR,EAAAme,EAAAnrB,EAAAhP,EAAA6a,IAAA9S,EAAA+S,EAAA9L,EAAAhP,EAAA6a,IAAAmB,EAAA4S,EAAA5f,EAAAhP,EAAA8uB,IAAA/mB,EAAA25B,EAAA1yB,EAAAhP,EAAA8uB,IAAA9S,CAAgJ,IAAA6I,OAAAC,SAAAqV,EAAAn9B,IAAA0kC,EAAA5kC,IAAAge,EAAAhe,IAAA8xB,EAAA5xB,GAAAk9B,GAAA,MAA+C,CAAK,GAAAgI,GAAA,OAAAtnB,EAAA,OAAAunB,EAAA,OAAAlmB,EAAA,OAAAD,EAAA,OAAAomB,EAAA,OAAAC,EAAA,OAAAC,EAAA,OAAAC,EAAA,OAAAC,EAAA,OAAAD,EAAAD,EAAAD,EAAAJ,EAAAD,EAAA,OAAAE,EAAAtT,EAAAuL,EAAAvf,EAAA8mB,EAAA5mB,EAAAqnB,EAAAnlC,EAAA4xB,EAAA3S,EAAAnf,EAAA4kC,EAAA1lB,EAAAme,EAAAn9B,EAAAolC,EAAAtnB,EAAAhe,CAAmJ,KAAAo9B,EAAA,EAAQA,EAAAn9B,EAAIm9B,IAAA,GAAA8H,EAAAhzB,EAAAhP,EAAAk6B,IAAAnyB,EAAAk6B,EAAAjzB,EAAAhP,EAAAk6B,IAAAle,IAAAgmB,IAAAhlC,GAAAilC,IAAAnlC,GAAAklC,IAAA7H,GAAA8H,IAAAnnB,GAAAknB,IAAApT,GAAAqT,IAAAP,KAAAW,EAAAL,EAAAhlC,EAAAslC,EAAAL,EAAAnlC,EAAAylC,EAAAP,EAAA7H,EAAAqI,EAAAP,EAAAnnB,EAAAknB,GAAApT,EAAAqT,GAAAP,EAAAa,EAAAL,EAAAM,EAAA5nB,EAAA2nB,EAAAF,EAAArmB,EAAAsmB,EAAAF,EAAAC,EAAAC,EAAAH,EAAAF,EAAAhmB,EAAA+lB,EAAAO,IAAA1d,OAAAC,SACnWwd,IAAAzd,OAAAC,SAAAud,IAAAxd,OAAAC,SAAA,CAAyCoV,GAAA,CAAK,MAAAlrB,GAAQkrB,GAAA,GAAM,GAAAA,EAAA,CAAqE,IAA/D5U,EAAAzc,MAAAmG,EAAAhP,EAAAutB,IAAAve,EAAAhP,EAAA6a,IAAA7L,EAAAhP,EAAA8uB,MAAkCxc,EAAAzJ,MAAA7I,EAAAutB,GAAAvtB,EAAA6a,GAAA7a,EAAA8uB,KAAyBvB,EAAA1S,EAAIiU,EAAAjU,EAAA,EAAUiU,EAAA/xB,EAAIwwB,IAAAuB,IAAA9uB,EAAAutB,GAAAvtB,EAAA8uB,EAAkB/xB,KAAI8xB,EAAA,EAAA9xB,GAAO,MAAAmS,GAAAoD,EAAAgT,MAAcilE,iBAAA,SAAAv7E,EAAAE,GAAkC,QAAAnS,GAAAiS,EAAAE,EAAAnS,GAAkB,MAAAiS,GAAAjH,IAAAmH,EAAAnH,EAAAiH,EAAAjH,EAAAmH,EAAAnH,EAAAiH,EAAAjH,GAAAhL,EAAAgL,GAAAhL,EAAAgL,GAAAmH,EAAAnH,EAAAmH,EAAAnH,GAAAhL,EAAAgL,GAAAhL,EAAAgL,GAAAiH,EAAAjH,EAAAiH,EAAAgN,EAAA9M,EAAA8M,EAAAhN,EAAAgN,GAAAjf,EAAAif,GAAAjf,EAAAif,GAAA9M,EAAA8M,EAAA9M,EAAA8M,GAAAjf,EAAAif,GAAAjf,EAAAif,GAAAhN,EAAAgN,EAA6G,QAAAsJ,GAAAtW,EAAAE,EAAAoW,EAAAtlB,EAAAsS,GAAsB,GAAAib,GAAAre,EAAAnH,EAAAiH,EAAAjH,EAAA8S,EAAA3L,EAAA8M,EAAAhN,EAAAgN,EAAA8S,EAAA9uB,EAAA+H,EAAAud,EAAAvd,EAAA8mB,EAAA7uB,EAAAgc,EAAAsJ,EAAAtJ,EAAAke,EAAAlrB,EAAAjH,EAAAud,EAAAvd,EAAA/K,EAAAgS,EAAAgN,EAAAsJ,EAAAtJ,IAAAnB,EAAAiU,EAAAvB,EAAAsB,EAAAuT,EAAAvnB,EAAAqf,EAAA3M,EAAAvwB,CAAoF,IAAAwL,KAAA+wB,IAAAvd,GAAA6I,OAAAC,QAAA,CAA+B,KAAA9I,EAAA,CAAQ,KAAAomB,KAC5epmB,EAAA,QAAqB,IAAV8S,EAAAD,EAAAqL,EAAApL,EAAA9xB,EAAU,EAAA8xB,KAAA9S,EAAA,aAAqB,CAAK,KAAAomB,KAAApmB,EAAA,QAA+B,IAAV8S,EAAAD,EAAAqL,EAAApL,EAAA9xB,EAAU,EAAA8xB,KAAA9S,EAAA,SAAqB,WAAA8S,GAAAxc,GAAA,IAAA8vB,OAAApmB,GAAAhN,MAAuC8f,IAAA9S,GAAA1J,GAAA,IAAA8vB,OAAApmB,GAAA9M,MAAuC,IAAAkzB,GAAA9c,GAAmB8c,IAAApmB,GAAAhc,IAAmBsS,EAAAwc,EAAA9S,IAAcjU,EAAAiH,EAAAjH,EAAAuK,EAAAib,EAAAvR,EAAAhN,EAAAgN,EAAA1J,EAAAuI,KAAsB,WAAAunB,GAAAvT,EAAAqL,IAAApL,EAAA9xB,MAA6B6d,EAAA,IAAA0S,GAAA,IAAA1S,EAAeiU,EAAA,IAAAA,GAAA,IAAAD,EAAehU,GAAAiU,EAAA9f,EAAAjH,IAAAud,EAAAvd,GAAAiH,EAAAgN,IAAAsJ,EAAAtJ,MAAAhN,GAA2C6L,EAAA9d,EAAAuoB,EAAAtlB,EAAAgP,UAA4B8f,EAAA/xB,EAAAiS,EAAAE,EAAAoW,WAA4B,IAAAiI,GAAAve,EAAAjH,EAAAmH,EAAAnH,GAAAwlB,EAAAve,EAAA8f,EAAA9f,EAAAjH,EAAA8S,EAAA3L,EAAAF,EAAAE,EAAAnH,IAAAwlB,EAAAre,EAAA4f,EAAA5f,EAAAnH,EAAA8S,EAAA7L,MAAAjH,GAAAud,EAAAvd,EAAA/H,EAAA+H,GAAAmH,EAAAoW,EAAAtJ,EAAAsJ,EAAAvd,EAAA8mB,EAAA7uB,EAAAslB,EAAAtlB,EAAA+H,IAAAmH,EACzZlP,EAAAgc,EAAAhc,EAAA+H,EAAA8mB,EAAAvJ,MAAAvd,KAAAiH,EAAAgN,EAAA9M,EAAA8M,GAAAuR,EAAAve,EAAA8f,EAAA9f,EAAAgN,EAAAnB,EAAA3L,EAAAF,EAAAE,EAAA8M,IAAAuR,EAAAre,EAAA4f,EAAA5f,EAAA8M,EAAAnB,EAAA7L,MAAAgN,GAAAsJ,EAAAtJ,EAAAhc,EAAAgc,GAAA9M,EAAAoW,EAAAtJ,EAAAsJ,EAAAtJ,EAAA6S,EAAA7uB,EAAAslB,EAAAtlB,EAAAgc,IAAA9M,EAAAlP,EAAAgc,EAAAhc,EAAAgc,EAAA6S,EAAAvJ,MAAAtJ,IAA8H8S,GAAA9S,EAAAhN,EAAAgN,KAAAhN,IAAAgN,EAAA1J,MAAApD,GAAAF,GAAAsW,GAAApW,EAAA2L,IAAA3L,EAAA2f,GAAAC,EAAAxJ,KAAAwJ,IAAAxJ,EAAAhT,MAAAib,GAAAve,GAAAsW,GAAAiI,EAAA1S,IAAA0S,EAAAsB,KAA0F,QAAA7uB,GAAAgP,EAAAE,EAAAnS,EAAAuoB,GAAoB,GAAAtlB,GAAAkP,EAAAnH,EAAAiH,EAAAjH,EAAAuK,EAAApD,EAAA8M,EAAAhN,EAAAgN,CAAwB9M,GAAAnS,EAAAgL,EAAAiH,EAAAjH,EAAUhL,IAAAif,EAAAhN,EAAAgN,CAAU,IAAAuR,GAAAjI,EAAAvd,EAAAiH,EAAAjH,CAA4C,OAA9Bud,KAAAtJ,EAAAhN,EAAAgN,EAAUhN,EAAAhP,EAAAjD,EAAAuV,EAAApD,EAAUlP,IAAAslB,EAAAhT,EAAAib,EAAU/kB,KAAA+wB,IAAAvqB,GAAA6V,OAAAC,SAAA5V,EAAAqe,EAAAxwB,EAAAuoB,EAAApW,EAAA,EAAAF,EAAA,GAAAhP,GAAA,GAAAkP,EAAA,GAAAlP,GAAA,GAAAkP,GAAA,EAAAlP,EAA4E,GAAAsS,GAAAib,EAAA1S,EAAAiU,EAAAD,EAAAqL,IAAoC,KAAjBrf,EAAA7L,EAAA2E,SAAarB,EAAA,EAAIib,EAAAre,EAAA1P,OAAe8S,EAAAib,EAAIjb,IAAAW,MAAAvC,UAAA7H,KAAA/D,MAAA+V,EAAA3L,EAAAoD,GAA2C,KAAJA,EAAA,EAAIib,EAClf1S,EAAArb,OAAS8S,EAAAib,EAAIjb,IAAAuc,EAAAhU,EAAAvI,GAAAvK,EAAA,IAAA8S,EAAAvI,GAAA0J,EAAA,SAAAke,EAAArL,IAAAvwB,QAAA0vB,KAAA,+BAAAa,GAAAqL,EAAArL,GAAAvc,CAA6FA,GAAA,SAAAtD,EAAAE,GAAgB,QAAAnS,GAAAiS,EAAAE,GAAgB,GAAAoW,GAAAzK,EAAArb,OAAA,EAAA8S,EAAAtD,EAAA,CAAuB,GAAAsD,MAAAgT,EAAW,IAAAiI,GAAAve,EAAA,CAA8C,OAApCue,GAAAjI,IAAAiI,EAAA,MAAWjI,EAAAtlB,EAAA6a,EAAA7L,GAAA6L,EAAAvI,GAAAuI,EAAA0S,GAAAuB,EAAA5f,OAAwCoW,EAAAwJ,EAAAtvB,OAAA,EAAa8S,EAAApD,EAAA,EAAM,EAAAoD,MAAAgT,GAAWiI,EAAAre,EAAA,EAAMqe,EAAAjI,IAAAiI,EAAA,MAAWjI,EAAAtlB,EAAA8uB,EAAA5f,GAAA4f,EAAAxc,GAAAwc,EAAAvB,GAAA1S,EAAA7L,MAAuC,QAAAsD,GAAAtD,EAAAE,GAAgB,GAAAnS,GAAAiD,CAAQ,KAAAjD,EAAA,EAAQA,EAAA8d,EAAArb,OAAWzC,IAAA,GAAAiD,EAAAjD,EAAA,EAAAiD,GAAA6a,EAAArb,OAAAQ,EAAAslB,EAAAtW,EAAAE,EAAA2L,EAAA9d,GAAA8d,EAAA7a,IAAA,KAAAA,EAAAR,OAAA,QAAmE,UAAS,QAAA+tB,GAAAve,EAAAjS,GAAgB,GAAAiD,GAAAsS,EAAAuI,EAAAiU,CAAY,KAAA9uB,EAAA,EAAQA,EAAA6uB,EAAArvB,OAAWQ,IAAA,IAAAsS,EAAApD,EAAA2f,EAAA7uB,IACre6a,EAAA,EAAIA,EAAAvI,EAAA9S,OAAWqb,IAAA,GAAAiU,EAAAjU,EAAA,EAAAiU,GAAAxc,EAAA9S,OAAAsvB,EAAAxJ,EAAAtW,EAAAjS,EAAAuV,EAAAuI,GAAAvI,EAAAwc,IAAA,KAAAA,EAAAtvB,OAAA,QAAmE,UAAS,GAAAsvB,GAAAoL,EAAAl9B,EAAAif,EAAAD,EAAAomB,EAAAE,EAAAC,EAAAC,EAAA3nB,EAAA7L,EAAA2E,SAAAkb,KAAAwT,KAAAI,EAAA,CAAiD,KAAAvI,EAAAhrB,EAAA1P,OAAeijC,EAAAvI,EAAIuI,IAAA5T,EAAAhmB,KAAA45B,EAAcH,GAAA,CAAI,QAAAI,GAAA,EAAA7T,EAAArvB,OAAqB,EAAAqvB,EAAArvB,QAAW,CAAM,GAAJkjC,IAAI,EAAAA,EAAA,CAAQpkC,QAAAwD,IAAA,6BAAA+sB,EAAArvB,OAAA,iCAAoF,OAAM,IAAAxC,EAAAslC,EAAQtlC,EAAA6d,EAAArb,OAAWxC,IAAA,CAAiB,IAAZif,EAAApB,EAAA7d,GAAOk9B,KAAKuI,EAAA,EAAQA,EAAA5T,EAAArvB,OAAWijC,IAAA,GAAAzmB,EAAA6S,EAAA4T,GAAAL,EAAAnmB,EAAAlU,EAAA,IAAAkU,EAAAD,EAAA,IAAAA,EAAA,SAAAqmB,EAAAD,GAAA,CAAwD,IAAPtT,EAAA5f,EAAA8M,GAAOumB,EAAA,EAAQA,EAAAzT,EAAAtvB,OAAW+iC,IAAA,GAAAvmB,EAAA8S,EAAAyT,GAAAxlC,EAAAC,EAAAulC,KAAAjwB,EAAA2J,EAAAD,KAAAuR,EAAAtR,EAAAD,GAAA,CAAwCke,EAAAqI,EAAI1T,EAAAzjB,OAAAq3B,EAAA,GACveH,EAAAznB,EAAA3H,MAAA,EAAAlW,EAAA,GAAiBgf,EAAAnB,EAAA3H,MAAAlW,GAAaulC,EAAAzT,EAAA5b,MAAAgnB,GAAasI,EAAA1T,EAAA5b,MAAA,EAAAgnB,EAAA,GAAiBrf,EAAAynB,EAAA3uB,OAAA4uB,GAAA5uB,OAAA6uB,GAAA7uB,OAAAqI,GAAkCsmB,EAAAtlC,CAAI,OAAM,MAAAk9B,EAAA,KAAcmI,GAAAD,IAAA,EAAQ,MAAAlI,EAAA,OAAe,MAAArf,IAAS7L,EAAAE,EAAM,IAAAlS,GAAA2Y,EAAA00E,WAAAC,YAAAh4E,GAAA,EAA6C,KAAJA,EAAA,EAAIib,EAAAvwB,EAAAwC,OAAe8S,EAAAib,EAAIjb,IAAA,IAAAwc,EAAA9xB,EAAAsV,GAAAuI,EAAA,EAAmB,EAAAA,EAAIA,IAAAgU,EAAAC,EAAAjU,GAAA9S,EAAA,IAAA+mB,EAAAjU,GAAAmB,EAAA6S,EAAAqL,EAAArL,GAAA,SAAAA,IAAAC,EAAAjU,GAAAgU,EAAoD,OAAA7xB,GAAA2W,UAAkB62E,YAAA,SAAAx7E,GAAyB,SAAA2G,EAAA00E,WAAA5iD,KAAAz4B,IAAkCy7E,GAAA,WAAe,gBAAAz7E,EAAAE,EAAAnS,EAAAuoB,GAAyB,GAAAtlB,GAAA,EAAAgP,CAAU,OAAAhP,KAAAkP,EAAA,KAAAF,KAAAjS,EAAAiS,IAAAsW,MAAgColE,GAAA,WAAiB,gBAAA17E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAA2B,GAAAsS,GAClf,EAAAtD,EAAAue,EAAA,EAAAve,CAAU,OAAAsD,OAAApD,EAAA,EAAAqe,IAAAve,EAAAjS,EAAA,KAAAiS,OAAAsW,EAAAtW,MAAAhP,OAAoD2V,EAAAg1E,MAAA,aAC9Dh1E,EAAAg1E,MAAAj6E,WAAuB7S,YAAA8X,EAAAg1E,MAAA3jD,SAAA,SAAAh4B,GAA+G,MAAlE1Q,SAAA0vB,KAAA,qDAAkE,MAAY48D,WAAA,SAAA57E,GAAiD,MAAzBA,GAAAhG,KAAA6hF,eAAA77E,GAAyBhG,KAAAg+B,SAAAh4B,IAAwB87E,UAAA,SAAA97E,GAAuBA,MAAA,EAAS,IAAAE,GAAAnS,IAAW,KAAAmS,EAAA,EAAQA,GAAAF,EAAKE,IAAAnS,EAAA8L,KAAAG,KAAAg+B,SAAA93B,EAAAF,GAA+B,OAAAjS,IAASguF,gBAAA,SAAA/7E,GAA6BA,MAAA,EAAS,IAAAE,GAAAnS,IAAW,KAAAmS,EAAA,EAAQA,GAAAF,EAAKE,IAAAnS,EAAA8L,KAAAG,KAAA4hF,WAAA17E,EAAAF,GAAiC,OAAAjS,IAASmqC,UAAA,WAAsB,GAAAl4B,GAAAhG,KAAAgiF,YAAwB,OAAAh8E,KAAAxP,OAAA,IAAqBwrF,WAAA,SAAAh8E,GAC1a,GADkcA,IAC9fA,EAAAhG,KAAAiiF,qBAAAjiF,KAAAiiF,qBAAA,KAA4DjiF,KAAAkiF,iBAAAliF,KAAAkiF,gBAAA1rF,SAAAwP,EAAA,IAAAhG,KAAA4mC,YAAA,MAAA5mC,MAAAkiF,eAA0GliF,MAAA4mC,aAAA,CAAoB,IAAA7yC,GAAAiD,EAAAkP,KAAAoW,EAAAtc,KAAAg+B,SAAA,GAAA10B,EAAA,CAA8C,KAAVpD,EAAArG,KAAA,GAAU7I,EAAA,EAAQA,GAAAgP,EAAKhP,IAAAjD,EAAAiM,KAAAg+B,SAAAhnC,EAAAgP,GAAAsD,GAAAvV,EAAAy+B,WAAAlW,GAAApW,EAAArG,KAAAyJ,GAAAgT,EAAAvoB,CAA0D,OAAAiM,MAAAkiF,gBAAAh8E,GAA8Bi8E,iBAAA,WAA6BniF,KAAA4mC,aAAA,EAAoB5mC,KAAAgiF,cAAkBH,eAAA,SAAA77E,EAAAE,GAA8B,GAAAoD,GAAAvV,EAAAiM,KAAAgiF,aAAA1lE,EAAA,EAAAtlB,EAAAjD,EAAAyC,MAAyC8S,GAAApD,IAAAF,EAAAjS,EAAAiD,EAAA,EAAe,QACte8uB,GADsevB,EAAA,EAAA1S,EAAA7a,EACte,EAAIutB,GAAA1S,GAAK,GAAAyK,EAAA9c,KAAAzI,MAAAwtB,GAAA1S,EAAA0S,GAAA,GAAAuB,EAAA/xB,EAAAuoB,GAAAhT,EAAA,EAAAwc,EAAAvB,EAAAjI,EAAA,MAA+C,QAAAwJ,GAAkB,CAAKjU,EAAAyK,CAAI,OAA3BzK,EAAAyK,EAAA,EAAqC,MAAJA,GAAAzK,EAAI9d,EAAAuoB,KAAAhT,EAAAgT,GAAAtlB,EAAA,IAA2ButB,EAAAxwB,EAAAuoB,GAAOvoB,GAAAuoB,GAAAhT,EAAAib,IAAAxwB,EAAAuoB,EAAA,GAAAiI,KAAAvtB,EAAA,KAAoCorF,WAAA,SAAAp8E,GAAwB,GAAAE,GAAAF,EAAA,IAA8D,OAAjDA,IAAA,KAAQ,EAAAE,MAAA,GAAW,EAAAF,MAAA,GAAWE,EAAAlG,KAAAg+B,SAAA93B,GAAmBlG,KAAAg+B,SAAAh4B,GAAArP,QAAAie,IAAA1O,GAAAmO,aAAmDguE,aAAA,SAAAr8E,GAAmD,MAAzBA,GAAAhG,KAAA6hF,eAAA77E,GAAyBhG,KAAAoiF,WAAAp8E,KAC/V2G,EAAAg1E,MAAA3hD,OAAA,SAAAh6B,EAAAE,GAAmI,MAAlGF,GAAA0B,UAAAuU,OAAA+jB,OAAArzB,EAAAg1E,MAAAj6E,WAAiD1B,EAAA0B,UAAA7S,YAAAmR,EAA0BA,EAAA0B,UAAAs2B,SAAA93B,EAAuBF,GAAU2G,EAAA21E,UAAA,WAA2BtiF,KAAAuiF,UAAeviF,KAAAwiF,WAAA,GACvL71E,EAAA21E,UAAA56E,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAg1E,MAAAj6E,YAA8E7S,YAAA8X,EAAA21E,UAAAnzE,IAAA,SAAAnJ,GAA4ChG,KAAAuiF,OAAA1iF,KAAAmG,IAAoBy8E,UAAA,WAAsB,GAAAz8E,GAAAhG,KAAAuiF,OAAA,GAAAvkD,SAAA,GAAA93B,EAAAlG,KAAAuiF,OAAAviF,KAAAuiF,OAAA/rF,OAAA,GAAAwnC,SAAA,EAAiFh4B,GAAAqgB,OAAAngB,IAAAlG,KAAAuiF,OAAA1iF,KAAA,GAAA8M,GAAA+1E,UAAAx8E,EAAAF,KAAwDg4B,SAAA,SAAAh4B,GAAsB,OAAAE,GAAAF,EAAAhG,KAAAk+B,YAAAnqC,EAAAiM,KAAA2iF,kBAAArmE,EAAA,EAA0DA,EAAAvoB,EAAAyC,QAAW,CAAE,GAAAzC,EAAAuoB,IAAApW,EAAA,MAAAF,GAAAhG,KAAAuiF,OAAAjmE,GAAApW,EAAA,GAAAnS,EAAAuoB,GAAApW,GAAAF,EAAAk4B,YAAAl4B,EAAA47E,WAAA17E,EAA8EoW,KAAI,aAAY4hB,UAAA,WAAsB,GAAAl4B,GAC9fhG,KAAA2iF,iBAAuB,OAAA38E,KAAAxP,OAAA,IAAqB2rF,iBAAA,WAA6BniF,KAAA4mC,aAAA,EAAoB5mC,KAAA4iF,aAAA,KAAuB5iF,KAAAgiF,cAAkBW,gBAAA,WAA4B,GAAA3iF,KAAA4iF,cAAA5iF,KAAA4iF,aAAApsF,SAAAwJ,KAAAuiF,OAAA/rF,OAAA,MAAAwJ,MAAA4iF,YAA6F,QAAA58E,MAAAE,EAAA,EAAAnS,EAAA,EAAAuoB,EAAAtc,KAAAuiF,OAAA/rF,OAA0CzC,EAAAuoB,EAAIvoB,IAAAmS,GAAAlG,KAAAuiF,OAAAxuF,GAAAmqC,YAAAl4B,EAAAnG,KAAAqG,EAA4C,OAAAlG,MAAA4iF,aAAA58E,GAA2B68E,qBAAA,SAAA78E,GAAsD,MAApBA,GAAAhG,KAAA8hF,UAAA97E,GAAoBhG,KAAA8iF,eAAA98E,IAA8B+8E,2BAAA,SAAA/8E,GACxc,MADgfA,GAAAhG,KAAA+hF,gBAAA/7E,GAChfhG,KAAA8iF,eAAA98E,IAA8B88E,eAAA,SAAA98E,GAA4B,OAAAE,GAAA,GAAAyG,GAAA4M,SAAAxlB,EAAA,EAAAuoB,EAAAtW,EAAAxP,OAA4CzC,EAAAuoB,EAAIvoB,IAAA,CAAK,GAAAiD,GAAAgP,EAAAjS,EAAWmS,GAAAsT,SAAA3Z,KAAA,GAAA8M,GAAA8G,QAAAzc,EAAA+H,EAAA/H,EAAAgc,EAAAhc,EAAAic,GAAA,IAAmD,MAAA/M,MAAYyG,EAAAy6C,KAAA,SAAAphD,GAAuBhG,KAAA/K,KAAA+Q,GAChNiW,OAAAI,OAAA1P,EAAAy6C,KAAA1/C,WAAoCs7E,eAAA,SAAAh9E,EAAAE,EAAAnS,GAA+B,SAAAmS,MAAA,KAAoB,SAAAnS,MAAA,EAAkB,IAAAuoB,GAAAtc,KAAA/K,IAAgB+Q,GAAAlR,OAAAkR,GAAA8uB,MAAA,GAAsB,IAAA99B,GAAAkP,EAAAoW,EAAA2mE,WAAA35E,EAAA,CAAyBpD,KAAK,QAAAqe,GAAA,EAAYA,EAAAve,EAAAxP,OAAW+tB,IAAA,CAAK,GAAA1S,EAAMA,GAAA7a,CAAI,IAAA8uB,GAAAxc,EAAAuc,EAAAvJ,EAAA4mE,OAAAl9E,EAAAue,KAAAjI,EAAA4mE,OAAA,IAAwC,IAAAr9D,EAAA,CAAM,GAAAqL,GAAA,GAAAvkB,GAAAw2E,KAAAnvF,KAAAF,EAAA6Y,EAAA00E,WAAAI,GAAAtwD,EAAAxkB,EAAA00E,WAAAK,GAAA5vE,EAAA,OAAA8T,EAAA,OAAA8S,EAAA9S,EAAA9T,EAAA,OAAAknB,EAAA,OAAAC,EAAA,OAAAC,EAAA,OAAAtnB,EAAA,OAAAunB,EAAA,OAAAH,EAAA,MAA2J,IAAAnT,EAAAu9D,EAAA,OAAAnwE,GAAA4S,EAAAw9D,iBAAAx9D,EAAAw9D,eAAAx9D,EAAAu9D,EAAAtuD,MAAA,MAAA9hB,EAAA,EAAAomB,EAAAnmB,EAAAzc,OAAoFwc,EAAAomB,GAAI,OAAAnmB,EAAAD,MAAgB,QAAAlB,EACpgBmB,EAAAD,KAAAnB,EAAAiU,EAAWF,EAAA3S,EAAAD,KAAAnB,EAAWqf,EAAAoyD,OAAAxxE,EAAA8T,EAAc,MAAM,SAAA9T,EAAAmB,EAAAD,KAAAnB,EAAAiU,EAAsBF,EAAA3S,EAAAD,KAAAnB,EAAWqf,EAAAqyD,OAAAzxE,EAAA8T,EAAc,MAAM,SAAqF,GAArF9T,EAAAmB,EAAAD,KAAAnB,EAAAiU,EAAsBF,EAAA3S,EAAAD,KAAAnB,EAAWonB,EAAAhmB,EAAAD,KAAAnB,EAAAiU,EAAaoT,EAAAjmB,EAAAD,KAAAnB,EAAWqf,EAAAsyD,iBAAAvqD,EAAAC,EAAApnB,EAAA8T,GAA4BoT,EAAAhlC,IAAAwC,OAAA,UAAAkiC,GAAAM,EAAAj6B,EAAAi6B,IAAAhmB,EAAAqmB,EAAA,EAA2CA,GAAAtlC,EAAKslC,IAAA,CAAK,GAAAC,GAAAD,EAAAtlC,CAAUD,GAAAwlC,EAAAZ,EAAAO,EAAAnnB,GAAWhe,EAAAwlC,EAAAN,EAAAE,EAAAtT,GAAW,KAAM,YAAA9T,EAAAmB,EAAAD,KAAAnB,EAAAiU,EAAAF,EAAA3S,EAAAD,KAAAnB,EAAAonB,EAAAhmB,EAAAD,KAAAnB,EAAAiU,EAAAoT,EAAAjmB,EAAAD,KAAAnB,EAAAD,EAAAqB,EAAAD,KAAAnB,EAAAiU,EAAAqT,EAAAlmB,EAAAD,KAAAnB,EAAAqf,EAAAuyD,cAAAxqD,EAAAC,EAAAtnB,EAAAunB,EAAArnB,EAAA8T,GAAAoT,EAAAhlC,IAAAwC,OAAA,OAAAkiC,EAAAM,EAAAj6B,EAAAi6B,IAAAhmB,EAAAqmB,EAAA,EAAqJA,GAAAtlC,EAAKslC,IAAAC,EAAAD,EAAAtlC,EAAAo9B,EAAAmI,EAAAZ,EAAAO,EAAArnB,EAAAE,GAAAqf,EAAAmI,EAAAN,EAAAE,EAAAC,EAAAvT,GAAoC/T,GAAGjE,OAAAiY,EAAAw5C,GAAAxtD,EAAA6jC,KAAAxkB,OAAsBrf,GAAA,MAAcvI,IACpfuI,EAAAjE,OAAS1H,EAAArG,KAAAgS,EAAA6jC,MAAwB,IAAT3hD,KAAKuoB,EAAA,EAAItW,EAAAE,EAAA1P,OAAe8lB,EAAAtW,EAAIsW,IAAArS,MAAAvC,UAAA7H,KAAA/D,MAAA/H,EAAAmS,EAAAoW,GAAAonE,WAAkD,OAAA3vF,MAAY4Y,EAAAw2E,KAAA,SAAAn9E,GAAuB2G,EAAA21E,UAAAzuF,KAAAmM,MAA2BA,KAAAq1C,WAAgBrvC,GAAAhG,KAAA2jF,WAAA39E,IACpL2G,EAAAw2E,KAAAz7E,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAA21E,UAAA56E,YAA6E7S,YAAA8X,EAAAw2E,KAAAQ,WAAA,SAAA39E,GAA8ChG,KAAAsjF,OAAAt9E,EAAA,GAAAjH,EAAAiH,EAAA,GAAAgN,EAA2B,QAAA9M,GAAA,EAAAnS,EAAAiS,EAAAxP,OAAuB0P,EAAAnS,EAAImS,IAAAlG,KAAAujF,OAAAv9E,EAAAE,GAAAnH,EAAAiH,EAAAE,GAAA8M,IAA+BswE,OAAA,SAAAt9E,EAAAE,GAAsBlG,KAAAq1C,QAAAx1C,MAAmBsxC,OAAA,SAAA31C,MAAAwK,EAAAE,MAA6Bq9E,OAAA,SAAAv9E,EAAAE,GAAsB,GAAAnS,GAAAiM,KAAAq1C,QAAAr1C,KAAAq1C,QAAA7+C,OAAA,GAAAgF,KAAAzH,EAAA,GAAA4Y,GAAA+1E,UAAA,GAAA/1E,GAAAykB,QAAAr9B,IAAAyC,OAAA,GAAAzC,IAAAyC,OAAA,OAAAmW,GAAAykB,QAAAprB,EAAAE,GAA4IlG,MAAAuiF,OAAA1iF,KAAA9L,GAAoBiM,KAAAq1C,QAAAx1C,MAAmBsxC,OAAA,SAAA31C,MAAAwK,EAC/dE,MAAKs9E,iBAAA,SAAAx9E,EAAAE,EAAAnS,EAAAuoB,GAAoC,GAAAtlB,GAAAgJ,KAAAq1C,QAAAr1C,KAAAq1C,QAAA7+C,OAAA,GAAAgF,KAAAxE,EAAA,GAAA2V,GAAAi3E,qBAAA,GAAAj3E,GAAAykB,QAAAp6B,IAAAR,OAAA,GAAAQ,IAAAR,OAAA,OAAAmW,GAAAykB,QAAAprB,EAAAE,GAAA,GAAAyG,GAAAykB,QAAAr9B,EAAAuoB,GAA8Ktc,MAAAuiF,OAAA1iF,KAAA7I,GAAoBgJ,KAAAq1C,QAAAx1C,MAAmBsxC,OAAA,mBAAA31C,MAAAwK,EAAAE,EAAAnS,EAAAuoB,MAA2CmnE,cAAA,SAAAz9E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAqC,GAAAib,GAAAvkB,KAAAq1C,QAAAr1C,KAAAq1C,QAAA7+C,OAAA,GAAAgF,KAAA+oB,EAAA,GAAA5X,GAAAk3E,iBAAA,GAAAl3E,GAAAykB,QAAA7M,IAAA/tB,OAAA,GAAA+tB,IAAA/tB,OAAA,OAAAmW,GAAAykB,QAAAprB,EAAAE,GAAA,GAAAyG,GAAAykB,QAAAr9B,EAAAuoB,GAC9U,GAAA3P,GAAAykB,QAAAp6B,EAAAsS,GAAwBtJ,MAAAuiF,OAAA1iF,KAAA0kB,GAAoBvkB,KAAAq1C,QAAAx1C,MAAmBsxC,OAAA,gBAAA31C,MAAAwK,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,MAA4Cw6E,WAAA,SAAA99E,GAAwB,GAAAE,GAAA+D,MAAAvC,UAAAwC,MAAArW,KAAA4H,WAAA1H,EAAAiM,KAAAq1C,QAAAr1C,KAAAq1C,QAAA7+C,OAAA,GAAAgF,KAAAzH,GAAA,GAAA4Y,GAAAykB,QAAAr9B,IAAAyC,OAAA,GAAAzC,IAAAyC,OAAA,IAA0IyT,OAAAvC,UAAA7H,KAAA/D,MAAA/H,EAAAiS,GAAgCjS,EAAA,GAAA4Y,GAAAo3E,YAAAhwF,GAA2BiM,KAAAuiF,OAAA1iF,KAAA9L,GAAoBA,EAAAiS,IAAAxP,OAAA,GAAgB0P,EAAArG,KAAA9L,EAAAgL,GAAYmH,EAAArG,KAAA9L,EAAAif,GAAYhT,KAAAq1C,QAAAx1C,MAAmBsxC,OAAA,aAAA31C,KAAA0K,KAA6BulD,IAAA,SAAAzlD,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAA2B,GAAAib,GAAAvkB,KAAAq1C,QAAAr1C,KAAAq1C,QAAA7+C,OAC/c,GAAAgF,IAAQwE,MAAAgkF,OAAAh+E,EAAAue,IAAA/tB,OAAA,GAAA0P,EAAAqe,IAAA/tB,OAAA,GAAAzC,EAAAuoB,EAAAtlB,EAAAsS,IAAqD06E,OAAA,SAAAh+E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAA8BtJ,KAAAikF,WAAAj+E,EAAAE,EAAAnS,IAAAuoB,EAAAtlB,EAAAsS,IAA+B46E,QAAA,SAAAl+E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAmC,GAAAiU,GAAA9lB,KAAAq1C,QAAAr1C,KAAAq1C,QAAA7+C,OAAA,GAAAgF,IAA+CwE,MAAAikF,WAAAj+E,EAAA8f,IAAAtvB,OAAA,GAAA0P,EAAA4f,IAAAtvB,OAAA,GAAAzC,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,IAA6DoyE,WAAA,SAAAj+E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAsC,GAAAiU,IAAA9f,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAA,EAA2B7L,GAAA,GAAA2G,GAAAw3E,aAAAn+E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAA0C7R,KAAAuiF,OAAA1iF,KAAAmG,GAAoBA,IAAAg4B,SAAA,GAAgBlY,EAAAjmB,KAAAmG,EAAAjH,GAAY+mB,EAAAjmB,KAAAmG,EAAAgN,GAAYhT,KAAAq1C,QAAAx1C,MAAmBsxC,OAAA,UAAA31C,KAAAsqB,KAA0Bi8D,gBAAA,SAAA/7E,GAA6BA,IAC1fA,EAAA,GAAO,QAAAE,MAAAnS,EAAA,EAAiBA,EAAAiS,EAAIjS,IAAAmS,EAAArG,KAAAG,KAAAg+B,SAAAjqC,EAAAiS,GAA4D,OAA7BhG,MAAAwiF,WAAAt8E,EAAArG,KAAAqG,EAAA,IAA6BA,GAAS47E,UAAA,SAAA97E,GAAuBA,KAAA,EAAQ,QAAAhP,GAAAsS,EAAAib,EAAA1S,EAAAiU,EAAAD,EAAAqL,EAAAl9B,EAAAF,EAAAq9B,EAAAjrB,EAAAyG,EAAA00E,WAAAI,GAAA1tF,EAAA4Y,EAAA00E,WAAAK,GAAAplE,KAAAxK,EAAA,EAAA8T,EAAA5lB,KAAAq1C,QAAA7+C,OAAuGsb,EAAA8T,EAAI9T,IAAA,CAAKhe,EAAAkM,KAAAq1C,QAAAvjC,EAAkB,IAAA4mB,GAAA5kC,EAAA0H,IAAa,QAAA1H,EAAAq9C,QAAiB,aAAA70B,EAAAzc,KAAA,GAAA8M,GAAAykB,QAAAsH,EAAA,GAAAA,EAAA,IAAmD,MAAM,cAAApc,EAAAzc,KAAA,GAAA8M,GAAAykB,QAAAsH,EAAA,GAAAA,EAAA,IAAmD,MAAM,wBACzW,IADyW1hC,EAAA0hC,EAAA,GAA+BpvB,EAAAovB,EAAA,GAAO5S,EAAA4S,EAAA,GAAO7S,EAAA6S,EAAA,GAAO,EAAApc,EAAA9lB,QAAA1C,EAAAwoB,IAAA9lB,OAAA,GAAA06B,EAAAp9B,EAAAiL,EAAA/K,EAAAF,EAAAkf,IAAAlf,EAAAkM,KAAAq1C,QAAAvjC,EACtc,GAAAtW,KAAA01B,EAAAp9B,IAAA0C,OAAA,GAAAxC,EAAAF,IAAA0C,OAAA,IAAyCkiC,EAAA,EAAQA,GAAA1yB,EAAK0yB,IAAAvH,EAAAuH,EAAA1yB,EAAAlS,EAAAoS,EAAAirB,EAAAD,EAAApL,EAAA9uB,GAAAm6B,EAAAjrB,EAAAirB,EAAAn9B,EAAA6xB,EAAAvc,GAAAgT,EAAAzc,KAAA,GAAA8M,GAAAykB,QAAAt9B,EAAAq9B,GAAmE,MAAM,qBAAmK,IAAnKn6B,EAAA0hC,EAAA,GAA4BpvB,EAAAovB,EAAA,GAAO5S,EAAA4S,EAAA,GAAO7S,EAAA6S,EAAA,GAAOnU,EAAAmU,EAAA,GAAO7mB,EAAA6mB,EAAA,GAAO,EAAApc,EAAA9lB,QAAA1C,EAAAwoB,IAAA9lB,OAAA,GAAA06B,EAAAp9B,EAAAiL,EAAA/K,EAAAF,EAAAkf,IAAAlf,EAAAkM,KAAAq1C,QAAAvjC,EAAA,GAAAtW,KAAA01B,EAAAp9B,IAAA0C,OAAA,GAAAxC,EAAAF,IAAA0C,OAAA,IAAoGkiC,EAAA,EAAQA,GAAA1yB,EAAK0yB,IAAAvH,EAAAuH,EAAA1yB,EAAAlS,EAAAC,EAAAo9B,EAAAD,EAAApL,EAAAvB,EAAAvtB,GAAAm6B,EAAAp9B,EAAAo9B,EAAAn9B,EAAA6xB,EAAAhU,EAAAvI,GAAAgT,EAAAzc,KAAA,GAAA8M,GAAAykB,QAAAt9B,EAAAq9B,GAAuE,MAAM,kBACjW,IADiWr9B,EAAAkM,KAAAq1C,QAAAvjC,EAAA,GAAAtW,KAA2C21B,GAAA,GAAAxkB,GAAAykB,QAAAt9B,IAAA0C,OAAA,GAAA1C,IAAA0C,OAAA,KAAmD1C,EAAAkS,EAAA0yB,EAAA,GAAAliC,OAAgB26B,IAAAxmB,OAAA+tB,EAAA,IAC1evH,EAAA,GAAAxkB,GAAAo3E,YAAA5yD,GAA2BuH,EAAA,EAAQA,GAAA5kC,EAAK4kC,IAAApc,EAAAzc,KAAAsxB,EAAAywD,WAAAlpD,EAAA5kC,GAA8B,MAAM,WAAmE,IAAnEkD,EAAA0hC,EAAA,GAAkBpvB,EAAAovB,EAAA,GAAO7S,EAAA6S,EAAA,GAAOnU,EAAAmU,EAAA,GAAO5kC,EAAA4kC,EAAA,GAAO5S,IAAA4S,EAAA,GAASxH,EAAAp9B,EAAAywB,EAAMvwB,EAAA,EAAAgS,EAAM0yB,EAAA,EAAQA,GAAA1kC,EAAK0kC,IAAAvH,EAAAuH,EAAA1kC,EAAA8xB,IAAAqL,EAAA,EAAAA,KAAA5M,EAAA4M,EAAAD,EAAAp9B,EAAAkD,EAAA6uB,EAAArmB,KAAA2S,IAAAgf,KAAA7nB,EAAAuc,EAAArmB,KAAA4a,IAAA+W,GAAA7U,EAAAzc,KAAA,GAAA8M,GAAAykB,QAAAt9B,EAAAq9B,GAAgG,MAAM,eAAAn6B,EAAA0hC,EAAA,GAAsBpvB,EAAAovB,EAAA,GAAO7S,EAAA6S,EAAA,GAAO7mB,EAAA6mB,EAAA,GAAOnU,EAAAmU,EAAA,GAAO5kC,EAAA4kC,EAAA,GAAO5S,IAAA4S,EAAA,EAAS,IAAAM,GAAAN,EAAA,EAAWxH,GAAAp9B,EAAAywB,EAAMvwB,EAAA,EAAAgS,CAAM,IAAAizB,GAAAC,CAA6C,KAArC,IAAAF,IAAAC,EAAAz5B,KAAA2S,IAAA6mB,GAAAE,EAAA15B,KAAA4a,IAAA4e,IAAqCN,EAAA,EAAQA,GAAA1kC,EAAK0kC,IAAA,CAAkE,GAA7DvH,EAAAuH,EAAA1kC,EAAM8xB,IAAAqL,EAAA,EAAAA,GAAWA,EAAA5M,EAAA4M,EAAAD,EAAQp9B,EAAAkD,EAAA6uB,EAAArmB,KAAA2S,IAAAgf,GAAkBA,EAAA7nB,EAAAuI,EAAArS,KAAA4a,IAAA+W,GAAkB,IAAA6H,EAAA,CAAU,GAAApnB,GAAA9d,CAAQA,IAAA8d,EAAA5a,GAAAiiC,GAAA9H,EACze7nB,GAAA4vB,EAAAliC,EAAOm6B,GAAAvf,EAAA5a,GAAAkiC,GAAA/H,EAAA7nB,GAAA2vB,EAAA3vB,EAAoBgT,EAAAzc,KAAA,GAAA8M,GAAAykB,QAAAt9B,EAAAq9B,MAA+K,MAA9InrB,GAAAsW,IAAA9lB,OAAA,GAAgBgJ,KAAA+wB,IAAAvqB,EAAAjH,EAAAud,EAAA,GAAAvd,GAAA8c,OAAAC,SAAAtc,KAAA+wB,IAAAvqB,EAAAgN,EAAAsJ,EAAA,GAAAtJ,GAAA6I,OAAAC,SAAAQ,EAAAla,OAAAka,EAAA9lB,OAAA,KAAiGwJ,KAAAwiF,WAAAlmE,EAAAzc,KAAAyc,EAAA,IAA6BA,GAASonE,SAAA,SAAA19E,EAAAE,GAAwB,QAAAnS,GAAAiS,GAAc,OAAAE,MAAAnS,EAAA,EAAAuoB,EAAAtW,EAAAxP,OAA4BzC,EAAAuoB,EAAIvoB,IAAA,CAAK,GAAAiD,GAAAgP,EAAAjS,GAAAuV,EAAA,GAAAqD,GAAAy3E,KAA6B96E,GAAA+rC,QAAAr+C,EAAAq+C,QAAoB/rC,EAAAi5E,OAAAvrF,EAAAurF,OAAkBr8E,EAAArG,KAAAyJ,GAAU,MAAApD,GAAS,QAAAoW,GAAAtW,EAAAE,GAAgB,OAAAnS,GAAAmS,EAAA1P,OAAA8lB,GAAA,EAAAtlB,EAAAjD,EAAA,EAAAuV,EAAA,EAAkCA,EAAAvV,EAAIiD,EAAAsS,IAAA,CAAO,GAAAib,GAAAre,EAAAlP,GAAA6a,EAAA3L,EAAAoD,GAAAwc,EAAAjU,EAAA9S,EAAAwlB,EAAAxlB,EAAA8mB,EAAAhU,EAAAmB,EAAAuR,EAAAvR,CAAsC,IAAAxT,KAAA+wB,IAAA1K,GAAAhK,OAAAC,SAA+B,KACtf+J,IAAAtB,EAAAre,EAAAoD,GAAAwc,KAAAjU,EAAA3L,EAAAlP,GAAA6uB,QAAA7f,EAAAgN,EAAAuR,EAAAvR,GAAAhN,EAAAgN,EAAAnB,EAAAmB,GAAA,GAAAhN,EAAAgN,IAAAuR,EAAAvR,GAA+D,GAAAhN,EAAAjH,IAAAwlB,EAAAxlB,EAAA,aAAsB,CAA+B,GAA1B/H,EAAA6uB,GAAA7f,EAAAjH,EAAAwlB,EAAAxlB,GAAA+mB,GAAA9f,EAAAgN,EAAAuR,EAAAvR,GAA0B,IAAAhc,EAAA,QAAkB,GAAAA,IAAAslB,WAAa,IAAAtW,EAAAgN,IAAAuR,EAAAvR,IAAAnB,EAAA9S,GAAAiH,EAAAjH,GAAAiH,EAAAjH,GAAAwlB,EAAAxlB,GAAAwlB,EAAAxlB,GAAAiH,EAAAjH,GAAAiH,EAAAjH,GAAA8S,EAAA9S,GAAA,SAAqE,MAAAud,GAAS,GAAAtlB,GAAA2V,EAAA00E,WAAAG,YAAAl4E,EAAA,SAAAtD,GAAiD,OAAAE,MAAAnS,EAAA,GAAA4Y,GAAAw2E,KAAA7mE,EAAA,EAAAtlB,EAAAgP,EAAAxP,OAA6C8lB,EAAAtlB,EAAIslB,IAAA,CAAK,GAAAhT,GAAAtD,EAAAsW,GAAAiI,EAAAjb,EAAA9N,KAAA8N,IAAA6nC,MAA+B,YAAA7nC,GAAA,IAAAvV,EAAAshD,QAAA7+C,SAAA0P,EAAArG,KAAA9L,KAAA,GAAA4Y,GAAAw2E,MAAiEpvF,EAAAuV,GAAAxN,MAAA/H,EAAAwwB,GAAgD,MAAhC,KAAAxwB,EAAAshD,QAAA7+C,QAAA0P,EAAArG,KAAA9L,GAAgCmS,GAASlG,KAAAq1C,QAAe,QAChf/rC,EAAA9S,OAAA,QAAkB,SAAA0P,EAAA,MAAAnS,GAAAuV,EAAsB,IAAAib,GAAA1S,EAAAiU,EAAAD,IAAe,QAAAvc,EAAA9S,OAAA,MAAAqb,GAAAvI,EAAA,GAAAwc,EAAA,GAAAnZ,GAAAy3E,MAAAt+D,EAAAuvB,QAAAxjC,EAAAwjC,QAAAvvB,EAAAy8D,OAAA1wE,EAAA0wE,OAAA18D,EAAAhmB,KAAAimB,GAAAD,CAAkG,IAAAqL,IAAAl6B,EAAAsS,EAAA,GAAAw4E,aAAA5wD,EAAAlrB,GAAAkrB,GAAoCpL,KAAK,IAAAhU,GAAA9d,KAAAF,KAAAq9B,EAAA,CAAoBn9B,GAAAm9B,GAAA,OAAYr9B,EAAAq9B,KAAQ,QAAAvL,GAAA,EAAA8S,EAAApvB,EAAA9S,OAAuBovB,EAAA8S,EAAI9S,IAAA/T,EAAAvI,EAAAsc,GAAA9T,EAAAD,EAAAiwE,YAAAv9D,EAAAvtB,EAAA8a,IAAAyS,EAAAve,GAAAue,OAAA2M,GAAAl9B,EAAAm9B,QAAAn9B,EAAAm9B,IAAkEvL,EAAA,GAAAjZ,GAAAy3E,MAAApwF,EAAA8d,GAAsB9d,EAAAm9B,GAAAvL,EAAAyvB,QAAAxjC,EAAAwjC,QAAArhD,EAAAm9B,GAAAvL,EAAA28D,OAAA1wE,EAAA0wE,OAAArxD,GAAAC,IAAAr9B,EAAAq9B,OAAAr9B,EAAAq9B,GAAAtxB,MAA4EgS,IAAA7d,EAAA8d,EAAA,IAAa,KAAA9d,EAAA,SAAAD,GAAAuV,EAAqB,MAAAtV,EAAAwC,OAAA,CAA6B,IAAdovB,GAAA,EAAK/T,KAAK7a,EAAA,EAAIsS,EAAAtV,EAAAwC,OAAeQ,EACvfsS,EAAEtS,IAAA8uB,EAAA9uB,KAAgB,KAAJA,EAAA,EAAIsS,EAAAtV,EAAAwC,OAAeQ,EAAAsS,EAAItS,IAAA,IAAAutB,EAAAzwB,EAAAkD,GAAAk6B,EAAA,EAAmBA,EAAA3M,EAAA/tB,OAAW06B,IAAA,CAAiB,IAAZC,EAAA5M,EAAA2M,GAAOpf,GAAA,EAAK4mB,EAAA,EAAQA,EAAA1kC,EAAAwC,OAAWkiC,IAAApc,EAAA6U,EAAAn9B,IAAA0kC,GAAA1kC,KAAAgD,IAAA0hC,GAAA7mB,EAAAhS,MAAmCwkF,MAAArtF,EAAAstF,IAAA5rD,EAAA6rD,KAAArzD,IAAqBpf,MAAA,EAAAgU,EAAA4S,GAAA74B,KAAAsxB,IAAAvL,GAAA,EAA8B9T,IAAAgU,EAAA9uB,GAAA6I,KAAAsxB,GAAgB,EAAAtf,EAAArb,SAAAovB,IAAA9xB,EAAAgyB,IAA2B,IAAJF,EAAA,EAAI5uB,EAAAhD,EAAAwC,OAAeovB,EAAA5uB,EAAI4uB,IAAA,IAAAE,EAAA9xB,EAAA4xB,KAAAC,EAAAhmB,KAAAimB,GAAAjU,EAAA/d,EAAA8xB,GAAAtc,EAAA,EAAAib,EAAA1S,EAAArb,OAAiD8S,EAAAib,EAAIjb,IAAAwc,EAAA0+D,MAAA3kF,KAAAgS,EAAAvI,GAAAuI,EAAyB,OAAAgU,MAAYlZ,EAAAy3E,MAAA,WAAuBz3E,EAAAw2E,KAAArnF,MAAAkE,KAAAvE,WAAiCuE,KAAAwkF,UAC7Y73E,EAAAy3E,MAAA18E,UAAAuU,OAAAI,OAAAJ,OAAA+jB,OAAArzB,EAAAw2E,KAAAz7E,YAAyE7S,YAAA8X,EAAAy3E,MAAAK,QAAA,SAAAz+E,GAA4C,UAAA2G,GAAA+3E,gBAAA1kF,KAAAgG,IAAyC2+E,aAAA,SAAA3+E,GAA0B,UAAA2G,GAAAi4E,cAAA5kF,KAAAgG,IAAuC6+E,eAAA,SAAA7+E,GAA4B,OAAAE,MAAAnS,EAAA,EAAAuoB,EAAAtc,KAAAwkF,MAAAhuF,OAAqCzC,EAAAuoB,EAAIvoB,IAAAmS,EAAAnS,GAAAiM,KAAAwkF,MAAAzwF,GAAA+tF,UAAA97E,EAAoC,OAAAE,IAAS4+E,iBAAA,SAAA9+E,GAA8B,OAAO++E,MAAA/kF,KAAA8hF,UAAA97E,GAAAw+E,MAAAxkF,KAAA6kF,eAAA7+E,KAAsDg/E,cAAA,SAAAh/E,GAA2B,MAAAhG,MAAA8kF,iBAAA9+E,MACvc2G,EAAA+1E,UAAA,SAAA18E,EAAAE,GAA8BlG,KAAAilF,GAAAj/E,EAAUhG,KAAAklF,GAAAh/E,GAAWyG,EAAA+1E,UAAAh7E,UAAAuU,OAAA+jB,OAAArzB,EAAAg1E,MAAAj6E,WAA+DiF,EAAA+1E,UAAAh7E,UAAA7S,YAAA8X,EAAA+1E,UAAsD/1E,EAAA+1E,UAAAh7E,UAAAs2B,SAAA,SAAAh4B,GAA+C,GAAAE,GAAAlG,KAAAklF,GAAAvuF,QAAAie,IAAA5U,KAAAilF,GAAoE,OAAjC/+E,GAAAvL,eAAAqL,GAAAmJ,IAAAnP,KAAAilF,IAAiC/+E,GAAUyG,EAAA+1E,UAAAh7E,UAAAk6E,WAAA,SAAA57E,GAAiD,MAAAhG,MAAAg+B,SAAAh4B,IAAyB2G,EAAA+1E,UAAAh7E,UAAA06E,WAAA,SAAAp8E,GAAiD,MAAAhG,MAAAklF,GAAAvuF,QAAAie,IAAA5U,KAAAilF,IAAA5wE,aACha1H,EAAAi3E,qBAAA,SAAA59E,EAAAE,EAAAnS,GAA2CiM,KAAAmlF,GAAAn/E,EAAUhG,KAAAilF,GAAA/+E,EAAUlG,KAAAklF,GAAAnxF,GAAW4Y,EAAAi3E,qBAAAl8E,UAAAuU,OAAA+jB,OAAArzB,EAAAg1E,MAAAj6E,WAA0EiF,EAAAi3E,qBAAAl8E,UAAA7S,YAAA8X,EAAAi3E,qBAA4Ej3E,EAAAi3E,qBAAAl8E,UAAAs2B,SAAA,SAAAh4B,GAA0D,GAAAE,GAAAyG,EAAA00E,WAAAI,EAA0B,WAAA90E,GAAAykB,QAAAlrB,EAAAF,EAAAhG,KAAAmlF,GAAApmF,EAAAiB,KAAAilF,GAAAlmF,EAAAiB,KAAAklF,GAAAnmF,GAAAmH,EAAAF,EAAAhG,KAAAmlF,GAAAnyE,EAAAhT,KAAAilF,GAAAjyE,EAAAhT,KAAAklF,GAAAlyE,KACpTrG,EAAAi3E,qBAAAl8E,UAAA06E,WAAA,SAAAp8E,GAA4D,GAAAE,GAAAyG,EAAAi0E,WAAAC,sBAA8C,WAAAl0E,GAAAykB,QAAAlrB,EAAAF,EAAAhG,KAAAmlF,GAAApmF,EAAAiB,KAAAilF,GAAAlmF,EAAAiB,KAAAklF,GAAAnmF,GAAAmH,EAAAF,EAAAhG,KAAAmlF,GAAAnyE,EAAAhT,KAAAilF,GAAAjyE,EAAAhT,KAAAklF,GAAAlyE,IAAAqB,aAA8G1H,EAAAk3E,iBAAA,SAAA79E,EAAAE,EAAAnS,EAAAuoB,GAAyCtc,KAAAmlF,GAAAn/E,EAAUhG,KAAAilF,GAAA/+E,EAAUlG,KAAAklF,GAAAnxF,EAAUiM,KAAAolF,GAAA9oE,GAAW3P,EAAAk3E,iBAAAn8E,UAAAuU,OAAA+jB,OAAArzB,EAAAg1E,MAAAj6E,WAAsEiF,EAAAk3E,iBAAAn8E,UAAA7S,YAAA8X,EAAAk3E,iBAChXl3E,EAAAk3E,iBAAAn8E,UAAAs2B,SAAA,SAAAh4B,GAAsD,GAAAE,GAAAyG,EAAA00E,WAAAK,EAA0B,WAAA/0E,GAAAykB,QAAAlrB,EAAAF,EAAAhG,KAAAmlF,GAAApmF,EAAAiB,KAAAilF,GAAAlmF,EAAAiB,KAAAklF,GAAAnmF,EAAAiB,KAAAolF,GAAArmF,GAAAmH,EAAAF,EAAAhG,KAAAmlF,GAAAnyE,EAAAhT,KAAAilF,GAAAjyE,EAAAhT,KAAAklF,GAAAlyE,EAAAhT,KAAAolF,GAAApyE,KAAqHrG,EAAAk3E,iBAAAn8E,UAAA06E,WAAA,SAAAp8E,GAAwD,GAAAE,GAAAyG,EAAAi0E,WAAAE,kBAA0C,WAAAn0E,GAAAykB,QAAAlrB,EAAAF,EAAAhG,KAAAmlF,GAAApmF,EAAAiB,KAAAilF,GAAAlmF,EAAAiB,KAAAklF,GAAAnmF,EAAAiB,KAAAolF,GAAArmF,GAAAmH,EAAAF,EAAAhG,KAAAmlF,GAAAnyE,EAAAhT,KAAAilF,GAAAjyE,EAAAhT,KAAAklF,GAAAlyE,EAAAhT,KAAAolF,GAAApyE,IAAAqB,aAAkI1H,EAAAo3E,YAAA,SAAA/9E,GAA8BhG,KAAAnG,OAAA,QAAAmM,QACvc2G,EAAAo3E,YAAAr8E,UAAAuU,OAAA+jB,OAAArzB,EAAAg1E,MAAAj6E,WAAiEiF,EAAAo3E,YAAAr8E,UAAA7S,YAAA8X,EAAAo3E,YAA0Dp3E,EAAAo3E,YAAAr8E,UAAAs2B,SAAA,SAAAh4B,GAAiD,GAAAE,GAAAlG,KAAAnG,MAAkBmM,IAAAE,EAAA1P,OAAA,CAAc,IAAAzC,GAAAyL,KAAAzI,MAAAiP,EAAoBA,IAAAjS,CAAK,IAAAuoB,GAAApW,EAAA,IAAAnS,MAAA,GAAAiD,EAAAkP,EAAAnS,GAAAuV,EAAApD,EAAAnS,EAAAmS,EAAA1P,OAAA,EAAA0P,EAAA1P,OAAA,EAAAzC,EAAA,GAAAmS,IAAAnS,EAAAmS,EAAA1P,OAAA,EAAA0P,EAAA1P,OAAA,EAAAzC,EAAA,GAAAA,EAAA4Y,EAAAi0E,WAAAI,WAA6H,WAAAr0E,GAAAykB,QAAAr9B,EAAAuoB,EAAAvd,EAAA/H,EAAA+H,EAAAuK,EAAAvK,EAAAmH,EAAAnH,EAAAiH,GAAAjS,EAAAuoB,EAAAtJ,EAAAhc,EAAAgc,EAAA1J,EAAA0J,EAAA9M,EAAA8M,EAAAhN,KAClW2G,EAAAw3E,aAAA,SAAAn+E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAA6C7R,KAAAqlF,GAAAr/E,EAAUhG,KAAAslF,GAAAp/E,EAAUlG,KAAAulF,QAAAxxF,EAAeiM,KAAAwlF,QAAAlpE,EAAetc,KAAAylF,YAAAzuF,EAAmBgJ,KAAA0lF,UAAAp8E,EAAiBtJ,KAAA2lF,WAAAphE,EAAkBvkB,KAAA4lF,UAAA/zE,GAAA,GAAqBlF,EAAAw3E,aAAAz8E,UAAAuU,OAAA+jB,OAAArzB,EAAAg1E,MAAAj6E,WAAkEiF,EAAAw3E,aAAAz8E,UAAA7S,YAAA8X,EAAAw3E,aAC5Ox3E,EAAAw3E,aAAAz8E,UAAAs2B,SAAA,SAAAh4B,GAAkD,GAAAE,GAAAlG,KAAA0lF,UAAA1lF,KAAAylF,WAAsC,GAAAv/E,OAAA,EAAA1G,KAAAyS,IAAoB/L,EAAA,EAAA1G,KAAAyS,KAAA/L,GAAA,EAAA1G,KAAAyS,IAA4B/L,GAAA,IAAAlG,KAAA2lF,WAAA3lF,KAAA0lF,WAAA,EAAA1/E,IAAA,EAAAxG,KAAAyS,GAAA/L,GAAAlG,KAAAylF,YAAAz/E,EAAAE,EAA+EF,EAAAhG,KAAAqlF,GAAArlF,KAAAulF,QAAA/lF,KAAA2S,IAAAjM,EAAmC,IAAAnS,GAAAiM,KAAAslF,GAAAtlF,KAAAwlF,QAAAhmF,KAAA4a,IAAAlU,EAAuC,QAAAlG,KAAA4lF,UAAA,CAAuB,GAAA1/E,GAAA1G,KAAA2S,IAAAnS,KAAA4lF,WAAAtpE,EAAA9c,KAAA4a,IAAApa,KAAA4lF,WAAA5uF,EAAAgP,CAA8DA,IAAAhP,EAAAgJ,KAAAqlF,IAAAn/E,GAAAnS,EAAAiM,KAAAslF,IAAAhpE,EAAAtc,KAAAqlF,GAAsCtxF,GAAAiD,EAAAgJ,KAAAqlF,IAAA/oE,GAAAvoB,EAAAiM,KAAAslF,IAAAp/E,EAAAlG,KAAAslF,GAAsC,UAAA34E,GAAAykB,QAAAprB,EAAAjS,IAClc4Y,EAAAk5E,SAAA,SAAA7/E,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAqCqD,EAAAw3E,aAAAtwF,KAAAmM,KAAAgG,EAAAE,EAAAnS,IAAAuoB,EAAAtlB,EAAAsS,IAA6CqD,EAAAk5E,SAAAn+E,UAAAuU,OAAA+jB,OAAArzB,EAAAw3E,aAAAz8E,WAAqEiF,EAAAk5E,SAAAn+E,UAAA7S,YAAA8X,EAAAk5E,SAAoDl5E,EAAAm5E,WAAAn5E,EAAAg1E,MAAA3hD,OAAA,SAAAh6B,EAAAE,GAAkDlG,KAAAilF,GAAAj/E,EAAUhG,KAAAklF,GAAAh/E,GAAU,SAAAF,GAAa,GAAAE,GAAA,GAAAyG,GAAA8G,OAAyF,OAAjEvN,GAAAyrB,WAAA3xB,KAAAklF,GAAAllF,KAAAilF,IAA8B/+E,EAAAvL,eAAAqL,GAAoBE,EAAAiJ,IAAAnP,KAAAilF,IAAe/+E,IACvXyG,EAAAo5E,sBAAAp5E,EAAAg1E,MAAA3hD,OAAA,SAAAh6B,EAAAE,EAAAnS,GAA+DiM,KAAAmlF,GAAAn/E,EAAUhG,KAAAilF,GAAA/+E,EAAUlG,KAAAklF,GAAAnxF,GAAU,SAAAiS,GAAa,GAAAE,GAAAyG,EAAA00E,WAAAI,EAA0B,WAAA90E,GAAA8G,QAAAvN,EAAAF,EAAAhG,KAAAmlF,GAAApmF,EAAAiB,KAAAilF,GAAAlmF,EAAAiB,KAAAklF,GAAAnmF,GAAAmH,EAAAF,EAAAhG,KAAAmlF,GAAAnyE,EAAAhT,KAAAilF,GAAAjyE,EAAAhT,KAAAklF,GAAAlyE,GAAA9M,EAAAF,EAAAhG,KAAAmlF,GAAAlyE,EAAAjT,KAAAilF,GAAAhyE,EAAAjT,KAAAklF,GAAAjyE,MACpItG,EAAAq5E,kBAAAr5E,EAAAg1E,MAAA3hD,OAAA,SAAAh6B,EAAAE,EAAAnS,EAAAuoB,GAA6Dtc,KAAAmlF,GAAAn/E,EAAUhG,KAAAilF,GAAA/+E,EAAUlG,KAAAklF,GAAAnxF,EAAUiM,KAAAolF,GAAA9oE,GAAU,SAAAtW,GAAa,GAAAE,GAAAyG,EAAA00E,WAAAK,EAA0B,WAAA/0E,GAAA8G,QAAAvN,EAAAF,EAAAhG,KAAAmlF,GAAApmF,EAAAiB,KAAAilF,GAAAlmF,EAAAiB,KAAAklF,GAAAnmF,EAAAiB,KAAAolF,GAAArmF,GAAAmH,EAAAF,EAAAhG,KAAAmlF,GAAAnyE,EAAAhT,KAAAilF,GAAAjyE,EAAAhT,KAAAklF,GAAAlyE,EAAAhT,KAAAolF,GAAApyE,GAAA9M,EAAAF,EAAAhG,KAAAmlF,GAAAlyE,EAAAjT,KAAAilF,GAAAhyE,EAAAjT,KAAAklF,GAAAjyE,EAAAjT,KAAAolF,GAAAnyE;GAC5ItG,EAAAs5E,aAAAt5E,EAAAg1E,MAAA3hD,OAAA,SAAAh6B,GAAkD1Q,QAAA0vB,KAAA,4EAAyFhlB,KAAAnG,OAAA,QAAAmM,QAA2B,SAAAA,GAAa,GAAAE,GAAAlG,KAAAnG,MAAkBmM,IAAAE,EAAA1P,OAAA,CAAc,IAAAzC,GAAAyL,KAAAzI,MAAAiP,EAAoBA,IAAAjS,CAAK,IAAAuoB,GAAApW,EAAA,GAAAnS,MAAA,GAAAiD,EAAAkP,EAAAnS,GAAAuV,EAAApD,EAAAnS,EAAAmS,EAAA1P,OAAA,EAAA0P,EAAA1P,OAAA,EAAAzC,EAAA,GAAAmS,IAAAnS,EAAAmS,EAAA1P,OAAA,EAAA0P,EAAA1P,OAAA,EAAAzC,EAAA,GAAAA,EAAA4Y,EAAAi0E,WAAAI,WAA4H,WAAAr0E,GAAA8G,QAAA1f,EAAAuoB,EAAAvd,EAAA/H,EAAA+H,EAAAuK,EAAAvK,EAAAmH,EAAAnH,EAAAiH,GAAAjS,EAAAuoB,EAAAtJ,EAAAhc,EAAAgc,EAAA1J,EAAA0J,EAAA9M,EAAA8M,EAAAhN,GAAAjS,EAAAuoB,EAAArJ,EAAAjc,EAAAic,EAAA3J,EAAA2J,EAAA/M,EAAA+M,EAAAjN,MACxW2G,EAAAu5E,iBAAA,WAAkC,QAAAlgF,MAAc,GAAAE,GAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,GAAAiS,GAAAsW,EAAA,GAAAtW,GAAAhP,EAAA,GAAAgP,EAC3C,OAD2FA,GAAA0B,UAAAzP,KAAA,SAAA+N,EAAAE,EAAAnS,EAAAuoB,GAAmCtc,KAAAmmF,GAAAngF,EAAUhG,KAAAomF,GAAAryF,EAAUiM,KAAAqmF,MAAArgF,EAAA,EAAAE,EAAA,EAAAnS,EAAAuoB,EAAuBtc,KAAAsmF,GAAA,EAAAtgF,EAAA,EAAAE,EAAAnS,EAAAuoB,GAAqBtW,EAAA0B,UAAA6+E,yBAAA,SAAAvgF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAk6B,EAAAl9B,GAA6DgS,IAAAE,EAAAF,GAAAhP,GAAAjD,EAAAiS,IAAAhP,EAAAk6B,IAAAn9B,EAAAmS,GAAAgrB,KAAkC5U,IAAAvoB,EAAAmS,GAAAgrB,GAAA5U,EAAApW,IAAAgrB,EAAAl9B,IAAAsoB,EAAAvoB,GAAAC,GAAAk9B,EAAkClxB,KAAA/H,KAAAiO,EAAAnS,EAAAiS,EAAAsW,IAAoBtW,EAAA0B,UAAA8+E,eAAA,SAAAxgF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAA+CgJ,KAAA/H,KAAAiO,EAAAnS,EAAAiD,GAAAjD,EAAAiS,GAAAhP,GAAAslB,EAAApW,KAAgCF,EAAA0B,UAAA++E,KAAA,SAAAzgF,GAA6B,GAAAE,GAAAF,GAAU,OAAAhG,MAAAmmF,GAAAnmF,KAAAomF,GAAApgF,EAAAhG,KAAAqmF,GAAAngF,EAAAlG,KAAAsmF,GAC9cpgF,EAAAF,GAAK2G,EAAAg1E,MAAA3hD,OAAA,SAAAh6B,GAAsChG,KAAAnG,OAAAmM,MAAkBhG,KAAA0mF,QAAA,GAAe,SAAA1gF,GAAa,GAAA6L,GAAAiU,EAAAvB,EAAAvkB,KAAAnG,MAAsBisB,GAAAvB,EAAA/tB,OAAW,EAAAsvB,GAAAxwB,QAAAwD,IAAA,mCAAoDkN,GAAA8f,GAAA9lB,KAAA0mF,OAAA,KAAuB70E,EAAArS,KAAAzI,MAAAiP,GAAgBA,GAAA6L,EAAK7R,KAAA0mF,OAAA70E,GAAA,EAAAA,EAAA,GAAArS,KAAAzI,MAAAyI,KAAA+wB,IAAA1e,GAAA0S,EAAA/tB,QAAA,GAAA+tB,EAAA/tB,OAAA,IAAAwP,GAAA6L,IAAAiU,EAAA,IAAAjU,EAAAiU,EAAA,EAAA9f,EAAA,EAA+F,IAAA6f,GAAAqL,EAAAl9B,CAAoL,IAA1KgM,KAAA0mF,QAAA,EAAA70E,EAAAgU,EAAAtB,GAAA1S,EAAA,GAAAiU,IAAA5f,EAAAyrB,WAAApN,EAAA,GAAAA,EAAA,IAAApV,IAAAoV,EAAA,IAAAsB,EAAA3f,GAAsEgrB,EAAA3M,EAAA1S,EAAAiU,GAAS9xB,EAAAuwB,GAAA1S,EAAA,GAAAiU,GAAa9lB,KAAA0mF,QAAA70E,EAAA,EAAAiU,EAAAvB,KAAA1S,EAAA,GAAAiU,IAAA5f,EAAAyrB,WAAApN,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,IAAA3W,IAAAoV,EAAAuB,EAAA,IAAAvB,EAAAre,GAA8E,SAC7elG,KAAA7E,MAAA,gBAAA6E,KAAA7E,MAAA,YAAA6E,KAAA7E,KAAA,CAA6D,GAAArH,GAAA,YAAAkM,KAAA7E,KAAA,MAAmC2qB,GAAAtmB,KAAAuc,IAAA8J,EAAA4M,kBAAAvB,GAAAp9B,GAAqC+d,EAAArS,KAAAuc,IAAAmV,EAAAuB,kBAAAz+B,GAAAF,GAAqCA,EAAA0L,KAAAuc,IAAA/nB,EAAAy+B,kBAAAlO,GAAAzwB,GAAqC,KAAA+d,MAAA,GAAc,KAAAiU,MAAAjU,GAAc,KAAA/d,MAAA+d,GAAc9d,EAAAwyF,yBAAA1gE,EAAA9mB,EAAAmyB,EAAAnyB,EAAA/K,EAAA+K,EAAAwlB,EAAAxlB,EAAA+mB,EAAAjU,EAAA/d,GAAkDwoB,EAAAiqE,yBAAA1gE,EAAA7S,EAAAke,EAAAle,EAAAhf,EAAAgf,EAAAuR,EAAAvR,EAAA8S,EAAAjU,EAAA/d,GAAkDkD,EAAAuvF,yBAAA1gE,EAAA5S,EAAAie,EAAAje,EAAAjf,EAAAif,EAAAsR,EAAAtR,EAAA6S,EAAAjU,EAAA/d,OAAkD,eAAAkM,KAAA7E,OAAA2qB,EAAA,SAAA9lB,KAAA2mF,QAAA3mF,KAAA2mF,QAAA,GAAA5yF,EAAAyyF,eAAA3gE,EAAA9mB,EAAAmyB,EAAAnyB,EAAA/K,EAAA+K,EAAAwlB,EAAAxlB,EAC/Y+mB,GAAAxJ,EAAAkqE,eAAA3gE,EAAA7S,EAAAke,EAAAle,EAAAhf,EAAAgf,EAAAuR,EAAAvR,EAAA8S,GAAA9uB,EAAAwvF,eAAA3gE,EAAA5S,EAAAie,EAAAje,EAAAjf,EAAAif,EAAAsR,EAAAtR,EAAA6S,GAA4E,WAAAnZ,GAAA8G,QAAA1f,EAAA0yF,KAAAzgF,GAAAsW,EAAAmqE,KAAAzgF,GAAAhP,EAAAyvF,KAAAzgF,SAA6D2G,EAAAi6E,mBAAA,SAAA5gF,GAAqC1Q,QAAA0vB,KAAA,oFAAiGrY,EAAAu5E,iBAAAryF,KAAAmM,KAAAgG,GAAoChG,KAAA7E,KAAA,aAAuB6E,KAAA0mF,QAAA,GAAgB/5E,EAAAi6E,mBAAAl/E,UAAAuU,OAAA+jB,OAAArzB,EAAAu5E,iBAAAx+E,WAC1ViF,EAAAoE,YAAA,SAAA/K,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAwCqD,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,cAAwB6E,KAAAmrC,YAAiBhtC,MAAA6H,EAAA5H,OAAA8H,EAAAqkD,MAAAx2D,EAAAs2D,cAAA/tC,EAAAguC,eAAAtzD,EAAAwzD,cAAAlhD,GAA2EtJ,KAAAkqC,mBAAA,GAAAv9B,GAAAw8D,kBAAAnjE,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,IAAkEtJ,KAAAgrC,iBAAsBr+B,EAAAoE,YAAArJ,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAoEiF,EAAAoE,YAAArJ,UAAA7S,YAAA8X,EAAAoE,YAA0DpE,EAAAk6E,aAAAl6E,EAAAoE,YAC5YpE,EAAAw8D,kBAAA,SAAAnjE,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAA8C,QAAAib,GAAAve,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAAuB,EAAAD,EAAA2T,EAAAC,GAAkC,GAAAC,GAAApwB,EAAAuc,EAAA8T,EAAApV,EAAAiV,EAAAI,EAAAtwB,EAAA,EAAAuwB,EAAAtV,EAAA,EAAAuV,EAAAhU,EAAA,CAAkCvB,GAAAsB,EAAA,CAAM,QAAAwsC,GAAA74B,EAAA,EAAA84B,EAAAhpD,EAAA,EAAAipD,EAAA,GAAA5lD,GAAA8G,QAAA++C,EAAA,EAA4CA,EAAAH,EAAIG,IAAA,OAAAoM,GAAApM,EAAA74B,EAAAE,EAAA8kC,EAAA,EAAyBA,EAAAp6C,EAAIo6C,IAAApM,EAAAvsD,IAAA24D,EAAAjlC,EAAAE,GAAAtd,EAAAi2C,EAAArsD,GAAA04D,EAAA5nE,EAAAu7D,EAAAx+D,GAAA+lC,EAAA9lC,EAAA8d,GAAAygD,EAAAxzD,EAAA/K,EAAA8d,EAAA,GAAAygD,EAAAv/C,EAAAhf,EAAA8d,EAAA,GAAAygD,EAAAt/C,EAAAs/C,EAAAvsD,GAAA,EAAAusD,EAAArsD,GAAA,EAAAqsD,EAAAx+D,GAAA,EAAA+xB,EAAA,KAAAhyB,EAAAge,GAAAygD,EAAAxzD,EAAAjL,EAAAge,EAAA,GAAAygD,EAAAv/C,EAAAlf,EAAAge,EAAA,GAAAygD,EAAAt/C,EAAAke,EAAAvL,GAAA+4C,EAAA94C,EAAAsL,EAAAvL,EAAA,KAAA4sC,EAAAh5B,EAAA1nB,GAAA,EAAA8T,GAAA,EAAAtc,GAAA,CAAmK,KAAAkpD,EAAA,EAAQA,EAAAh5B,EAAIg5B,IAAA,IAAAmM,EAAA,EAAYA,EAAA94C,EAAI84C,IAAA34D,EAAAgzB,EAAA2lC,EAAAp6C,GAAAiuC,EAAA,GAAAtsD,EAAA8yB,GAAA2lC,EAAA,GAAAp6C,GAAAiuC,EAAA,GAAAz+D,EAAAilC,GAAA2lC,EAAA,GAAAp6C,EAAAiuC,EAAAthC,EAAAwH,GAAAM,EAAA2lC,EAAAp6C,EAAAiuC,EAAAthC,EAAAwH,EAAA,GAAA1yB,EAAAkrB,EAAAwH,EAAA,GAAA3kC,EAAAm9B,EAAAwH,EAAA,GAAA1yB,EAAAkrB,EAAAwH,EAAA,GAAAxyB,EAAAgrB,EAAAwH,EAAA,GAAA3kC,EAAA2kC,GAAA,EACpY45B,GAAA,CAAKzgD,GAAAs6B,SAAAlT,EAAAq5B,EAAA74B,GAAkBR,GAAAq5B,EAAKt5B,GAAA1vB,EAAKqD,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,oBAA8B6E,KAAAmrC,YAAiBhtC,MAAA6H,EAAA5H,OAAA8H,EAAAqkD,MAAAx2D,EAAAs2D,cAAA/tC,EAAAguC,eAAAtzD,EAAAwzD,cAAAlhD,EAA2E,IAAAuI,GAAA7R,IAAWsc,GAAA9c,KAAAzI,MAAAulB,IAAA,EAAmBtlB,EAAAwI,KAAAzI,MAAAC,IAAA,EAAmBsS,EAAA9J,KAAAzI,MAAAuS,IAAA,CAAmB,IAAAwc,GAAA,SAAA9f,EAAAE,EAAAnS,GAAsD,MAAhCiS,GAAA,GAAAA,EAAA,IAAAE,EAAA,MAAAF,EAAA,IAAAjS,EAAA,KAAgCiS,IAAAjS,EAAA,IAAAmS,EAAA,MAAwBoW,EAAAtlB,EAAAsS,GAAAuc,EAAA,SAAA7f,EAAAE,EAAAnS,GAAmD,MAAzBiS,GAAA,EAAAA,EAAAE,EAAA,EAAAF,EAAAjS,EAAA,EAAgBiS,GAAAjS,EAAAmS,EAAA,EAAS,EAAAF,GAAWsW,EAAAtlB,EAAAsS,GAAA4nB,EAAA,UAAArL,EAAAwiB,YAAAJ,aAAApiB,GAAA7xB,EAAA,GAAA4jC,cAAA,EAAA9R,GAAAhyB,EAAA,GAAA8jC,cAAA,EAAA9R,GAAAqL,EAAA,GAAAyG,cAAA,EAC3Y9R,GAAAhU,EAAA,EAAA8T,EAAA,EAAA8S,EAAA,EAAAM,EAAA,EAAAC,EAAA,CAAuB1U,GAAA,kBAAAxwB,EAAAmS,EAAAF,EAAAsD,EAAAtS,EAAA,GAAiCutB,EAAA,iBAAAxwB,EAAAmS,GAAAF,EAAAsD,EAAAtS,EAAA,GAAiCutB,EAAA,gBAAAve,EAAAjS,EAAAmS,EAAAoW,EAAAhT,EAAA,GAA+Bib,EAAA,iBAAAve,EAAAjS,GAAAmS,EAAAoW,EAAAhT,EAAA,GAAiCib,EAAA,iBAAAve,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAA,GAAgCutB,EAAA,kBAAAve,EAAAE,GAAAnS,EAAAuoB,EAAAtlB,EAAA,GAAkCgJ,KAAA+rC,SAAA,GAAAp/B,GAAA45B,gBAAArV,EAAA,IAA8ClxB,KAAAgsC,aAAA,cAAAr/B,GAAA45B,gBAAAvyC,EAAA,IAA6DgM,KAAAgsC,aAAA,YAAAr/B,GAAA45B,gBAAAzyC,EAAA,IAA2DkM,KAAAgsC,aAAA,QAAAr/B,GAAA45B,gBAAApV,EAAA,KAAwDxkB,EAAAw8D,kBAAAzhE,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WACzbiF,EAAAw8D,kBAAAzhE,UAAA7S,YAAA8X,EAAAw8D,kBAAsEx8D,EAAAm6E,eAAA,SAAA9gF,EAAAE,EAAAnS,EAAAuoB,GAAuC3P,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,iBAA2B6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAykD,SAAAvkD,EAAAwkD,WAAA32D,EAAA42D,YAAAruC,GAAgDtc,KAAAkqC,mBAAA,GAAAv9B,GAAAo6E,qBAAA/gF,EAAAE,EAAAnS,EAAAuoB,KAAkE3P,EAAAm6E,eAAAp/E,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAuEiF,EAAAm6E,eAAAp/E,UAAA7S,YAAA8X,EAAAm6E,eAC5Wn6E,EAAAo6E,qBAAA,SAAA/gF,EAAAE,EAAAnS,EAAAuoB,GAA6C3P,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,uBAAiC6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAykD,SAAAvkD,EAAAwkD,WAAA32D,EAAA42D,YAAAruC,GAAgDtW,KAAA,GAAQE,EAAA,SAAAA,EAAA1G,KAAAC,IAAA,EAAAyG,GAAA,EAA6BnS,EAAA,SAAAA,IAAA,EAAiBuoB,EAAA,SAAAA,IAAA,EAAA9c,KAAAyS,EAAyB,IAAAjb,GAAAkP,EAAA,EAAAoD,EAAA,GAAAsuB,cAAA,EAAA5gC,GAAAutB,EAAA,GAAAqT,cAAA,EAAA5gC,KAAA,GAAA4gC,cAAA,EAAA5gC,EAAkFutB,GAAA,KAAOvtB,EAAA,MAAQA,EAAA,KAAQ,QAAA6a,GAAA,EAAAiU,EAAA,EAAAD,EAAA,EAAoBhU,GAAA3L,EAAK2L,IAAAiU,GAAA,EAAAD,GAAA,GAAe,GAAAqL,GAAAn9B,EAAA8d,EAAA3L,EAAAoW,CAAchT,GAAAwc,GAAA9f,EAAAxG,KAAA2S,IAAA+e,GAAmB5nB,EAAAwc,EAAA,GAAA9f,EAAAxG,KAAA4a,IAAA8W,GAAqB3M,EAAAuB,EAAA,KAAS9uB,EAAA6uB,IAAAvc,EAAAwc,GAAA9f,EAAA,KAAkBhP,EAAA6uB,EAAA,IAAAvc,EAAAwc,EAAA,GAAA9f,EAAA,KAC7d,IADmfjS,KACnf+xB,EAAA,EAAQA,GAAA5f,EAAK4f,IAAA/xB,EAAA8L,KAAAimB,IAAA,IAAoB9lB,MAAA+rC,SAAA,GAAAp/B,GAAA45B,gBAAA,GAAA0B,aAAAl0C,GAAA,IAA+DiM,KAAAgsC,aAAA,cAAAr/B,GAAA45B,gBAAAj9B,EAAA,IAA6DtJ,KAAAgsC,aAAA,YAAAr/B,GAAA45B,gBAAAhiB,EAAA,IAA2DvkB,KAAAgsC,aAAA,QAAAr/B,GAAA45B,gBAAAvvC,EAAA,IAAuDgJ,KAAAi8B,eAAA,GAAAtvB,GAAA+qB,OAAA,GAAA/qB,GAAA8G,QAAAzN,IAA2D2G,EAAAo6E,qBAAAr/E,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAmFiF,EAAAo6E,qBAAAr/E,UAAA7S,YAAA8X,EAAAo6E,qBAChap6E,EAAAq6E,uBAAA,SAAAhhF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAuD,QAAAiU,GAAA/xB,GAAc,GAAAiD,GAAAsS,EAAAwc,EAAAhyB,EAAA,GAAA6Y,GAAAykB,QAAAF,EAAA,GAAAvkB,GAAA8G,QAAAzf,EAAA,EAAAklC,GAAA,IAAAnlC,EAAAiS,EAAAE,EAAAwzB,GAAA,IAAA3lC,EAAA,IAAqF,KAAJuV,EAAA0vB,EAAIhiC,EAAA,EAAQA,GAAAslB,EAAKtlB,IAAA8a,EAAAsmB,OAAAY,EAAA,EAAApnB,EAAA8nB,EAAA,GAAA9T,EAAAwS,OAAAY,EAAA,EAAAU,EAAA,GAAA5lC,EAAAiL,EAAA,GAAAjL,EAAAkf,EAAA,GAAA0lB,EAAA4O,MAAAtO,EAAAllC,EAAAiL,EAAAjL,EAAAkf,GAAAgmB,GAAmF,KAAJlT,EAAAkT,EAAIhiC,EAAA,EAAQA,GAAAslB,EAAKtlB,IAAA,CAAK,GAAA2iC,GAAA3iC,EAAAslB,EAAAzK,EAAA0S,EAAAqV,EAAAp6B,KAAA2S,IAAAwnB,KAAAn6B,KAAA4a,IAAAuf,EAA0CzI,GAAAnyB,EAAAm6B,EAAAS,EAAQzI,EAAAle,EAAApB,EAAA8nB,EAAQxI,EAAAje,EAAAimB,EAAAU,EAAQ9nB,EAAAsmB,OAAAY,EAAA9H,EAAAnyB,EAAAmyB,EAAAle,EAAAke,EAAAje,GAAwB2S,EAAAwS,OAAAY,EAAA,EAAAU,EAAA,GAAkB5lC,EAAAiL,EAAA,GAAA66B,EAAA,GAAY9lC,EAAAkf,EAAA,GAAA2mB,EAAAD,EAAA,GAAchB,EAAA4O,MAAAtO,EAAAllC,EAAAiL,EAAAjL,EAAAkf,GAAmBgmB,IAAI,IAAAhiC,EAAA,EAAQA,EAAAslB,EAAItlB,IAAAlD,EAAAwV,EAAAtS,EAAAk6B,EAAApL,EAAA9uB,GAAA,IAAAjD,GAAAo9B,EAAAE,KAAA4H,EAAA/H,GAAA+H,IAAA9H,EAAAE,KAAA4H,EAAA/H,EAAA,KAAAC,EAAAE,KAAA4H,EACrb/H,EAAA,GAAA+H,IAAA9H,EAAAE,KAAA4H,EAAA/H,IAAA+H,IAAA9H,EAAAE,KAAA4H,EAAAnlC,GAAAmlC,IAAAjlC,GAAA,CAA+C6xB,GAAAsmB,SAAAhT,EAAAnlC,GAAA,IAAAD,EAAA,KAA2BolC,GAAAnlC,EAAK2Y,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,yBAAmC6E,KAAAmrC,YAAiByf,UAAA5kD,EAAA6kD,aAAA3kD,EAAA9H,OAAArK,EAAA+2D,eAAAxuC,EAAAguC,eAAAtzD,EAAA+zD,UAAAzhD,EAAAohD,WAAAnmC,EAAAomC,YAAA94C,EAA8G,IAAAgU,GAAA7lB,IAAWgG,GAAA,SAAAA,IAAA,GAAkBE,EAAA,SAAAA,IAAA,GAAkBnS,EAAA,SAAAA,IAAA,IAAmBuoB,EAAA9c,KAAAzI,MAAAulB,IAAA,EAAmBtlB,EAAAwI,KAAAzI,MAAAC,IAAA,EAAmBsS,EAAA,SAAAA,KAAkBib,EAAA,SAAAA,IAAA,EAAiB1S,EAAA,SAAAA,IAAA,EAAArS,KAAAyS,EAAyB,IAAAif,GAAA,GAAQ,IAAA5nB,IAAA,EAAAtD,GAAAkrB,IAAA,EAAAhrB,GAAAgrB,IAA4B,IAAAl9B,GAAA,WAAiB,GAAAgS,IAAAsW,EAAA,IAC1etlB,EAAA,EAA+B,QAAzB,IAAAsS,IAAAtD,IAAAsW,EAAA,GAAA4U,EAAA5U,EAAA4U,GAAyBlrB,KAASlS,EAAA,WAAgB,GAAAkS,GAAAsW,EAAAtlB,EAAA,CAA+B,QAAnB,IAAAsS,IAAAtD,GAAAsW,EAAA4U,EAAA,GAAmBlrB,KAASmrB,EAAA,GAAAxkB,GAAA45B,gBAAA,UAAAzyC,EAAAu0C,YAAAJ,aAAAn0C,GAAA,GAAAge,EAAA,GAAAnF,GAAA45B,gBAAA,GAAA3O,cAAA,EAAA5jC,GAAA,GAAA4xB,EAAA,GAAAjZ,GAAA45B,gBAAA,GAAA3O,cAAA,EAAA5jC,GAAA,GAAA0kC,EAAA,GAAA/rB,GAAA45B,gBAAA,GAAA3O,cAAA,EAAA5jC,GAAA,GAAAglC,EAAA,EAAAC,EAAA,EAAAC,KAAAtnB,EAAA7d,EAAA,EAAAolC,EAAA,GAAiQ,WAAY,GAAA7vB,GAAAwc,EAAAhyB,EAAA,GAAA6Y,GAAA8G,QAAAyd,EAAA,GAAAvkB,GAAA8G,QAAAzf,EAAA,EAAAulC,GAAArzB,EAAAF,GAAAjS,CAA8D,KAAA+xB,EAAA,EAAQA,GAAA9uB,EAAK8uB,IAAA,CAAK,GAAA0T,MAAAC,EAAA3T,EAAA9uB,EAAA0iC,EAAAD,GAAAvzB,EAAAF,IAA2B,KAAAsD,EAAA,EAAQA,GAAAgT,EAAKhT,IAAA,CAAK,GAAAqwB,GAAArwB,EAAAgT,CAAU4U,GAAAnyB,EACpf26B,EAAAl6B,KAAA4a,IAAAuf,EAAA9nB,EAAA0S,GAAkB2M,EAAAle,GAAAymB,EAAA1lC,EAAA6d,EAAWsf,EAAAje,EAAAymB,EAAAl6B,KAAA2S,IAAAwnB,EAAA9nB,EAAA0S,GAAsBzS,EAAAsmB,OAAAY,EAAA9H,EAAAnyB,EAAAmyB,EAAAle,EAAAke,EAAAje,GAAwBnf,EAAA0wB,KAAA0M,IAAU,IAAAlrB,GAAA,IAAA8f,GAAA,IAAA5f,GAAA4f,IAAA9uB,KAAAlD,EAAAiL,EAAAS,KAAA4a,IAAAuf,EAAA9nB,EAAA0S,GAAAzwB,EAAAmf,EAAAzT,KAAA2S,IAAAwnB,EAAA9nB,EAAA0S,IAAsEzwB,EAAAw9B,KAAA9xB,KAAAgmB,KAAA1xB,EAAAiL,EAAAjL,EAAAiL,EAAAjL,EAAAmf,EAAAnf,EAAAmf,GAAAsmB,GAAAllB,YAAiDuR,EAAAwS,OAAAY,EAAAllC,EAAAiL,EAAAjL,EAAAkf,EAAAlf,EAAAmf,GAAwBylB,EAAA4O,MAAAtO,EAAAW,EAAA,EAAAF,GAAiBD,EAAA35B,KAAAm5B,GAAUA,IAAIE,EAAAr5B,KAAA25B,GAAU,IAAAlwB,EAAA,EAAQA,EAAAgT,EAAIhT,IAAA,IAAAwc,EAAA,EAAYA,EAAA9uB,EAAI8uB,IAAAhyB,EAAAolC,EAAApT,EAAA,GAAAxc,GAAA4nB,EAAAgI,EAAApT,EAAA,GAAAxc,EAAA,GAAAiwB,EAAAL,EAAApT,GAAAxc,EAAA,GAAA6nB,EAAAE,KAAA4H,EAAAC,EAAApT,GAAAxc,IAAA2vB,IAAA9H,EAAAE,KAAA4H,EAAAnlC,GAAAmlC,IAAA9H,EAAAE,KAAA4H,EAAAM,GAAAN,IAAA9H,EAAAE,KAAA4H,EAAAnlC,GAAAmlC,IAAA9H,EAAAE,KAAA4H,EAAA/H,GAAA+H,IAAA9H,EAAAE,KAAA4H,EAAAM,GAAAN,IAAAjlC,GAAA,CAAqJ6xB,GAAAsmB,SAAAhT,EAAAnlC,EAAA,GAAkBmlC,GAAAnlC,MAAS,IAAAsV,IAAA,EAAAtD,GAAA8f,GAAA,KAAA5f,GAAA4f,GAAA,IACzd9lB,KAAA+rC,SAAA5a,GAAiBnxB,KAAAgsC,aAAA,WAAAl6B,GAAgC9R,KAAAgsC,aAAA,SAAApmB,GAA8B5lB,KAAAgsC,aAAA,KAAAtT,IAA2B/rB,EAAAq6E,uBAAAt/E,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAqFiF,EAAAq6E,uBAAAt/E,UAAA7S,YAAA8X,EAAAq6E,uBAC/Lr6E,EAAAs6E,iBAAA,SAAAjhF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAAiDlF,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,mBAA6B6E,KAAAmrC,YAAiByf,UAAA5kD,EAAA6kD,aAAA3kD,EAAA9H,OAAArK,EAAA+2D,eAAAxuC,EAAAguC,eAAAtzD,EAAA+zD,UAAAzhD,EAAAohD,WAAAnmC,EAAAomC,YAAA94C,GAA8G7R,KAAAkqC,mBAAA,GAAAv9B,GAAAq6E,uBAAAhhF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,IAA2E7R,KAAAgrC,iBAAsBr+B,EAAAs6E,iBAAAv/E,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAyEiF,EAAAs6E,iBAAAv/E,UAAA7S,YAAA8X,EAAAs6E,iBACjZt6E,EAAAu6E,mBAAA,SAAAlhF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAAiD5X,EAAAq6E,uBAAAnzF,KAAAmM,KAAA,EAAAgG,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAAwDvkB,KAAA7E,KAAA,qBAA+B6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAA5H,OAAA8H,EAAA4kD,eAAA/2D,EAAAu2D,eAAAhuC,EAAAouC,WAAAphD,EAAAqhD,YAAApmC,IAAiF5X,EAAAu6E,mBAAAx/E,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAiFiF,EAAAu6E,mBAAAx/E,UAAA7S,YAAA8X,EAAAu6E,mBAC3Tv6E,EAAAw6E,aAAA,SAAAnhF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAA2C5X,EAAAs6E,iBAAApzF,KAAAmM,KAAA,EAAAgG,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAAkDvkB,KAAA7E,KAAA,eAAyB6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAA5H,OAAA8H,EAAA4kD,eAAA/2D,EAAAu2D,eAAAhuC,EAAAyuC,UAAA/zD,EAAA0zD,WAAAphD,EAAAqhD,YAAApmC,IAA6F5X,EAAAw6E,aAAAz/E,UAAAuU,OAAA+jB,OAAArzB,EAAAs6E,iBAAAv/E,WAA6EiF,EAAAw6E,aAAAz/E,UAAA7S,YAAA8X,EAAAw6E,aACjTx6E,EAAAy6E,cAAA,SAAAphF,EAAAE,GAAkC,QAAAnS,GAAAiS,EAAAE,GAAgB,MAAAF,GAAAE,EAAWyG,EAAAwqB,eAAAtjC,KAAAmM,KAAgC,IAAgE6R,GAAhEyK,EAAA9c,KAAA2S,IAAAxF,EAAAnN,KAAAs7B,SAAA,SAAA50B,IAAA,IAAAlP,GAAA,KAAAsS,KAAgEib,GAAA,YAAmBve,aAAA2G,GAAAwqB,gBAAAtlB,EAAA,GAAAlF,GAAA4M,SAAA1H,EAAAq4B,mBAAAlkC,IAAA6L,EAAA7L,EAAArP,QAA6Fkb,EAAAm5B,gBAAkBn5B,EAAAy4B,oBAAuB,IAAAxkB,GAAAjU,EAAA2H,QAAiB3H,KAAAq3B,KAAU,QAAArjB,GAAA,EAAAqL,EAAArf,EAAArb,OAAuBqvB,EAAAqL,EAAIrL,IAAA,OAAA7xB,GAAA6d,EAAAgU,GAAA/xB,EAAA,EAAuB,EAAAA,EAAIA,IAAA,CAAKkD,EAAA,GAAAhD,EAAAuwB,EAAAzwB,IAAakD,EAAA,GAAAhD,EAAAuwB,GAAAzwB,EAAA,OAAmBkD,EAAAyrC,KAAA1uC,EAAU,IAAAo9B,GAAAn6B,EAAAsH,UAAmB,UAAAgL,EAAA6nB,GAAA7nB,EAAA6nB,IAAoBk2D,MAAArwF,EAAA,GAAAswF,MAAAtwF,EAAA,GAAAuwF,MAAA1hE,EAC7d2hE,MAAA,QAAal+E,EAAA6nB,GAAAq2D,MAAA3hE,EAAc7uB,IAAK,KAAAm6B,IAAA7nB,GAAAib,EAAAjb,EAAA6nB,IAAA,SAAA5M,EAAAijE,OAAA31E,EAAA0S,EAAAgjE,OAAAhwD,OAAAnc,IAAAvJ,EAAA0S,EAAAijE,OAAAjwD,SAAAjb,KAAAuJ,EAAAC,EAAAvB,EAAA8iE,OAAArwF,EAAA6I,KAAAgmB,EAAA9mB,GAAA/H,EAAA6I,KAAAgmB,EAAA7S,GAAAhc,EAAA6I,KAAAgmB,EAAA5S,GAAA4S,EAAAC,EAAAvB,EAAA+iE,OAAAtwF,EAAA6I,KAAAgmB,EAAA9mB,GAAA/H,EAAA6I,KAAAgmB,EAAA7S,GAAAhc,EAAA6I,KAAAgmB,EAAA5S,GAAqLjT,MAAAgsC,aAAA,cAAAr/B,GAAA45B,gBAAA,GAAA3O,cAAA5gC,GAAA,KAAgF2V,EAAAy6E,cAAA1/E,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAA4EiF,EAAAy6E,cAAA1/E,UAAA7S,YAAA8X,EAAAy6E,cACjXz6E,EAAA+3E,gBAAA,SAAA1+E,EAAAE,GAAoC,mBAAAF,KAAA2G,EAAA4M,SAAA1lB,KAAAmM,WAAA7E,KAAA,kBAAA6K,EAAAiE,MAAA04B,QAAA38B,SAAAhG,KAAAynF,aAAAzhF,EAAAE,GAAAlG,KAAAsqC,uBAA2J39B,EAAA+3E,gBAAAh9E,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAwEiF,EAAA+3E,gBAAAh9E,UAAA7S,YAAA8X,EAAA+3E,gBAAkE/3E,EAAA+3E,gBAAAh9E,UAAA+/E,aAAA,SAAAzhF,EAAAE,GAA2D,OAAAnS,GAAAiS,EAAAxP,OAAA8lB,EAAA,EAAuBA,EAAAvoB,EAAIuoB,IAAAtc,KAAA0nF,SAAA1hF,EAAAsW,GAAApW,IAC/ZyG,EAAA+3E,gBAAAh9E,UAAAggF,SAAA,SAAA1hF,EAAAE,GAAuD,QAAAnS,GAAAiS,EAAAE,EAAAnS,GAAgF,MAA9DmS,IAAA5Q,QAAAC,MAAA,6CAA8D2Q,EAAAvP,QAAAgE,eAAA5G,GAAAob,IAAAnJ,GAA0C,QAAAsW,GAAAtW,EAAAE,EAAAnS,GAAkB,GAAAuoB,GAAA,EAAAA,EAAAtW,EAAAjH,EAAAmH,EAAAnH,EAAA/H,EAAAgP,EAAAgN,EAAA9M,EAAA8M,EAAA1J,EAAAvV,EAAAgL,EAAAiH,EAAAjH,EAAAwlB,EAAAxwB,EAAAif,EAAAhN,EAAAgN,EAAAnB,EAAAyK,IAAAtlB,GAA0D,IAAAwI,KAAA+wB,IAAAjU,EAAAiI,EAAAvtB,EAAAsS,GAAAuS,OAAAC,QAAA,CAAqC,GAAAgK,GAAAtmB,KAAAgmB,KAAA3T,GAAAgU,EAAArmB,KAAAgmB,KAAAlc,IAAAib,KAAA1S,EAAA3L,EAAAnH,EAAA/H,EAAA8uB,CAAwI,IAAtF5f,IAAA8M,EAAAsJ,EAAAwJ,EAAUxc,IAAAvV,EAAAgL,EAAAwlB,EAAAsB,EAAAhU,GAAA0S,GAAAxwB,EAAAif,EAAA1J,EAAAuc,EAAA3f,GAAAoD,IAAAgT,EAAAiI,EAAAvtB,EAAAsS,GAA0CvV,EAAA8d,EAAAyK,EAAAhT,EAAAtD,EAAAjH,EAAYiH,EAAAE,EAAAlP,EAAAsS,EAAAtD,EAAAgN,EAAYsJ,EAAAvoB,IAAAiS,IAAU,GAAAsW,EAAA,UAAA3P,GAAAykB,QAAAr9B,EAAAiS,EAAsCsW,GAAA9c,KAAAgmB,KAAAlJ,EAAA,OAAiBtW,IAAA,EAAAsW,EAAAT,OAAAC,QACjexS,EAAAuS,OAAAC,UAAA9V,GAAA,GAAAsW,GAAAT,OAAAC,QAAAxS,GAAAuS,OAAAC,UAAA9V,GAAA,GAAAxG,KAAAwc,KAAAhlB,KAAAwI,KAAAwc,KAAAuI,KAAAve,GAAA,GAAAA,GAAAjS,GAAAiD,EAAAgP,EAAAsW,IAAA9c,KAAAgmB,KAAA3T,KAAA9d,EAAAuoB,EAAAtW,EAAAhP,EAAAslB,EAAA9c,KAAAgmB,KAAA3T,EAAA,GAAgK,WAAAlF,GAAAykB,QAAAr9B,EAAAuoB,EAAAtW,EAAAsW,GAAkC,QAAAtlB,GAAAgP,EAAAE,GAAgB,GAAAnS,GAAAuoB,CAAQ,KAAAk2C,EAAAxsD,EAAAxP,OAAe,KAAAg8D,GAAO,CAAEz+D,EAAAy+D,EAAIl2C,EAAAk2C,EAAA,EAAM,EAAAl2C,MAAAtW,EAAAxP,OAAA,EAAoB,QAAAQ,GAAA,EAAAsS,EAAA6nB,EAAA,EAAAD,EAAAl6B,EAAA,EAAwBA,EAAAsS,EAAItS,IAAA,CAAK,GAAAutB,GAAA8tC,EAAAr7D,EAAA6a,EAAAwgD,GAAAr7D,EAAA,GAAA8uB,EAAA5f,EAAAnS,EAAAwwB,IAAAre,EAAAoW,EAAAiI,EAAAsB,EAAA3f,EAAAoW,EAAAzK,IAAA3L,EAAAnS,EAAA8d,EAAAiU,IAAAwT,EAAA/U,IAAA+U,EAAAzT,IAAAyT,EAAAznB,IAAAynB,CAA4ED,GAAA6P,MAAArpC,KAAA,GAAA8M,GAAAw5B,MAAArgB,EAAAvB,EAAA1S,EAAA,cAAiDwnB,EAAA6P,MAAArpC,KAAA,GAAA8M,GAAAw5B,MAAA5hB,EAAAsB,EAAAhU,EAAA,cAAiDiU,EAAAkT,EAAA2uD,mBAAAtuD,EAC/dvT,EAAAvB,EAAAsB,EAAAhU,GAASwnB,EAAA8P,cAAA,GAAAtpC,MAAAimB,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAA0CuT,EAAA8P,cAAA,GAAAtpC,MAAAimB,EAAA,GAAAA,EAAA,GAAAA,EAAA,OAA4C,QAAAxc,GAAAtD,EAAAE,EAAAnS,GAAkBslC,EAAA7f,SAAA3Z,KAAA,GAAA8M,GAAA8G,QAAAzN,EAAAE,EAAAnS,IAA0C,QAAAwwB,GAAAve,EAAAE,EAAAnS,GAAkBiS,GAAAszB,EAAKpzB,GAAAozB,EAAKvlC,GAAAulC,EAAKD,EAAA6P,MAAArpC,KAAA,GAAA8M,GAAAw5B,MAAAngC,EAAAE,EAAAnS,EAAA,cAAiDiS,EAAAgzB,EAAA4uD,cAAAvuD,EAAArzB,EAAAE,EAAAnS,GAA2BslC,EAAA8P,cAAA,GAAAtpC,KAAAmG,GAA2B,GACnS4f,GAAAqT,EAAAC,EAAAtnB,EAAAunB,EADmStnB,EAAA,SAAA3L,EAAA2hF,OAAA3hF,EAAA2hF,OAAA,IAAA/hE,EAAA,SAAA5f,EAAA4hF,eAAA5hF,EAAA4hF,eAAA,EAAAjiE,EAAA,SAAA3f,EAAA6hF,UAAA7hF,EAAA6hF,UAAAjiE,EAAA,EAAAoL,EAAA,SAAAhrB,EAAA8hF,cAAA9hF,EAAA8hF,cAAA,EAAAh0F,EAAA,SAAAkS,EAAA+hF,cAAA/hF,EAAA+hF,aACnSn0F,EAAA,SAAAoS,EAAAgiF,cAAAhiF,EAAAgiF,cAAA,GAAA/2D,EAAA,SAAAjrB,EAAAiiF,MAAAjiF,EAAAiiF,MAAA,EAAAr2E,EAAA5L,EAAAkiF,YAAA1vD,GAAA,EAAAM,EAAA,SAAA9yB,EAAAmiF,YAAAniF,EAAAmiF,YAAA17E,EAAA+3E,gBAAA4D,gBAAwLx2E,KAAA8T,EAAA9T,EAAAiwE,gBAAA5wD,GAAAuH,GAAA,EAAA1kC,GAAA,EAAAilC,EAAA,SAAA/yB,EAAAqiF,OAAAriF,EAAAqiF,OAAA,GAAA57E,GAAA67E,aAAAC,aAAA32E,EAAAqf,IAAA,IAAA+H,EAAA,GAAAvsB,GAAA8G,QAAA7B,EAAA,GAAAjF,GAAA8G,QAAA0lB,EAAA,GAAAxsB,GAAA8G,SAA2Kzf,IAAA6xB,EAAAC,EAAAoL,EAAA,EAAa,IAAAje,GAAAD,EAAAomB,EAAAC,EAAAr5B,KAAAs5B,EAAAt5B,KAAAwZ,SAAAhjB,OAAAsb,EAAA9L,EAAAg/E,cAAAlxF,KAAAge,EAAAizE,MAAAxrD,EAAAznB,EAAA0yE,KAAiF,IAAA1yE,GAAAnF,EAAA00E,WAAAG,YAAA1tF,GAAA,CAC7b,IADoeA,IAAA40F,UACxe11E,EAAA,EAAIomB,EAAAG,EAAA/iC,OAAewc,EAAAomB,EAAIpmB,IAAAC,EAAAsmB,EAAAvmB,GAAArG,EAAA00E,WAAAG,YAAAvuE,KAAAsmB,EAAAvmB,GAAAC,EAAAy1E,UAA+D52E,IAAA,EAAK,GAAA0nB,GAAA7sB,EAAA00E,WAAAE,iBAAAztF,EAAAylC,GAAAE,EAAA3lC,CAAqD,KAAJkf,EAAA,EAAIomB,EAAAG,EAAA/iC,OAAewc,EAAAomB,EAAIpmB,IAAAC,EAAAsmB,EAAAvmB,GAAAlf,IAAA6W,OAAAsI,EAAyB,IAAAymB,GAAAC,EAAAC,EAAAC,EAAAC,EAAAw4B,EAAAD,EAAAv+D,EAAA0C,OAAA+7D,EAAA/4B,EAAAhjC,OAAAsb,KAAA0gD,EAAA,CAAgE,KAAjB54B,EAAAH,EAAAjjC,OAAWkjC,EAAAE,EAAA,EAAMD,EAAA64B,EAAA,EAAUA,EAAA54B,EAAI44B,IAAA94B,IAAAC,IAAAD,IAAAE,IAAAF,EAAA,GAAAC,IAAAC,IAAAD,EAAA,GAAA7nB,EAAA0gD,GAAAl2C,EAAAmd,EAAA+4B,GAAA/4B,EAAAC,GAAAD,EAAAE,GAA6D,IAAAglC,GAAAC,KAAAR,EAAAtsD,EAAAnH,QAA6B,KAAJqI,EAAA,EAAIomB,EAAAG,EAAA/iC,OAAewc,EAAAomB,EAAIpmB,IAAA,CAAsC,IAAjCC,EAAAsmB,EAAAvmB,GAAO2rD,KAAKnM,EAAA,EAAI54B,EAAA3mB,EAAAzc,OAAWkjC,EAAAE,EAAA,EAAMD,EAAA64B,EAAA,EAAUA,EAAA54B,EAAI44B,IAAA94B,IAAAC,IAAAD,IAAAE,IAAAF,EAAA,GAAAC,IAAAC,IAAAD,EAAA,GAAAglC,EAAAnM,GAAAl2C,EAAArJ,EAAAu/C,GAAAv/C,EAAAymB,GAAAzmB,EAAA0mB,GAA6DilC,GAAA/+D,KAAA8+D,GAAWP,EACnfA,EAAAzzD,OAAAg0D,GAAY,IAAAjlC,EAAA,EAAQA,EAAAxI,EAAIwI,IAAA,CAAmD,IAA9CE,EAAAF,EAAAxI,EAAM2I,EAAA/T,GAAA,EAAA8T,GAAUD,EAAA9T,EAAArmB,KAAA4a,IAAAwf,EAAAp6B,KAAAyS,GAAA,GAA0BugD,EAAA,EAAI54B,EAAAH,EAAAjjC,OAAeg8D,EAAA54B,EAAI44B,IAAA14B,EAAA/lC,EAAA0lC,EAAA+4B,GAAA1gD,EAAA0gD,GAAA74B,GAAArwB,EAAAwwB,EAAA/6B,EAAA+6B,EAAA9mB,GAAA6mB,EAAuC,KAAJ7mB,EAAA,EAAIomB,EAAAG,EAAA/iC,OAAewc,EAAAomB,EAAIpmB,IAAA,IAAAC,EAAAsmB,EAAAvmB,GAAA2rD,EAAAC,EAAA5rD,GAAAw/C,EAAA,EAAA54B,EAAA3mB,EAAAzc,OAAsCg8D,EAAA54B,EAAI44B,IAAA14B,EAAA/lC,EAAAkf,EAAAu/C,GAAAmM,EAAAnM,GAAA74B,GAAArwB,EAAAwwB,EAAA/6B,EAAA+6B,EAAA9mB,GAAA6mB,GAAuC,IAAJF,EAAA9T,EAAI2sC,EAAA,EAAQA,EAAAH,EAAIG,IAAA14B,EAAA9lC,EAAAD,EAAAD,EAAA0+D,GAAA4L,EAAA5L,GAAA74B,GAAA7lC,EAAA0+D,GAAA95B,GAAA9mB,EAAA4S,KAAAyU,EAAAmS,QAAA,IAAAzwC,eAAAm/B,EAAA/6B,GAAAm6B,EAAA1U,KAAAyU,EAAA0vD,UAAA,IAAAhuF,eAAAm/B,EAAA9mB,GAAAmmB,EAAA3U,KAAAoB,EAAA,IAAAzW,IAAAyC,GAAAzC,IAAA+pB,GAAA5vB,EAAA6vB,EAAAp6B,EAAAo6B,EAAAnmB,EAAAmmB,EAAAlmB,IAAA3J,EAAAwwB,EAAA/6B,EAAA+6B,EAAA9mB,EAAA,EAA2K,KAAA4mB,EAAA,EAAQA,GAAAzI,EAAKyI,IAAA,IAAA44B,EAAA,EAAYA,EAAAH,EAAIG,IAAA14B,EAAA9lC,EAAAD,EAAAD,EAAA0+D,GAAA4L,EAAA5L,GAAA74B,GAAA7lC,EAAA0+D,GAAA95B,GAAA9mB,EAAA4S,KAAAyU,EAAAmS,QAAAxR,IAAAj/B,eAAAm/B,EAAA/6B,GAC7bm6B,EAAA1U,KAAAyU,EAAA0vD,UAAA/uD,IAAAj/B,eAAAm/B,EAAA9mB,GAAAmmB,EAAA3U,KAAAoB,EAAAgU,IAAAzqB,IAAAyC,GAAAzC,IAAA+pB,GAAA5vB,EAAA6vB,EAAAp6B,EAAAo6B,EAAAnmB,EAAAmmB,EAAAlmB,IAAA3J,EAAAwwB,EAAA/6B,EAAA+6B,EAAA9mB,EAAAnB,EAAAsf,EAAAyI,EAAuG,KAAAF,EAAAxI,EAAA,EAAU,GAAAwI,EAAKA,IAAA,CAAmD,IAA9CE,EAAAF,EAAAxI,EAAM2I,EAAA/T,GAAA,EAAA8T,GAAUD,EAAA9T,EAAArmB,KAAA4a,IAAAwf,EAAAp6B,KAAAyS,GAAA,GAA0BugD,EAAA,EAAI54B,EAAAH,EAAAjjC,OAAeg8D,EAAA54B,EAAI44B,IAAA14B,EAAA/lC,EAAA0lC,EAAA+4B,GAAA1gD,EAAA0gD,GAAA74B,GAAArwB,EAAAwwB,EAAA/6B,EAAA+6B,EAAA9mB,EAAAnB,EAAAgoB,EAAwC,KAAJ7mB,EAAA,EAAIomB,EAAAG,EAAA/iC,OAAewc,EAAAomB,EAAIpmB,IAAA,IAAAC,EAAAsmB,EAAAvmB,GAAA2rD,EAAAC,EAAA5rD,GAAAw/C,EAAA,EAAA54B,EAAA3mB,EAAAzc,OAAsCg8D,EAAA54B,EAAI44B,IAAA14B,EAAA/lC,EAAAkf,EAAAu/C,GAAAmM,EAAAnM,GAAA74B,GAAAjB,EAAApvB,EAAAwwB,EAAA/6B,EAAA+6B,EAAA9mB,EAAA4S,EAAAuL,EAAA,GAAAne,EAAA4S,EAAAuL,EAAA,GAAApyB,EAAA86B,GAAAvwB,EAAAwwB,EAAA/6B,EAAA+6B,EAAA9mB,EAAAnB,EAAAgoB,IAAqE,WAAY,GAAA7lC,EAAA,CAAM,GAAAgS,EAAY,KAANA,EAAA,EAAAqsD,EAAMG,EAAA,EAAQA,EAAAD,EAAIC,IAAAF,EAAA94B,EAAAg5B,GAAAjuC,EAAA+tC,EAAA,GAAAtsD,EAAAssD,EAAA,GAAAtsD,EAAAssD,EAAA,GAAAtsD,EAAgD,KAAbA,EAAAmrB,EAAA,EAAAD,EAAQlrB,GAAAqsD,EAAKG,EAAA,EAAQA,EAAAD,EAAIC,IAAAF,EAAA94B,EAAAg5B,GAAAjuC,EAAA+tC,EAAA,GAAAtsD,EAAAssD,EAAA,GAAAtsD,EAAAssD,EAAA,GAAAtsD,OAAmC,CAAK,IAAAwsD,EACpf,EAAEA,EAAAD,EAAIC,IAAAF,EAAA94B,EAAAg5B,GAAAjuC,EAAA+tC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAA6B,KAAAE,EAAA,EAAQA,EAAAD,EAAIC,IAAAF,EAAA94B,EAAAg5B,GAAAjuC,EAAA+tC,EAAA,GAAAD,EAAAlhC,EAAAmhC,EAAA,GAAAD,EAAAlhC,EAAAmhC,EAAA,GAAAD,EAAAlhC,OAA8C,WAAY,GAAAnrB,GAAA,CAA+B,KAAvBhP,EAAAyiC,EAAAzzB,GAAOA,GAAAyzB,EAAAjjC,OAAYwc,EAAA,EAAIomB,EAAAG,EAAA/iC,OAAewc,EAAAomB,EAAIpmB,IAAAC,EAAAsmB,EAAAvmB,GAAAhc,EAAAic,EAAAjN,MAAAiN,EAAAzc,WAC3JmW,EAAA+3E,gBAAA4D,kBAAwCV,cAAA,SAAA5hF,EAAAE,EAAAnS,EAAAuoB,GAAkE,MAAlCtW,KAAAwT,SAAatT,EAAAF,EAAAE,GAAOnS,EAAAiS,EAAAjS,GAAOuoB,EAAAtW,EAAAsW,IAAO,GAAA3P,GAAAykB,QAAAlrB,EAAAnH,EAAAmH,EAAA8M,GAAA,GAAArG,GAAAykB,QAAAr9B,EAAAgL,EAAAhL,EAAAif,GAAA,GAAArG,GAAAykB,QAAA9U,EAAAvd,EAAAud,EAAAtJ,KAAyF20E,mBAAA,SAAA3hF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAiF,MAAzCgP,KAAAwT,SAAatT,EAAAF,EAAAE,GAAOnS,EAAAiS,EAAAjS,GAAOuoB,EAAAtW,EAAAsW,GAAOtlB,EAAAgP,EAAAhP,GAAO,IAAAwI,KAAA+wB,IAAArqB,EAAA8M,EAAAjf,EAAAif,IAAA,GAAArG,GAAAykB,QAAAlrB,EAAAnH,EAAA,EAAAmH,EAAA+M,GAAA,GAAAtG,GAAAykB,QAAAr9B,EAAAgL,EAAA,EAAAhL,EAAAkf,GAAA,GAAAtG,GAAAykB,QAAA9U,EAAAvd,EAAA,EAAAud,EAAArJ,GAAA,GAAAtG,GAAAykB,QAAAp6B,EAAA+H,EAAA,EAAA/H,EAAAic,KAAA,GAAAtG,GAAAykB,QAAAlrB,EAAA8M,EAAA,EAAA9M,EAAA+M,GAAA,GAAAtG,GAAAykB,QAAAr9B,EAAAif,EAAA,EAAAjf,EAAAkf,GAAA,GAAAtG,GAAAykB,QAAA9U,EAAAtJ,EACpR,EAAAsJ,EAAArJ,GAAA,GAAAtG,GAAAykB,QAAAp6B,EAAAgc,EAAA,EAAAhc,EAAAic,MAAuCtG,EAAAi4E,cAAA,SAAA5+E,EAAAE,GAAkCyG,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,iBAA0B,IAAA8O,MAAA04B,QAAA38B,YAA+BhG,KAAAynF,aAAAzhF,EAAAE,GAAuBlG,KAAAsqC,sBAA2B39B,EAAAi4E,cAAAl9E,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAsEiF,EAAAi4E,cAAAl9E,UAAA7S,YAAA8X,EAAAi4E,cAA8Dj4E,EAAAi4E,cAAAl9E,UAAA+/E,aAAA,SAAAzhF,EAAAE,GAAyD,OAAAnS,GAAA,EAAAuoB,EAAAtW,EAAAxP,OAAuBzC,EAAAuoB,EAAIvoB,IAAAiM,KAAA0nF,SAAA1hF,EAAAjS,GAAAmS,EAA0B,OAAAlG,OAChc2M,EAAAi4E,cAAAl9E,UAAAggF,SAAA,SAAA1hF,EAAAE,GAAqD,SAAAA,SAAmB,IAAAlP,GAAAsS,EAAAib,EAAAxwB,EAAAmS,EAAA+/B,SAAA3pB,EAAA,SAAApW,EAAAmiF,YAAA17E,EAAA+3E,gBAAA4D,iBAAApiF,EAAAmiF,YAAAx2E,EAAA7R,KAAAwZ,SAAAhjB,MAA4HQ,GAAAgP,EAAAg/E,cAAA,SAAA9+E,EAAAgiF,cAAAhiF,EAAAgiF,cAAA,GAA+D,IAAApiE,GAAA9uB,EAAA+tF,MAAAl/D,EAAA7uB,EAAAwtF,KAAwB,KAAA73E,EAAA00E,WAAAG,YAAA17D,GAAA,IAAAA,IAAA4iE,UAAA1xF,EAAA,EAAAsS,EAAAuc,EAAArvB,OAAqEQ,EAAAsS,EAAItS,IAAAutB,EAAAsB,EAAA7uB,GAAA2V,EAAA00E,WAAAG,YAAAj9D,KAAAsB,EAAA7uB,GAAAutB,EAAAmkE,UAA+D,IAAAx3D,GAAAvkB,EAAA00E,WAAAE,iBAAAz7D,EAAAD,EAAiD,KAAJ7uB,EAAA,EAAIsS,EAAAuc,EAAArvB,OAAeQ,EAAAsS,EAAItS,IAAAutB,EAAAsB,EAAA7uB,GAAA8uB,IAAAnb,OAAA4Z,EACjd,KAAtBsB,EAAAC,EAAAtvB,OAAW8S,EAAA4nB,EAAA16B,OAAWQ,EAAA,EAAQA,EAAA6uB,EAAI7uB,IAAAutB,EAAAuB,EAAA9uB,GAAAgJ,KAAAwZ,SAAA3Z,KAAA,GAAA8M,GAAA8G,QAAA8Q,EAAAxlB,EAAAwlB,EAAAvR,EAAA,GAA4D,KAAAhc,EAAA,EAAQA,EAAAsS,EAAItS,IAAA6uB,EAAAqL,EAAAl6B,GAAA8uB,EAAAD,EAAA,GAAAhU,EAAA0S,EAAAsB,EAAA,GAAAhU,EAAAgU,IAAA,GAAAhU,EAAA7R,KAAAkpC,MAAArpC,KAAA,GAAA8M,GAAAw5B,MAAArgB,EAAAvB,EAAAsB,EAAA,UAAA9xB,IAAAiM,KAAAmpC,cAAA,GAAAtpC,KAAAyc,EAAAsrE,cAAA5nF,KAAA8lB,EAAAvB,EAAAsB,KAC1GlZ,EAAAi8E,oBAAA,SAAA5iF,EAAAE,EAAAnS,EAAAuoB,GAA4C3P,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,sBAAgC6E,KAAAmrC,YAAiBtxC,OAAAmM,EAAAykD,SAAAvkD,EAAA8kD,SAAAj3D,EAAAk3D,UAAA3uC,GAA4CpW,EAAA1G,KAAAzI,MAAAmP,IAAA,GAAoBnS,KAAA,EAAOuoB,KAAA,EAAA9c,KAAAyS,GAAeqK,EAAA3P,EAAAnN,KAAAslB,MAAAxI,EAAA,IAAA9c,KAAAyS,GAAkC,QAAAjb,IAAAkP,EAAA,GAAAF,EAAAxP,OAAA8S,EAAApD,EAAAF,EAAAxP,OAAA,EAAA+tB,EAAA,GAAA5X,GAAA45B,gBAAA,UAAAj9B,EAAA++B,YAAAJ,aAAA3+B,GAAA,GAAAuI,EAAA,GAAAlF,GAAA45B,gBAAA,GAAA3O,cAAA,EAAA5gC,GAAA,GAAA8uB,EAAA,GAAAnZ,GAAA45B,gBAAA,GAAA3O,cAAA,EAAA5gC,GAAA,GAAA6uB,EAAA,EAAAqL,EAAA,EAAAl9B,EAAA,EAAAkS,EAAApS,EAAA,GAAA6Y,GAAA8G,QAAA0d,EAAA,GAAAxkB,GAAAykB,QACrPp6B,EAAA,EAAIA,GAAAkP,EAAKlP,IAAA,OAAAsS,GAAAvV,EAAAiD,EAAAhD,EAAAsoB,EAAAxK,EAAAtS,KAAA4a,IAAA9Q,GAAAsc,EAAApmB,KAAA2S,IAAA7I,KAAA,EAAsDA,GAAAtD,EAAAxP,OAAA,EAAc8S,IAAAxV,EAAAiL,EAAAiH,EAAAsD,GAAAvK,EAAA+S,EAAAhe,EAAAkf,EAAAhN,EAAAsD,GAAA0J,EAAAlf,EAAAmf,EAAAjN,EAAAsD,GAAAvK,EAAA6mB,EAAA/T,EAAAumB,OAAAvS,EAAA/xB,EAAAiL,EAAAjL,EAAAkf,EAAAlf,EAAAmf,GAAAke,EAAApyB,EAAA/H,EAAAkP,EAAAirB,EAAAne,EAAA1J,GAAAtD,EAAAxP,OAAA,GAAAsvB,EAAAwhB,MAAAzhB,EAAAsL,EAAApyB,EAAAoyB,EAAAne,GAAA6S,GAAmH,KAAA7uB,EAAA,EAAQA,EAAAkP,EAAIlP,IAAA,IAAAsS,EAAA,EAAYA,EAAAtD,EAAAxP,OAAA,EAAa8S,IAAAvV,EAAAuV,EAAAtS,EAAAgP,EAAAxP,OAAAqvB,EAAA9xB,EAAAiS,EAAAxP,OAAAxC,EAAAD,EAAAiS,EAAAxP,OAAA,EAAA1C,EAAAC,EAAA,EAAAwwB,EAAA8M,KAAAH,EAAAn9B,GAAAm9B,IAAA3M,EAAA8M,KAAAH,EAAArL,GAAAqL,IAAA3M,EAAA8M,KAAAH,EAAAp9B,GAAAo9B,IAAA3M,EAAA8M,KAAAH,EAAArL,GAAAqL,IAAA3M,EAAA8M,KAAAH,EAAAl9B,GAAAk9B,IAAA3M,EAAA8M,KAAAH,EAAAp9B,GAAAo9B,GAA4P,IAAvGlxB,KAAA+rC,SAAAxnB,GAAiBvkB,KAAAgsC,aAAA,WAAAn6B,GAAgC7R,KAAAgsC,aAAA,KAAAlmB,GAA0B9lB,KAAAuqC,uBAA4BjuB,IAAA,EAAA9c,KAAAyS,GAAA,IAAAqK,EACjetc,KAAAo3B,WAAAG,OAAA1E,MAAAtO,EAAA,GAAA5X,GAAA8G,QAAA5B,EAAA,GAAAlF,GAAA8G,QAAAqS,EAAA,GAAAnZ,GAAA8G,QAAA1f,EAAAmS,EAAAF,EAAAxP,OAAA,EAAA8S,EAAAtS,EAAA,EAA8GA,EAAAgP,EAAAxP,OAAWQ,IAAAsS,GAAA,EAAAib,EAAAxlB,EAAAud,EAAAhT,EAAA,GAAAib,EAAAvR,EAAAsJ,EAAAhT,EAAA,GAAAib,EAAAtR,EAAAqJ,EAAAhT,EAAA,GAAAuI,EAAA9S,EAAAud,EAAAvoB,EAAAuV,EAAA,GAAAuI,EAAAmB,EAAAsJ,EAAAvoB,EAAAuV,EAAA,GAAAuI,EAAAoB,EAAAqJ,EAAAvoB,EAAAuV,EAAA,GAAAwc,EAAA2L,WAAAlN,EAAA1S,GAAAwC,YAAAiI,EAAAhT,EAAA,GAAAgT,EAAAvoB,EAAAuV,EAAA,GAAAwc,EAAA/mB,EAAAud,EAAAhT,EAAA,GAAAgT,EAAAvoB,EAAAuV,EAAA,GAAAwc,EAAA9S,EAAAsJ,EAAAhT,EAAA,GAAAgT,EAAAvoB,EAAAuV,EAAA,GAAAwc,EAAA7S,GAA4KtG,EAAAi8E,oBAAAlhF,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAkFiF,EAAAi8E,oBAAAlhF,UAAA7S,YAAA8X,EAAAi8E,oBACvXj8E,EAAAk8E,cAAA,SAAA7iF,EAAAE,EAAAnS,EAAAuoB,GAAsC3P,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,gBAA0B6E,KAAAmrC,YAAiBtxC,OAAAmM,EAAAykD,SAAAvkD,EAAA8kD,SAAAj3D,EAAAk3D,UAAA3uC,GAA4Ctc,KAAAkqC,mBAAA,GAAAv9B,GAAAi8E,oBAAA5iF,EAAAE,EAAAnS,EAAAuoB,IAAgEtc,KAAAgrC,iBAAsBr+B,EAAAk8E,cAAAnhF,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAsEiF,EAAAk8E,cAAAnhF,UAAA7S,YAAA8X,EAAAk8E,cACnTl8E,EAAAm8E,cAAA,SAAA9iF,EAAAE,EAAAnS,EAAAuoB,GAAsC3P,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,gBAA0B6E,KAAAmrC,YAAiBhtC,MAAA6H,EAAA5H,OAAA8H,EAAAmkD,cAAAt2D,EAAAu2D,eAAAhuC,GAAmDtc,KAAAkqC,mBAAA,GAAAv9B,GAAAs8D,oBAAAjjE,EAAAE,EAAAnS,EAAAuoB,KAAiE3P,EAAAm8E,cAAAphF,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAsEiF,EAAAm8E,cAAAphF,UAAA7S,YAAA8X,EAAAm8E,cACrSn8E,EAAAs8D,oBAAA,SAAAjjE,EAAAE,EAAAnS,EAAAuoB,GAA4C3P,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,sBAAgC6E,KAAAmrC,YAAiBhtC,MAAA6H,EAAA5H,OAAA8H,EAAAmkD,cAAAt2D,EAAAu2D,eAAAhuC,EAAmD,IAAAtlB,GAAAgP,EAAA,EAAAsD,EAAApD,EAAA,CAAgBnS,GAAAyL,KAAAzI,MAAAhD,IAAA,EAAmBuoB,EAAA9c,KAAAzI,MAAAulB,IAAA,CAAmB,IAAAiI,GAAAxwB,EAAA,EAAA8d,EAAAyK,EAAA,EAAAwJ,EAAA9f,EAAAjS,EAAA8xB,EAAA3f,EAAAoW,CAA4BpW,GAAA,GAAA0xB,cAAArT,EAAA1S,EAAA,GAA0B7L,EAAA,GAAA4xB,cAAArT,EAAA1S,EAAA,EAA0B,QAAAqf,GAAA,GAAA0G,cAAArT,EAAA1S,EAAA,GAAA7d,EAAA,EAAAF,EAAA,EAAAq9B,EAAA,EAA8CA,EAAAtf,EAAIsf,IAAA,OAAArf,GAAAqf,EAAAtL,EAAAvc,EAAAsc,EAAA,EAAwBA,EAAArB,EAAIqB,IAAA1f,EAAAlS,GAAA4xB,EAAAE,EAAA9uB,EAAAkP,EAAAlS,EAAA,IAAA8d,EAAA9L,EAAAhS,EAAA,KAAAk9B,EAAAp9B,GAAA8xB,EAAA7xB,EAAAm9B,EAAAp9B,EAAA,KAAAq9B,EAAA7U,EAAAtoB,GAAA,EAAAF,GAAA,CAC/X,KADicE,EAAA,EAAIgD,EAAA,UAAAkP,EAAA1P,OAAA,EAAA6xC,YAAAJ,aAAAl0C,EAC1cuoB,EAAA,GAAK6U,EAAA,EAAQA,EAAA7U,EAAI6U,IAAA,IAAAvL,EAAA,EAAYA,EAAA7xB,EAAI6xB,IAAAtc,EAAAsc,EAAArB,GAAA4M,EAAA,GAAAtf,EAAA+T,EAAA,EAAArB,GAAA4M,EAAA,GAAArL,EAAAF,EAAA,EAAArB,EAAA4M,EAAAn6B,EAAAhD,GAAA4xB,EAAArB,EAAA4M,EAAAn6B,EAAAhD,EAAA,GAAAsV,EAAAtS,EAAAhD,EAAA,GAAA8xB,EAAA9uB,EAAAhD,EAAA,GAAAsV,EAAAtS,EAAAhD,EAAA,GAAA6d,EAAA7a,EAAAhD,EAAA,GAAA8xB,EAAA9xB,GAAA,CAAqGgM,MAAA+rC,SAAA,GAAAp/B,GAAA45B,gBAAAvvC,EAAA,IAA8CgJ,KAAAgsC,aAAA,cAAAr/B,GAAA45B,gBAAArgC,EAAA,IAA6DlG,KAAAgsC,aAAA,YAAAr/B,GAAA45B,gBAAAvgC,EAAA,IAA2DhG,KAAAgsC,aAAA,QAAAr/B,GAAA45B,gBAAArV,EAAA,KAAwDvkB,EAAAs8D,oBAAAvhE,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAkFiF,EAAAs8D,oBAAAvhE,UAAA7S,YAAA8X,EAAAs8D,oBACtbt8D,EAAAo8E,mBAAA,SAAA/iF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAA+CqD,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,qBAA+B6E,KAAAmrC,YAAiBggB,YAAAnlD,EAAAolD,YAAAllD,EAAAmlD,cAAAt3D,EAAAu3D,YAAAhvC,EAAAouC,WAAA1zD,EAAA2zD,YAAArhD,GAAsFtD,KAAA,GAAQE,KAAA,GAAQlP,EAAA,SAAAA,IAAA,EAAiBsS,EAAA,SAAAA,IAAA,EAAA9J,KAAAyS,GAAyBle,EAAA,SAAAA,EAAAyL,KAAAC,IAAA,EAAA1L,GAAA,EAA6BuoB,EAAA,SAAAA,EAAA9c,KAAAC,IAAA,EAAA6c,GAAA,CAA6B,IACzUxoB,GAAAklC,EADyUzU,GAAAxwB,EAAA,IAAAuoB,EAAA,GAAAzK,EAAA9d,EAAAuoB,EAAA,EAAAzK,EAAA,GAAAlF,GAAA45B,gBAAA,UAAA10B,EAAAw2B,YAAAJ,aAAAp2B,GAAA,GAAAiU,EAAA,GAAAnZ,GAAA45B,gBAAA,GAAA3O,cAAA,EAAArT,GAAA,GAAAsB,EAAA,GAAAlZ,GAAA45B,gBAAA,GAAA3O,cAAA,EACzUrT,GAAA,GAAAA,EAAA,GAAA5X,GAAA45B,gBAAA,GAAA3O,cAAA,EAAArT,GAAA,GAAA2M,EAAA,EAAAl9B,EAAA,EAAAm9B,EAAAnrB,EAAA8L,GAAA5L,EAAAF,GAAAsW,EAAAsJ,EAAA,GAAAjZ,GAAA8G,QAAAilB,EAAA,GAAA/rB,GAAAykB,OAA6H,KAAAprB,EAAA,EAAQA,GAAAsW,EAAKtW,IAAA,CAAK,IAAAgzB,EAAA,EAAQA,GAAAjlC,EAAKilC,IAAAllC,EAAAkD,EAAAgiC,EAAAjlC,EAAAuV,EAAAsc,EAAA7mB,EAAAoyB,EAAA3xB,KAAA2S,IAAAre,GAAA8xB,EAAA5S,EAAAme,EAAA3xB,KAAA4a,IAAAtmB,GAAAgyB,EAAAsS,OAAAlH,EAAAtL,EAAA7mB,EAAA6mB,EAAA5S,EAAA4S,EAAA3S,GAAA4S,EAAAuS,OAAAlH,EAAA,OAAAwH,EAAA35B,GAAA6mB,EAAA7mB,EAAAmH,EAAA,KAAAwyB,EAAA1lB,GAAA4S,EAAA5S,EAAA9M,EAAA,KAAAqe,EAAA+iB,MAAApW,EAAAwH,EAAA35B,EAAA25B,EAAA1lB,GAAAke,GAAmJC,IAAArf,EAAK,IAAA9L,EAAA,EAAQA,EAAAsW,EAAItW,IAAA,IAAAE,EAAAF,GAAAjS,EAAA,GAAAilC,EAAA,EAAsBA,EAAAjlC,EAAIilC,IAAAhiC,EAAAlD,EAAAklC,EAAA9yB,EAAAoD,EAAAxV,EAAAC,EAAA,EAAAm9B,EAAAp9B,EAAAC,EAAA,EAAAD,GAAA,EAAA+d,EAAAwf,KAAAr9B,EAAAgD,GAAAhD,IAAA6d,EAAAwf,KAAAr9B,EAAAsV,GAAAtV,IAAA6d,EAAAwf,KAAAr9B,EAAAk9B,GAAAl9B,IAAA6d,EAAAwf,KAAAr9B,EAAAgD,GAAAhD,IAAA6d,EAAAwf,KAAAr9B,EAAAk9B,GAAAl9B,IAAA6d,EAAAwf,KAAAr9B,EAAAF,GAAAE,GAAiIgM,MAAA+rC,SAAAl6B,GAAiB7R,KAAAgsC,aAAA,WAC5elmB,GAAG9lB,KAAAgsC,aAAA,SAAAnmB,GAA8B7lB,KAAAgsC,aAAA,KAAAznB,IAA2B5X,EAAAo8E,mBAAArhF,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAiFiF,EAAAo8E,mBAAArhF,UAAA7S,YAAA8X,EAAAo8E,mBAAwEp8E,EAAAq8E,aAAA,SAAAhjF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAyCqD,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,eAAyB6E,KAAAmrC,YAAiBggB,YAAAnlD,EAAAolD,YAAAllD,EAAAmlD,cAAAt3D,EAAAu3D,YAAAhvC,EAAAouC,WAAA1zD,EAAA2zD,YAAArhD,GAAsFtJ,KAAAkqC,mBAAA,GAAAv9B,GAAAo8E,mBAAA/iF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,KACxZqD,EAAAq8E,aAAAthF,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAqEiF,EAAAq8E,aAAAthF,UAAA7S,YAAA8X,EAAAq8E,aAA4Dr8E,EAAAs8E,eAAA,SAAAjjF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAA6C5X,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,iBAA2B6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAqkD,cAAAnkD,EAAAokD,eAAAv2D,EAAAi3D,SAAA1uC,EAAA2uC,UAAAj0D,EAAA0zD,WAAAphD,EAAAqhD,YAAApmC,GAA6FvkB,KAAAkqC,mBAAA,GAAAv9B,GAAAu8E,qBAAAljF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,KAAwE5X,EAAAs8E,eAAAvhF,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WACzZiF,EAAAs8E,eAAAvhF,UAAA7S,YAAA8X,EAAAs8E,eACAt8E,EAAAu8E,qBAAA,SAAAljF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAAmD5X,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,uBAAiC6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAqkD,cAAAnkD,EAAAokD,eAAAv2D,EAAAi3D,SAAA1uC,EAAA2uC,UAAAj0D,EAAA0zD,WAAAphD,EAAAqhD,YAAApmC,GAA6Fve,KAAA,GAAQE,EAAA1G,KAAAC,IAAA,EAAAD,KAAAzI,MAAAmP,IAAA,GAA+BnS,EAAAyL,KAAAC,IAAA,EAAAD,KAAAzI,MAAAhD,IAAA,GAA+BuoB,EAAA,SAAAA,IAAA,EAAiBtlB,EAAA,SAAAA,IAAA,EAAAwI,KAAAyS,GAAyB3I,EAAA,SAAAA,IAAA,EAAiBib,EAAA,SAAAA,IAAA/kB,KAAAyS,EAAuB,QAAAJ,GAAAvI,EAAAib,EAAAuB,GAAA5f,EAAA,IAAAnS,EAAA,GAAA8xB,EAAA,GAAAlZ,GAAA45B,gBAAA,GAAA3O,cAAA,EAAA9R,GAAA,GAAAoL,EAAA,GAAAvkB,GAAA45B,gBAAA,GAAA3O,cAAA,EAC1X9R,GAAA,GAAAA,EAAA,GAAAnZ,GAAA45B,gBAAA,GAAA3O,cAAA,EAAA9R,GAAA,GAAA9xB,EAAA,EAAAF,KAAAq9B,EAAA,GAAAxkB,GAAA8G,QAAA3B,EAAA,EAA4FA,GAAA/d,EAAK+d,IAAA,CAAK,OAAA8T,MAAA8S,EAAA5mB,EAAA/d,EAAAilC,EAAA,EAAuBA,GAAA9yB,EAAK8yB,IAAA,CAAK,GAAAC,GAAAD,EAAA9yB,EAAAgzB,GAAAlzB,EAAAxG,KAAA2S,IAAAmK,EAAA2c,EAAAjiC,GAAAwI,KAAA4a,IAAA9Q,EAAAovB,EAAAnU,GAAA3S,EAAA5L,EAAAxG,KAAA2S,IAAA7I,EAAAovB,EAAAnU,GAAA4U,EAAAnzB,EAAAxG,KAAA4a,IAAAkC,EAAA2c,EAAAjiC,GAAAwI,KAAA4a,IAAA9Q,EAAAovB,EAAAnU,EAAuG4M,GAAA9f,IAAA6nB,EAAAtnB,EAAAunB,GAAA9kB,YAAyBwR,EAAAuS,OAAApkC,EAAAklC,EAAAtnB,EAAAunB,GAAkBjI,EAAAkH,OAAApkC,EAAAm9B,EAAApyB,EAAAoyB,EAAAne,EAAAme,EAAAle,GAAwB6S,EAAAwhB,MAAAtzC,EAAAilC,EAAA,EAAAP,GAAiB9S,EAAA/lB,KAAA7L,GAAUA,IAAIF,EAAA+L,KAAA+lB,GAAe,IAALtJ,KAAKxK,EAAA,EAAQA,EAAA/d,EAAI+d,IAAA,IAAAknB,EAAA,EAAYA,EAAA9yB,EAAI8yB,IAAAhiC,EAAAlD,EAAAge,GAAAknB,EAAA,GAAAzU,EAAAzwB,EAAAge,GAAAknB,GAAAhlC,EAAAF,EAAAge,EAAA,GAAAknB,GAAA7H,EAAAr9B,EAAAge,EAAA,GAAAknB,EAAA,QAAAlnB,GAAA,EAAAxI,IAAAgT,EAAAzc,KAAA7I,EAAAutB,EAAA4M,IAAArf,IAAA/d,EAAA,GAAA8d,EAAArS,KAAAyS,KAAAqK,EAAAzc,KAAA0kB,EAAAvwB,EAAAm9B,EAAoHnxB,MAAA+rC,SAAA,UAC/elmB,EAAA6gB,MAAA/5B,EAAAy7B,gBAAAz7B,EAAAq7B,iBAAA1rB,EAAA,IAA2Dtc,KAAAgsC,aAAA,WAAAnmB,GAAgC7lB,KAAAgsC,aAAA,SAAA9a,GAA8BlxB,KAAAgsC,aAAA,KAAAlmB,GAA0B9lB,KAAAi8B,eAAA,GAAAtvB,GAAA+qB,OAAA,GAAA/qB,GAAA8G,QAAAzN,IAA2D2G,EAAAu8E,qBAAAxhF,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAmFiF,EAAAu8E,qBAAAxhF,UAAA7S,YAAA8X,EAAAu8E,qBACjSv8E,EAAAw8E,aAAA,SAAAnjF,EAAAE,GAAiCA,OAAQ,IAAAnS,GAAAmS,EAAAkjF,IAAa,WAAAr1F,YAAA4Y,GAAAy6C,MAAA9xD,QAAAC,MAAA,2EAAAoX,GAAA4M,WAAgJxlB,IAAAivF,eAAAh9E,EAAAE,EAAAoK,KAAApK,EAAAgiF,eAA6ChiF,EAAA2hF,OAAA,SAAA3hF,EAAA9H,OAAA8H,EAAA9H,OAAA,GAAuC,SAAA8H,EAAA4hF,iBAAA5hF,EAAA4hF,eAAA,IAAiD,SAAA5hF,EAAA6hF,YAAA7hF,EAAA6hF,UAAA,GAAsC,SAAA7hF,EAAA+hF,eAAA/hF,EAAA+hF,cAAA,GAA6Ct7E,EAAA+3E,gBAAA7wF,KAAAmM,KAAAjM,EAAAmS,QAAqClG,KAAA7E,KAAA,kBACncwR,EAAAw8E,aAAAzhF,UAAAuU,OAAA+jB,OAAArzB,EAAA+3E,gBAAAh9E,WAA4EiF,EAAAw8E,aAAAzhF,UAAA7S,YAAA8X,EAAAw8E,aAC5Ex8E,EAAA08E,oBAAA,SAAArjF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAA8C2V,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,sBAAgC6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAulD,KAAArlD,EAAA4kD,eAAA/2D,EAAAy3D,gBAAAlvC,EAAAmvC,IAAAz0D,GAA0DgP,KAAA,IAASE,KAAA,GAAQnS,EAAAyL,KAAAzI,MAAAhD,IAAA,EAAmBuoB,EAAA9c,KAAAzI,MAAAulB,IAAA,EAAmBtlB,KAAA,EAAAwI,KAAAyS,EAAe,IAAA2T,GAAA8S,EAAApvB,GAAAvV,EAAA,IAAAuoB,EAAA,GAAAiI,EAAAxwB,EAAAuoB,EAAA,EAAAiI,EAAA,UAAAA,EAAA8jB,YAAAJ,aAAA1jB,GAAA1S,EAAA,GAAA+lB,cAAA,EAAAtuB,GAAAwc,EAAA,GAAA8R,cAAA,EAAAtuB,KAAA,GAAAsuB,cAAA,EAAAtuB,GAAAuc,EAAA,EAAAqL,EAAA,EAAAl9B,EAAA,EAAAF,EAAA,GAAA6Y,GAAA8G,QAAA0d,EAAA,GAAAxkB,GAAA8G,QAAA3B,EAAA,GAAAnF,GAAA8G,OAAyN,KAAAmS,EAAA,EAAQA,GAAA7xB,EAAK6xB,IAAA,IAAA8S,EAAA,EAAYA,GAAApc,EAAKoc,IAAA,CAAK,GAAAM,GAC3fN,EAAApc,EAAAtlB,EAAAiiC,EAAArT,EAAA7xB,EAAAyL,KAAAyS,GAAA,CAAsBkf,GAAApyB,GAAAiH,EAAAE,EAAA1G,KAAA2S,IAAA8mB,IAAAz5B,KAAA2S,IAAA6mB,GAAkC7H,EAAAne,GAAAhN,EAAAE,EAAA1G,KAAA2S,IAAA8mB,IAAAz5B,KAAA4a,IAAA4e,GAAkC7H,EAAAle,EAAA/M,EAAA1G,KAAA4a,IAAA6e,GAAkBpnB,EAAAgU,GAAAsL,EAAApyB,EAAS8S,EAAAgU,EAAA,GAAAsL,EAAAne,EAAWnB,EAAAgU,EAAA,GAAAsL,EAAAle,EAAWnf,EAAAiL,EAAAiH,EAAAxG,KAAA2S,IAAA6mB,GAAkBllC,EAAAkf,EAAAhN,EAAAxG,KAAA4a,IAAA4e,GAAkBlnB,EAAA6f,WAAAR,EAAAr9B,GAAAugB,YAA8ByR,EAAAD,GAAA/T,EAAA/S,EAAS+mB,EAAAD,EAAA,GAAA/T,EAAAkB,EAAW8S,EAAAD,EAAA,GAAA/T,EAAAmB,EAAW3J,EAAA4nB,GAAAwH,EAAApc,EAAShT,EAAA4nB,EAAA,GAAAtL,EAAA7xB,EAAW8xB,GAAA,EAAKqL,GAAA,EAAK,IAAAtL,EAAA,EAAQA,GAAA7xB,EAAK6xB,IAAA,IAAA8S,EAAA,EAAYA,GAAApc,EAAKoc,IAAA1yB,GAAAsW,EAAA,IAAAsJ,EAAA,GAAA8S,EAAA,EAAAxyB,GAAAoW,EAAA,IAAAsJ,EAAA,GAAA8S,EAAA1hC,GAAAslB,EAAA,GAAAsJ,EAAA8S,EAAAnU,EAAAvwB,IAAAsoB,EAAA,GAAAsJ,EAAA8S,EAAA,EAAAnU,EAAAvwB,EAAA,GAAAgS,EAAAue,EAAAvwB,EAAA,GAAAgD,EAAAutB,EAAAvwB,EAAA,GAAAgS,EAAAue,EAAAvwB,EAAA,GAAAkS,EAAAqe,EAAAvwB,EAAA,GAAAgD,EAAAhD,GAAA,CAAqHgM,MAAA+rC,SAAA,GAAAp/B,GAAA45B,gBAAAhiB,EAAA,IAA8CvkB,KAAAgsC,aAAA,cAAAr/B,GAAA45B,gBAAA10B,EAC3c,IAAI7R,KAAAgsC,aAAA,YAAAr/B,GAAA45B,gBAAAzgB,EAAA,IAA2D9lB,KAAAgsC,aAAA,QAAAr/B,GAAA45B,gBAAAj9B,EAAA,KAAwDqD,EAAA08E,oBAAA3hF,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAkFiF,EAAA08E,oBAAA3hF,UAAA7S,YAAA8X,EAAA08E,oBACzM18E,EAAA28E,cAAA,SAAAtjF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAwC2V,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,gBAA0B6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAulD,KAAArlD,EAAA4kD,eAAA/2D,EAAAy3D,gBAAAlvC,EAAAmvC,IAAAz0D,GAA0DgJ,KAAAkqC,mBAAA,GAAAv9B,GAAA08E,oBAAArjF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,KAAmE2V,EAAA28E,cAAA5hF,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAsEiF,EAAA28E,cAAA5hF,UAAA7S,YAAA8X,EAAA28E,cAChT38E,EAAA48E,wBAAA,SAAAvjF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAoD,QAAAib,GAAAve,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,GAAsB,GAAAsS,GAAA9J,KAAA2S,IAAAnM,GAAAue,EAAA/kB,KAAA4a,IAAApU,EAAgCA,IAAAjS,EAAAmS,EAAOA,EAAA1G,KAAA2S,IAAAnM,GAAchP,EAAA+H,EAAAud,GAAA,EAAApW,GAAA,GAAAoD,EAAiBtS,EAAAgc,EAAAsJ,GAAA,EAAApW,GAAAqe,EAAA,GAAiBvtB,EAAAic,EAAAqJ,EAAA9c,KAAA4a,IAAApU,GAAA,GAAqB2G,EAAAwqB,eAAAtjC,KAAAmM,MAAgCA,KAAA7E,KAAA,0BAAoC6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAulD,KAAArlD,EAAAslD,gBAAAz3D,EAAA+2D,eAAAxuC,EAAAtoB,EAAAgD,EAAAm6B,EAAA7nB,GAA4DtD,KAAA,IAASE,KAAA,GAAQnS,EAAAyL,KAAAzI,MAAAhD,IAAA,GAAoBuoB,EAAA9c,KAAAzI,MAAAulB,IAAA,EAAmBtlB,KAAA,EAAOsS,KAAA,CAAO,IAC7YtV,GAAAF,EAD6Y+d,GAAAyK,EAAA,IAAAvoB,EAAA,GAAA+xB,EAAAxJ,EAAAvoB,EAAA,EAAA+xB,EAAA,GAAAnZ,GAAA45B,gBAAA,UAAAzgB,EAAAuiB,YAAAJ,aAAAniB,GAAA,GAAAD,EAAA,GAAAlZ,GAAA45B,gBAAA,GAAA3O,cAAA,EAC7Y/lB,GAAA,GAAAqf,EAAA,GAAAvkB,GAAA45B,gBAAA,GAAA3O,cAAA,EAAA/lB,GAAA,GAAAA,EAAA,GAAAlF,GAAA45B,gBAAA,GAAA3O,cAAA,EAAA/lB,GAAA,GAAAsf,EAAA,EAAArf,EAAA,EAAA8T,EAAA,GAAAjZ,GAAA8G,QAAAilB,EAAA,GAAA/rB,GAAA8G,QAAAulB,EAAA,GAAArsB,GAAAykB,QAAA6H,EAAA,GAAAtsB,GAAA8G,QAAAylB,EAAA,GAAAvsB,GAAA8G,QAAA7B,EAAA,GAAAjF,GAAA8G,QAAA0lB,EAAA,GAAAxsB,GAAA8G,QAAAR,EAAA,GAAAtG,GAAA8G,OAA4R,KAAAzf,EAAA,EAAQA,GAAAD,IAAKC,EAAA,IAAAF,EAAAE,EAAAD,EAAAiD,EAAAwI,KAAAyS,GAAA,EAAAsS,EAAAzwB,EAAAkD,EAAAsS,EAAAtD,EAAAizB,GAAA1U,EAAAzwB,EAAA,IAAAkD,EAAAsS,EAAAtD,EAAAkzB,GAAAC,EAAAxH,WAAAuH,EAAAD,GAAAhmB,EAAAwe,WAAAyH,EAAAD,GAAArnB,EAAA4e,aAAA2I,EAAAlmB,KAAAud,aAAA5e,EAAAunB,GAAAvnB,EAAAyC,YAAApB,EAAAoB,YAAAvgB,EAAA,EAAoKA,GAAAwoB,IAAKxoB,EAAA,CAAK,GAAAkf,GAAAlf,EAAAwoB,EAAA9c,KAAAyS,GAAA,EAAAmnB,GAAAlzB,EAAA1G,KAAA2S,IAAAa,GACvdA,EAAA9M,EAAA1G,KAAA4a,IAAApH,EAAgB4S,GAAA7mB,EAAAk6B,EAAAl6B,GAAAq6B,EAAAnmB,EAAAlU,EAAAiU,EAAApB,EAAA7S,GAAsB6mB,EAAA5S,EAAAimB,EAAAjmB,GAAAomB,EAAAnmB,EAAAD,IAAApB,EAAAoB,GAAsB4S,EAAA3S,EAAAgmB,EAAAhmB,GAAAmmB,EAAAnmB,IAAAD,EAAApB,EAAAqB,GAAsB4S,EAAAuS,OAAAjH,EAAAvL,EAAA7mB,EAAA6mB,EAAA5S,EAAA4S,EAAA3S,GAAwBylB,EAAA/G,WAAA/L,EAAAqT,GAAA5kB,YAA8B6c,EAAAkH,OAAAjH,EAAAuH,EAAA35B,EAAA25B,EAAA1lB,EAAA0lB,EAAAzlB,GAAwB+lB,EAAAj6B,EAAA/K,EAAAD,EAAQilC,EAAAhmB,EAAAlf,EAAAwoB,EAAQzK,EAAAy1B,MAAAnW,EAAA6H,EAAAj6B,EAAAi6B,EAAAhmB,GAAmBme,IAAI,IAAAr9B,EAAA,EAAQA,GAAAC,EAAKD,IAAA,IAAAE,EAAA,EAAYA,GAAAsoB,EAAKtoB,IAAAgS,GAAAsW,EAAA,GAAAxoB,GAAAE,EAAA,GAAAkS,GAAAoW,EAAA,GAAAxoB,EAAAE,EAAAgD,GAAAslB,EAAA,IAAAxoB,EAAA,GAAAE,EAAA8xB,EAAAuL,KAAAvf,GAAAwK,EAAA,IAAAxoB,EAAA,IAAAE,EAAA,IAAA8d,IAAAgU,EAAAuL,KAAAvf,EAAA9L,GAAA8L,IAAAgU,EAAAuL,KAAAvf,EAAA9a,GAAA8a,IAAAgU,EAAAuL,KAAAvf,EAAA9L,GAAA8L,IAAAgU,EAAAuL,KAAAvf,EAAA5L,GAAA4L,IAAAgU,EAAAuL,KAAAvf,EAAA9a,GAAA8a,GAAgK9R,MAAA+rC,SAAAjmB,GAAiB9lB,KAAAgsC,aAAA,WAAAnmB,GAAgC7lB,KAAAgsC,aAAA,SAAA9a,GAA8BlxB,KAAAgsC,aAAA,KAAAn6B,IACpdlF,EAAA48E,wBAAA7hF,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WAAsFiF,EAAA48E,wBAAA7hF,UAAA7S,YAAA8X,EAAA48E,wBACtF58E,EAAA68E,kBAAA,SAAAxjF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,GAAgD5X,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,oBAA8B6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAulD,KAAArlD,EAAAslD,gBAAAz3D,EAAA+2D,eAAAxuC,EAAAtoB,EAAAgD,EAAAm6B,EAAA7nB,GAA4D,SAAAib,GAAAjvB,QAAA0vB,KAAA,4FAAqHhlB,KAAAkqC,mBAAA,GAAAv9B,GAAA48E,wBAAAvjF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,IAAwEtJ,KAAAgrC,iBAAsBr+B,EAAA68E,kBAAA9hF,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WACxYiF,EAAA68E,kBAAA9hF,UAAA7S,YAAA8X,EAAA68E,kBACA78E,EAAA67E,aAAA,SAAAxiF,EAAAE,EAAAnS,EAAAuoB,EAAAtlB,EAAAsS,GAAyCqD,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,eAAyB6E,KAAAmrC,YAAiBuK,KAAA1vC,EAAAykD,SAAAvkD,EAAAiuB,OAAApgC,EAAA+2D,eAAAxuC,EAAAoqE,OAAA1vF,EAAAyyF,MAAAngF,GAA8DpD,KAAA,GAAQnS,KAAA,EAAOuoB,KAAA,EAAOtlB,MAAA,EAAQsS,KAAAqD,EAAA67E,aAAAkB,OAAgC,IAAA73E,GAAAiU,EAAAoL,EAAAl9B,EAAAF,EAAAq9B,EAAArf,EAAA4mB,EAAAM,EAAAC,EAAA1U,KAAAsB,EAAA3f,EAAA,EAAA0f,EAAA,GAAAjZ,GAAA8G,OAAuL,KAAhIilB,EAAA,GAAA/rB,GAAA67E,aAAAC,aAAAziF,EAAAE,EAAAlP,GAA6CgiC,EAAAN,EAAA0S,QAAYnS,EAAAP,EAAAiwD,UAAc3oF,KAAA2pF,SAAAjxD,EAAAixD,SAAyB3pF,KAAAorC,QAAApS,EAAeh5B,KAAA2oF,UAAA1vD,EAAiBP,EAAA,EAAQA,EAAA7S,EAAI6S,IAAA,IAAAnU,EAAAmU,MAAAxH,EAAAwH,GAAA7S,EAAA,GAAA/T,EAAA9L,EAAA47E,WAAA1wD,GAAArf,EAAAmnB,EAAAN,GAAA5S,EAAAmT,EAAAP,GAAA5kC,EAAAC,EAAAuV,EAAA4nB,KAAA,EAAuEA,EACnf5U,EAAE4U,IAAAl9B,EAAAk9B,EAAA5U,EAAA,EAAA9c,KAAAyS,GAAAkf,GAAAr9B,EAAA0L,KAAA2S,IAAAne,KAAAF,EAAA0L,KAAA4a,IAAApmB,GAAA4xB,EAAApB,KAAA1S,GAAA8T,EAAA7mB,GAAAoyB,EAAAtf,EAAA9S,EAAA/K,EAAA8xB,EAAA/mB,EAAA6mB,EAAA5S,GAAAme,EAAAtf,EAAAmB,EAAAhf,EAAA8xB,EAAA9S,EAAA4S,EAAA3S,GAAAke,EAAAtf,EAAAoB,EAAAjf,EAAA8xB,EAAA7S,EAAAsR,EAAAmU,GAAAxH,GAAAlxB,KAAAwZ,SAAA3Z,KAAA,GAAA8M,GAAA8G,QAAAmS,EAAA7mB,EAAA6mB,EAAA5S,EAAA4S,EAAA3S,IAAA,CAA+K,KAAAylB,EAAA,EAAQA,EAAAxyB,EAAIwyB,IAAA,IAAAxH,EAAA,EAAYA,EAAA5U,EAAI4U,IAAA5nB,EAAAtS,GAAA0hC,EAAA,GAAAxyB,EAAAwyB,EAAA,EAAA7S,GAAAqL,EAAA,GAAA5U,EAAAtW,EAAAue,EAAAmU,GAAAxH,GAAAn9B,EAAAwwB,EAAAjb,GAAA4nB,GAAA5nB,EAAAib,EAAAjb,GAAAuc,KAAAtB,EAAAmU,GAAA7S,GAAAD,EAAA,GAAAjZ,GAAAykB,QAAAsH,EAAAxyB,EAAAgrB,EAAA5U,GAAA0c,EAAA,GAAArsB,GAAAykB,SAAAsH,EAAA,GAAAxyB,EAAAgrB,EAAA5U,GAAA2c,EAAA,GAAAtsB,GAAAykB,SAAAsH,EAAA,GAAAxyB,GAAAgrB,EAAA,GAAA5U,GAAAzK,EAAA,GAAAlF,GAAAykB,QAAAsH,EAAAxyB,GAAAgrB,EAAA,GAAA5U,GAAAtc,KAAAkpC,MAAArpC,KAAA,GAAA8M,GAAAw5B,MAAAngC,EAAAjS,EAAA8xB,IAAA7lB,KAAAmpC,cAAA,GAAAtpC,MAAA+lB,EAAAoT,EAAAnnB,IAAA7R,KAAAkpC,MAAArpC,KAAA,GAAA8M,GAAAw5B,MAAApyC,EAC7MuV,EAAAuc,IAAA7lB,KAAAmpC,cAAA,GAAAtpC,MAAAm5B,EAAAriC,QAAAsiC,EAAApnB,EAAAlb,SAA0DqJ,MAAAsqC,qBAA0BtqC,KAAAuqC,wBAA6B59B,EAAA67E,aAAA9gF,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAAqEiF,EAAA67E,aAAA9gF,UAAA7S,YAAA8X,EAAA67E,aAA4D77E,EAAA67E,aAAAkB,QAAA,SAAA1jF,GAAuC,UAAU2G,EAAA67E,aAAAoB,gBAAA,SAAA5jF,GAA+C,MAAAxG,MAAA4a,IAAA5a,KAAAyS,GAAAjM,IAClV2G,EAAA67E,aAAAC,aAAA,SAAAziF,EAAAE,EAAAnS,GAAgD,GAAAuoB,GAAA,GAAA3P,GAAA8G,QAAAzc,KAAAsS,KAAAib,KAAA1S,EAAA,GAAAlF,GAAA8G,QAAAqS,EAAA,GAAAnZ,GAAA2mB,OAA+EptB,IAAA,CAAK,IAAA2f,GAAAqL,EAAAl9B,CAA0D,KAAhDgM,KAAA2pF,SAAA3yF,EAAgBgJ,KAAAorC,QAAA9hC,EAAetJ,KAAA2oF,UAAApkE,EAAiBsB,EAAA,EAAQA,EAAA3f,EAAI2f,IAAAqL,EAAArL,GAAA3f,EAAA,GAAAlP,EAAA6uB,GAAA7f,EAAAq8E,aAAAnxD,GAAAl6B,EAAA6uB,GAAAxR,WAC1K,KADgO/K,EAAA,MAAAqD,GAAA8G,QAAuB8Q,EAAA,MAAA5X,GAAA8G,QAAuBzN,EAAA6V,OAAAguE,UAAmBhkE,EAAArmB,KAAA+wB,IAAAv5B,EAAA,GAAA+H,GAAmBmyB,EAAA1xB,KAAA+wB,IAAAv5B,EAAA,GAAAgc,GAAmBhf,EAAAwL,KAAA+wB,IAAAv5B,EAAA,GAAAic,GAAmB4S,GAAA7f,MAAA6f,EAAAvJ,EAAAjL,IAAA,QAAyB6f,GAAAlrB,MAAAkrB,EAAA5U,EAAAjL,IAAA,QAAyBrd,GAAAgS,GAAAsW,EAAAjL,IAAA,OAAmBQ,EAAA2e,aAAAx5B,EAAA,GAAAslB,GAAAjI,YAAmC/K,EAAA,GAAAknB,aAAAx5B,EAAA,GACle6a,GAAG0S,EAAA,GAAAiM,aAAAx5B,EAAA,GAAAsS,EAAA,IAA6Buc,EAAA,EAAQA,EAAA3f,EAAI2f,IAAAvc,EAAAuc,GAAAvc,EAAAuc,EAAA,GAAAlvB,QAAA4tB,EAAAsB,GAAAtB,EAAAsB,EAAA,GAAAlvB,QAAAkb,EAAA2e,aAAAx5B,EAAA6uB,EAAA,GAAA7uB,EAAA6uB,IAAAhU,EAAArb,SAAAqlB,OAAAC,UAAAjK,EAAAwC,YAAAiI,EAAA9c,KAAA6b,KAAA1O,EAAAnN,KAAAslB,MAAA9tB,EAAA6uB,EAAA,GAAAzK,IAAApkB,EAAA6uB,OAAA,IAAAvc,EAAAuc,GAAAuN,aAAAtN,EAAA0U,iBAAA3oB,EAAAyK,KAAAiI,EAAAsB,GAAA2K,aAAAx5B,EAAA6uB,GAAAvc,EAAAuc,GAAgP,IAAA9xB,EAAA,IAAAuoB,EAAA9c,KAAA6b,KAAA1O,EAAAnN,KAAAslB,MAAAxb,EAAA,GAAA8R,IAAA9R,EAAApD,EAAA,WAAAoW,GAAApW,EAAA,IAAAlP,EAAA,GAAAokB,IAAAvJ,EAAA2e,aAAAlnB,EAAA,GAAAA,EAAApD,EAAA,OAAAoW,MAAAuJ,EAAA,EAAyHA,EAAA3f,EAAI2f,IAAAvc,EAAAuc,GAAAuN,aAAAtN,EAAA0U,iBAAAxjC,EAAA6uB,GAAAvJ,EAAAuJ,IAAAtB,EAAAsB,GAAA2K,aAAAx5B,EAAA6uB,GAAAvc,EAAAuc,KACzZlZ,EAAAm9E,mBAAA,SAAA9jF,EAAAE,EAAAnS,EAAAuoB,GAA2C,QAAAtlB,GAAAgP,GAAc,GAAAE,GAAAF,EAAAqO,YAAA1d,OAA4BuP,GAAArC,MAAAiiB,EAAAtM,SAAA3Z,KAAAqG,GAAA,CAA6B,IAAAnS,GAAAyL,KAAAuxB,MAAA/qB,EAAAiN,GAAAjN,EAAAjH,GAAA,EAAAS,KAAAyS,GAAA,EAA+H,OAAvFjM,GAAAxG,KAAAuxB,OAAA/qB,EAAAgN,EAAAxT,KAAAgmB,KAAAxf,EAAAjH,EAAAiH,EAAAjH,EAAAiH,EAAAiN,EAAAjN,EAAAiN,IAAAzT,KAAAyS,GAAA,GAAyD/L,EAAAikC,GAAA,GAAAx9B,GAAAykB,QAAAr9B,EAAA,EAAAiS,GAA8BE,EAAS,QAAAoD,GAAAtD,EAAAE,EAAAnS,GAAkB,GAAAuoB,GAAA,GAAA3P,GAAAw5B,MAAAngC,EAAAnC,MAAAqC,EAAArC,MAAA9P,EAAA8P,OAAAmC,EAAArP,QAAAuP,EAAAvP,QAAA5C,EAAA4C,SAA+EmvB,GAAAojB,MAAArpC,KAAAyc,GAAgBoc,EAAAlU,KAAAxe,GAAAmJ,IAAAjJ,GAAAiJ,IAAApb,GAAAg+B,aAAA,GAAwCzV,EAAA9c,KAAAuxB,MAAA2H,EAAAzlB,GAAAylB,EAAA35B,GAAuB+mB,EAAAqjB,cAAA,GAAAtpC,MAAAgS,EAAA7L,EAAAmkC,GAAAnkC,EAAAsW,GAAAzK,EAAA3L,EAAAikC,GAAAjkC,EAAAoW,GAAAzK,EAAA9d,EAAAo2C,GAAAp2C,EAAAuoB,KAA+D,QAAAiI,GAAAve,EACzeE,GAAG,OAAAnS,GAAAyL,KAAAuc,IAAA,EAAA7V,GAAAoW,EAAAtlB,EAAA8uB,EAAAtM,SAAAxT,MAAAue,EAAAvtB,EAAA8uB,EAAAtM,SAAAxT,EAAAE,IAAA2L,EAAA7a,EAAA8uB,EAAAtM,SAAAxT,EAAAjS,IAAA8xB,KAAA/xB,EAAA,EAAgGA,GAAAC,EAAKD,IAAA,CAAK+xB,EAAA/xB,KAAQ,QAAAo9B,GAAAl6B,EAAAslB,EAAA3lB,QAAAyvB,KAAAvU,EAAA/d,EAAAC,IAAAC,EAAAgD,EAAAutB,EAAA5tB,QAAAyvB,KAAAvU,EAAA/d,EAAAC,IAAAo9B,EAAAp9B,EAAAD,EAAAge,EAAA,EAAwEA,GAAAqf,EAAKrf,IAAA+T,EAAA/xB,GAAAge,GAAA,IAAAA,GAAAhe,IAAAC,EAAAm9B,EAAAl6B,EAAAk6B,EAAAv6B,QAAAyvB,KAAApyB,EAAA8d,EAAAqf,IAAoD,IAAAr9B,EAAA,EAAQA,EAAAC,EAAID,IAAA,IAAAge,EAAA,EAAYA,EAAA,GAAA/d,EAAAD,GAAA,EAAYge,IAAAwK,EAAA9c,KAAAzI,MAAA+a,EAAA,OAAAA,EAAA,EAAAxI,EAAAuc,EAAA/xB,GAAAwoB,EAAA,GAAAuJ,EAAA/xB,EAAA,GAAAwoB,GAAAuJ,EAAA/xB,GAAAwoB,IAAAhT,EAAAuc,EAAA/xB,GAAAwoB,EAAA,GAAAuJ,EAAA/xB,EAAA,GAAAwoB,EAAA,GAAAuJ,EAAA/xB,EAAA,GAAAwoB,IAAgG,QAAAzK,GAAA7L,EAAAE,EAAAnS,GAC1X,MAD4Y,GAAAA,GAAA,IAAAiS,EAAAjH,IAAAiH,EAAA,GAAA2G,GAAAykB,QAAAprB,EAAAjH,EAAA,EAAAiH,EAAAgN,IAA+C,IAAA9M,EAAAnH,GAAA,IAAAmH,EAAA+M,IAAAjN,EAAA,GAAA2G,GAAAykB,QAAAr9B,EAAA,EAAAyL,KAAAyS,GAAA,GAAAjM,EAAAgN,IAC3bhN,EAAArP,QAAiBgW,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,qBAA+B6E,KAAAmrC,YAAiB3xB,SAAAxT,EAAAwlC,QAAAtlC,EAAAiuB,OAAApgC,EAAAm3D,OAAA5uC,GAAwCvoB,KAAA,EAAOuoB,KAAA,CAAO,QAAAwJ,GAAA9lB,KAAA6lB,EAAA,EAAAqL,EAAAlrB,EAAAxP,OAA8BqvB,EAAAqL,EAAIrL,GAAA,EAAA7uB,EAAA,GAAA2V,GAAA8G,QAAAzN,EAAA6f,GAAA7f,EAAA6f,EAAA,GAAA7f,EAAA6f,EAAA,IAA8C7f,GAAAhG,KAAAwZ,QAAgB,QAAAxlB,MAAAF,EAAA+xB,EAAA,EAAAqL,EAAAhrB,EAAA1P,OAA8BqvB,EAAAqL,EAAIrL,GAAA,EAAA/xB,IAAA,CAAU,GAAAq9B,GAAAnrB,EAAAE,EAAA2f,IAAA/T,EAAA9L,EAAAE,EAAA2f,EAAA,IAAAD,EAAA5f,EAAAE,EAAA2f,EAAA,GAAsC7xB,GAAAF,GAAA,GAAA6Y,GAAAw5B,MAAAhV,EAAAttB,MAAAiO,EAAAjO,MAAA+hB,EAAA/hB,OAAAstB,EAAAx6B,QAAAmb,EAAAnb,QAAAivB,EAAAjvB,UAA8E,OAAA+hC,GAAA,GAAA/rB,GAAA8G,QAAAoS,EAAA,EAAAqL,EAAAl9B,EAAAwC,OAA2CqvB,EAAAqL,EAAIrL,IAAAtB,EAAAvwB,EAAA6xB,GAAAvJ,EAAkB,KAAJuJ,EAAA,EAAIqL,EAAAlxB,KAAAmpC,cAAA,GAAA3yC,OAAmCqvB,EACrfqL,EAAErL,IAAA3f,EAAAlG,KAAAmpC,cAAA,GAAAtjB,GAAAvJ,EAAApW,EAAA,GAAAnH,EAAAiH,EAAAE,EAAA,GAAAnH,EAAA/K,EAAAkS,EAAA,GAAAnH,EAAAjL,EAAA0L,KAAAC,IAAA6c,EAAAtW,EAAAhS,GAAAm9B,EAAA3xB,KAAAib,IAAA6B,EAAAtW,EAAAhS,GAAA,GAAAF,GAAA,GAAAq9B,IAAA,GAAA7U,IAAApW,EAAA,GAAAnH,GAAA,MAAAiH,IAAAE,EAAA,GAAAnH,GAAA,MAAA/K,IAAAkS,EAAA,GAAAnH,GAAA,GAAsK,KAAJ8mB,EAAA,EAAIqL,EAAAlxB,KAAAwZ,SAAAhjB,OAA2BqvB,EAAAqL,EAAIrL,IAAA7lB,KAAAwZ,SAAAqM,GAAAlrB,eAAA5G,EAAuCiM,MAAAgrC,gBAAqBhrC,KAAAsqC,qBAA0BtqC,KAAAi8B,eAAA,GAAAtvB,GAAA+qB,OAAA,GAAA/qB,GAAA8G,QAAA1f,IAA2D4Y,EAAAm9E,mBAAApiF,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAA2EiF,EAAAm9E,mBAAApiF,UAAA7S,YAAA8X,EAAAm9E,mBACnan9E,EAAAo9E,qBAAA,SAAA/jF,EAAAE,GAAyC,GAAAnS,IAAA,EAAAyL,KAAAgmB,KAAA,MAAAlJ,EAAA,EAAAvoB,CAA+B4Y,GAAAm9E,mBAAAj2F,KAAAmM,qBAAA,gDAAAsc,GAAAvoB,EAAA,GAAAuoB,EAAAvoB,EAAA,EAAAuoB,GAAAvoB,EAAA,EAAAuoB,EAAAvoB,GAAAuoB,GAAAvoB,EAAA,GAAAuoB,EAAAvoB,EAAA,EAAAuoB,GAAAvoB,EAAA,EAAAuoB,EAAAvoB,EAAA,GAAAA,EAAA,GAAAuoB,EAAAvoB,EAAA,GAAAuoB,GAAAvoB,EAAA,EAAAuoB,EAAAvoB,EAAA,EAAAuoB,IAAA,uPACxE,oBAAAtW,EAAAE,GAAyBlG,KAAA7E,KAAA,uBAAiC6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAklD,OAAAhlD,IAAoByG,EAAAo9E,qBAAAriF,UAAAuU,OAAA+jB,OAAArzB,EAAAm9E,mBAAApiF,WAAuFiF,EAAAo9E,qBAAAriF,UAAA7S,YAAA8X,EAAAo9E,qBACtLp9E,EAAAq9E,oBAAA,SAAAhkF,EAAAE,GAAwC,GAAAnS,IAAA,EAAAyL,KAAAgmB,KAAA,KAAyB7Y,GAAAm9E,mBAAAj2F,KAAAmM,SAAAjM,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,OAAAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,IAAA,KAAAA,EAAA,KAAAA,EAAA,MAAAA,EAAA,yIAAAiS,EAAAE,GAAkQlG,KAAA7E,KAAA,sBAAgC6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAklD,OAAAhlD,IAAoByG,EAAAq9E,oBAAAtiF,UAAAuU,OAAA+jB,OAAArzB,EAAAm9E,mBAAApiF,WACxYiF,EAAAq9E,oBAAAtiF,UAAA7S,YAAA8X,EAAAq9E,oBAA0Er9E,EAAAs9E,mBAAA,SAAAjkF,EAAAE,GAAuCyG,EAAAm9E,mBAAAj2F,KAAAmM,MAAA,0FAAAgG,EAAAE,GAAmIlG,KAAA7E,KAAA,qBAA+B6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAklD,OAAAhlD,IAAoByG,EAAAs9E,mBAAAviF,UAAAuU,OAAA+jB,OAAArzB,EAAAm9E,mBAAApiF;AAAqFiF,EAAAs9E,mBAAAviF,UAAA7S,YAAA8X,EAAAs9E,mBAC7Yt9E,EAAAu9E,oBAAA,SAAAlkF,EAAAE,GAAwCyG,EAAAm9E,mBAAAj2F,KAAAmM,MAAA,yDAAAgG,EAAAE,GAAkGlG,KAAA7E,KAAA,sBAAgC6E,KAAAmrC,YAAiBhX,OAAAnuB,EAAAklD,OAAAhlD,IAAoByG,EAAAu9E,oBAAAxiF,UAAAuU,OAAA+jB,OAAArzB,EAAAm9E,mBAAApiF,WAAsFiF,EAAAu9E,oBAAAxiF,UAAA7S,YAAA8X,EAAAu9E,oBACrSv9E,EAAAw9E,mBAAA,SAAAnkF,EAAAE,EAAAnS,GAAyC4Y,EAAA4M,SAAA1lB,KAAAmM,MAA0BA,KAAA7E,KAAA,qBAA+B6E,KAAAmrC,YAAiBi/C,KAAApkF,EAAAqkF,OAAAnkF,EAAAokF,OAAAv2F,EAA0B,IAAAwwB,GAAA1S,EAAAiU,EAAAD,EAAAvJ,EAAAtc,KAAAwZ,SAAAxiB,EAAAgJ,KAAAkpC,MAAA5/B,EAAAtJ,KAAAmpC,cAAA,GAAAjY,EAAAhrB,EAAA,CAAuE,KAAAqe,EAAA,EAAQA,GAAAxwB,EAAKwwB,IAAA,IAAAsB,EAAAtB,EAAAxwB,EAAA8d,EAAA,EAAkBA,GAAA3L,EAAK2L,IAAAiU,EAAAjU,EAAA3L,EAAA4f,EAAA9f,EAAA8f,EAAAD,GAAAvJ,EAAAzc,KAAAimB,EAA6B,IAAA9xB,GAAAF,EAAAq9B,EAAArf,CAAY,KAAAyS,EAAA,EAAQA,EAAAxwB,EAAIwwB,IAAA,IAAA1S,EAAA,EAAYA,EAAA3L,EAAI2L,IAAA7L,EAAAue,EAAA2M,EAAArf,EAAAyK,EAAAiI,EAAA2M,EAAArf,EAAA,EAAAgU,GAAAtB,EAAA,GAAA2M,EAAArf,EAAA,EAAAiU,GAAAvB,EAAA,GAAA2M,EAAArf,EAAA7d,EAAA,GAAA2Y,GAAAykB,QAAAvf,EAAA3L,EAAAqe,EAAAxwB,GAAAD,EAAA,GAAA6Y,GAAAykB,SAAAvf,EAAA,GAAA3L,EAAAqe,EAAAxwB,GAAAo9B,EAAA,GAAAxkB,GAAAykB,SAAAvf,EAAA,GAAA3L,GAAAqe,EAAA,GAAAxwB,GAAA+d,EAAA,GAAAnF,GAAAykB,QAAAvf,EAAA3L,GAAAqe,EAAA,GAAAxwB,GAAAiD,EAAA6I,KAAA,GAAA8M,GAAAw5B,MAAAngC,EAC7TsW,EAAAwJ,IAAAxc,EAAAzJ,MAAA7L,EAAAF,EAAAge,IAAA9a,EAAA6I,KAAA,GAAA8M,GAAAw5B,MAAA7pB,EAAAuJ,EAAAC,IAAAxc,EAAAzJ,MAAA/L,EAAA6C,QAAAw6B,EAAArf,EAAAnb,SAAqFqJ,MAAAsqC,qBAA0BtqC,KAAAuqC,wBAA6B59B,EAAAw9E,mBAAAziF,UAAAuU,OAAA+jB,OAAArzB,EAAA4M,SAAA7R,WAA2EiF,EAAAw9E,mBAAAziF,UAAA7S,YAAA8X,EAAAw9E,mBACvNx9E,EAAA49E,kBAAA,SAAAvkF,GAAoC,QAAAE,GAAAF,EAAAE,GAAgB,MAAAF,GAAAE,EAAWyG,EAAAwqB,eAAAtjC,KAAAmM,KAAgC,IAAAjM,IAAA,KAAAuoB,KAAgBtlB,GAAA,YAAiB,IAAAgP,YAAA2G,GAAA4M,SAAA,CAAgC,GAAAjQ,GAAAtD,EAAAwT,SAAA+K,EAAAve,EAAAkjC,MAAAr3B,EAAA,EAAAiU,EAAA,GAAAuiB,aAAA,EAAA9jB,EAAA/tB,OAA6DwP,GAAA,CAAI,QAAA6f,GAAAtB,EAAA/tB,OAAmBwP,EAAA6f,EAAI7f,IAAA,OAAAkrB,GAAA3M,EAAAve,GAAAhS,EAAA,EAAuB,EAAAA,EAAIA,IAAA,CAAKD,EAAA,GAAAm9B,EAAAl6B,EAAAhD,IAAaD,EAAA,GAAAm9B,EAAAl6B,GAAAhD,EAAA,OAAmBD,EAAA0uC,KAAAv8B,EAAU,IAAApS,GAAAC,EAAAuK,UAAmB,UAAAge,EAAAxoB,KAAAgyB,EAAA,EAAAjU,GAAA9d,EAAA,GAAA+xB,EAAA,EAAAjU,EAAA,GAAA9d,EAAA,GAAAuoB,EAAAxoB,IAAA,EAAA+d,KAAmF,IAA5B9d,EAAA,GAAA6jC,cAAA,EAAA/lB,GAAwB7L,EAAA,EAAI6f,EAAAhU,EAAQ7L,EAAA6f,EAAI7f,IAAA,IAAAhS,EAAA,EAAY,EAAAA,EAAIA,IAAAsoB,EAAAhT,EAAAwc,EAAA,EAAA9f,EAAAhS,IAAA6d,EAAA,EAAA7L,EAAA,EAAAhS,EAAAD,EAAA8d,EAAA,GAAAyK,EAAAvd,EAAAhL,EAAA8d,EAAA,GAAAyK,EAAAtJ,EACpcjf,EAAA8d,EAAA,GAAAyK,EAAArJ,CAAWjT,MAAAgsC,aAAA,cAAAr/B,GAAA45B,gBAAAxyC,EAAA,QAA6D,IAAAiS,YAAA2G,GAAAwqB,eAAA,CAA2C,UAAAnxB,EAAAnC,MAAA,CAAiJ,IAA9HgiB,EAAA7f,EAAAnC,MAAAgvB,MAAgBvpB,EAAAtD,EAAAoxB,WAAAp+B,SAAwBhC,EAAAgP,EAAAqkC,OAAWx4B,EAAA,EAAI,IAAA7a,EAAAR,QAAAwP,EAAAmmC,SAAA,EAAAtmB,EAAArvB,QAAqCsvB,EAAA,GAAAuiB,aAAA,EAAAxiB,EAAArvB,QAA8B+tB,EAAA,EAAI2M,EAAAl6B,EAAAR,OAAe+tB,EAAA2M,IAAI3M,EAAA,CAAKve,EAAAhP,EAAAutB,GAAOvwB,EAAAgS,EAAA6N,MAAU/f,EAAAkS,EAAA0gC,MAAU1gC,EAAAhS,CAAI,QAAAm9B,GAAAn9B,EAAAF,EAAckS,EAAAmrB,EAAInrB,GAAA,MAAAhS,EAAA,EAAa,EAAAA,EAAIA,IAAAD,EAAA,GAAA8xB,EAAA7f,EAAAhS,GAAAD,EAAA,GAAA8xB,EAAA7f,GAAAhS,EAAA,MAAAD,EAAA0uC,KAAAv8B,GAAApS,EAAAC,EAAAuK,WAAA,SAAAge,EAAAxoB,KAAAgyB,EAAA,EAAAjU,GAAA9d,EAAA,GAAA+xB,EAAA,EAAAjU,EAAA,GAAA9d,EAAA,GAAAuoB,EAAAxoB,IAAA,EAAA+d,KAA8I,IAA5B9d,EAAA,GAAA6jC,cAAA,EAAA/lB,GAAwB7L,EAAA,EAAI6f,EAAAhU,EAAQ7L,EACpf6f,EAAE7f,IAAA,IAAAhS,EAAA,EAAY,EAAAA,EAAIA,IAAA6d,EAAA,EAAA7L,EAAA,EAAAhS,EAAAsoB,EAAAwJ,EAAA,EAAA9f,EAAAhS,GAAAD,EAAA8d,EAAA,GAAAvI,EAAA2uB,KAAA3b,GAAAvoB,EAAA8d,EAAA,GAAAvI,EAAA4uB,KAAA5b,GAAAvoB,EAAA8d,EAAA,GAAAvI,EAAA6uB,KAAA7b,OAA4E,KAAAhT,EAAAtD,EAAAoxB,WAAAp+B,SAAA65B,MAAAhhB,EAAAvI,EAAA9S,OAAA,EAAAsvB,EAAAjU,EAAA,EAAA9d,EAAA,GAAA6jC,cAAA,EAAA/lB,GAAA7L,EAAA,EAAA6f,EAAAC,EAA0F9f,EAAA6f,EAAI7f,IAAA,IAAAhS,EAAA,EAAY,EAAAA,EAAIA,IAAA6d,EAAA,GAAA7L,EAAA,EAAAhS,EAAA8xB,EAAA,EAAA9f,EAAA,EAAAhS,EAAAD,EAAA8d,EAAA,GAAAvI,EAAAwc,GAAA/xB,EAAA8d,EAAA,GAAAvI,EAAAwc,EAAA,GAAA/xB,EAAA8d,EAAA,GAAAvI,EAAAwc,EAAA,GAAAxJ,EAAA,EAAAtW,GAAAhS,EAAA,OAAAD,EAAA8d,EAAA,GAAAvI,EAAAgT,GAAAvoB,EAAA8d,EAAA,GAAAvI,EAAAgT,EAAA,GAAAvoB,EAAA8d,EAAA,GAAAvI,EAAAgT,EAAA,EAAyHtc,MAAAgsC,aAAA,cAAAr/B,GAAA45B,gBAAAxyC,EAAA,MAA+D4Y,EAAA49E,kBAAA7iF,UAAAuU,OAAA+jB,OAAArzB,EAAAwqB,eAAAzvB,WACpYiF,EAAA49E,kBAAA7iF,UAAA7S,YAAA8X,EAAA49E,kBAAsE59E,EAAA69E,WAAA,SAAAxkF,GAA6BA,KAAA,CAAO,IAAAE,GAAA,GAAA0xB,eAAA,MAAA5xB,EAAA,YAAAA,EAAA,YAAAA,IAAAjS,EAAA,GAAA6jC,eAAA,wCAA2H5xB,GAAA,GAAA2G,GAAAwqB,eAA2BnxB,EAAAgmC,aAAA,cAAAr/B,GAAA45B,gBAAArgC,EAAA,IAA0DF,EAAAgmC,aAAA,WAAAr/B,GAAA45B,gBAAAxyC,EAAA,IAAuDmS,EAAA,GAAAyG,GAAAuM,mBAA+BmtB,aAAA15B,EAAAiR,eAAkCjR,EAAAilD,aAAA/9D,KAAAmM,KAAAgG,EAAAE,IAAmCyG,EAAA69E,WAAA9iF,UAAAuU,OAAA+jB,OAAArzB,EAAAilD,aAAAlqD,WACrdiF,EAAA69E,WAAA9iF,UAAA7S,YAAA8X,EAAA69E,WACA79E,EAAA89E,YAAA,WAA6B,GAAAzkF,GAAA,GAAA2G,GAAAwqB,cAA+BnxB,GAAAgmC,aAAA,cAAAr/B,GAAA27B,kBAAA,gBAAuE,IAAApiC,GAAA,GAAAyG,GAAAq6E,uBAAA,WAAwE,OAArB9gF,GAAAuO,UAAA,SAAqB,SAAA1gB,EAAAuoB,EAAAtlB,EAAAsS,EAAAib,EAAA1S,GAA6BlF,EAAAsC,SAAApb,KAAAmM,MAA0B,SAAAsJ,MAAA,UAAyB,SAAAtS,MAAA,GAAkB,SAAAutB,MAAA,GAAAvtB,GAAqB,SAAA6a,MAAA,GAAA0S,GAAqBvkB,KAAAhH,SAAAwrB,KAAAlI,GAAsBtc,KAAA0qF,KAAA,GAAA/9E,GAAA+M,KAAA1T,EAAA,GAAA2G,GAAAuM,mBAAwDhI,MAAA5H,KAAWtJ,KAAA0qF,KAAAnnD,kBAAA,EAA8BvjC,KAAAmP,IAAAnP,KAAA0qF,MAAoB1qF,KAAA2qF,KAAA,GAAAh+E,GAAAyE,KAAAlL,EACle,GAAAyG,GAAA2hD,mBAA6Bp9C,MAAA5H,KAAWtJ,KAAA2qF,KAAApnD,kBAAA,EAA8BvjC,KAAAmP,IAAAnP,KAAA2qF,MAAoB3qF,KAAA4qF,aAAA72F,GAAqBiM,KAAA+T,UAAA/c,EAAAutB,EAAA1S,OAA0BlF,EAAA89E,YAAA/iF,UAAAuU,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,WAAoEiF,EAAA89E,YAAA/iF,UAAA7S,YAAA8X,EAAA89E,YAC7M99E,EAAA89E,YAAA/iF,UAAAkjF,aAAA,WAAoD,GAAA1kF,GAAAF,EAAA,GAAA2G,GAAA8G,OAA0B,iBAAA1f,GAAmB,OAAAA,EAAAif,EAAAhT,KAAAmjC,WAAA9xB,IAAA,iBAAAtd,EAAAif,EAAAhT,KAAAmjC,WAAA9xB,IAAA,UAAArL,EAAAqL,IAAAtd,EAAAkf,EAAA,GAAAlf,EAAAgL,GAAAsV,YAAAnO,EAAA1G,KAAA6b,KAAAtnB,EAAAif,GAAAhT,KAAAmjC,WAAAhT,iBAAAnqB,EAAAE,QAA4KyG,EAAA89E,YAAA/iF,UAAAqM,UAAA,SAAA/N,EAAAE,EAAAnS,GAAsD,SAAAmS,MAAA,GAAAF,GAAqB,SAAAjS,MAAA,GAAAmS,GAAqBlG,KAAA0qF,KAAAxwD,MAAA7oB,IAAA,EAAA7R,KAAAC,IAAA,EAAAuG,EAAAE,GAAA,GAAyClG,KAAA0qF,KAAAllD,eAAyBxlC,KAAA2qF,KAAAzwD,MAAA7oB,IAAAtd,EAAAmS,EAAAnS,GAA2BiM,KAAA2qF,KAAA3xF,SAAAga,EAAAhN,EAAuBhG,KAAA2qF,KAAAnlD,gBACje74B,EAAA89E,YAAA/iF,UAAAmjF,SAAA,SAAA7kF,GAAiDhG,KAAA0qF,KAAAzkD,SAAA/0B,MAAAsT,KAAAxe,GAAiChG,KAAA2qF,KAAA1kD,SAAA/0B,MAAAsT,KAAAxe,IAAkC2G,EAAAm+E,UAAA,SAAA9kF,EAAAE,GAA8B,SAAAA,MAAA,SAAyB,IAAAnS,GAAA,GAAAk0C,cAAA,kDAAA3rB,EAAA,GAAAsb,cAAA,IAAA5gC,EAAA,GAAA2V,GAAAwqB,cAA2HngC,GAAA+0C,SAAA,GAAAp/B,GAAA45B,gBAAAxyC,EAAA,IAA2CiD,EAAAg1C,aAAA,cAAAr/B,GAAA45B,gBAAAjqB,EAAA,IAA0D3P,EAAAilD,aAAA/9D,KAAAmM,KAAAhJ,EAAA,GAAA2V,GAAAuM,mBAA4DhI,MAAAhL,KAAW,SAAAF,GAAAhG,KAAA4C,OAAAoD,IACld2G,EAAAm+E,UAAApjF,UAAAuU,OAAA+jB,OAAArzB,EAAAilD,aAAAlqD,WAAsEiF,EAAAm+E,UAAApjF,UAAA7S,YAAA8X,EAAAm+E,UACtEn+E,EAAAm+E,UAAApjF,UAAA9E,OAAA,WAA4C,GAAAoD,GAAA,GAAA2G,GAAAkqB,IAAqB,iBAAA3wB,GAAwE,GAArDA,YAAAyG,GAAAkqB,KAAA7wB,EAAAwe,KAAAte,GAAAF,EAAA+wB,cAAA7wB,IAAqDF,EAAAkwB,UAAA,CAAiBhwB,EAAAF,EAAAyU,GAAQ,IAAA1mB,GAAAiS,EAAAvG,IAAA6c,EAAAtc,KAAAk3B,SAAAE,WAAAp+B,SAAAhC,EAAAslB,EAAAuW,KAA0D77B,GAAA,GAAAjD,EAAAgL,EAAS/H,EAAA,GAAAjD,EAAAif,EAAShc,EAAA,GAAAjD,EAAAkf,EAASjc,EAAA,GAAAkP,EAAAnH,EAAS/H,EAAA,GAAAjD,EAAAif,EAAShc,EAAA,GAAAjD,EAAAkf,EAASjc,EAAA,GAAAkP,EAAAnH,EAAS/H,EAAA,GAAAkP,EAAA8M,EAAShc,EAAA,GAAAjD,EAAAkf,EAASjc,EAAA,GAAAjD,EAAAgL,EAAS/H,EAAA,IAAAkP,EAAA8M,EAAUhc,EAAA,IAAAjD,EAAAkf,EAAUjc,EAAA,IAAAjD,EAAAgL,EAAU/H,EAAA,IAAAjD,EAAAif,EAAUhc,EAAA,IAAAkP,EAAA+M,EAAUjc,EAAA,IAAAkP,EAAAnH,EAAU/H,EAAA,IAAAjD,EAAAif,EAAUhc,EAAA,IAAAkP,EAAA+M,EAAUjc,EAAA,IAAAkP,EAAAnH,EAAU/H,EAAA,IAAAkP,EAAA8M,EAAUhc,EAAA,IAAAkP,EAAA+M,EAAUjc,EAAA,IAAAjD,EAAAgL,EAAU/H,EAAA,IAAAkP,EAAA8M,EAAUhc,EAAA,IAAAkP,EAAA+M,EAAUqJ,EAAAsqB,aAAA,EAAiB5mC,KAAAk3B,SAAAgF,6BACndvvB,EAAAo+E,kBAAA,SAAA/kF,EAAAE,GAAsC,GAAAnS,GAAA,SAAAmS,IAAA,OAA2BlG,MAAAmW,OAAAnQ,EAAchG,KAAAgrF,IAAA,GAAAr+E,GAAAkqB,KAAwBlqB,EAAAyE,KAAAvd,KAAAmM,KAAA,GAAA2M,GAAAoE,YAAA,UAAApE,GAAA2hD,mBAA+Ep9C,MAAAnd,EAAAk1D,WAAA,MAAyBt8C,EAAAo+E,kBAAArjF,UAAAuU,OAAA+jB,OAAArzB,EAAAyE,KAAA1J,WAAsEiF,EAAAo+E,kBAAArjF,UAAA7S,YAAA8X,EAAAo+E,kBAAsEp+E,EAAAo+E,kBAAArjF,UAAA9E,OAAA,WAAoD5C,KAAAgrF,IAAAj0D,cAAA/2B,KAAAmW,QAAoCnW,KAAAgrF,IAAA16E,KAAAtQ,KAAAk6B,OAA0Bl6B,KAAAgrF,IAAAhwF,OAAAgF,KAAAhH,WAC7c2T,EAAAs+E,aAAA,SAAAjlF,GAA+B,QAAAE,GAAAF,EAAAE,EAAAoW,GAAkBvoB,EAAAiS,EAAAsW,GAAOvoB,EAAAmS,EAAAoW,GAAO,QAAAvoB,GAAAiS,EAAAE,GAAgBoW,EAAA9C,SAAA3Z,KAAA,GAAA8M,GAAA8G,SAAmC6I,EAAA2sB,OAAAppC,KAAA,GAAA8M,GAAA0X,MAAAne,IAAkC,SAAAoD,EAAAtD,KAAAsD,EAAAtD,OAAyBsD,EAAAtD,GAAAnG,KAAAyc,EAAA9C,SAAAhjB,OAAA,GAA+B,GAAA8lB,GAAA,GAAA3P,GAAA4M,SAAAviB,EAAA,GAAA2V,GAAAuM,mBAAwDhI,MAAA,SAAAm1B,aAAA15B,EAAAgR,aAA6CrU,IAAOpD,GAAA,oBAAsBA,EAAA,oBAAsBA,EAAA,oBAAsBA,EAAA,oBAAsBA,EAAA,oBAAsBA,EAAA,oBAAsBA,EAAA,oBAAsBA,EAAA,oBAAsBA,EAAA,oBACxeA,EAAA,oBAAsBA,EAAA,oBAAsBA,EAAA,oBAAsBA,EAAA,mBAAqBA,EAAA,mBAAqBA,EAAA,mBAAqBA,EAAA,mBAAqBA,EAAA,iBAAmBA,EAAA,iBAAmBA,EAAA,iBAAmBA,EAAA,kBAAoBA,EAAA,iBAAmBA,EAAA,qBAAuBA,EAAA,qBAAuBA,EAAA,qBAAuBA,EAAA,qBAAuByG,EAAAilD,aAAA/9D,KAAAmM,KAAAsc,EAAAtlB,GAAkCgJ,KAAA6N,OAAA7H,EAAchG,KAAA6N,OAAAG,wBAAAhO,KAAA6N,OAAAG,yBAAyEhO,KAAAsjC,OAAAt9B,EAAA0tB,YAA0B1zB,KAAAujC,kBACre,EAAGvjC,KAAAkrF,SAAA5hF,EAAgBtJ,KAAA4C,UAAe+J,EAAAs+E,aAAAvjF,UAAAuU,OAAA+jB,OAAArzB,EAAAilD,aAAAlqD,WAAyEiF,EAAAs+E,aAAAvjF,UAAA7S,YAAA8X,EAAAs+E,aAC3Gt+E,EAAAs+E,aAAAvjF,UAAA9E,OAAA,WAA+C,QAAAoD,KAAAue,EAAA1S,EAAAiU,GAAqD,GAAjCxJ,EAAAjL,IAAAkT,EAAA1S,EAAAiU,GAAA6N,UAAA38B,GAA0BgP,EAAAjS,EAAAiS,GAAO,SAAAA,EAAA,IAAAue,EAAA,EAAA1S,EAAA7L,EAAAxP,OAAiC+tB,EAAA1S,EAAI0S,IAAAre,EAAAsT,SAAAxT,EAAAue,IAAAC,KAAAlI,GAA6B,GAAApW,GAAAnS,EAAAuoB,EAAA,GAAA3P,GAAA8G,QAAAzc,EAAA,GAAA2V,GAAAuxC,MAA+C,mBAAkBh4C,EAAAlG,KAAAk3B,SAAgBnjC,EAAAiM,KAAAkrF,SAAgBl0F,EAAAw8B,iBAAAhP,KAAAxkB,KAAA6N,OAAA2lB,kBAAsDxtB,EAAA,YAAcA,EAAA,WAAaA,EAAA,eAAiBA,EAAA,cAAgBA,EAAA,cAAgBA,EAAA,aAAeA,EAAA,cAAgBA,EAAA,aAAeA,EAAA,aAAeA,EAAA,YAAcA,EAAA,gBAAkBA,EAAA,iBACleA,EAAA,aAAeA,EAAA,cAAgBA,EAAA,aAAeA,EAAA,cAAgBA,EAAA,aAAeA,EAAA,eAAiBA,EAAA,cAAgBA,EAAA,eAAiBA,EAAA,cAAgBE,EAAA8jC,oBAAA,MACnJr9B,EAAAw+E,uBAAA,SAAAnlF,EAAAE,GAA2CyG,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAAorF,MAAAplF,EAAahG,KAAAorF,MAAAp0D,oBAA+Bh3B,KAAAsjC,OAAAt9B,EAAA0tB,YAA0B1zB,KAAAujC,kBAAA,EAAyB,SAAAr9B,MAAA,EAAkB,IAAAnS,GAAA,GAAA4Y,GAAAwqB,cAA+BpjC,GAAAi4C,aAAA,cAAAr/B,GAAA27B,mBAAApiC,IAAA,EAAAA,IAAA,EAAAA,KAAA,GAAAA,KAAA,GAAAA,IAAA,MAA8F,IAAAoW,GAAA,GAAA3P,GAAAuM,mBAAmC+zC,KAAA,GAASjtD,MAAAmP,IAAA,GAAAxC,GAAA+M,KAAA3lB,EAAAuoB,IAA8BvoB,EAAA,GAAA4Y,GAAAwqB,eAA2BpjC,EAAAi4C,aAAA,cAAAr/B,GAAA27B,kBAAA,iBAAuEtoC,KAAAmP,IAAA,GAAAxC,GAAA+M,KAAA3lB,EAC/duoB,IAAItc,KAAA4C,UAAe+J,EAAAw+E,uBAAAzjF,UAAAuU,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,WAA+EiF,EAAAw+E,uBAAAzjF,UAAA7S,YAAA8X,EAAAw+E,uBAAgFx+E,EAAAw+E,uBAAAzjF,UAAA4jC,QAAA,WAA0D,GAAAtlC,GAAAhG,KAAA6hC,SAAA,GAAA37B,EAAAlG,KAAA6hC,SAAA,EAA0C77B,GAAAkxB,SAAAoU,UAAqBtlC,EAAAigC,SAAAqF,UAAqBplC,EAAAgxB,SAAAoU,UAAqBplC,EAAA+/B,SAAAqF,WACrV3+B,EAAAw+E,uBAAAzjF,UAAA9E,OAAA,WAAyD,GAAAoD,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,GAAA4Y,GAAA8G,OAAgE,mBAAkBzN,EAAAouB,sBAAAp0B,KAAAorF,MAAA13D,aAAgDxtB,EAAAkuB,sBAAAp0B,KAAAorF,MAAA9pD,OAAA5N,aAAuD3/B,EAAA49B,WAAAzrB,EAAAF,EAAkB,IAAAsW,GAAAtc,KAAA6hC,SAAA,GAAA7qC,EAAAgJ,KAAA6hC,SAAA,EAA0CvlB,GAAA9H,OAAAzgB,GAAYuoB,EAAA2pB,SAAA/0B,MAAAsT,KAAAxkB,KAAAorF,MAAAl6E,OAAAvW,eAAAqF,KAAAorF,MAAAjrC,WAA6EnpD,EAAAwd,OAAAzgB,GAAYiD,EAAAkjC,MAAAjnB,EAAAlf,EAAAyC,aACnZmW,EAAA0+E,YAAA,SAAArlF,EAAAE,EAAAnS,GAAkCmS,EAAA,SAAAA,IAAA,SAAwByG,EAAAilD,aAAA/9D,KAAAmM,KAAA,GAAA2M,GAAAy6E,cAAAphF,EAAAkxB,SAAAnjC,GAAA,GAAA4Y,GAAAuM,mBAAgGhI,MAAAhL,KAAWlG,KAAAsjC,OAAAt9B,EAAA0tB,YAA0B1zB,KAAAujC,kBAAA,GAA0B52B,EAAA0+E,YAAA3jF,UAAAuU,OAAA+jB,OAAArzB,EAAAilD,aAAAlqD,WAAwEiF,EAAA0+E,YAAA3jF,UAAA7S,YAAA8X,EAAA0+E,YACjS1+E,EAAA2+E,kBAAA,SAAAtlF,EAAAE,EAAAnS,EAAAuoB,GAA0Ctc,KAAAmW,OAAAnQ,EAAchG,KAAAsQ,KAAA,SAAApK,IAAA,EAAyBF,EAAA,SAAAjS,IAAA,SAAwBuoB,EAAA,SAAAA,IAAA,EAAiBpW,EAAA,EAAInS,EAAAiM,KAAAmW,OAAA+gB,SAAuBnjC,YAAA4Y,GAAA4M,SAAArT,EAAAnS,EAAAm1C,MAAA1yC,OAAAlB,QAAA0vB,KAAA,sGAAgKjxB,EAAA,GAAA4Y,GAAAwqB,eAA2BjxB,EAAA,GAAAyG,GAAA27B,iBAAA,EAAApiC,EAAA,GAAoCnS,EAAAi4C,aAAA,WAAA9lC,GAA6ByG,EAAAilD,aAAA/9D,KAAAmM,KAAAjM,EAAA,GAAA4Y,GAAAuM,mBAA4DhI,MAAAlL,EAAAmT,UAAAmD,KAAuBtc,KAAAujC,kBACpe,EAAGvjC,KAAA4C,UAAe+J,EAAA2+E,kBAAA5jF,UAAAuU,OAAA+jB,OAAArzB,EAAAilD,aAAAlqD,WAA8EiF,EAAA2+E,kBAAA5jF,UAAA7S,YAAA8X,EAAA2+E,kBAChG3+E,EAAA2+E,kBAAA5jF,UAAA9E,OAAA,WAAoD,GAAAoD,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,GAAA4Y,GAAAgrB,OAAgE,mBAAkB33B,KAAAmW,OAAA6gB,mBAAA,GAAkCjjC,EAAAykC,gBAAAx4B,KAAAmW,OAAAud,YAA2C,QAAApX,GAAAtc,KAAAmW,OAAAud,YAAA18B,EAAAgJ,KAAAk3B,SAAAE,WAAAp+B,SAAAsQ,EAAAtJ,KAAAmW,OAAA+gB,SAAA3S,EAAAjb,EAAAkQ,SAAAlQ,IAAA4/B,MAAAr3B,EAAA,EAAAiU,EAAA,EAAAD,EAAAvc,EAAA9S,OAAuIsvB,EAAAD,EAAIC,IAAA,CAAK,GAAAoL,GAAA5nB,EAAAwc,GAAA9xB,EAAAk9B,EAAAqG,MAAsBvxB,GAAAwe,KAAAD,EAAA2M,EAAAlrB,IAAAmJ,IAAAoV,EAAA2M,EAAAhrB,IAAAiJ,IAAAoV,EAAA2M,EAAAn9B,IAAAg+B,aAAA,GAAAqB,aAAA9W,GAAuEpW,EAAAse,KAAAxwB,GAAAm/B,aAAAp/B,GAAAsgB,YAAA1Z,eAAAqF,KAAAsQ,MAAAnB,IAAAnJ,GAChchP,EAAAohC,OAAAvmB,EAAA7L,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,GAAwBpB,GAAA,EAAK7a,EAAAohC,OAAAvmB,EAAA3L,EAAAnH,EAAAmH,EAAA8M,EAAA9M,EAAA+M,GAAwBpB,GAAA,EAAsB,MAAjB7a,GAAA4vC,aAAA,EAAiB5mC,SAC3E2M,EAAA4+E,WAAA,SAAAvlF,EAAAE,EAAAnS,EAAAuoB,GAAmCvoB,EAAA,GAAA4Y,GAAA0X,MAAA,SAAAtwB,IAAA,SAAwCuoB,EAAA,GAAA3P,GAAA0X,MAAA,SAAA/H,IAAA,QAAwC,QAAAtlB,MAAAsS,KAAAib,GAAAve,EAAA6L,EAAA,EAA2B0S,GAAAve,EAAKue,GAAAre,EAAA,CAAMlP,EAAA6I,MAAAmG,EAAA,EAAAue,EAAAve,EAAA,EAAAue,GAAqBvtB,EAAA6I,KAAA0kB,EAAA,GAAAve,EAAAue,EAAA,EAAAve,EAAqB,IAAA8f,GAAA,IAAAvB,EAAAxwB,EAAAuoB,CAAgBwJ,GAAAS,QAAAjd,EAAAuI,GAAeA,GAAA,EAAKiU,EAAAS,QAAAjd,EAAAuI,GAAeA,GAAA,EAAKiU,EAAAS,QAAAjd,EAAAuI,GAAeA,GAAA,EAAKiU,EAAAS,QAAAjd,EAAAuI,GAAeA,GAAA,EAAK7L,EAAA,GAAA2G,GAAAwqB,eAA2BnxB,EAAAgmC,aAAA,cAAAr/B,GAAA27B,iBAAAtxC,EAAA,IAA2DgP,EAAAgmC,aAAA,WAAAr/B,GAAA27B,iBAAAh/B,EAAA,IAAwDtS,EAAA,GAAA2V,GAAAuM,mBAA+BmtB,aAAA15B,EAAAiR,eAAkCjR,EAAAilD,aAAA/9D,KAAAmM,KAClfgG,EAAAhP,IAAM2V,EAAA4+E,WAAA7jF,UAAAuU,OAAA+jB,OAAArzB,EAAAilD,aAAAlqD,WAAuEiF,EAAA4+E,WAAA7jF,UAAA7S,YAAA8X,EAAA4+E,WAAwD5+E,EAAA4+E,WAAA7jF,UAAA8jF,UAAA,WAAgDl2F,QAAAC,MAAA,6FACrLoX,EAAA8+E,sBAAA,SAAAzlF,EAAAE,GAA0CyG,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAAorF,MAAAplF,EAAahG,KAAAorF,MAAAp0D,oBAA+Bh3B,KAAAsjC,OAAAt9B,EAAA0tB,YAA0B1zB,KAAAujC,kBAAA,EAAyBvjC,KAAAipC,QAAA,GAAAt8B,GAAA0X,MAAA,GAAA1X,GAAA0X,MAA8C,IAAAtwB,GAAA,GAAA4Y,GAAAs8E,eAAA/iF,EAAA,IAAsCnS,GAAAuwC,SAAA9kC,KAAAyS,GAAA,EAAsB,QAAAqK,GAAA,EAAY,EAAAA,EAAIA,IAAAvoB,EAAAm1C,MAAA5sB,GAAApL,MAAAlR,KAAAipC,OAAA,EAAA3sB,EAAA,IAA0CA,GAAA,GAAA3P,GAAA2hD,mBAA+BjoB,aAAA15B,EAAAgR,WAAAsrC,WAAA,IAA6CjpD,KAAA0rF,YAAA,GAAA/+E,GAAAyE,KAAArd,EAAAuoB,GAAqCtc,KAAAmP,IAAAnP,KAAA0rF,aAA2B1rF,KAAA4C,UACnd+J,EAAA8+E,sBAAA/jF,UAAAuU,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,WAA8EiF,EAAA8+E,sBAAA/jF,UAAA7S,YAAA8X,EAAA8+E,sBAA8E9+E,EAAA8+E,sBAAA/jF,UAAA4jC,QAAA,WAAyDtrC,KAAA0rF,YAAAx0D,SAAAoU,UAAoCtrC,KAAA0rF,YAAAzlD,SAAAqF,WACzP3+B,EAAA8+E,sBAAA/jF,UAAA9E,OAAA,WAAwD,GAAAoD,GAAA,GAAA2G,GAAA8G,OAAwB,mBAAkBzT,KAAAipC,OAAA,GAAAzkB,KAAAxkB,KAAAorF,MAAAl6E,OAAAvW,eAAAqF,KAAAorF,MAAAjrC,WAA2EngD,KAAAipC,OAAA,GAAAzkB,KAAAxkB,KAAAorF,MAAAhrC,aAAAzlD,eAAAqF,KAAAorF,MAAAjrC,WAAiFngD,KAAA0rF,YAAAl3E,OAAAxO,EAAAouB,sBAAAp0B,KAAAorF,MAAA13D,aAAArB,UAAkFryB,KAAA0rF,YAAAx0D,SAAA0S,kBAAA,MAChVj9B,EAAAg/E,iBAAA,SAAA3lF,EAAAE,GAAqClG,KAAAorF,MAAAplF,EAAahG,KAAAorF,MAAAp0D,mBAA+B,IAAAjjC,GAAA,GAAA4Y,GAAAu8E,qBAAAhjF,EAAA,KAAAoW,EAAA,GAAA3P,GAAA2hD,mBAA2ErF,WAAA,EAAAgE,KAAA,GAAsB3wC,GAAApL,MAAAsT,KAAAxkB,KAAAorF,MAAAl6E,OAAAvW,eAAAqF,KAAAorF,MAAAjrC,WAAoExzC,EAAAyE,KAAAvd,KAAAmM,KAAAjM,EAAAuoB,GAA0Btc,KAAAsjC,OAAAtjC,KAAAorF,MAAA13D,YAAmC1zB,KAAAujC,kBAAA,GAA0B52B,EAAAg/E,iBAAAjkF,UAAAuU,OAAA+jB,OAAArzB,EAAAyE,KAAA1J,WAAqEiF,EAAAg/E,iBAAAjkF,UAAA7S,YAAA8X,EAAAg/E,iBAClZh/E,EAAAg/E,iBAAAjkF,UAAA4jC,QAAA,WAAoDtrC,KAAAk3B,SAAAoU,UAAwBtrC,KAAAimC,SAAAqF,WAAyB3+B,EAAAg/E,iBAAAjkF,UAAA9E,OAAA,WAAmD5C,KAAAimC,SAAA/0B,MAAAsT,KAAAxkB,KAAAorF,MAAAl6E,OAAAvW,eAAAqF,KAAAorF,MAAAjrC,YACxJxzC,EAAAi/E,eAAA,SAAA5lF,GAAiChG,KAAA04C,MAAA14C,KAAA6rF,YAAA7lF,EAA+B,QAAAE,GAAA,GAAAyG,GAAA4M,SAAAxlB,EAAA,EAAiCA,EAAAiM,KAAA04C,MAAAliD,OAAoBzC,IAAAiM,KAAA04C,MAAA3kD,GAAA+uC,iBAAAn2B,GAAA8lD,OAAAvsD,EAAAsT,SAAA3Z,KAAA,GAAA8M,GAAA8G,SAAAvN,EAAAsT,SAAA3Z,KAAA,GAAA8M,GAAA8G,SAAAvN,EAAA+iC,OAAAppC,KAAA,GAAA8M,GAAA0X,MAAA,QAAAne,EAAA+iC,OAAAppC,KAAA,GAAA8M,GAAA0X,MAAA,QAAoMne,GAAAsgC,SAAA,EAAazyC,EAAA,GAAA4Y,GAAAuM,mBAA+BmtB,aAAA15B,EAAAiR,aAAAkrC,WAAA,EAAAC,YAAA,EAAA7C,aAAA,IAA4Ev5C,EAAAilD,aAAA/9D,KAAAmM,KAAAkG,EAAAnS,GAAkCiM,KAAA8rF,KAAA9lF,EAAYhG,KAAAsjC,OAAAt9B,EAAA0tB,YAC/d1zB,KAAAujC,kBAAA,EAAyBvjC,KAAA4C,UAAe+J,EAAAi/E,eAAAlkF,UAAAuU,OAAA+jB,OAAArzB,EAAAilD,aAAAlqD,WAA2EiF,EAAAi/E,eAAAlkF,UAAA7S,YAAA8X,EAAAi/E,eAAgEj/E,EAAAi/E,eAAAlkF,UAAAmkF,YAAA,SAAA7lF,GAAuD,GAAAE,KAASF,aAAA2G,GAAA8lD,MAAAvsD,EAAArG,KAAAmG,EAAmC,QAAAjS,GAAA,EAAYA,EAAAiS,EAAA67B,SAAArrC,OAAoBzC,IAAAmS,EAAArG,KAAA/D,MAAAoK,EAAAlG,KAAA6rF,YAAA7lF,EAAA67B,SAAA9tC,IAAoD,OAAAmS,IAC1WyG,EAAAi/E,eAAAlkF,UAAA9E,OAAA,WAAiD,OAAAoD,GAAAhG,KAAAk3B,SAAAhxB,GAAA,GAAAyG,GAAA2mB,SAAAG,WAAAzzB,KAAA8rF,KAAAp4D,aAAA3/B,EAAA,GAAA4Y,GAAA2mB,QAAAhX,EAAA,EAAAtlB,EAAA,EAA4GA,EAAAgJ,KAAA04C,MAAAliD,OAAoBQ,IAAA,CAAK,GAAAsS,GAAAtJ,KAAA04C,MAAA1hD,EAAoBsS,GAAAw5B,iBAAAn2B,GAAA8lD,OAAA1+D,EAAAw/B,iBAAArtB,EAAAoD,EAAAoqB,aAAA1tB,EAAAwT,SAAA8C,GAAA8X,sBAAArgC,KAAAw/B,iBAAArtB,EAAAoD,EAAAw5B,OAAApP,aAAA1tB,EAAAwT,SAAA8C,EAAA,GAAA8X,sBAAArgC,GAAAuoB,GAAA,GAAsMtW,EAAAgkC,oBAAA,EAAwBhkC,EAAAk2B,yBACxavvB,EAAAo/E,gBAAA,SAAA/lF,GAAkC2G,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAAorF,MAAAplF,EAAahG,KAAAorF,MAAAp0D,oBAA+Bh3B,KAAAsjC,OAAAt9B,EAAA0tB,YAA0B1zB,KAAAujC,kBAAA,EAAyBv9B,EAAA,GAAA2G,GAAAwqB,cAA2B,QAAAjxB,IAAA,+DAAAnS,EAAA,EAAAuoB,EAAA,EAAkF,GAAAvoB,EAAKA,IAAAuoB,IAAA,CAAS,GAAAtlB,GAAAjD,EAAA,GAAAyL,KAAAyS,GAAA,EAAA3I,EAAAgT,EAAA,GAAA9c,KAAAyS,GAAA,CAAsC/L,GAAArG,KAAAL,KAAA2S,IAAAnb,GAAAwI,KAAA4a,IAAApjB,GAAA,EAAAwI,KAAA2S,IAAA7I,GAAA9J,KAAA4a,IAAA9Q,GAAA,GAA4DtD,EAAAgmC,aAAA,cAAAr/B,GAAA27B,iBAAApiC,EAAA,IAA2DA,EAAA,GAAAyG,GAAAuM,mBAA+B+zC,KAAA,IAASjtD,KAAA2qF,KAAA,GAAAh+E,GAAAilD,aAAA5rD,EAC3dE,GAAGlG,KAAAmP,IAAAnP,KAAA2qF,MAAoB3qF,KAAA4C,UAAe+J,EAAAo/E,gBAAArkF,UAAAuU,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,WAAwEiF,EAAAo/E,gBAAArkF,UAAA7S,YAAA8X,EAAAo/E,gBAAkEp/E,EAAAo/E,gBAAArkF,UAAA4jC,QAAA,WAAmDtrC,KAAA2qF,KAAAzzD,SAAAoU,UAA6BtrC,KAAA2qF,KAAA1kD,SAAAqF,WAChQ3+B,EAAAo/E,gBAAArkF,UAAA9E,OAAA,WAAkD,GAAAoD,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,OAA4C,mBAAkB,GAAA1f,GAAAiM,KAAAorF,MAAA31D,SAAAz1B,KAAAorF,MAAA31D,SAAA,IAAAnZ,EAAAvoB,EAAAyL,KAAA0S,IAAAlS,KAAAorF,MAAA74D,MAAiFvyB,MAAA2qF,KAAAzwD,MAAA7oB,IAAAiL,IAAAvoB,GAA2BiS,EAAAouB,sBAAAp0B,KAAAorF,MAAA13D,aAAgDxtB,EAAAkuB,sBAAAp0B,KAAAorF,MAAA9pD,OAAA5N,aAAuD1zB,KAAA2qF,KAAAn2E,OAAAtO,EAAA0O,IAAA5O,IAA2BhG,KAAA2qF,KAAA1kD,SAAA/0B,MAAAsT,KAAAxkB,KAAAorF,MAAAl6E,OAAAvW,eAAAqF,KAAAorF,MAAAjrC,eAC9VxzC,EAAAq/E,oBAAA,SAAAhmF,EAAAE,EAAAnS,EAAAuoB,GAA4Ctc,KAAAmW,OAAAnQ,EAAchG,KAAAsQ,KAAA,SAAApK,IAAA,EAAyBF,EAAA,SAAAjS,IAAA,SAAwBuoB,EAAA,SAAAA,IAAA,EAAiBpW,EAAA,EAAInS,EAAAiM,KAAAmW,OAAA+gB,SAAuBnjC,YAAA4Y,GAAA4M,SAAArT,EAAA,EAAAnS,EAAAm1C,MAAA1yC,OAAAzC,YAAA4Y,GAAAwqB,iBAAAjxB,EAAAnS,EAAAqjC,WAAAG,OAAAmP,OAAgH3yC,EAAA,GAAA4Y,GAAAwqB,eAA2BjxB,EAAA,GAAAyG,GAAA27B,iBAAA,EAAApiC,EAAA,GAAoCnS,EAAAi4C,aAAA,WAAA9lC,GAA6ByG,EAAAilD,aAAA/9D,KAAAmM,KAAAjM,EAAA,GAAA4Y,GAAAuM,mBAA4DhI,MAAAlL,EAAAmT,UAAAmD,KAAuBtc,KAAAujC,kBAAA,EAAyBvjC,KAAA4C,UAC/c+J,EAAAq/E,oBAAAtkF,UAAAuU,OAAA+jB,OAAArzB,EAAAilD,aAAAlqD,WAAgFiF,EAAAq/E,oBAAAtkF,UAAA7S,YAAA8X,EAAAq/E,oBAChFr/E,EAAAq/E,oBAAAtkF,UAAA9E,OAAA,WAAsD,GAAAoD,GAAA,GAAA2G,GAAA8G,QAAAvN,EAAA,GAAAyG,GAAA8G,QAAA1f,EAAA,GAAA4Y,GAAAgrB,OAAgE,mBAAkB,GAAArb,IAAA,YAAoBtc,MAAAmW,OAAA6gB,mBAAA,GAAkCjjC,EAAAykC,gBAAAx4B,KAAAmW,OAAAud,YAA2C,IAAA18B,GAAAgJ,KAAAmW,OAAAud,YAAApqB,EAAAtJ,KAAAk3B,SAAAE,WAAAp+B,SAAAurB,EAAAvkB,KAAAmW,OAAA+gB,QAAyF,IAAA3S,YAAA5X,GAAA4M,SAAA,OAAA1H,GAAA0S,EAAA/K,SAAAsM,EAAAvB,EAAA2kB,MAAArjB,EAAAtB,EAAA,EAAA2M,EAAApL,EAAAtvB,OAA+EqvB,EAAAqL,EAAIrL,IAAA,OAAA7xB,GAAA8xB,EAAAD,GAAA/xB,EAAA,EAAAq9B,EAAAn9B,EAAAoyC,cAAA5vC,OAAgD1C,EAAAq9B,EAAIr9B,IAAA,CAAK,GAAAge,GAAA9d,EAAAoyC,cAAAtyC,EAAyBkS,GAAAwe,KAAA3S,EAAA7d,EAAAsoB,EAAAxoB,MAAAs/B,aAAAp8B,GACvekP,EAAAse,KAAA1S,GAAAqhB,aAAAp/B,GAAAsgB,YAAA1Z,eAAAqF,KAAAsQ,MAAAnB,IAAAnJ,GAAuEsD,EAAA8uB,OAAA7T,EAAAve,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,GAAwBsR,GAAA,EAAKjb,EAAA8uB,OAAA7T,EAAAre,EAAAnH,EAAAmH,EAAA8M,EAAA9M,EAAA+M,GAAwBsR,GAAA,MAAK,IAAAA,YAAA5X,GAAAwqB,eAAA,IAAA7a,EAAAiI,EAAA6S,WAAAp+B,SAAA6Y,EAAA0S,EAAA6S,WAAAG,OAAAzjC,EAAAywB,EAAA,EAAA4M,EAAA7U,EAAAoqB,MAA4G5yC,EAAAq9B,EAAIr9B,IAAAkS,EAAAqL,IAAAiL,EAAA2b,KAAAnkC,GAAAwoB,EAAA4b,KAAApkC,GAAAwoB,EAAA6b,KAAArkC,IAAAs/B,aAAAp8B,GAAAkP,EAAAmL,IAAAQ,EAAAomB,KAAAnkC,GAAA+d,EAAAqmB,KAAApkC,GAAA+d,EAAAsmB,KAAArkC,IAAAoS,EAAAitB,aAAAp/B,GAAAsgB,YAAA1Z,eAAAqF,KAAAsQ,MAAAnB,IAAAnJ,GAAAsD,EAAA8uB,OAAA7T,EAAAve,EAAAjH,EAAAiH,EAAAgN,EAAAhN,EAAAiN,GAAAsR,GAAA,EAAAjb,EAAA8uB,OAAA7T,EAAAre,EAAAnH,EAAAmH,EAAA8M,EAAA9M,EAAA+M,GAAAsR,GAAA,CAAwO,OAAjBjb,GAAAs9B,aAAA,EAAiB5mC,SACzd2M,EAAAs/E,gBAAA,SAAAjmF,EAAAE,GAAoC,GAAAnS,GAAA,SAAAmS,IAAA,QAA4ByG,GAAAilD,aAAA/9D,KAAAmM,KAAA,GAAA2M,GAAA49E,kBAAAvkF,EAAAkxB,UAAA,GAAAvqB,GAAAuM,mBAAkGhI,MAAAnd,KAAWiM,KAAAsjC,OAAAt9B,EAAA0tB,YAA0B1zB,KAAAujC,kBAAA,GAA0B52B,EAAAs/E,gBAAAvkF,UAAAuU,OAAA+jB,OAAArzB,EAAAilD,aAAAlqD,WAA4EiF,EAAAs/E,gBAAAvkF,UAAA7S,YAAA8X,EAAAs/E,gBAAkEt/E,EAAA2yD,sBAAA,SAAAt5D,GAAwC2G,EAAAsC,SAAApb,KAAAmM,MAA0BA,KAAAimC,SAAAjgC,EAAgBhG,KAAAwR,OAAA,SAAAxL,MACjc2G,EAAA2yD,sBAAA53D,UAAAuU,OAAA+jB,OAAArzB,EAAAsC,SAAAvH,WAA8EiF,EAAA2yD,sBAAA53D,UAAA7S,YAAA8X,EAAA2yD,sBAA8E3yD,EAAAu/E,eAAA,SAAAlmF,EAAAE,GAAmCyG,EAAAyE,KAAAvd,KAAAmM,KAAAgG,EAAAE,GAA0BlG,KAAAmsF,iBAAsBnsF,KAAAosF,iBAAuB,IAAAr4F,GAAAiM,KAAAk3B,SAAAkS,aAAA5yC,MAAwCwJ,MAAAqsF,gBAAA,cAAAt4F,EAAA,EAAAA,EAAA,GAA4CiM,KAAAssF,mBAAA,gBAAwC3/E,EAAAu/E,eAAAxkF,UAAAuU,OAAA+jB,OAAArzB,EAAAyE,KAAA1J,WAAmEiF,EAAAu/E,eAAAxkF,UAAA7S,YAAA8X,EAAAu/E,eACrcv/E,EAAAu/E,eAAAxkF,UAAA2kF,gBAAA,SAAArmF,EAAAE,EAAAnS,EAAAuoB,GAAiEpW,GAAG2N,MAAA3N,EAAAovB,IAAAvhC,EAAAyC,OAAAzC,EAAAmS,EAAA,EAAAwrC,IAAAp1B,EAAAwzB,UAAA/7C,EAAAmS,GAAAoW,EAAAiwE,UAAA,EAAAC,aAAA,EAAAC,QAAA,EAAAr+C,KAAA,EAAAlT,UAAA,EAAAoT,OAAA,EAAAo+C,oBAAA,EAAAC,cAAA,GAA0J3sF,KAAAmsF,cAAAnmF,GAAAE,EAAwBlG,KAAAosF,eAAAvsF,KAAAqG,IACtPyG,EAAAu/E,eAAAxkF,UAAAklF,qBAAA,SAAA5mF,GAAgE,OAAAjS,GAAAmS,EAAA,mBAAAoW,KAAmCtlB,EAAAgJ,KAAAk3B,SAAA5tB,EAAA,EAAAib,EAAAvtB,EAAAoyC,aAAA5yC,OAA6C8S,EAAAib,EAAIjb,IAAA,CAAK,GAAAuI,GAAA7a,EAAAoyC,aAAA9/B,GAAAzS,KAAAulB,MAAAlW,EAAsC,IAAA2L,GAAA,EAAAA,EAAArb,OAAA,CAAkB,GAAAsvB,GAAAjU,EAAA,EAAWyK,GAAAwJ,KAAAxJ,EAAAwJ,IAAajS,MAAA1I,IAAAmqB,MAAAnqB,OAA+B0G,EAAAyK,EAAAwJ,GAAOxc,EAAAuI,EAAAgC,QAAAhC,EAAAgC,MAAAvK,GAAuBA,EAAAuI,EAAAyjB,MAAAzjB,EAAAyjB,IAAAhsB,GAAmBvV,MAAA+xB,IAAU,IAAAA,IAAAxJ,GAAAzK,EAAAyK,EAAAwJ,GAAA9lB,KAAAqsF,gBAAAvmE,EAAAjU,EAAAgC,MAAAhC,EAAAyjB,IAAAtvB,EAA0DhG,MAAA6sF,eAAA94F,GAC7X4Y,EAAAu/E,eAAAxkF,UAAAolF,6BAAA,SAAA9mF,IAAwEA,EAAAhG,KAAAmsF,cAAAnmF,QAAAk1B,UAAA,EAAAl1B,EAAA0mF,oBAAA,IAAkE//E,EAAAu/E,eAAAxkF,UAAAqlF,8BAAA,SAAA/mF,IAAyEA,EAAAhG,KAAAmsF,cAAAnmF,QAAAk1B,aAAAl1B,EAAA0mF,oBAAA,IAAmE//E,EAAAu/E,eAAAxkF,UAAAslF,gBAAA,SAAAhnF,EAAAE,GAA6D,GAAAnS,GAAAiM,KAAAmsF,cAAAnmF,EAA4BjS,OAAA29C,IAAAxrC,EAAAnS,EAAA+7C,UAAA/7C,EAAAuhC,IAAAvhC,EAAA8f,OAAA9f,EAAA29C,MAC/W/kC,EAAAu/E,eAAAxkF,UAAAulF,qBAAA,SAAAjnF,EAAAE,GAAkE,GAAAnS,GAAAiM,KAAAmsF,cAAAnmF,EAA4BjS,OAAA+7C,SAAA5pC,EAAAnS,EAAA29C,KAAA39C,EAAAuhC,IAAAvhC,EAAA8f,OAAA9f,EAAA+7C,WAAoDnjC,EAAAu/E,eAAAxkF,UAAA4kF,mBAAA,SAAAtmF,EAAAE,GAAgE,GAAAnS,GAAAiM,KAAAmsF,cAAAnmF,EAA4BjS,OAAAu6C,OAAApoC,IAAiByG,EAAAu/E,eAAAxkF,UAAAwlF,iBAAA,SAAAlnF,EAAAE,GAA8D,GAAAnS,GAAAiM,KAAAmsF,cAAAnmF,EAA4BjS,OAAAq6C,KAAAloC,IAAeyG,EAAAu/E,eAAAxkF,UAAAylF,iBAAA,SAAAnnF,GAA4D,GAAAE,GAAA,CAA4C,QAApCF,EAAAhG,KAAAmsF,cAAAnmF,MAAAE,EAAAF,EAAAooC,MAAoCloC,GAChdyG,EAAAu/E,eAAAxkF,UAAA0lF,qBAAA,SAAApnF,GAAgE,GAAAE,KAAiD,QAAxCF,EAAAhG,KAAAmsF,cAAAnmF,MAAAE,EAAAF,EAAA8pC,UAAwC5pC,GAAUyG,EAAAu/E,eAAAxkF,UAAA2lF,cAAA,SAAArnF,GAAyD,GAAAE,GAAAlG,KAAAmsF,cAAAnmF,EAA4BE,MAAAkoC,KAAA,EAAAloC,EAAAumF,QAAA,GAAAn3F,QAAA0vB,KAAA,mCAAAhf,EAAA,oCAA+G2G,EAAAu/E,eAAAxkF,UAAA4lF,cAAA,SAAAtnF,IAAyDA,EAAAhG,KAAAmsF,cAAAnmF,QAAAymF,QAAA,IACxX9/E,EAAAu/E,eAAAxkF,UAAA9E,OAAA,SAAAoD,GAAkD,OAAAE,GAAA,EAAAnS,EAAAiM,KAAAosF,eAAA51F,OAAyC0P,EAAAnS,EAAImS,IAAA,CAAK,GAAAoW,GAAAtc,KAAAosF,eAAAlmF,EAA6B,IAAAoW,EAAAmwE,OAAA,CAAa,GAAAz1F,GAAAslB,EAAAwzB,SAAAxzB,EAAA9lB,MAA0B8lB,GAAA8xB,MAAA9xB,EAAA4e,UAAAl1B,EAAsBsW,EAAAqwE,cAAmBrwE,EAAA8xB,KAAA9xB,EAAAwzB,UAAA,EAAAxzB,EAAA8xB,QAAA9xB,EAAA4e,cAAA5e,EAAA8xB,KAAA9xB,EAAAwzB,WAAAxzB,EAAA8xB,KAAA9xB,EAAAwzB,SAAAxzB,EAAAowE,oBAAA,KAAApwE,EAAA8xB,OAAA9xB,EAAA8xB,KAAA,EAAA9xB,EAAAowE,oBAAA,KAA2JpwE,EAAA8xB,MAAA9xB,EAAAwzB,SAAA,EAAAxzB,EAAA8xB,OAAA9xB,EAAA8xB,MAAA9xB,EAAAwzB,UAAuD,IAAAxmC,GAAAgT,EAAAzI,MAAAlH,EAAAnN,KAAAslB,MAAAtlB,KAAAzI,MAAAulB,EAAA8xB,KAAAp3C,GAAA,EAAAslB,EAAA9lB,OAAA,GAAA+tB,EAAAjI,EAAAgyB,MAA6EhlC,KAAAgT,EAAAkwE,eAChfxsF,KAAAkyD,sBAAA51C,EAAAiwE,WAAA,EAAAvsF,KAAAkyD,sBAAA51C,EAAAkwE,cAAA,EAAAjoE,EAAAvkB,KAAAkyD,sBAAA5oD,GAAA,EAAAgT,EAAAiwE,UAAAjwE,EAAAkwE,aAAAlwE,EAAAkwE,aAAAljF,GAAuKtS,EAAAslB,EAAA8xB,KAAAp3C,IAAaslB,EAAAowE,qBAAA11F,EAAA,EAAAA,GAA8BslB,EAAAkwE,eAAAlwE,EAAAiwE,WAAAvsF,KAAAkyD,sBAAA51C,EAAAkwE,cAAAx1F,EAAAutB,EAAAvkB,KAAAkyD,sBAAA51C,EAAAiwE,YAAA,EAAAv1F,GAAAutB,GAAAvkB,KAAAkyD,sBAAA51C,EAAAkwE,cAAAjoE,MpB0sF5M,SAAS7wB,EAAQD,EAASH,GAE/B,GAAIi6F,GAA8B5xE,GqB7qHnC,SAAA6xE,GASA,GAAA5gF,MAAA,WAEA,GAAA6gF,KAEA,QAEAC,OAAA,WAEA,MAAAD,IAIAE,UAAA,WAEAF,MAIAt+E,IAAA,SAAAy+E,GAEAH,EAAA5tF,KAAA+tF,IAIA/qF,OAAA,SAAA+qF,GAEA,GAAAt3F,GAAAm3F,EAAAtrF,QAAAyrF,EAEAt3F,SACAm3F,EAAArrF,OAAA9L,EAAA,IAKAsM,OAAA,SAAAwrC,EAAAy/C,GAEA,OAAAJ,EAAAj3F,OACA,QAGA,IAAAF,GAAA,CAIA,KAFA83C,EAAAxkC,SAAAwkC,IAAAxhC,EAAAi0B,MAEAvqC,EAAAm3F,EAAAj3F,QAEAi3F,EAAAn3F,GAAAsM,OAAAwrC,IAAAy/C,EACAv3F,IAEAm3F,EAAArrF,OAAA9L,EAAA,EAKA,gBASA,WAEAsT,SAAA5J,KAAA9L,QAAA0V,SAAA5J,KAAAwtF,QACA5gF,EAAAi0B,IAAA,WACA,GAAAuN,GAAAo/C,EAAAM,QAGA,YAAA1/C,EAAA,GAAAA,EAAA,QAIAxkC,SAAA5J,KAAA9L,QACA0V,SAAA1V,OAAA0sC,aACAh3B,SAAA1V,OAAA0sC,YAAAC,IAIAj0B,EAAAi0B,IAAA3sC,OAAA0sC,YAAAC,IAAA19B,KAAAjP,OAAA0sC,aAGAh3B,SAAAvK,KAAAwhC,IACAj0B,EAAAi0B,IAAAxhC,KAAAwhC,IAIAj0B,EAAAi0B,IAAA,WACA,UAAAxhC,OAAAC,cAMAsN,EAAAyG,MAAA,SAAA8C,GAEA,GAAA43E,GAAA53E,EACA63E,KACAC,KACAC,KACAC,EAAA,IACAC,EAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,EACArgD,EAAA,KACAsgD,EAAA7hF,EAAA8hF,OAAAC,OAAA/1C,KACAg2C,EAAAhiF,EAAAiiF,cAAAF,OACAG,KACAC,EAAA,KACAC,GAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAA,IAGA,QAAAC,KAAAj5E,GACA63E,EAAAoB,GAAArqE,WAAA5O,EAAAi5E,GAAA,GAGApvF,MAAAuT,GAAA,SAAAqnD,EAAA9qB,GAQA,MANAlmC,UAAAkmC,IACAq+C,EAAAr+C,GAGAm+C,EAAArzB,EAEA56D,MAIAA,KAAA6T,MAAA,SAAAu6B,GAEAxhC,EAAAuC,IAAAnP,MAEAsuF,GAAA,EAEAU,GAAA,EAEA7gD,EAAAvkC,SAAAwkC,IAAAxhC,EAAAi0B,MACAsN,GAAAqgD,CAEA,QAAAa,KAAApB,GAAA,CAGA,GAAAA,EAAAoB,YAAAplF,OAAA,CAEA,OAAAgkF,EAAAoB,GAAA74F,OACA,QAIAy3F,GAAAoB,IAAAtB,EAAAsB,IAAA1kF,OAAAsjF,EAAAoB,IAMAzlF,SAAAokF,EAAAqB,KAIArB,EAAAqB,GAAAtB,EAAAsB,GAEArB,EAAAqB,YAAAplF,SAAA,IACA+jF,EAAAqB,IAAA,GAGAnB,EAAAmB,GAAArB,EAAAqB,IAAA,GAIA,MAAArvF,OAIAA,KAAAiN,KAAA,WAEA,MAAAqhF,IAIA1hF,EAAA/J,OAAA7C,MACAsuF,GAAA,EAEA,OAAAa,GACAA,EAAAt7F,KAAAk6F,GAGA/tF,KAAAsvF,oBACAtvF,MAXAA,MAeAA,KAAAsvF,kBAAA,WAEA,OAAAh5F,GAAA,EAAAi5F,EAAAT,EAAAt4F,OAA2DF,EAAAi5F,EAAsBj5F,IACjFw4F,EAAAx4F,GAAA2W,QAKAjN,KAAAjE,MAAA,SAAA8rF,GAGA,MADA2G,GAAA3G,EACA7nF,MAIAA,KAAAmiD,OAAA,SAAA1Q,GAGA,MADA28C,GAAA38C,EACAzxC,MAIAA,KAAAwvF,KAAA,SAAAA,GAGA,MADAnB,GAAAmB,EACAxvF,MAKAA,KAAAyvF,OAAA,SAAAA,GAGA,MADAhB,GAAAgB,EACAzvF,MAIAA,KAAA23C,cAAA,SAAAA,GAGA,MADAi3C,GAAAj3C,EACA33C,MAIAA,KAAA0vF,MAAA,WAGA,MADAZ,GAAArzF,UACAuE,MAIAA,KAAA+nD,QAAA,SAAA7oD,GAGA,MADA6vF,GAAA7vF,EACAc,MAIAA,KAAAwT,SAAA,SAAAtU,GAGA,MADA+vF,GAAA/vF,EACAc,MAIAA,KAAA2T,WAAA,SAAAzU,GAGA,MADAgwF,GAAAhwF,EACAc,MAIAA,KAAA4T,OAAA,SAAA1U,GAGA,MADAiwF,GAAAjwF,EACAc,MAIAA,KAAA4C,OAAA,SAAAwrC,GAEA,GAAAihD,GACAM,EACApoF,CAEA,IAAA6mC,EAAAD,EACA,QAGA6gD,MAAA,IAEA,OAAAD,GACAA,EAAAl7F,KAAAk6F,GAGAiB,GAAA,GAIAW,GAAAvhD,EAAAD,GAAAggD,EACAwB,IAAA,IAAAA,EAEApoF,EAAAknF,EAAAkB,EAEA,KAAAN,IAAApB,GAGA,GAAArkF,SAAAokF,EAAAqB,GAAA,CAIA,GAAAx7E,GAAAm6E,EAAAqB,IAAA,EACA/5D,EAAA24D,EAAAoB,EAEA/5D,aAAArrB,OAEA8jF,EAAAsB,GAAAT,EAAAt5D,EAAA/tB,IAKA,qBAGA+tB,EADA,MAAAA,EAAApQ,OAAA,UAAAoQ,EAAApQ,OAAA,GACArR,EAAAkR,WAAAuQ,EAAA,IAEAvQ,WAAAuQ,EAAA,KAKA,qBACAy4D,EAAAsB,GAAAx7E,GAAAyhB,EAAAzhB,GAAAtM,IAWA,GAJA,OAAA0nF,GACAA,EAAAp7F,KAAAk6F,EAAAxmF,GAGA,IAAAooF,EAAA,CAEA,GAAAvB,EAAA,GAEAv8D,SAAAu8D,IACAA,GAIA,KAAAiB,IAAAnB,GAAA,CAMA,GAJA,gBAAAD,GAAAoB,KACAnB,EAAAmB,GAAAnB,EAAAmB,GAAAtqE,WAAAkpE,EAAAoB,GAAA,KAGAhB,EAAA,CACA,GAAAuB,GAAA1B,EAAAmB,EAEAnB,GAAAmB,GAAApB,EAAAoB,GACApB,EAAAoB,GAAAO,EAGA5B,EAAAqB,GAAAnB,EAAAmB,GAUA,MANAhB,KACAE,MAGApgD,EAAAC,EAAAogD,GAEA,EAIA,OAAAU,GACAA,EAAAr7F,KAAAk6F,EAGA,QAAAz3F,GAAA,EAAAi5F,EAAAT,EAAAt4F,OAA6DF,EAAAi5F,EAAsBj5F,IAGnFw4F,EAAAx4F,GAAAud,MAAAs6B,EAAAggD,EAGA,UAMA,WAOAvhF,EAAA8hF,QAEAC,QAEA/1C,KAAA,SAAA9yB,GAEA,MAAAA,KAMA+pE,WAEAC,GAAA,SAAAhqE,GAEA,MAAAA,MAIAiqE,IAAA,SAAAjqE,GAEA,MAAAA,IAAA,EAAAA,IAIAkqE,MAAA,SAAAlqE,GAEA,OAAAA,GAAA,KACA,GAAAA,WAGAA,KAAA,QAMAmqE,OAEAH,GAAA,SAAAhqE,GAEA,MAAAA,QAIAiqE,IAAA,SAAAjqE,GAEA,QAAAA,MAAA,GAIAkqE,MAAA,SAAAlqE,GAEA,OAAAA,GAAA,KACA,GAAAA,MAGA,KAAAA,GAAA,GAAAA,IAAA,KAMAoqE,SAEAJ,GAAA,SAAAhqE,GAEA,MAAAA,UAIAiqE,IAAA,SAAAjqE,GAEA,YAAAA,SAIAkqE,MAAA,SAAAlqE,GAEA,OAAAA,GAAA,KACA,GAAAA,cAGAA,GAAA,GAAAA,MAAA,KAMAqqE,SAEAL,GAAA,SAAAhqE,GAEA,MAAAA,YAIAiqE,IAAA,SAAAjqE,GAEA,QAAAA,UAAA,GAIAkqE,MAAA,SAAAlqE,GAEA,OAAAA,GAAA,KACA,GAAAA,UAGA,KAAAA,GAAA,GAAAA,QAAA,KAMAsqE,YAEAN,GAAA,SAAAhqE,GAEA,SAAAtmB,KAAA2S,IAAA2T,EAAAtmB,KAAAyS,GAAA,IAIA89E,IAAA,SAAAjqE,GAEA,MAAAtmB,MAAA4a,IAAA0L,EAAAtmB,KAAAyS,GAAA,IAIA+9E,MAAA,SAAAlqE,GAEA,YAAAtmB,KAAA2S,IAAA3S,KAAAyS,GAAA6T,MAMAuqE,aAEAP,GAAA,SAAAhqE,GAEA,WAAAA,EAAA,EAAAtmB,KAAAuc,IAAA,KAAA+J,EAAA,IAIAiqE,IAAA,SAAAjqE,GAEA,WAAAA,EAAA,IAAAtmB,KAAAuc,IAAA,MAAA+J,IAIAkqE,MAAA,SAAAlqE,GAEA,WAAAA,EACA,EAGA,IAAAA,EACA,GAGAA,GAAA,KACA,GAAAtmB,KAAAuc,IAAA,KAAA+J,EAAA,GAGA,KAAAtmB,KAAAuc,IAAA,OAAA+J,EAAA,SAMAwqE,UAEAR,GAAA,SAAAhqE,GAEA,SAAAtmB,KAAAgmB,KAAA,EAAAM,MAIAiqE,IAAA,SAAAjqE,GAEA,MAAAtmB,MAAAgmB,KAAA,KAAAM,MAIAkqE,MAAA,SAAAlqE,GAEA,OAAAA,GAAA,UACAtmB,KAAAgmB,KAAA,EAAAM,KAAA,GAGA,IAAAtmB,KAAAgmB,KAAA,GAAAM,GAAA,GAAAA,GAAA,KAMAyqE,SAEAT,GAAA,SAAAhqE,GAEA,WAAAA,EACA,EAGA,IAAAA,EACA,GAGAtmB,KAAAuc,IAAA,MAAA+J,EAAA,IAAAtmB,KAAA4a,IAAA,GAAA0L,EAAA,KAAAtmB,KAAAyS,KAIA89E,IAAA,SAAAjqE,GAEA,WAAAA,EACA,EAGA,IAAAA,EACA,EAGAtmB,KAAAuc,IAAA,MAAA+J,GAAAtmB,KAAA4a,IAAA,GAAA0L,EAAA,IAAAtmB,KAAAyS,IAAA,GAIA+9E,MAAA,SAAAlqE,GAEA,WAAAA,EACA,EAGA,IAAAA,EACA,GAGAA,GAAA,EAEAA,EAAA,MACAtmB,KAAAuc,IAAA,MAAA+J,EAAA,IAAAtmB,KAAA4a,IAAA,GAAA0L,EAAA,KAAAtmB,KAAAyS,IAGA,GAAAzS,KAAAuc,IAAA,OAAA+J,EAAA,IAAAtmB,KAAA4a,IAAA,GAAA0L,EAAA,KAAAtmB,KAAAyS,IAAA,KAMAu+E,MAEAV,GAAA,SAAAhqE,GAEA,GAAAF,GAAA,OAEA,OAAAE,OAAAF,EAAA,GAAAE,EAAAF,IAIAmqE,IAAA,SAAAjqE,GAEA,GAAAF,GAAA,OAEA,SAAAE,MAAAF,EAAA,GAAAE,EAAAF,GAAA,GAIAoqE,MAAA,SAAAlqE,GAEA,GAAAF,GAAA,SAEA,QAAAE,GAAA,KACA,IAAAA,MAAAF,EAAA,GAAAE,EAAAF,IAGA,KAAAE,GAAA,GAAAA,IAAAF,EAAA,GAAAE,EAAAF,GAAA,KAMA6qE,QAEAX,GAAA,SAAAhqE,GAEA,SAAAlZ,EAAA8hF,OAAA+B,OAAAV,IAAA,EAAAjqE,IAIAiqE,IAAA,SAAAjqE,GAEA,MAAAA,GAAA,OACA,OAAAA,IACIA,EAAA,OACJ,QAAAA,GAAA,UAAAA,EAAA,IACIA,EAAA,SACJ,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAKAkqE,MAAA,SAAAlqE,GAEA,MAAAA,GAAA,GACA,GAAAlZ,EAAA8hF,OAAA+B,OAAAX,GAAA,EAAAhqE,GAGA,GAAAlZ,EAAA8hF,OAAA+B,OAAAV,IAAA,EAAAjqE,EAAA,SAQAlZ,EAAAiiF,eAEAF,OAAA,SAAA11D,EAAAnT,GAEA,GAAAhyB,GAAAmlC,EAAAziC,OAAA,EACA8S,EAAAxV,EAAAgyB,EACAxvB,EAAAkJ,KAAAzI,MAAAuS,GACA1E,EAAAgI,EAAAiiF,cAAA6B,MAAA/B,MAEA,OAAA7oE,GAAA,EACAlhB,EAAAq0B,EAAA,GAAAA,EAAA,GAAA3vB,GAGAwc,EAAA,EACAlhB,EAAAq0B,EAAAnlC,GAAAmlC,EAAAnlC,EAAA,GAAAA,EAAAwV,GAGA1E,EAAAq0B,EAAA3iC,GAAA2iC,EAAA3iC,EAAA,EAAAxC,IAAAwC,EAAA,GAAAgT,EAAAhT,IAIAq6F,OAAA,SAAA13D,EAAAnT,GAOA,OALA5f,GAAA,EACAgrB,EAAA+H,EAAAziC,OAAA,EACAo6F,EAAApxF,KAAAuc,IACA80E,EAAAjkF,EAAAiiF,cAAA6B,MAAAI,UAEAx6F,EAAA,EAAiBA,GAAA46B,EAAQ56B,IACzB4P,GAAA0qF,EAAA,EAAA9qE,EAAAoL,EAAA56B,GAAAs6F,EAAA9qE,EAAAxvB,GAAA2iC,EAAA3iC,GAAAu6F,EAAA3/D,EAAA56B,EAGA,OAAA4P,IAIA6qF,WAAA,SAAA93D,EAAAnT,GAEA,GAAAhyB,GAAAmlC,EAAAziC,OAAA,EACA8S,EAAAxV,EAAAgyB,EACAxvB,EAAAkJ,KAAAzI,MAAAuS,GACA1E,EAAAgI,EAAAiiF,cAAA6B,MAAAK,UAEA,OAAA93D,GAAA,KAAAA,EAAAnlC,IAEAgyB,EAAA,IACAxvB,EAAAkJ,KAAAzI,MAAAuS,EAAAxV,GAAA,EAAAgyB,KAGAlhB,EAAAq0B,GAAA3iC,EAAA,EAAAxC,MAAAmlC,EAAA3iC,GAAA2iC,GAAA3iC,EAAA,GAAAxC,GAAAmlC,GAAA3iC,EAAA,GAAAxC,GAAAwV,EAAAhT,IAIAwvB,EAAA,EACAmT,EAAA,IAAAr0B,EAAAq0B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAA3vB,GAAA2vB,EAAA,IAGAnT,EAAA,EACAmT,EAAAnlC,IAAA8Q,EAAAq0B,EAAAnlC,GAAAmlC,EAAAnlC,GAAAmlC,EAAAnlC,EAAA,GAAAmlC,EAAAnlC,EAAA,GAAAwV,EAAAxV,GAAAmlC,EAAAnlC,IAGA8Q,EAAAq0B,EAAA3iC,IAAA,KAAA2iC,EAAA3iC,GAAA2iC,EAAAnlC,EAAAwC,EAAA,EAAAxC,EAAAwC,EAAA,GAAA2iC,EAAAnlC,EAAAwC,EAAA,EAAAxC,EAAAwC,EAAA,GAAAgT,EAAAhT,IAMAo6F,OAEA/B,OAAA,SAAAqC,EAAAC,EAAAv4D,GAEA,OAAAu4D,EAAAD,GAAAt4D,EAAAs4D,GAIAF,UAAA,SAAA5/D,EAAA56B,GAEA,GAAA46F,GAAAtkF,EAAAiiF,cAAA6B,MAAAS,SAEA,OAAAD,GAAAhgE,GAAAggE,EAAA56F,GAAA46F,EAAAhgE,EAAA56B,IAIA66F,UAAA,WAEA,GAAAnrF,IAAA,EAEA,iBAAAkrB,GAEA,GAAAtL,GAAA,CAEA,IAAA5f,EAAAkrB,GACA,MAAAlrB,GAAAkrB,EAGA,QAAA56B,GAAA46B,EAAmB56B,EAAA,EAAOA,IAC1BsvB,GAAAtvB,CAIA,OADA0P,GAAAkrB,GAAAtL,EACAA,MAMAmrE,WAAA,SAAAC,EAAAC,EAAAG,EAAAC,EAAA34D,GAEA,GAAAysD,GAAA,IAAAiM,EAAAJ,GACA/L,EAAA,IAAAoM,EAAAJ,GACAK,EAAA54D,IACA64D,EAAA74D,EAAA44D,CAEA,UAAAL,EAAA,EAAAG,EAAAjM,EAAAF,GAAAsM,MAAAN,EAAA,EAAAG,EAAA,EAAAjM,EAAAF,GAAAqM,EAAAnM,EAAAzsD,EAAAu4D,KASA,SAAAnF,GAKAyB,KAAA5xE,EAAA,WACA,MAAA/O,IACG9Q,MAAArI,EAAA85F,KAAA3jF,SAAA+R,IAAAjoB,EAAAD,QAAAkoB,KAcF3b,QrB+qH6BnM,KAAKJ,EAASH,EAAoB,MAI1D,SAASI,EAAQD,GsB7/IvB,QAAA+9F,YAAAC,GACA,GAAAC,IAAAz1F,WAEA,MAAAA,YAAAw1F,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAAz6F,GACL,IAEA,MAAA06F,GAAA79F,KAAA,KAAA49F,EAAA,GACS,MAAAz6F,GAET,MAAA06F,GAAA79F,KAAAmM,KAAAyxF,EAAA,KAMA,QAAAE,iBAAAv4F,GACA,GAAAw4F,IAAAlyF,aAEA,MAAAA,cAAAtG,EAEA,KAEA,MAAAw4F,GAAAx4F,GACK,MAAApC,GACL,IAEA,MAAA46F,GAAA/9F,KAAA,KAAAuF,GACS,MAAApC,GAGT,MAAA46F,GAAA/9F,KAAAmM,KAAA5G,KAYA,QAAAy4F,mBACAC,GAAAC,IAGAD,GAAA,EACAC,EAAAv7F,OACAsR,EAAAiqF,EAAApnF,OAAA7C,GAEAkqF,KAEAlqF,EAAAtR,QACAy7F,cAIA,QAAAA,cACA,IAAAH,EAAA,CAGA,GAAAI,GAAAV,WAAAK,gBACAC,IAAA,CAGA,KADA,GAAAK,GAAArqF,EAAAtR,OACA27F,GAAA,CAGA,IAFAJ,EAAAjqF,EACAA,OACAkqF,EAAAG,GACAJ,GACAA,EAAAC,GAAAI,KAGAJ,MACAG,EAAArqF,EAAAtR,OAEAu7F,EAAA,KACAD,GAAA,EACAH,gBAAAO,IAiBA,QAAAG,MAAAZ,EAAA5+D,GACA7yB,KAAAyxF,MACAzxF,KAAA6yB,QAYA,QAAAntB,SA5IA,GAOAgsF,GACAE,EARApE,EAAA95F,EAAAD,YAUA,WACA,IACAi+F,EAAAz1F,WACK,MAAAjF,GACL06F,EAAA,WACA,SAAA5vF,OAAA,8BAGA,IACA8vF,EAAAlyF,aACK,MAAA1I,GACL46F,EAAA,WACA,SAAA9vF,OAAA,mCA8CA,IAEAiwF,GAFAjqF,KACAgqF,GAAA,EAEAE,IAyCAxE,GAAA8E,SAAA,SAAAb,GACA,GAAAj2F,GAAA,GAAAyO,OAAAxO,UAAAjF,OAAA,EACA,IAAAiF,UAAAjF,OAAA,EACA,OAAAF,GAAA,EAAuBA,EAAAmF,UAAAjF,OAAsBF,IAC7CkF,EAAAlF,EAAA,GAAAmF,UAAAnF,EAGAwR,GAAAjI,KAAA,GAAAwyF,MAAAZ,EAAAj2F,IACA,IAAAsM,EAAAtR,QAAAs7F,GACAN,WAAAS,aASAI,KAAA3qF,UAAA0qF,IAAA,WACApyF,KAAAyxF,IAAA31F,MAAA,KAAAkE,KAAA6yB,QAEA26D,EAAA+E,MAAA,UACA/E,EAAAgF,SAAA,EACAhF,EAAAiF,OACAjF,EAAAkF,QACAlF,EAAAznD,QAAA,GACAynD,EAAAmF,YAIAnF,EAAA12F,GAAA4O,KACA8nF,EAAAoF,YAAAltF,KACA8nF,EAAAqF,KAAAntF,KACA8nF,EAAAsF,IAAAptF,KACA8nF,EAAAuF,eAAArtF,KACA8nF,EAAAwF,mBAAAttF,KACA8nF,EAAAyF,KAAAvtF,KAEA8nF,EAAAh5C,QAAA,SAAA39C,GACA,SAAAiL,OAAA,qCAGA0rF,EAAA0F,IAAA,WAA2B,WAC3B1F,EAAA2F,MAAA,SAAAC,GACA,SAAAtxF,OAAA,mCAEA0rF,EAAA6F,MAAA,WAA4B,WtB+hJtB,SAAS3/F,EAAQD,EAASH,GuB9rJhC,GAAAqZ,GAAArZ,EAAA,GAEAI,GAAAD,QAAA,SAAAsb,EAAAC,EAAA/a,GAIA,gBAAA+E,EAAA1E,EAAAic,EAAA+iF,GAkDA,QAAAC,cAAA50C,GACAA,EAAAF,UAAA9xC,EAAAsU,YACA,IAAAuyE,GAAA70C,EAAAtuC,MAAAlS,MACAs1F,EAAA90C,EAAAtuC,MAAAjS,OACAs1F,EAAAD,EAAAD,EAGAt6F,EAAA,IAAA6V,EAAApZ,EAAAoB,OAAAmC,YACAoX,GAAA,IAGAA,GAFA3a,EAAA2a,KACA3a,EAAA2a,KAAA,IACA3a,EAAA2a,KAAA,GAAApX,EAAAvD,EAAA2a,KAAA,GAAApX,IAGAvD,EAAA2a,KAAA,GAAApX,EAAAvD,EAAA2a,KAAA,GAAAojF,EAAAx6F,IAGAs6F,EAAAt6F,EAAAu6F,EAAAv6F,EAKA,QAFAy6F,GAAAh+F,EAAA,QAAAA,EAAAg+F,OAAA,GAAAz6F,EAAAvD,EAAAg+F,OAAA,GAAAz6F,IACAoX,EAAA,KAAAA,EAAA,MACAha,EAAA,EAAwBA,EAAA0C,EAAAxC,OAAmBF,IAC3C0C,EAAA1C,GAAA0C,EAAA1C,GAAA4C,EAAA,GAEAF,GAAA,KAAAA,EAAA,OAGA,IAAA46F,GAAA,GAAAjnF,GAAAm8E,cAAAx4E,EAAA,GAAAA,EAAA,IACAujF,EAAA,GAAAlnF,GAAA2hD,mBACAtjD,IAAA2zC,EACAuH,aAAA,IAEAntC,EAAA,GAAApM,GAAAyE,KAAAwiF,EAAAC,EACA96E,GAAAmqB,SAAAnkC,GAAAS,KAAAyS,GAAA,EACA8G,EAAA/f,SAAA+F,EAAA/F,EAAA,GAAAsX,EAAA,KAAAqjF,EAAA,GACA56E,EAAA/f,SAAAia,EAAAja,EAAA,GAAAsX,EAAA,KAAAqjF,EAAA,GACA56E,EAAA/f,SAAAga,EAAAha,EAAA,GAEA6C,EAAAkd,YACA/J,EAAArZ,EAAAoB,OAAAyb,gBAAA,UAAArD,IAAA4J,GAMA,QAAA1jB,cAAA8F,GACA,OAAAA,GACA,aACA7F,QAAAC,MAAA,qCACA,MACA,cApGA,GAAAsG,MAGAK,GACAmU,MAAA,0BACAC,KAAA,KACAqjF,OAAA,KACA58F,MAAAwZ,GAEAjT,GACA+S,OAAAvb,OAAA,UACAwb,MAAArG,MAAA,SACA0pF,QAAA1pF,MAAA,SACAlT,OAAAjC,OAAA,WAEAa,EAAAuG,CACA,IAAA5H,EAAA,CACA,OAAAsJ,KAAAtJ,GACAgJ,EAAAM,GACAtJ,EAAAsJ,GAAA/I,aAAAyI,EAAAM,GAAA,IACAtI,QAAAC,MAAA,YAAAqI,EAAA,wBACAtJ,GAAAsJ,GAAA,OAAAN,EAAAM,GAAA,gBAGAvI,aAAA,UACAC,QAAAC,MAAA,mBAAAqI,EAAA,iBAGA3J,GAAA4J,OAAAlI,EAAArB,GAIA,GAAAqB,EAAA0a,MAAA+L,MAAA,WAEA,GAAA03E,GAAA7/F,EAAA,qBACA8/F,EAAAD,EAAA,GACAxoF,EAAAyoF,EAAAvnF,WAAA,MACAwnF,EAAA,GAAAC,MACAD,GAAAzsC,OAAA,WACAwsC,EAAA51F,MAAA61F,EAAA71F,MACA41F,EAAA31F,OAAA41F,EAAA51F,OACAkN,EAAA6lD,UAAA6iC,EAAA,MACA,GAAArnF,GAAA41C,eAAA/tD,KAAAu/F,EAAA7iC,YAAAqiC,eAEAS,EAAAxsC,IAAA7xD,EAAA0a,WAGA,GAAA1D,GAAA41C,eAAA/tD,KAAAmB,EAAA0a,MAAAkjF,aA6CA,OAAA13F,MvBitJM,SAASnI,EAAQD,EAASH,GwBpzJhC,GAAAqZ,GAAArZ,EAAA,GACAI,GAAAD,QAAA,SAAAsb,EAAAC,EAAApC,GAIA,gBAAAsnF,EAAA1kF,EAAA2kF,EAAAjmF,GAoJA,QAAAkmF,qBAAAC,GACAx4F,EAAA0a,YAAA,WACA89E,EAAAv4F,MAAAD,GAAA2T,EAAAva,QAGA,QAAAq/F,oBAAAD,GACAx4F,EAAAya,WAAA,WACA+9E,EAAAv4F,MAAAD,GAAA2T,EAAAva,QAGA,QAAAs/F,iBAAAF,GACAx4F,EAAA4a,QAAA,WACA49E,EAAAv4F,MAAAD,GAAA2T,EAAAva,QAKA,QAAAu/F,iBACA34F,EAAA44F,aAAA5xF,OAAAhH,EAAA64F,WACA74F,EAAA64F,UAAAC,gBAAAnlF,EAAA3V,OAAAgC,EAAAuC,OAAAvC,EAAAqV,MAAArV,EAAAoqD,QAAAz2C,EAAAva,MAAA,GACA4G,EAAA44F,aAAAtlF,IAAAtT,EAAA64F,WACA74F,EAAA4Q,QAAA5Q,EAAA4Q,MAAAsM,UAAA/f,SAAAga,EAAAnX,EAAAuC,OAAA,KAEA,QAAAu2F,iBAAA96F,EAAAuE,EAAA8S,EAAA+0C,EAAAhxD,EAAA2/F,GACA,GAAAC,GAAA,GAAAloF,GAAAy3E,MACA0Q,GACAjN,OAAAzpF,EACA6pF,cAAA,GAGA8M,EAAAl7F,EAAA,MACAm7F,EAAAn7F,EAAA,KACA+6F,IAAAK,cAAAp5F,EAAA6S,SAAAqmF,EAAAC,GACAH,EAAAvR,OAAAyR,EAAAC,EACA,QAAAlvE,GAAA,EAAwBA,EAAAjsB,EAAArD,OAAgBsvB,IAAA,CACxC,GAAA/mB,GAAAlF,EAAAisB,GAAA,GACA7S,EAAApZ,EAAAisB,GAAA,EACA8uE,IAAAK,cAAAp5F,EAAA6S,SAAA3P,EAAAkU,GACA4hF,EAAAtR,OAAAxkF,EAAAkU,GAEA2hF,IACAK,cAAA/mF,EAAAQ,SAAA7S,EAAA6S,SAAAC,KAAA9S,EAAA6S,SAAAE,MACAqmF,cAAA/mF,EAAAQ,SAAA7S,EAAA6S,SAAAG,KAAAhT,EAAA6S,SAAAI,OAEA+lF,EAAAtR,OAAAwR,EAAAC,EAEA,IAAAE,GAAA,GAAAvoF,GAAA+3E,gBAAAmQ,EAAAC,EACA,IAAA7uC,KAAA,EACA,GAAAkvC,GAAA,GAAAxoF,GAAAsE,qBACAC,QACAg1C,aAAA,EACAD,gBAGA,IAAAkvC,GAAA,GAAAxoF,GAAAsE,qBACAC,SAGA,IAAAwjF,GAAA,GAAA/nF,GAAAyE,KAAA8jF,EAAAC,EAOA,OANAlgG,KAAAy/F,EAAAz/F,QACAy/F,EAAAr+E,YAAAxa,EAEA64F,EAAAxxD,SAAAnkC,EAAAS,KAAAyS,GAAA,EACAyiF,EAAA17F,SAAAga,EAAA5U,EAEAs2F,EAEA,QAAAU,gBAAAC,GAEA,GAAAt1F,KAIA,OAHAA,GAAAmG,EAAAmvF,EAAA,IACAt1F,EAAAwkB,GAAA8wE,EAAA,MAAAt1F,EAAAmG,GAAA,IACAnG,EAAA+R,GAAAujF,GAAAt1F,EAAAmG,EAAAnG,EAAAwkB,IAAA,MACAxkB,EAEA,QAAAu1F,gBAAAC,GACA,GAAAx1F,GAAA,MAAAP,KAAA2yB,MAAAojE,EAAAzjF,GAAA,IAAAtS,KAAA2yB,MAAAojE,EAAAhxE,GAAA/kB,KAAA2yB,MAAAojE,EAAArvF,EAEA,OADAnG,GAAA,WAAAA,EAAA,UACAA,EAEA,QAAAk1F,eAAA/uF,EAAAnH,EAAAkU,GACA/M,EAAAyI,KAAA5P,EAAAmH,EAAAyI,KAAA5P,EAAAmH,EAAAyI,KACAzI,EAAA0I,KAAAqE,EAAA/M,EAAA0I,KAAAqE,EAAA/M,EAAA0I,KACA1I,EAAA2I,KAAA9P,EAAAmH,EAAA2I,KAAA9P,EAAAmH,EAAA2I,KACA3I,EAAA4I,KAAAmE,EAAA/M,EAAA4I,KAAAmE,EAAA/M,EAAA4I,KAvOA,GAAAjT,KAyOA,OAvOAA,GAAAlI,GAAA6b,EAAA,GAAAA,EAAA7b,GAAAwgG,EAAA,IAAAD,EACAr4F,EAAAuU,eAAAZ,EAAA,OAAAA,EAAApR,OAAA8P,EAAAsnF,mBACA35F,EAAAuC,OAAAvC,EAAAuU,eACAvU,EAAA45F,cAAAjmF,EAAA,MAAAnS,SAAAmS,EAAA0B,OAAA7T,SAAA6Q,EAAAwnF,mBACA75F,EAAAqV,MAAArV,EAAA45F,cACA55F,EAAA85F,gBAAAnmF,EAAA,QAAAA,EAAAy2C,QACA/3C,EAAA,eAAAA,EAAA0nF,oBAAA,EACA/5F,EAAAoqD,QAAApqD,EAAA85F,gBACA95F,EAAAg6F,YAAA3nF,EAAAnX,MACA8E,EAAA44F,aAAAzlF,EAAAnT,EAAAg6F,aAAArjF,gBAAA,UACA3W,EAAAhC,OAAA2V,EAAA3V,OAEAgC,EAAA4Q,MAAA,KAEA5Q,EAAA6S,UACAC,KAAA,WAAAC,KAAA,WAAAC,KAAA,EAAAC,KAAA,GAEAjT,EAAA64F,UAAAC,gBAAAnlF,EAAA3V,OAAAgC,EAAAuU,eAAAvU,EAAA45F,cAAA55F,EAAA85F,gBAAAnmF,EAAAva,MAAA,GACA4G,EAAAi6F,YAAA,GAAAlpF,GAAAyG,MACAxX,EAAAk6F,WAAA,GAAAnpF,GAAAyG,MACAxX,EAAAm6F,aAAA,GAAAppF,GAAAyG,MAEAxX,EAAA44F,aAAAtlF,IAAAtT,EAAA64F,WAGA74F,EAAApC,SAAA,SAAAiW,GACA7T,EAAA4Q,MAAAiD,GAIA7T,EAAAo6F,QAAA,SAAAhhG,GACAua,EAAAva,OACA4G,EAAA64F,UAAAz/F,QAEA4G,EAAAq6F,WAAA,SAAAjwC,EAAAnW,GACAj0C,EAAAm6F,aAAA/oF,OACA6iC,GAIAj0C,EAAAm6F,aAAA,GAAAppF,GACAyG,OAA4B4yC,QAAApqD,EAAAoqD,UAC5B1yC,IAAyB0yC,WAAgBnW,GACzCt8B,SAAA,WACA3X,EAAAoqD,QAAAjmD,KAAAimD,QACAuuC,kBAEA34F,EAAAm6F,aAAAniF,UAVAhY,EAAAoqD,UACAuuC,kBAYA34F,EAAAs6F,eAAA,SAAArmD,GACAA,GAIAj0C,EAAAm6F,aAAA,GAAAppF,GACAyG,OAA4B4yC,QAAApqD,EAAAoqD,UAC5B1yC;AAAyB0yC,QAAApqD,EAAA85F,iBAA6B7lD,GACtDt8B,SAAA,WACA3X,EAAAoqD,QAAAjmD,KAAAimD,QACAuuC,kBAEA34F,EAAAm6F,aAAAniF,UAVAhY,EAAAm6F,aAAA/oF,OACAunF,kBAYA34F,EAAAgvF,SAAA,SAAA35E,EAAA4+B,GACA5+B,EAAA7T,SAAA6T,GACArV,EAAAk6F,WAAA9oF,OACA6iC,GAIAj0C,EAAAk6F,WAAA,GAAAnpF,GACAyG,MAAA+hF,eAAAv5F,EAAAqV,QACAqC,GAAA6hF,eAAAlkF,GAAA4+B,GACAt8B,SAAA,WACA3X,EAAAqV,MAAAokF,eAAAt1F,MACAw0F,kBAEA34F,EAAAk6F,WAAAliF,UAVAhY,EAAAqV,QACAsjF,kBAYA34F,EAAAu6F,aAAA,SAAAtmD,GACAj0C,EAAAk6F,WAAA9oF,OACA6iC,GAIAj0C,EAAAk6F,WAAA,GAAAnpF,GACAyG,MAAA+hF,eAAAv5F,EAAAqV,QACAqC,GAAA6hF,eAAAv5F,EAAA45F,eAAA3lD,GACAt8B,SAAA,WACA3X,EAAAqV,MAAAokF,eAAAt1F,MACAw0F,kBAEA34F,EAAAk6F,WAAAliF,UAVAhY,EAAAqV,MAAArV,EAAA45F,cACAjB,kBAYA34F,EAAAw6F,UAAA,SAAAj4F,EAAA0xC,GACAj0C,EAAAi6F,YAAA7oF,OACA6iC,GAIAj0C,EAAAi6F,YAAA,GAAAlpF,GACAyG,OAA4BijF,YAAAz6F,EAAAuC,SAC5BmV,IAAyB+iF,YAAAl4F,EAAA8P,EAAAhV,aAA4C42C,GACrEt8B,SAAA,WACA3X,EAAAuC,OAAA4B,KAAAs2F,YACA9B,kBAEA34F,EAAAi6F,YAAAjiF,UAVAhY,EAAAuC,SAAA8P,EAAAhV,YACAs7F,kBAYA34F,EAAA06F,cAAA,SAAAzmD,GACAj0C,EAAAi6F,YAAA7oF,OACA6iC,GAIAj0C,EAAAi6F,YAAA,GAAAlpF,GACAyG,OAA4BijF,YAAAz6F,EAAAuC,SAC5BmV,IAAyB+iF,YAAAz6F,EAAAuU,gBAAmC0/B,GAC5Dt8B,SAAA,WACA3X,EAAAuC,OAAA4B,KAAAs2F,YACA9B,kBAEA34F,EAAAi6F,YAAAjiF,UAVAhY,EAAAuC,OAAAvC,EAAAuU,eACAokF,kBAYA34F,EAAA/E,GAAA,SAAA0/F,EAAAnC,GACA,OAAAmC,GACA,gBACApC,oBAAAC,EACA,MACA,gBACAC,mBAAAD,EACA,MACA,aACAE,gBAAAF,KA4FAx4F,KxB4zJM,SAASnI,EAAQD,EAASH,GyBxiKhC,GAAAmjG,GAAAnjG,EAAA,GACAI,GAAAD,QAAA,SAAAgB,EAAAR,GAgHA,QAAAghG,eAAAvmF,EAAA3P,EAAAkU,GACAvE,EAAAC,KAAA5P,EAAA2P,EAAAC,KAAA5P,EAAA2P,EAAAC,KACAD,EAAAE,KAAAqE,EAAAvE,EAAAE,KAAAqE,EAAAvE,EAAAE,KACAF,EAAAG,KAAA9P,EAAA2P,EAAAG,KAAA9P,EAAA2P,EAAAG,KACAH,EAAAI,KAAAmE,EAAAvE,EAAAI,KAAAmE,EAAAvE,EAAAI,KAlHA,OADAvY,GAAA9B,EAAA8B,OACAD,EAAA,EAAgBA,EAAAC,EAAAC,OAAiBF,IAAA,CAQjC,OAPA4C,GAAA,EACAnC,EAAAR,EAAAD,GACAiZ,EAAAxY,EAAAwY,OACAoC,GACAhD,KAAA,WAAAC,KAAA,WAAAC,KAAA,EAAAC,KAAA,GAGAnO,EAAA,EAAoBA,EAAA4O,EAAA/Y,OAAiBmK,IAAA,CAIrC,OAHA+L,GAAA6C,EAAA5O,GACA9G,EAAA6S,EAAA7S,OACA68F,KACA5wE,EAAA,EAAwBA,EAAAjsB,EAAArD,OAAiBsvB,IAAA,CACzC,GAAA9O,GAAAnd,EAAAisB,GACA6wE,EAAA7wE,GAAAjsB,EAAArD,OAAA,EAAAqD,EAAA,GAAAA,EAAAisB,EAAA,EACA9O,GAAA,IAAA2/E,EAAA,IAAA3/E,EAAA,IAAA2/E,EAAA,IACAD,EAAA72F,KAAAimB,GAEAmvE,cAAAtjF,EAAAqF,EAAA,GAAAA,EAAA,IAEA,QAAA0/E,EAAAlgG,QAAA,CACAlB,QAAAwD,IAAA,UACA,IAAAoJ,GAAAw0F,EAAArrF,KACAxR,GAAAuI,OAAAF,EAAA,IAIA,GAAA00F,GAAAp3F,KAAAC,IAAAkS,EAAA9C,KAAA8C,EAAAhD,KAAAgD,EAAA7C,KAAA6C,EAAA/C,KACA,IAAAgoF,EAAA,KAEA19F,EAAA09F,EAAA,IACA7/F,EAAA8Z,iBAAA3X,EACAnC,EAAA6Z,iBAAA1X,EACAnC,EAAAy+F,oBAAAt8F,EACAnC,EAAA8/F,sBAAA9/F,EAAA8/F,qBAAA39F,EACA,QAAAyH,GAAA,EAAwBA,EAAA4O,EAAA/Y,OAAiBmK,IAAA,CACzC,GAAA+L,GAAA6C,EAAA5O,EACA+L,GAAAtO,SAAAsO,EAAAtO,QAAAlF,GACAwT,EAAAoqF,UAAApqF,EAAAoqF,SAAA59F,GACAwT,EAAAsD,cACAtD,EAAAsD,YAAA,IAAA9W,EAAsDwT,EAAAsD,YAAA,IAAA9W,EAGtD,QADAW,GAAA6S,EAAA7S,OACAisB,EAAA,EAA4BA,EAAAjsB,EAAArD,OAAiBsvB,IAAA,CAC7C,GAAA9O,GAAAnd,EAAAisB,EACA9O,GAAA,IAAA9d,EACA8d,EAAA,IAAA9d,IAIAnC,EAAAmC,aAKA,QAFA69F,MACAC,KACAr2F,EAAA,EAAoBA,EAAA4O,EAAA/Y,OAAiBmK,IAAA,CACrC,GAAA+L,GAAA6C,EAAA5O,GACAm2F,EAAA,IACA//F,GAAA8/F,sBAAAC,EAAA//F,EAAA8/F,qBACAnqF,EAAAoqF,YAAApqF,EAAAoqF,QACA,IAAAj9F,GAAA6S,EAAA7S,MACA,IAAAi9F,EAAA,CAGA,OAFAG,MAEAnxE,EAAA,EAA4BA,EAAAjsB,EAAArD,OAAgBsvB,IAC5CmxE,EAAAp3F,MAAAhG,EAAAisB,GAAA,GAAAjsB,EAAAisB,GAAA,IAEAmxE,GAAAp3F,MAAAo3F,EAAA,MAAAA,EAAA,OAEA,IAAAC,GAAA,IACA,KACA,GAAAtpF,GAAA,GAAA6oF,EACAS,GAAAtpF,EAAA3Y,KAAAgiG,GAAAH,WACiB,MAAA9/F,GACjB1B,QAAAC,MAAA,4EACAwB,QAAA,aAAA4J,EAAA,KAGA,GAAAu2F,EACA,MAAAA,EAAA1gG,OACAlB,QAAAC,MAAA,4EACAwB,QAAA,aAAA4J,EAAA,KACAo2F,EAAAl3F,KAAAc,OACqB,IAAAu2F,EAAA1gG,OAAA,GACrBlB,QAAAC,MAAA,kCAAA2hG,EAAA1gG,OAAA,gDACAO,QAAA,aAAA4J,EAAA,KACAo2F,EAAAl3F,KAAAc,EACA,QAAAmlB,GAAA,EAAoCA,EAAAoxE,EAAA1gG,OAAuBsvB,IAAA,CAC3D,GAAAqxE,GAAAljG,EAAA4J,UAA4D6O,EAC5DyqF,GAAAt9F,OAAAq9F,EAAApxE,GACAqxE,EAAAt9F,OAAAwR,MACA2rF,EAAAn3F,KAAAs3F,QAGAzqF,GAAA7S,OAAAq9F,EAAA,GACAxqF,EAAA7S,OAAAwR,OAKA,QAAA0rF,EAAAvgG,QAAA,CACA,GAAA0L,GAAA60F,EAAA1rF,KACAqB,GAAA7S,OAAAuI,OAAAF,EAAA,GAEA,QAAA80F,EAAAxgG,QAAA,CACA,GAAA2gG,GAAAH,EAAAvrF,OACA8D,GAAA1P,KAAAs3F,IAUA,MAAA1iG,KzBmjKM,SAASf,EAAQD,EAASH,G0B5pKhC,QAAAmjG,QAAAj9E,EAAA49E,GAKAp3F,KAAAwZ,SAAA,KAKAxZ,KAAAq3F,MAAA,KAKAr3F,KAAAs3F,SAAA,EAMAt3F,KAAAu3F,UAAA,EAEA/9E,GACAxZ,KAAA/K,KAAAukB,GAOAxZ,KAAAw3F,aAAA5tF,SAAAwtF,IAAA,EAhDA,GAAAK,GAAAnkG,EAAA,IACAokG,EAAApkG,EAAA,IACAqkG,EAAArkG,EAAA,IAGAqvC,EAAAg1D,EAAAh1D,QACAtc,EAAAsxE,EAAAtxE,OACAuxE,EAAAD,EAAAC,WAiDAnB,QAAA/uF,UAAAzS,KAAA,SAAAukB,GAEA,GADAxZ,KAAA63F,WACAl1D,EAAAnpB,GACA,SAAA1X,OAAA,sDAUA,OAPA6gC,GAAAnpB,IAAA,gBAAAA,GAAA,GACAxZ,KAAAwZ,YAEAxZ,KAAAwZ,SAAAo+E,EAAAp+E,GACAxZ,KAAA83F,gBAAA93F,KAAAwZ,SAAAxZ,KAAA63F,SAGA73F,MASAy2F,OAAA/uF,UAAAowF,gBAAA,SAAAC,EAAAV,GACA,GAAA/gG,GAAA67F,CACA,IAAAxvD,EAAAo1D,EAAA,qBAAAA,GAAA,MAKA,IAJA5F,EAAA4F,EAAAvhG,OACA6vB,EAAA0xE,EAAA,GAAAA,EAAA5F,EAAA,MACAA,GAAA,GAEA77F,EAAA,EAAeA,EAAA67F,EAAS77F,IACxB+gG,EAAAx3F,KAAA,GAAA43F,GAAAM,EAAAzhG,GAAAyhG,GAAAzhG,EAAA,GAAA67F,SAGA,KAAA77F,EAAA,EAAA67F,EAAA4F,EAAAvhG,OAAqCF,EAAA67F,EAAS77F,IAC9C+gG,EAAAx3F,SACAG,KAAA83F,gBAAAC,EAAAzhG,GAAA+gG,IAAA7gG,OAAA,KAUAigG,OAAA/uF,UAAA0vF,YAAA,SAAAA,GAEA,MADAp3F,MAAAw3F,aAAAJ,EACAp3F,MAUAy2F,OAAA/uF,UAAA2vC,SAAA,SAAA79B,GACA,GAAA24E,GAAA34E,EAAAhjB,MACA,uBAAAgjB,GAAA,IAAAA,IACAA,EAAA,QAAAA,EAAA24E,EAAA,OACA34E,EAAA,QAAAA,EAAA24E,EAAA,OACAA,EAAA,IACA34E,IAAAtP,MAAA,EAAAioF,EAAA,GACAnyF,KAAAs3F,SAAA,GAGA99E,IAeAi9E,OAAA/uF,UAAAswF,UAAA,SAAAx+E,EAAAxe,EAAAm5B,EAAA8jE,EACAC,EAAAztC,EAAA0tC,GAEA,GAAAC,GAAA,EAAA54F,KAAAyS,GACAomF,EAAA74F,KAAAuxB,MAAAknE,EAAA,GAAAj9F,EAAA,GAAAi9F,EAAA,GAAAj9F,EAAA,IACAs9F,EAAA94F,KAAAuxB,MAAAmnE,EAAA,GAAAl9F,EAAA,GAAAk9F,EAAA,GAAAl9F,EAAA,GAGAyvD,GAAA,QACAA,GAAA,GAGA4tC,EAAA,IACAA,GAAAD,GAGAE,EAAA,IACAA,GAAAF,EAGA,IAAA7lE,GAAA8lE,EAAAC,EACAD,EAAAC,EACAD,EAAAD,EAAAE,EACAC,GAAA,GAAAhmE,EAAA6lE,EAAA7lE,GAAAk4B,CAEAjxC,GAAA3Z,KAAAo4F,EACA,QAAA3hG,GAAA,EAAiBA,EAAAm0D,IAAcn0D,EAC/Bi8B,EAAA8lE,EAAAE,EAAAjiG,EACAkjB,EAAA3Z,MACA7E,EAAA,GAAAwE,KAAA2S,IAAAogB,GAAA4B,EACAn5B,EAAA,GAAAwE,KAAA4a,IAAAmY,GAAA4B,GAIA,OADA3a,GAAA3Z,KAAAq4F,GACA1+E,GASAi9E,OAAA/uF,UAAA+tB,SAAA,SAAA+iE,EAAAC,GAEA,MADAz4F,MAAAu3F,UAAAiB,GAAA,EACAx4F,MAUAy2F,OAAAiC,eAAA,SAAAC,EAAAF,GACA,OAAAA,GACA,YACAE,GAAA,MACA,MACA,YACAA,GAAA,MACA,MACA,kBACAA,GAAA,MACA,MACA,cACA,aACAA,GAAA,MACA,MACA,eACA,cAIA,MAAAA,IAQAlC,OAAA/uF,UAAAkxF,gBAAA,SAAAp/E,GAOA,MANA6M,GAAA7M,EAAA,GAAAA,IAAAhjB,OAAA,KACAgjB,EAAA3Z,MACA2Z,EAAA,MACAA,EAAA,QAGAA,GAUAi9E,OAAA/uF,UAAAkG,OAAA,SAAA4qF,GAEA,MADAx4F,MAAAy1B,SAAA+iE,GACA,IAAAx4F,KAAAu3F,UAAAv3F,KAAAwZ,SACAxZ,KAAAu3F,UAAA,EAAAv3F,KAAA64F,OAAA74F,KAAAu3F,WACAv3F,KAAA82F,SAAA92F,KAAAu3F,YAWAd,OAAA/uF,UAAAoxF,eAAA,SAAA7T,EAAAC,EAAA6T,EAAAP,GAOA,OANAh/E,MACA6uC,GACA0wC,EAAAnrF,OAAAmrF,EAAAC,UAAA,GAAAR,EAAAO,EAAAC,UAAA,GAAAR,GACAO,EAAAE,cAAAF,EAAAG,WAAA,GAAAV,EAAAO,EAAAG,WAAA,GAAAV,IAGAliG,EAAA,EAAA67F,EAAA,EAA0B77F,EAAA67F,EAAS77F,IAAA,CACnC,GAAA6iG,GAAA9wC,EAAA/xD,GACA8iG,EAAA/wC,GAAA/xD,EAAA67F,EAAA,GAAAA,EACAnyF,MAAAg4F,UACAx+E,EACA,IAAAljB,EAAA2uF,EAAAC,EACAsT,EACAY,EAAAC,KACAF,EAAAG,QACAt5F,KAAAw3F,cACA,GAIA,MAAAh+E,IAQAi9E,OAAA/uF,UAAAmxF,OAAA,SAAAL,GAGA,GAFAx4F,KAAAy1B,SAAA+iE,GAEA,gBAAAx4F,MAAAwZ,SAAA,GACA,MAAAxZ,MAAAu5F,YAAAv5F,KAAAu3F,UAGA,QAAAiB,EAAA,MAAAx4F,MAAAwZ,QAEA,IAAAod,GAAA52B,KAAAw5F,YAAAx5F,KAAAu3F,UAGA,OADA3gE,GAAA8gE,EAAA9gE,MAAA52B,KAAAwZ,SAAAod,GACAghE,EAAAhhE,IAQA6/D,OAAA/uF,UAAAovF,QAAA,SAAA0B,GAGA,GAFAx4F,KAAAy1B,SAAA+iE,GAEA,IAAAx4F,KAAAu3F,UAAA,MAAAv3F,MAAA44F,gBAAA54F,KAAAwZ,SACA,QAAAxZ,KAAAwZ,SAAAhjB,QAAA,gBAAAwJ,MAAAwZ,SAAA,GACA,MAAAxZ,MAAAwZ,QAGA,IAAAod,GAAA52B,KAAAw5F,YAAAx5F,KAAAu3F,WACAkC,EAAA/B,EAAA+B,KAAAz5F,KAAAwZ,SAAAod,EACA,OAAAghE,GAAA6B,IASAhD,OAAA/uF,UAAAgyF,WAAA,SAAAlB,GACA,WAAAA,EAAAx4F,KAAAwZ,SACAo+E,EAAA53F,KAAAw5F,YAAAhB,KASA/B,OAAA/uF,UAAA8xF,YAAA,SAAAhB,GACA,GAAAA,EAAA,WAAA12F,OAAA,2CACA,IAAA80B,EAEA,IADA52B,KAAAy1B,SAAA+iE,GACA71D,EAAA3iC,KAAAwZ,SAAA,qBAAAxZ,MAAAwZ,SAAA,MACA,OAAAljB,GAAA,EAAA67F,EAAAnyF,KAAA63F,OAAArhG,OAA6CF,EAAA67F,EAAS77F,IACtDsgC,EAAA,IAAAtgC,EACA0J,KAAA25F,cAAA35F,KAAAwZ,SAAAljB,GAAA0J,KAAA63F,OAAAvhG,IACAohG,EAAA9gE,QAAA52B,KAAA25F,cAAA35F,KAAAwZ,SAAAljB,GAAA0J,KAAA63F,OAAAvhG,SAGAsgC,GAAA,IAAA52B,KAAAwZ,SAAAhjB,OACAwJ,KAAAu5F,cACAv5F,KAAA25F,cAAA35F,KAAAwZ,SAAAxZ,KAAA63F,OAGA,OAAAjhE,IASA6/D,OAAA/uF,UAAAiyF,cAAA,SAAAC,EAAAvC,GACA,GAAAzgE,GAAAtgC,EAAA67F,CACA,IAAAxvD,EAAAi3D,EAAA,qBAAAA,GAAA,MAEA,IAAAtjG,EAAA,EAAA67F,EAAAyH,EAAApjG,OAAA,EAAuCF,EAAA67F,EAAS77F,IAAA,CAChD,GAAAujG,GAAA75F,KAAA44F,gBACA54F,KAAA84F,eAAAc,EAAAtjG,GAAAsjG,EAAAtjG,EAAA,GAAA+gG,EAAA/gG,GAAA0J,KAAAu3F,WAEA3gE,GAAA,IAAAtgC,GACA0J,KAAA44F,gBAAAiB,IACAnC,EAAA9gE,QAAA52B,KAAA44F,gBAAAiB,QAGA,KAAAvjG,EAAA,EAAA67F,EAAAkF,EAAA7gG,OAAmCF,EAAA67F,EAAS77F,IAC5CsgC,EAAA,IAAAtgC,EACA0J,KAAA25F,cAAAC,EAAAtjG,GAAA+gG,EAAA/gG,IACAohG,EAAA9gE,QAAA52B,KAAA25F,cAAAC,EAAAtjG,GAAA+gG,EAAA/gG,IAGA,OAAAsgC,IAQA6/D,OAAA/uF,UAAA6xF,YAAA,SAAA9jE,GACAz1B,KAAAy1B,WACA,IAAAjc,GAAA,EAAAxZ,KAAAw3F,aACA39F,KACAmB,EAAAgF,KAAAwZ,SACA2a,EAAAn0B,KAAAu3F,UACAhlE,EAAA,CAEA/Y,GAAA,OAAAA,GAEA,QAAAljB,GAAA,EAAiBA,EAAAkjB,EAAcljB,IAC/Bi8B,GAAA,EAAA/yB,KAAAyS,GAAAuH,EACA3f,EAAAgG,MACA7E,EAAA,GAAAm5B,EAAA30B,KAAA2S,IAAAogB,GACAv3B,EAAA,GAAAm5B,EAAA30B,KAAA4a,IAAAmY,IAIA,OAAAqlE,IAAA53F,KAAA44F,gBAAA/+F,MAIA48F,OAAAmB,cAEAlkG,EAAAD,QAAAgjG,Q1BorKM,SAAS/iG,EAAQD,G2BrkLvB,QAAAgkG,MAAA6B,EAAAD,GAKAr5F,KAAAs5F,UAKAt5F,KAAAq5F,OAKAr5F,KAAAg5F,UAAAh5F,KAAA85F,gBAKA95F,KAAAk5F,WAAAl5F,KAAA+5F,iBAOAtC,KAAA/vF,UAAAqyF,eAAA,WACA,GAAAC,GAAAh6F,KAAA85F,eACA,SACAE,EAAA,IACAA,EAAA,KAQAvC,KAAA/vF,UAAAoyF,cAAA,WACA,GAAAG,GAAAj6F,KAAAq5F,KAAA,GAAAr5F,KAAAs5F,QAAA,GACAY,EAAAl6F,KAAAq5F,KAAA,GAAAr5F,KAAAs5F,QAAA,GACAa,EAAA36F,KAAAgmB,KAAAy0E,IAAAC,IAEA,QAAAC,EAAA,SAAAr4F,OAAA,mBAEA,SACAo4F,EAAAC,EACAF,EAAAE,IAUA1C,KAAA/vF,UAAAkG,OAAA,SAAAqsF,EAAAC,GACA,MAAAzC,MAAA2C,WAAAp6F,KAAAs5F,QAAAt5F,KAAAq5F,KAAAY,EAAAC,IASAzC,KAAA/vF,UAAAuxF,cAAA,SAAAgB,EAAAC,GACA,MAAAzC,MAAA2C,WAAAp6F,KAAAq5F,KAAAr5F,KAAAs5F,QAAAW,EAAAC,IAYAzC,KAAA2C,WAAA,SAAAd,EAAAD,EAAAY,EAAAC,GACA,UAAAzC,OACA6B,EAAA,GAAAW,EACAX,EAAA,GAAAY,IAEAb,EAAA,GAAAY,EACAZ,EAAA,GAAAa,KASAzC,KAAA/vF,UAAA+oB,QAAA,WACA,UAAAgnE,MAAAz3F,KAAAq5F,KAAAr5F,KAAAs5F,UAIA5lG,EAAAD,QAAAgkG,M3BmlLM,SAAS/jG,EAAQD,EAASH,G4B/rLhCI,EAAAD,QAAAH,EAAA,K5BssLM,SAASI,EAAQD,EAASH,G6BrqLhC,QAAA+mG,gBAAAC,EAAAC,EAAAC,EAAAjwC,EAAAkwC,EAAAC,GAIA,GAAA3B,GAAA,GAAA4B,GAAAL,IAAA,IAAA1wF,QAAA4wF,GACAI,EAAA,GAAAD,GAAAJ,IAAA,GAAAxB,EAAAyB,EACAzB,GAAA8B,WAAAD,EAEA7B,EAAA+B,UAAAF,EAAAE,UAAAvwC,EAEAwwC,EAAAhC,EAAA6B,GAAA,EACAA,EAAA58F,MAAA,EAEA+6F,EAAA/6F,MAAA,EAGA08F,EAAA,GAAAjgF,EAAAigF,EAAA,GAAAJ,EAAA,IACAI,EAAA,GAAAjgF,EAAAigF,EAAA,GAAAJ,EAAA,IACAI,EAAA,GAAAj7F,EAAAi7F,EAAA,GAAAJ,EAAA,IACAI,EAAA,GAAAj7F,EAAAi7F,EAAA,GAAAJ,EAAA,IAIAG,EAAA56F,KAAAk5F,GACA0B,EAAA56F,KAAA+6F,GAKA,QAAAI,gBAAAC,EAAAT,EAAAjwC,EAAAziD,EAAA4yF,GACA,GAAApkG,GAAA67F,CACA,oBAAA8I,GAAA,MACA,IAAA3kG,EAAA,EAAA67F,EAAA8I,EAAAzkG,OAAA,EAAyCF,EAAA67F,EAAS77F,IAClD+jG,eAAAY,EAAA3kG,GAAA2kG,EAAA3kG,EAAA,GAAAkkG,EAAAjwC,EAAA,EAAAziD,EAAA4yF,OAGA,KAAApkG,EAAA,EAAA67F,EAAA8I,EAAAzkG,OAAqCF,EAAA67F,EAAS77F,IAC9CwkG,IACAE,eAAAC,EAAA3kG,GAAAkkG,EAAAM,EAAAhzF,EAAA4yF,GAMA,QAAAQ,WAAAC,EAAAzrC,EAAA0rC,EAAAC,GACA,GAAAZ,GAAA,GAAAa,GAAA,KAAAP,EAMA,OALAD,GAAA,EAEAE,eAAAG,GAAA,IAAAV,EAAAW,GACAJ,eAAAtrC,GAAA,IAAA+qC,EAAAY,GAEAZ,EAIA,QAAAc,eAAAjjG,EAAAoc,EAAA8mF,EAAAC,GAEA,OAAA/mF,GACApc,EAAAojG,OAAA,EACApjG,EAAAqjG,YAAA,GAGGrjG,EAAAkiG,YAAA9lF,EAAA8lF,WACHliG,EAAAojG,OAAAhnF,EAAAgnF,MACApjG,EAAAqjG,WAAAjnF,EAAAinF,aAIArjG,EAAAojG,OAAAhnF,EAAAinF,WACArjG,EAAAqjG,WAAAjnF,EAAAknF,cAAAlnF,EAAAgnF,MAAAhnF,EAAAgnF,OAIAhnF,IACApc,EAAAujG,cAAAC,SAAApnF,EAAA+mF,IAAA/mF,EAAAknF,aACAlnF,EAAAmnF,aAAAnnF,GAGApc,EAAAwjG,kBAAAxjG,EAAAmjG,GAIA,QAAAK,UAAAxjG,EAAAmjG,GACA,OAAAnjG,EAAA6C,MACA,IAAA4gG,GAAAC,OACA,OAAAP,GACA,IAAAQ,GACA,OAAA3jG,EAAAqjG,UACA,KAAAO,GACA,MAAA5jG,GAAAqjG,UACA,KAAAQ,GACA,MAAA7jG,GAAAkiG,WAAAliG,EAAAqjG,aACArjG,EAAAkiG,YAAAliG,EAAAqjG,UACA,KAAAS,GACA,SAEA,IAAAL,GAAAM,gBACA,MAAAZ,KAAAQ,GAAAR,IAAAS,CACA,KAAAH,GAAAO,qBACA,MAAAb,KAAAU,CACA,KAAAJ,GAAAQ,iBACA,SAEA,SAUA,QAAAC,sBAAAC,EAAAC,EAAA50F,GAMA,GAAA60F,GAAA/lF,EACA6lF,EAAAzlF,MAAAylF,EAAA5B,WAAA7jF,MACA0lF,EAAA1lF,MAAA0lF,EAAA7B,WAAA7jF,OAGA4lF,EAAAD,IAAAnmG,OAAA,CACA,QAAAomG,EAAA,QAGA,QAAAA,IACAv2E,EAAAo2E,EAAAzlF,MAAA0lF,EAAA1lF,QACAqP,EAAAo2E,EAAA5B,WAAA7jF,MAAA0lF,EAAA7B,WAAA7jF,QACA,QAGA,QAAA4lF,GAAAH,EAAAjC,YAAAkC,EAAAlC,UAMA,MALAiC,GAAA3B,YAAA4B,EAAA5B,WACAxlG,QAAA0vB,KAAA,oCACAy3E,EAAAzlF,MAAAylF,EAAA5B,WAAA7jF,MAAA0lF,EAAA1lF,MAAA0lF,EAAA7B,WAAA7jF,OAGA,CAIA,QAAA4lF,EAWA,MARAv2E,GAAAo2E,EAAAzlF,MAAA2lF,EAAA,KAAAt2E,EAAAo2E,EAAA5B,WAAA7jF,MAAA2lF,EAAA,KACAE,cAAAJ,EAAAE,EAAA,GAAA70F,GAIAue,EAAAq2E,EAAA1lF,MAAA2lF,EAAA,KAAAt2E,EAAAq2E,EAAA7B,WAAA7jF,MAAA2lF,EAAA,KACAE,cAAAH,EAAAC,EAAA,GAAA70F,GAEA,CAIA,IAAAg1F,MACAC,GAAA,EACAC,GAAA,CAkBA,OAhBA32E,GAAAo2E,EAAAzlF,MAAA0lF,EAAA1lF,OACA+lF,GAAA,EACG,IAAAhC,EAAA0B,EAAAC,GACHI,EAAAj9F,KAAA68F,EAAAD,GAEAK,EAAAj9F,KAAA48F,EAAAC,GAGAr2E,EAAAo2E,EAAA5B,WAAA7jF,MAAA0lF,EAAA7B,WAAA7jF,OACAgmF,GAAA,EACG,IAAAjC,EAAA0B,EAAA5B,WAAA6B,EAAA7B,YACHiC,EAAAj9F,KAAA68F,EAAA7B,WAAA4B,EAAA5B,YAEAiC,EAAAj9F,KAAA48F,EAAA5B,WAAA6B,EAAA7B,YAGAkC,GAAAC,GAAAD,GAEAN,EAAAthG,KAAA4gG,EAAAQ,iBACAG,EAAAvhG,KAAAshG,EAAAf,QAAAgB,EAAAhB,MACAK,EAAAM,gBACAN,EAAAO,qBAEAS,IAAAC,GAGAH,cAAAC,EAAA,GAAAjC,WAAAiC,EAAA,GAAA9lF,MAAAlP,GAEA,GAIAk1F,GACAH,cAAAC,EAAA,GAAAA,EAAA,GAAA9lF,MAAAlP,GACA,GAIAg1F,EAAA,KAAAA,EAAA,GAAAjC,YACAgC,cAAAC,EAAA,GAAAA,EAAA,GAAA9lF,MAAAlP,GACA+0F,cAAAC,EAAA,GAAAA,EAAA,GAAA9lF,MAAAlP,GACA,IAIA+0F,cAAAC,EAAA,GAAAA,EAAA,GAAA9lF,MAAAlP,GACA+0F,cAAAC,EAAA,GAAAjC,WAAAiC,EAAA,GAAA9lF,MAAAlP,GAEA,GAUA,QAAA+0F,eAAAI,EAAAjpG,EAAA8T,GACA,GAAAgK,GAAA,GAAA6oF,GAAA3mG,IAAA,GAAAipG,IAAAzC,WACA30E,EAAA,GAAA80E,GAAA3mG,IAAA,GAAAipG,EAAApC,WAAAoC,EAAAzC,UAuBA,OArBAn0E,GAAA42E,EAAAjmF,MAAAimF,EAAApC,WAAA7jF,QACA1hB,QAAA0vB,KAAA,gBAAAi4E,GAGAnrF,EAAAgpF,UAAAj1E,EAAAi1E,UAAAmC,EAAAnC,UAGAC,EAAAl1E,EAAAo3E,EAAApC,YAAA,IACAoC,EAAApC,WAAA78F,MAAA,EACA6nB,EAAA7nB,MAAA,GAMAi/F,EAAApC,sBAAAh1E,EACAo3E,EAAApC,WAAA/oF,EAEAhK,EAAAjI,KAAAgmB,GACA/d,EAAAjI,KAAAiS,GAEAhK,EAkCA,QAAAo1F,mBAAAzC,EAAAU,EAAAzrC,EAAA0rC,EAAAC,EAAAI,GAWA,IAVA,GACA/mF,GAAA2kF,EAOA3kF,EAAA2kF,EARA8D,KAGA3B,EAAA,GAAA4B,GAAAC,GACAF,KAEAG,EAAA7iF,EAAA2gF,EAAA,GAAAC,EAAA,IAIAZ,EAAAjkG,QAAA,CACA,GAAA8B,GAAAmiG,EAAApvF,KAIA,IAHA8xF,EAAAt9F,KAAAvH,GAGAmjG,IAAAQ,GAAA3jG,EAAA0e,MAAA,GAAAsmF,GACA7B,IAAAU,GAAA7jG,EAAA0e,MAAA,GAAAokF,EAAA,GACA,KAGA,IAAA9iG,EAAA0F,KAAA,CASA,GARAw9F,EAAA+B,OAAAjlG,GAGA+gG,EAAAmC,EAAAgC,SAAAllG,GACAoc,EAAA8mF,EAAAgC,SAAAllG,GACAA,EAAAmlG,SAAAjC,EAAAgC,SAAAllG,IAGAoc,IAAA2kF,EAAA,CACA/jG,QAAAwD,IAAA,QACA,IAAA4kG,GAAAC,cAAAnC,EACA9mF,GAAAgpF,EAAA,GACArE,EAAAqE,EAAA,GAqBA,GAlBAhpF,EAAAzf,SAAAumG,EAAA/gF,MACA/F,UAEAA,EAAA8mF,EAAAiC,WACA/oF,SACAA,EAAA2kF,QAEAA,SAEAkC,cAAAjjG,EAAAoc,EAAAzf,OAAAumG,EAAAC,GAEApC,EAAApkG,QACA,IAAAunG,qBAAAlkG,EAAA+gG,EAAApkG,OAAAwlG,KACAc,cAAAjjG,EAAAoc,EAAAzf,OAAAumG,EAAAC,GACAF,cAAAjjG,EAAA+gG,EAAApkG,OAAAumG,EAAAC,IAIA/mF,EAAAzf,QACA,IAAAunG,qBAAA9nF,EAAAzf,OAAAqD,EAAAmiG,GAAA,CACA,GAAAmD,GAAApC,EAAAgC,SAAA9oF,EAAAzf,OACA2oG,GAAA3oG,SAAAumG,EAAA/gF,MACAmjF,EAAAlpF,QAEAkpF,EAAApC,EAAAgC,SAAAhC,EAAA/7F,OACAm+F,EAAAvE,QAEAkC,cAAA7mF,EAAAzf,OAAA2oG,EAAA3oG,OAAAumG,EAAAC,GACAF,cAAAjjG,EAAAoc,EAAAzf,OAAAumG,EAAAC,QAGK,CAOL,GANAnjG,IAAAuiG,WACAxB,EAAAmC,EAAAgC,SAAAllG,GACAoc,EAAA8mF,EAAAgC,SAAAllG,IAIAoc,IAAA2kF,EAAA,QAEA3kF,GAAAzf,SAAAumG,EAAA/gF,MACA/F,UAEAA,EAAA8mF,EAAAiC,WACA/oF,SACAA,EAAA2kF,QAEAA,SACAmC,EAAA34F,OAAAvK,GAIA+gG,EAAApkG,QAAAyf,EAAAzf,QACAunG,qBAAA9nF,EAAAzf,OAAAokG,EAAApkG,OAAAwlG,IAIA,MAAA0C,GAGA,QAAAQ,eAAAnC,EAAArqE,GAIA,IAHA,GAEAl8B,GAFAyf,EAAA8mF,EAAAiC,WACApE,EAAAmC,EAAAiC,WACAI,EAAArC,EAAAiC,WACA,QAAAxoG,EAAA4oG,EAAAxE,UACA3kF,EAAA2kF,OACAA,SACApkG,IAAAqD,SAIA,OAAAoc,EAAA2kF,GAIA,QAAAyE,MAAA9zF,EAAA1T,EAAA46B,GACA,GAAA6sE,GAAA/zF,EAAA1T,EACA0T,GAAA1T,GAAA0T,EAAAknB,GACAlnB,EAAAknB,GAAA6sE,EAIA,QAAAC,mBAAAjG,GACA,MAAAA,GAAArP,UAIA,QAAA/lD,SAAA34B,GACA,yBAAAiS,OAAAvU,UAAApJ,SAAAzK,KAAAmW,GAIA,QAAAi0F,SAAAlG,EAAA71F,GAKA,MAJAygC,SAAAo1D,EAAA,MAAAp1D,QAAAo1D,EAAA,SACAA,OAEAA,EAAA71F,MACA61F,EAQA,QAAAmG,aAAAf,GACA,GAAA7kG,GAAAhC,EAAA67F,EACAgM,IACA,KAAA7nG,EAAA,EAAA67F,EAAAgL,EAAA3mG,OAAwCF,EAAA67F,EAAS77F,IACjDgC,EAAA6kG,EAAA7mG,IACAgC,EAAA0F,MAAA1F,EAAAwjG,WACAxjG,EAAA0F,MAAA1F,EAAAuiG,WAAAiB,WACAqC,EAAAt+F,KAAAvH,EAMA,KADA,GAAA8lG,IAAA,GACAA,GAEA,IADAA,GAAA,EACA9nG,EAAA,EAAA67F,EAAAgM,EAAA3nG,OAA0CF,EAAA67F,EAAS77F,IACnDA,EAAA,EAAA67F,GACA,IAAA4I,EAAAoD,EAAA7nG,GAAA6nG,EAAA7nG,EAAA,MACAwnG,KAAAK,EAAA7nG,IAAA,GACA8nG,GAAA,EAKA,KAAA9nG,EAAA,EAAA67F,EAAAgM,EAAA3nG,OAAwCF,EAAA67F,EAAS77F,IACjD6nG,EAAA7nG,GAAAk9D,IAAAl9D,CAGA,KAAAA,EAAA,EAAA67F,EAAAgM,EAAA3nG,OAAwCF,EAAA67F,EAAS77F,IACjD,IAAA6nG,EAAA7nG,GAAA0H,KAAA,CACA,GAAA+/F,GAAAI,EAAA7nG,GAAAk9D,GACA2qC,GAAA7nG,GAAAk9D,IAAA2qC,EAAA7nG,GAAAukG,WAAArnC,IACA2qC,EAAA7nG,GAAAukG,WAAArnC,IAAAuqC,EAIA,MAAAI,GAQA,QAAAE,cAAAlB,GACA,GAAA7mG,GAAA67F,EACAgM,EAAAD,YAAAf,GAIAmB,EAAAr0F,MAAAk0F,EAAA3nG,QACAuJ,KAEAwqD,KACAg0C,KACAC,IAEA,KAAAloG,EAAA,EAAA67F,EAAAgM,EAAA3nG,OAAwCF,EAAA67F,EAAS77F,IACjD,IAAAgoG,EAAAhoG,GAAA,CAEA,GAAAyhG,KACAh4F,GAAAF,KAAAk4F,EAEA,IAAA0G,GAAA1+F,EAAAvJ,OAAA,CAKA,IAJA+zD,EAAA1qD,KAAA,GACA0+F,EAAA1+F,SAGAs+F,EAAA7nG,GAAAulG,aAAA,CACA,GAAA6C,GAAAP,EAAA7nG,GAAAulG,aAAAf,SACAqD,GAAA7nG,GAAAulG,aAAA8C,YAKOH,EAAAE,KACPT,QAAAl+F,EAAAw+F,EAAAG,IAAAD,GACAF,EAAAE,GAAAF,EAAAG,GACAn0C,EAAAk0C,GAAAl0C,EAAAm0C,GACAF,EAAAC,IAAA,IARAR,QAAAl+F,EAAA2+F,GAAAD,GACAF,EAAAE,GAAAC,EACAn0C,EAAAk0C,GAAAl0C,EAAAm0C,GAAA,EACAF,EAAAC,IAAA,GASA,GAAAjrC,GAAAl9D,EACAsoG,EAAAT,EAAA7nG,GAAA0gB,KAGA,KAFA+gF,EAAAl4F,KAAA++F,GAEAprC,GAAAl9D,GACAgoG,EAAA9qC,IAAA,EAEA2qC,EAAA3qC,GAAAx1D,MACAmgG,EAAA3qC,GAAAmrC,aAAA,EACAR,EAAA3qC,GAAAsnC,UAAA2D,IAEAN,EAAA3qC,GAAAqnC,WAAA8D,aAAA,EACAR,EAAA3qC,GAAAqnC,WAAAC,UAAA2D,GAGAjrC,EAAA2qC,EAAA3qC,OACA8qC,EAAA9qC,IAAA,EAEAukC,EAAAl4F,KAAAs+F,EAAA3qC,GAAAx8C,OACAw8C,EAAAqrC,QAAArrC,EAAA2qC,EAAAG,EAGA9qC,UAAAl9D,EAAAk9D,EAEA8qC,EAAA9qC,GAAA8qC,EAAAH,EAAA3qC,SAAA,EACA2qC,EAAA3qC,GAAAqnC,WAAA8D,aAAA,EACAR,EAAA3qC,GAAAqnC,WAAAC,UAAA2D,EAKA,EAAAl0C,EAAAk0C,IACAT,kBAAAjG,GAKA,MAAAh4F,GAUA,QAAA8+F,SAAArrC,EAAA2qC,EAAAG,GAGA,IAFA,GAAAQ,GAAAtrC,EAAA,EACAh9D,EAAA2nG,EAAA3nG,OACAsoG,EAAAtoG,GACA6vB,EAAA83E,EAAAW,GAAA9nF,MAAAmnF,EAAA3qC,GAAAx8C,QAAA,CACA,IAAAsnF,EAAAQ,GACA,MAAAA,EAEAA,IAAA,EAMA,IAFAA,EAAAtrC,EAAA,EAEA8qC,EAAAQ,IACAA,GAAA,CAEA,OAAAA,GAIA,QAAAC,kBAAA5D,EAAAzrC,EAAA+rC,GACA,GAAA17F,GAAA,IAUA,OATAo7F,GAAA3kG,OAAAk5D,EAAAl5D,SAAA,IACAilG,IAAAQ,EACAl8F,EAAAi/F,EACKvD,IAAAU,EACLp8F,EAAAo7F,EACKM,IAAAS,GAAAT,IAAAW,IACLr8F,EAAA,IAAAo7F,EAAA3kG,OAAAk5D,EAAAyrC,IAGAp7F,EAIA,QAAAk/F,eAAA9D,EAAAzrC,EAAA0rC,EAAAC,EAAAI,GACA,GAAA17F,GAAA,IAaA,QAZAq7F,EAAA,GAAAC,EAAA,IACAA,EAAA,GAAAD,EAAA,IACAA,EAAA,GAAAC,EAAA,IACAA,EAAA,GAAAD,EAAA,MACAK,IAAAQ,EACAl8F,EAAAi/F,EACKvD,IAAAU,EACLp8F,EAAAo7F,EACKM,IAAAS,GAAAT,IAAAW,IACLr8F,EAAAo7F,EAAAxwF,OAAA+kD,KAGA3vD,EAIA,QAAAm/F,SAAA/D,EAAAzrC,EAAA+rC,GACA,GAAA0D,GAAAJ,iBAAA5D,EAAAzrC,EAAA+rC,EACA,IAAA0D,EACA,MAAAA,KAAAH,EAAA,KAAAG,CAEA,IAAA/D,IAAAjwF,uBACAkwF,GAAAlwF,uBAEAsvF,EAAAS,UAAAC,EAAAzrC,EAAA0rC,EAAAC,EAGA,IADA8D,EAAAF,cAAA9D,EAAAzrC,EAAA0rC,EAAAC,EAAAI,GAEA,MAAA0D,KAAAH,EAAA,KAAAG,CAEA,IAAAhC,GAAAD,kBAAAzC,EAAAU,EAAAzrC,EAAA0rC,EAAAC,EAAAI,EACA,OAAA4C,cAAAlB,GA9oBA,GAAAlB,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA4C,KAEAjD,EAAAzoG,EAAA,IAEAgoG,EAAAhoG,EAAA,IACA8pG,EAAA9pG,EAAA,IAAA8rG,OACAzE,EAAArnG,EAAA,IAEAynG,EAAAznG,EAAA,IACA+pG,EAAA/pG,EAAA,IACAsjB,EAAAtjB,EAAA,IACA+yB,EAAA/yB,EAAA,IAEAmM,EAAAD,KAAAC,IACAgb,EAAAjb,KAAAib,IAyCAqgF,EAAA,CAslBApnG,GAAAD,QAAAyrG,QAGAxrG,EAAAD,QAAAmjC,MAAA,SAAAukE,EAAAzrC,GACA,MAAAwvC,SAAA/D,EAAAzrC,EAAAwsC,IAIAxoG,EAAAD,QAAAgmG,KAAA,SAAA0B,EAAAzrC,GACA,MAAAwvC,SAAA/D,EAAAzrC,EAAAysC,IAIAzoG,EAAAD,QAAA4rG,IAAA,SAAAlE,EAAAzrC,GACA,MAAAwvC,SAAA/D,EAAAzrC,EAAA0sC,IAIA1oG,EAAAD,QAAAmjB,aAAA,SAAAukF,EAAAzrC,GACA,MAAAwvC,SAAA/D,EAAAzrC,EAAAusC,IAOAvoG,EAAAD,QAAA6rG,YACArD,eACAE,aACAD,QACAE,OAKA1oG,EAAAD,QAAAynG,oBACAxnG,EAAAD,QAAA8nG,4BACA7nG,EAAAD,QAAAypG,oCACAxpG,EAAAD,QAAAopG,4BACAnpG,EAAAD,QAAA+oG,2C7B6sLM,SAAS9oG,EAAQD,G8Bt4MvBC,EAAAD,SACAuoG,OAAA,EACAO,iBAAA,EACAF,gBAAA,EACAC,qBAAA,I9B84MM,SAAS5oG,EAAQD,G+Bl5MvB,YAIA,SAAA8rG,WAAAtqG,EAAAuqG,GACA,KAAAx/F,eAAAu/F,YAAA,UAAAA,WAAAtqG,EAAAuqG,EAMA,IAJAx/F,KAAA/K,WACA+K,KAAAxJ,OAAAwJ,KAAA/K,KAAAuB,OACAwJ,KAAAw/F,WAAAC,eAEAxqG,EAAA,OAAAqB,GAAAkJ,KAAAzI,MAAAiJ,KAAAxJ,OAAA,GAAuDF,GAAA,EAAQA,IAAA0J,KAAA0/F,MAAAppG,GAG/D,QAAAmpG,gBAAAz5F,EAAAE,GACA,MAAAF,GAAAE,KAAAF,EAAAE,EAAA,IA2DA,QAAA43F,MAAA7oG,EAAAqB,EAAAqK,GACA,GAAAivF,GAAA36F,EAAAqB,EACArB,GAAAqB,GAAArB,EAAA0L,GACA1L,EAAA0L,GAAAivF,EA3EAl8F,EAAAD,QAAA8rG,UAgBAA,UAAA73F,WAEA7H,KAAA,SAAAI,GACAD,KAAA/K,KAAA4K,KAAAI,GACAD,KAAAxJ,SACAwJ,KAAA2/F,IAAA3/F,KAAAxJ,OAAA,IAGA6U,IAAA,WACA,GAAAtN,GAAAiC,KAAA/K,KAAA,EAKA,OAJA+K,MAAA/K,KAAA,GAAA+K,KAAA/K,KAAA+K,KAAAxJ,OAAA,GACAwJ,KAAAxJ,SACAwJ,KAAA/K,KAAAoW,MACArL,KAAA0/F,MAAA,GACA3hG,GAGA6hG,KAAA,WACA,MAAA5/F,MAAA/K,KAAA,IAGA0qG,IAAA,SAAAnsC,GAIA,IAHA,GAAAv+D,GAAA+K,KAAA/K,KACAuqG,EAAAx/F,KAAAw/F,QAEAhsC,EAAA,IACA,GAAA1wB,GAAAtjC,KAAAzI,OAAAy8D,EAAA,KACA,MAAAgsC,EAAAvqG,EAAAu+D,GAAAv+D,EAAA6tC,IAAA,GAIa,KAHbg7D,MAAA7oG,EAAA6tC,EAAA0wB,GACAA,EAAA1wB,IAMA48D,MAAA,SAAAlsC,GAKA,IAJA,GAAAv+D,GAAA+K,KAAA/K,KACAuqG,EAAAx/F,KAAAw/F,QACArN,EAAAnyF,KAAAxJ,SAEA,CACA,GAAAwH,GAAA,EAAAw1D,EAAA,EACAv1D,EAAAD,EAAA,EACAyc,EAAA+4C,CAKA,IAHAx1D,EAAAm0F,GAAAqN,EAAAvqG,EAAA+I,GAAA/I,EAAAwlB,IAAA,IAAAA,EAAAzc,GACAC,EAAAk0F,GAAAqN,EAAAvqG,EAAAgJ,GAAAhJ,EAAAwlB,IAAA,IAAAA,EAAAxc,GAEAwc,IAAA+4C,EAAA,MAEAsqC,MAAA7oG,EAAAwlB,EAAA+4C,GACAA,EAAA/4C,M/Bk6MM,SAAS/mB,EAAQD,EAASH,GgCv+MhCI,EAAAD,SACA2rG,OAAA9rG,EAAA,IACAusG,QAAAvsG,EAAA,MhC++MM,SAASI,EAAQD,EAASH,GiC9+MhC,QAAAwsG,MAAA7qG,GACA+K,KAAA/K,OACA+K,KAAAhC,KAAA,KACAgC,KAAA/B,MAAA,KACA+B,KAAA+tB,KAAA,EAgBA,QAAAqxE,QAAAW,GACA//F,KAAA2wC,MAAA,KACA3wC,KAAAggG,YAAAD,EACA//F,KAAAsQ,KAAA,EA0KA,QAAA2vF,QAAAv3F,GACA,cAAAA,KAAAqlB,IAGA,QAAAmyE,eAAApU,EAAAsH,GACA,GAAA+M,GAAArU,EAAAsU,WAAAhN,EAQA,OANAtH,GAAAuU,WAAAjN,EAAA+M,EAAAC,UAAAhN,IACA+M,EAAAE,UAAAjN,EAAAtH,GAEAA,EAAA/9D,KAAA,EACAoyE,EAAApyE,KAAA,EAEAoyE,EAGA,QAAAG,eAAAxU,EAAAsH,GAEA,MADAtH,GAAAuU,WAAAjN,EAAA8M,cAAApU,EAAAsU,WAAAhN,QACA8M,cAAApU,EAAAsH,GArNA,GAAAmN,GAAAjtG,EAAA,GASAwsG,MAAAp4F,UAAA04F,UAAA,SAAAhN,GACA,MAAAA,GAAApzF,KAAA/B,MAAA+B,KAAAhC,MAGA8hG,KAAAp4F,UAAA24F,UAAA,SAAAjN,EAAAjpF,GACAipF,EACApzF,KAAA/B,MAAAkM,EAGAnK,KAAAhC,KAAAmM,GAUAi1F,OAAA13F,UAAA,GAAA64F,GAGAnB,OAAA13F,UAAA61F,OAAA,SAAAtoG,GACA,GAAAkS,IAAA,CAEA,WAAAnH,KAAA2wC,MAEA3wC,KAAA2wC,MAAA,GAAAmvD,MAAA7qG,GACAkS,GAAA,EACAnH,KAAAsQ,WAEA,CACA,GAAAjP,GAAA,GAAAy+F,OAAAl2F,SAEAwpF,EAAA,EACAoN,EAAA,EAGAC,EAAA,KACAC,EAAAr/F,EACArN,EAAA,KACA0U,EAAA1I,KAAA2wC,KAIA,KAHA+vD,EAAAziG,MAAA+B,KAAA2wC,QAGA,CAgBA,GAfA,OAAAjoC,GAEAA,EAAA,GAAAo3F,MAAA7qG,GACAjB,EAAAqsG,UAAAjN,EAAA1qF,GACAvB,GAAA,EACAnH,KAAAsQ,QAEA2vF,OAAAv3F,EAAA1K,OAAAiiG,OAAAv3F,EAAAzK,SAEAyK,EAAAqlB,KAAA,EACArlB,EAAA1K,KAAA+vB,KAAA,EACArlB,EAAAzK,MAAA8vB,KAAA,GAIAkyE,OAAAv3F,IAAAu3F,OAAAjsG,GAAA,CACA,GAAA2sG,GAAAD,EAAAziG,QAAAwiG,CAEA/3F,KAAA1U,EAAAosG,UAAAI,GACAE,EAAAL,UAAAM,EAAAT,cAAAO,GAAAD,IAGAE,EAAAL,UAAAM,EAAAL,cAAAG,GAAAD,IAIA,GAAAI,GAAA5gG,KAAAggG,YAAAt3F,EAAAzT,OAGA,QAAA2rG,EACA,KAGAJ,GAAApN,EACAA,EAAAwN,EAAA,EAGA,OAAAH,IACAC,EAAAD,GAEAA,EAAAzsG,EACAA,EAAA0U,EACAA,IAAA03F,UAAAhN,GAIApzF,KAAA2wC,MAAAtvC,EAAApD,MAMA,MAFA+B,MAAA2wC,MAAA5iB,KAAA,EAEA5mB,GAIAi4F,OAAA13F,UAAA7E,OAAA,SAAA5N,GACA,UAAA+K,KAAA2wC,MACA,QAGA,IAAAtvC,GAAA,GAAAy+F,OAAAl2F,SACAlB,EAAArH,CACAqH,GAAAzK,MAAA+B,KAAA2wC,KAMA,KALA,GAAA38C,GAAA,KACAysG,EAAA,KACAI,EAAA,KACAzN,EAAA,EAEA,OAAA1qF,EAAA03F,UAAAhN,IAAA,CACA,GAAAoN,GAAApN,CAGAqN,GAAAzsG,EACAA,EAAA0U,EACAA,IAAA03F,UAAAhN,EAEA,IAAAwN,GAAA5gG,KAAAggG,YAAA/qG,EAAAyT,EAAAzT,KAUA,IARAm+F,EAAAwN,EAAA,EAGA,IAAAA,IACAC,EAAAn4F,IAIAu3F,OAAAv3F,KAAAu3F,OAAAv3F,EAAA03F,UAAAhN,IACA,GAAA6M,OAAAv3F,EAAA03F,WAAAhN,IAAA,CACA,GAAA0N,GAAAZ,cAAAx3F,EAAA0qF,EACAp/F,GAAAqsG,UAAAG,EAAAM,GACA9sG,EAAA8sG,MAEA,KAAAb,OAAAv3F,EAAA03F,WAAAhN,IAAA,CACA,GAAA2N,GAAA/sG,EAAAosG,WAAAI,EACA,WAAAO,EACA,GAAAd,OAAAc,EAAAX,WAAAI,KAAAP,OAAAc,EAAAX,UAAAI,IAMA,CACA,GAAAG,GAAAF,EAAAxiG,QAAAjK,CAEAisG,QAAAc,EAAAX,UAAAI,IACAC,EAAAJ,UAAAM,EAAAL,cAAAtsG,EAAAwsG,IAEAP,OAAAc,EAAAX,WAAAI,KACAC,EAAAJ,UAAAM,EAAAT,cAAAlsG,EAAAwsG,GAIA,IAAAQ,GAAAP,EAAAL,UAAAO,EACAK,GAAAjzE,KAAA,EACArlB,EAAAqlB,KAAA,EACAizE,EAAAhjG,KAAA+vB,KAAA,EACAizE,EAAA/iG,MAAA8vB,KAAA,MAnBA/5B,GAAA+5B,KAAA,EACAgzE,EAAAhzE,KAAA,EACArlB,EAAAqlB,KAAA,GAqCA,MAZA,QAAA8yE,IACAA,EAAA5rG,KAAAyT,EAAAzT,KACAjB,EAAAqsG,UAAArsG,EAAAiK,QAAAyK,IAAA03F,UAAA,OAAA13F,EAAA1K,OACAgC,KAAAsQ,QAIAtQ,KAAA2wC,MAAAtvC,EAAApD,MACA,OAAA+B,KAAA2wC,QACA3wC,KAAA2wC,MAAA5iB,KAAA,GAGA,OAAA8yE,GAwBAntG,EAAAD,QAAA2rG,QjCw/MM,SAAS1rG,EAAQD,GkChtNvB,QAAA8sG,aAyIA,QAAAU,UAAAC,GACAlhG,KAAAmhG,MAAAD,EACAlhG,KAAAohG,cACAphG,KAAAqhG,QAAA,KAzIAd,SAAA74F,UAAA85C,MAAA,WACAxhD,KAAA2wC,MAAA,KACA3wC,KAAAsQ,KAAA,GAIAiwF,SAAA74F,UAAA45F,KAAA,SAAArsG,GAGA,IAFA,GAAA2R,GAAA5G,KAAA2wC,MAEA,OAAA/pC,GAAA,CACA,GAAA7S,GAAAiM,KAAAggG,YAAA/qG,EAAA2R,EAAA3R,KACA,QAAAlB,EACA,MAAA6S,GAAA3R,IAGA2R,KAAAw5F,UAAArsG,EAAA,GAIA,aAIAwsG,SAAA74F,UAAA81F,SAAA,SAAAvoG,GAIA,IAHA,GAAA2R,GAAA5G,KAAA2wC,MACA4wD,EAAAvhG,KAAAy9F,WAEA,OAAA72F,GAAA,CACA,GAAA7S,GAAAiM,KAAAggG,YAAA/qG,EAAA2R,EAAA3R,KACA,QAAAlB,EAEA,MADAwtG,GAAAF,QAAAz6F,EACA26F,CAGAA,GAAAH,WAAAvhG,KAAA+G,GACAA,IAAAw5F,UAAArsG,EAAA,GAIA,aAIAwsG,SAAA74F,UAAA85F,WAAA,SAAAvhG,GAKA,IAJA,GAAAwhG,GAAAzhG,KAAA2wC,MACA4wD,EAAAvhG,KAAAy9F,WACAmD,EAAA5gG,KAAAggG,YAEA,OAAAyB,GAAA,CACA,GAAA1tG,GAAA6sG,EAAA3gG,EAAAwhG,EAAAxsG,KACA,QAAAlB,EAEA,MADAwtG,GAAAF,QAAAI,EACAF,CAEAA,GAAAH,WAAAvhG,KAAA4hG,GACAA,IAAArB,UAAArsG,EAAA,GAGA,OAAAuC,GAAAirG,EAAAH,WAAA5qG,OAAA,EAAyCF,GAAA,IAAQA,EAEjD,GADAmrG,EAAAF,EAAAH,WAAA9qG,GACAsqG,EAAA3gG,EAAAwhG,EAAAxsG,MAAA,EAGA,MAFAssG,GAAAF,QAAAI,EACAF,EAAAH,WAAA5qG,OAAAF,EACAirG,CAKA,OADAA,GAAAH,WAAA5qG,OAAA,EACA+qG,GAIAhB,SAAA74F,UAAAg6F,WAAA,SAAAzhG,GAIA,IAHA,GAAAshG,GAAAvhG,KAAAwhG,WAAAvhG,GACA2gG,EAAA5gG,KAAAggG,YAEA,OAAAuB,EAAAtsG,QAAA,IAAA2rG,EAAAW,EAAAtsG,OAAAgL,IACAshG,EAAAlI,MAGA,OAAAkI,IAIAhB,SAAA74F,UAAA+S,IAAA,WACA,GAAA7T,GAAA5G,KAAA2wC,KACA,WAAA/pC,EACA,WAGA,aAAAA,EAAA5I,MACA4I,IAAA5I,IAGA,OAAA4I,GAAA3R,MAIAsrG,SAAA74F,UAAAjI,IAAA,WACA,GAAAmH,GAAA5G,KAAA2wC,KACA,WAAA/pC,EACA,WAGA,aAAAA,EAAA3I,OACA2I,IAAA3I,KAGA,OAAA2I,GAAA3R,MAKAsrG,SAAA74F,UAAA+1F,SAAA,WACA,UAAAwD,UAAAjhG,OAIAugG,SAAA74F,UAAAi6F,KAAA,SAAAlsG,GAEA,IADA,GAAAR,GAAA4oG,EAAA79F,KAAAy9F,WACA,QAAAxoG,EAAA4oG,EAAAxE,SACA5jG,EAAAR,IAKAsrG,SAAA74F,UAAAk6F,MAAA,SAAAnsG,GAEA,IADA,GAAAR,GAAA4oG,EAAA79F,KAAAy9F,WACA,QAAAxoG,EAAA4oG,EAAAnpF,SACAjf,EAAAR,IAWAgsG,SAAAv5F,UAAAzS,KAAA,WACA,cAAA+K,KAAAqhG,QAAArhG,KAAAqhG,QAAApsG,KAAA,MAKAgsG,SAAAv5F,UAAA2xF,KAAA,WACA,UAAAr5F,KAAAqhG,QAAA,CACA,GAAAvV,GAAA9rF,KAAAmhG,MAAAxwD,KACA,QAAAm7C,GACA9rF,KAAA6hG,SAAA/V,OAIA,WAAA9rF,KAAAqhG,QAAApjG,MAAA,CAGA,GAAAkiG,EACA,IAEA,GADAA,EAAAngG,KAAAqhG,SACArhG,KAAAohG,WAAA5qG,OAGA,CACAwJ,KAAAqhG,QAAA,IACA,OAJArhG,KAAAqhG,QAAArhG,KAAAohG,WAAA/1F,YAMarL,KAAAqhG,QAAApjG,QAAAkiG,OAIbngG,MAAAohG,WAAAvhG,KAAAG,KAAAqhG,SACArhG,KAAA6hG,SAAA7hG,KAAAqhG,QAAApjG,MAGA,eAAA+B,KAAAqhG,QAAArhG,KAAAqhG,QAAApsG,KAAA,MAKAgsG,SAAAv5F,UAAAgN,KAAA,WACA,UAAA1U,KAAAqhG,QAAA,CACA,GAAAvV,GAAA9rF,KAAAmhG,MAAAxwD,KACA,QAAAm7C,GACA9rF,KAAA8hG,SAAAhW,OAIA,WAAA9rF,KAAAqhG,QAAArjG,KAAA,CACA,GAAAmiG,EACA,IAEA,GADAA,EAAAngG,KAAAqhG,SACArhG,KAAAohG,WAAA5qG,OAGA,CACAwJ,KAAAqhG,QAAA,IACA,OAJArhG,KAAAqhG,QAAArhG,KAAAohG,WAAA/1F,YAMarL,KAAAqhG,QAAArjG,OAAAmiG,OAGbngG,MAAAohG,WAAAvhG,KAAAG,KAAAqhG,SACArhG,KAAA8hG,SAAA9hG,KAAAqhG,QAAArjG,KAGA,eAAAgC,KAAAqhG,QAAArhG,KAAAqhG,QAAApsG,KAAA,MAGAgsG,SAAAv5F,UAAAm6F,SAAA,SAAAhuF,GACA,YAAAA,EAAA7V,MACAgC,KAAAohG,WAAAvhG,KAAAgU,GACAA,IAAA7V,IAEAgC,MAAAqhG,QAAAxtF,GAGAotF,SAAAv5F,UAAAo6F,SAAA,SAAAjuF,GACA,YAAAA,EAAA5V,OACA+B,KAAAohG,WAAAvhG,KAAAgU,GACAA,IAAA5V,KAEA+B,MAAAqhG,QAAAxtF,GAGAngB,EAAAD,QAAA8sG,UlCytNM,SAAS7sG,EAAQD,EAASH,GmC37NhC,QAAAwsG,MAAA7qG,GACA+K,KAAA/K,OACA+K,KAAAhC,KAAA,KACAgC,KAAA/B,MAAA,KAgBA,QAAA4hG,SAAAE,GACA//F,KAAA2wC,MAAA,KACA3wC,KAAAggG,YAAAD,EACA//F,KAAAsQ,KAAA,EAxBA,GAAAiwF,GAAAjtG,EAAA,GAQAwsG,MAAAp4F,UAAA04F,UAAA,SAAAhN,GACA,MAAAA,GAAApzF,KAAA/B,MAAA+B,KAAAhC,MAGA8hG,KAAAp4F,UAAA24F,UAAA,SAAAjN,EAAAjpF,GACAipF,EACApzF,KAAA/B,MAAAkM,EAGAnK,KAAAhC,KAAAmM,GAUA01F,QAAAn4F,UAAA,GAAA64F,GAGAV,QAAAn4F,UAAA61F,OAAA,SAAAtoG,GACA,UAAA+K,KAAA2wC,MAIA,MAFA3wC,MAAA2wC,MAAA,GAAAmvD,MAAA7qG,GACA+K,KAAAsQ,QACA,CAUA,KAPA,GAAA8iF,GAAA,EAGAp/F,EAAA,KACA0U,EAAA1I,KAAA2wC,QAGA,CACA,UAAAjoC,EAMA,MAJAA,GAAA,GAAAo3F,MAAA7qG,GACAjB,EAAAqsG,UAAAjN,EAAA1qF,GACAvB,KAAA,EACAnH,KAAAsQ,QACA,CAIA,QAAAtQ,KAAAggG,YAAAt3F,EAAAzT,QACA,QAGAm+F,GAAApzF,KAAAggG,YAAAt3F,EAAAzT,QAAA,EAGAjB,EAAA0U,EACAA,IAAA03F,UAAAhN,KAKAyM,QAAAn4F,UAAA7E,OAAA,SAAA5N,GACA,UAAA+K,KAAA2wC,MACA,QAGA,IAAAtvC,GAAA,GAAAy+F,OAAAl2F,SACAlB,EAAArH,CACAqH,GAAAzK,MAAA+B,KAAA2wC,KAKA,KAJA,GAAA38C,GAAA,KACA6sG,EAAA,KACAzN,EAAA,EAEA,OAAA1qF,EAAA03F,UAAAhN,IAAA,CACAp/F,EAAA0U,EACAA,IAAA03F,UAAAhN,EACA,IAAAwN,GAAA5gG,KAAAggG,YAAA/qG,EAAAyT,EAAAzT,KACAm+F,GAAAwN,EAAA,EAEA,IAAAA,IACAC,EAAAn4F,GAIA,cAAAm4F,IACAA,EAAA5rG,KAAAyT,EAAAzT,KACAjB,EAAAqsG,UAAArsG,EAAAiK,QAAAyK,IAAA03F,UAAA,OAAA13F,EAAA1K,OAEAgC,KAAA2wC,MAAAtvC,EAAApD,MACA+B,KAAAsQ,QACA,IAOA5c,EAAAD,QAAAosG,SnCs8NM,SAASnsG,EAAQD,EAASH,GoCniOhC,QAAAqnG,YAAA3jF,EAAAhZ,EAAA68F,EAAAL,EAAAuB,GAMA/7F,KAAAhC,OAKAgC,KAAAgX,QAMAhX,KAAA66F,aAMA76F,KAAAw6F,YAMAx6F,KAAA7E,KAAA4gG,GAAAgG,EAAA/F,OAOAh8F,KAAA07F,OAAA,EAMA17F,KAAA27F,YAAA,EAMA37F,KAAA67F,aAAA,KAMA77F,KAAA87F,UAAA,EAQA97F,KAAA2+F,aAAA,EA3EA,GAAAqD,GAAA1uG,EAAA,IACAyuG,EAAAzuG,EAAA,GA8EAqnG,YAAAjzF,WAMAu6F,QAAA,SAAAjuG,GACA,MAAAgM,MAAAhC,KACAgkG,EAAAhiG,KAAAgX,MAAAhX,KAAA66F,WAAA7jF,MAAAhjB,GAAA,EACAguG,EAAAhiG,KAAA66F,WAAA7jF,MAAAhX,KAAAgX,MAAAhjB,GAAA,GAQAkuG,QAAA,SAAAluG,GACA,OAAAgM,KAAAiiG,QAAAjuG,IAOA4nG,WAAA,WACA,MAAA57F,MAAAgX,MAAA,KAAAhX,KAAA66F,WAAA7jF,MAAA,KAIAtjB,EAAAD,QAAAknG,YpCujOM,SAASjnG,EAAQD,GqC7pOvBC,EAAAD,QAAA,SAAAu9F,EAAAC,EAAAG,GACA,OAAAJ,EAAA,GAAAI,EAAA,KAAAH,EAAA,GAAAG,EAAA,KAAAH,EAAA,GAAAG,EAAA,KAAAJ,EAAA,GAAAI,EAAA,MrC4qOM,SAAS19F,EAAQD,EAASH,GsC5pOhC,QAAA6uG,cAAApJ,EAAA6B,EAAA3J,EAAAG,GAGA,MAAA2H,GAAA/6F,OAAA48F,EAAA58F,KACA+6F,EAAA/6F,KAAA,KAKA,IAAAgkG,EAAA/Q,EAAA8H,EAAA8B,WAAA7jF,MAAA4jF,EAAAC,WAAA7jF,OAEA+hF,EAAAkJ,QAAArH,EAAAC,WAAA7jF,UAAA,GAYA+hF,EAAAyB,WAAAI,EAAAJ,UAAA,KA/CA,GAAAwH,GAAA1uG,EAAA,GAQAI,GAAAD,QAAA,SAAAslG,EAAA6B,GACA,GAAA3J,GAAA8H,EAAA/hF,MACAo6E,EAAAwJ,EAAA5jF,KAGA,OAAAi6E,GAAA,GAAAG,EAAA,KACAH,EAAA,GAAAG,EAAA,MAIAH,EAAA,KAAAG,EAAA,GAAAH,EAAA,GAAAG,EAAA,QAEA+Q,aAAApJ,EAAA6B,EAAA3J,EAAAG,KtCutOM,SAAS19F,EAAQD,EAASH,GuC3uOhC,GAAA0uG,GAAA1uG,EAAA,IACAynG,EAAAznG,EAAA,IACA+yB,EAAA/yB,EAAA,GAQAI,GAAAD,QAAA,SAAA2uG,EAAAC,GACA,MAAAD,KAAAC,EAAA,EAGA,IAAAL,EAAAI,EAAAprF,MAAAorF,EAAAvH,WAAA7jF,MAAAqrF,EAAArrF,QACA,IAAAgrF,EAAAI,EAAAprF,MAAAorF,EAAAvH,WAAA7jF,MAAAqrF,EAAAxH,WAAA7jF,OAGAqP,EAAA+7E,EAAAprF,MAAAqrF,EAAArrF,OAAAorF,EAAAH,QAAAI,EAAAxH,WAAA7jF,UAAA,EAGAorF,EAAAprF,MAAA,KAAAqrF,EAAArrF,MAAA,GAAAorF,EAAAprF,MAAA,GAAAqrF,EAAArrF,MAAA,QAIA,IAAA+jF,EAAAqH,EAAAC,KAAAH,QAAAE,EAAAprF,UAAA,EAIAorF,EAAAH,QAAAI,EAAArrF,UAAA,EAGAorF,EAAA5H,YAAA6H,EAAA7H,UASA4H,EAAA5H,aAAA,EARAn0E,EAAA+7E,EAAAprF,MAAAqrF,EAAArrF,OACAqP,EAAA+7E,EAAAvH,WAAA7jF,MAAAqrF,EAAAxH,WAAA7jF,OACA,EAEAorF,EAAAtH,UAAAuH,EAAAvH,UAAA,KAOA,IAAAC,EAAAqH,EAAAC,GAAA,OvCmvOM,SAAS3uG,EAAQD,GwC/xOvBC,EAAAD,QAAA,SAAAw9F,EAAAG,GACA,MAAAH,GAAA,KAAAG,EAAA,IAAAH,EAAA,KAAAG,EAAA,KxCsyOM,SAAS19F,EAAQD,GyC5xOvB,QAAA6uG,cAAAt8F,EAAAE,GACA,MAAAF,GAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAWA,QAAAq8F,YAAAv8F,EAAAE,GACA,MAAAF,GAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAxBA,GAAA4V,GAAA,IA8CApoB,GAAAD,QAAA,SAAA+uG,EAAAC,EAAAC,EAAAjhB,EAAAkhB,GAaA,QAAAC,SAAA5uG,EAAA4xB,EAAAtJ,GACA,OACAtoB,EAAA,GAAA4xB,EAAAtJ,EAAA,GACAtoB,EAAA,GAAA4xB,EAAAtJ,EAAA,IATA,GAAAgkD,IAAAmiC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IACAK,GAAAphB,EAAA,GAAAihB,EAAA,GAAAjhB,EAAA,GAAAihB,EAAA,IAeA1rG,GAAA0rG,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,IACAM,EAAAR,aAAAhiC,EAAAuiC,GACAE,EAAAD,IACAE,EAAAT,WAAAjiC,KACA2iC,EAAAV,WAAAM,IAOA,IAAAE,EAAAjnF,EAAAknF,EAAAC,EAAA,CAIA,GAAAr9E,GAAA08E,aAAAtrG,EAAA6rG,GAAAC,CACA,IAAAl9E,EAAA,GAAAA,EAAA,EAEA,WAEA,IAAA8S,GAAA4pE,aAAAtrG,EAAAspE,GAAAwiC,CACA,OAAApqE,GAAA,GAAAA,EAAA,EAEA,KAEAiqE,EAAA,MAAAC,QAAAJ,EAAA58E,EAAA06C,IASA,GAAA4iC,GAAAX,WAAAvrG,IAIA,IAHA8rG,EAAAR,aAAAtrG,EAAAspE,GACAyiC,EAAAD,IAEAC,EAAAjnF,EAAAknF,EAAAE,EAEA,WAGA,IAAA/7B,GAAAo7B,WAAAjiC,EAAAtpE,GAAAgsG,EACAG,EAAAh8B,EAAAo7B,WAAAjiC,EAAAuiC,GAAAG,EACAI,EAAA5jG,KAAAib,IAAA0sD,EAAAg8B,GACAE,EAAA7jG,KAAAC,IAAA0nE,EAAAg8B,EAIA,OAAAC,IAAA,GAAAC,GAAA,EAGA,IAAAD,EACAT,EAAA,MAAAC,QAAAJ,EAAAY,EAAA,EAAAA,EAAA,EAAA9iC,IAGA,IAAA+iC,EACAV,EAAA,MAAAC,QAAAJ,EAAAa,EAAA,EAAAA,EAAA,EAAA/iC,IAGAqiC,GAAA,IAAAS,GAAA,IAAAC,EAAA,MAIAT,QAAAJ,EAAAY,EAAA,EAAAA,EAAA,EAAA9iC,GACAsiC,QAAAJ,EAAAa,EAAA,EAAAA,EAAA,EAAA/iC,IAIA,OzC+yOM,SAAS5sE,EAAQD,G0Ct7OvB,GAAAkvC,GAAAjvC,EAAAD,QAAAkvC,QAAA14B,MAAA04B,SAAA,SAAA34B,GACA,yBAAAiS,OAAAvU,UAAApJ,SAAAzK,KAAAmW,GASAtW,GAAAD,QAAA4yB,OAAA,SAAA4qE,EAAAG,GACA,MAAAH,GAAA,KAAAG,EAAA,IAAAH,EAAA,KAAAG,EAAA,IASA19F,EAAAD,QAAAmkG,YAAA,QAAAA,aAAA0L,EAAA/4C,EAAAi0C,GACAj0C,KAAA,CACA,IAAAj0D,GAAA67F,CACA,IAAAxvD,EAAA2gE,IAAA,gBAAAA,GAAA,OACA,GAAA7kE,GAAA,EACA8kE,EAAAD,CAEA,KAAAhtG,EAAA,EAAA67F,EAAAoR,EAAA/sG,OAAkCF,EAAA67F,EAAS77F,IAAA,CAC3C,GAAAktG,GAAAD,EAAAjtG,GACAmtG,EAAAF,GAAAjtG,EAAA,GAAA67F,EACA1zD,IAAA+kE,EAAA,GAAAC,EAAA,GACAhlE,GAAAglE,EAAA,GAAAD,EAAA,KAEAhF,GAAA//D,EAAA,GAAA+/D,GAAA//D,EAAA,IACA8kE,EAAA7a,cAGA,KAAApyF,EAAA,EAAA67F,EAAAmR,EAAA9sG,OAAyCF,EAAA67F,EAAS77F,IAClDshG,YAAA0L,EAAAhtG,GAAAi0D,EAAA,EAAAj0D,EAAA,EAIA,OAAAgtG,K1Ci8OM,SAAS5vG,EAAQD,G2C/+OvBC,EAAAD,QAAA,SAAAQ,EAAAC,GACA,gBAAAI,GA4CA,QAAAe,cAAA8F,GACA,OAAAA,GACA,aACA7F,QAAAC,MAAA,iCACA,MACA,cA/CA,GAAA2G,IACAmU,MAAA,0BACAC,MAAA,OACAqjF,QAAA,QAEAr2F,GACA+S,OAAAvb,OAAA,UACAwb,MAAArG,MAAA,SACA0pF,QAAA1pF,MAAA,UAEAtU,EAAAuG,CACA,IAAA5H,EAAA,CACA,OAAAsJ,KAAAtJ,GACAgJ,EAAAM,GACAtJ,EAAAsJ,GAAA/I,aAAAyI,EAAAM,GAAA,IACAtI,QAAAC,MAAA,YAAAqI,EAAA,wBACAtJ,GAAAsJ,GAAA,OAAAN,EAAAM,GAAA,gBAGAvI,aAAA,UACAC,QAAAC,MAAA,mBAAAqI,EAAA,iBAGA3J,GAAA4J,OAAAlI,EAAArB,GAGA,GAAAuH,KAaA,OAZAA,GAAAwb,KAAApjB,EAAA,eAAA6B,KACAkD,SAAA,WACAgF,MAAArI,EAAAg+F,OAAA,QACA51F,KAAApI,EAAAg+F,OAAA,QACAx1F,MAAAxI,EAAA2a,KAAA,QACAlS,OAAAzI,EAAA2a,KAAA,QACAozF,mBAAA,OAAA/tG,EAAA0a,MAAA,IACAszF,oBAAA,YACAC,kBAAAjuG,EAAA2a,KAAA,SAAA3a,EAAA2a,KAAA,UAEAzU,EAAA83F,OAAAh+F,EAAAg+F,OACA93F,EAAAyU,KAAA3a,EAAA2a,KACAzU,K3CkgPM,SAASnI,EAAQD,G4C3iPvBC,EAAAD,QAAA,SAAAQ,EAAAC,EAAAyK,GACA,gBAAA3F,EAAA1E,GAiGA,QAAAuvG,YAAAC,EAAAC,GACAC,EAAAD,EACAA,EAAAt1F,OACAq1F,EAAA1tG,OAAA2tG,GACAA,EAAAtyF,OAGA,QAAAwyF,YAAAH,EAAAI,GAGAC,EAAAlwG,EAFAiwG,EAAA9nF,MAAA,uCAEA8nF,EAGA,QAAAA,EAAA,UAEAC,EAAAruG,KACAkD,SAAA,WACAorG,cAAA,OACAC,mBAAA,OACAC,qBAAA,OACAC,kBAAA,OACAC,OAAA,YAEAV,EAAA1tG,OAAA+tG,GAUA,QAAAM,yBACAC,GAAgC/rF,GAAA,EAAAD,GAAA,EAAAG,GAAA,EAAAD,GAAA,GAEhC,QAAA+rF,6BAAAhsF,EAAAD,EAAAG,EAAAD,GACA,GAAAgsF,GAAAF,CACA/rF,MAAAisF,EAAAjsF,KAAAisF,EAAAjsF,MACAD,KAAAksF,EAAAlsF,KAAAksF,EAAAlsF,MACAG,KAAA+rF,EAAA/rF,KAAA+rF,EAAA/rF,MACAD,KAAAgsF,EAAAhsF,KAAAgsF,EAAAhsF,MA2EA,QAAAvjB,cAAA8F,GACA,OAAAA,GACA,aACA7F,QAAAC,MAAA,sCACA,MACA,cAzNA,GAAAsG,MAEAK,GACAf,KAAA,OACAoc,SAAA,EACA7Y,KAAAC,EAEAkmG,KAAA,2CACAC,MAAA,gBACAhO,QAAA,GAEAx5F,GACA3J,IAAAmB,OAAA,UACAqG,MAAArG,OAAA,UACAyiB,UAAAsE,OAAA,UACA9kB,OAAAjC,OAAA,UACA4J,MAAAud,OAAA,UACA4oF,MAAA/vG,OAAA,UACAgwG,OAAAhwG,OAAA,UACAgiG,SAAAj7E,OAAA,UACAkpF,WAAAjwG,OAAA,UACAkwG,WAAAn6F,SAAA,YACAo6F,UAAAp6F,SAAA,YACAq6F,OAAAr6F,SAAA,aAGAlV,EAAAuG,CAGA,IAAA5H,EACA,OAAAsJ,KAAAtJ,GACAgJ,EAAAM,GACAtJ,EAAAsJ,GAAA/I,aAAAyI,EAAAM,GAAA,IACAtI,QAAAC,MAAA,YAAAqI,EAAA,wBACAtJ,GAAAsJ,GAAA,KAAAN,EAAAM,GAAA,gBAGAvI,aAAA,UACAC,QAAAC,MAAA,mBAAAqI,EAAA,iBAIA3J,GAAA4J,OAAAlI,EAAArB,GAGAuH,EAAA7C,WACA6C,EAAAuc,QAAA,EACAvc,EAAA0b,SAAA5hB,EAAA4hB,SACA1b,EAAAsc,aAAA,CAEA,IAAAgtF,IAAA,KACAhB,EAAA,KACAH,EAAA,KAGA3sF,EAAApjB,EAAA,cA6BA,QA5BA4H,EAAAwb,OACAA,EAAAvhB,KACAkD,SAAA,WACAosG,WAAA,WAEAzvG,EAAAhC,IACA0jB,EAAAguF,KAAA,KAAA1vG,EAAAhC,IAEAgC,EAAAovG,WACA1tF,EAAAnhB,SAAAP,EAAAovG,WAEApvG,EAAAqvG,WACA3tF,EAAAvgB,GAAA,uBACAnB,EAAAqvG,UAAAlpG,MAAAD,SAGAlG,EAAAsvG,UACA5tF,EAAAvgB,GAAA,sBACAnB,EAAAsvG,SAAAnpG,MAAAD,SAGAlG,EAAAuvG,OACA7tF,EAAAvgB,GAAA,mBACAnB,EAAAuvG,MAAAppG,MAAAD,SAKAlG,EAAAwF,MACA,WACA0oG,WAAAxsF,EAAA1hB,EAAA+I,KAAA2Y,KAAA1gB,QAAAhB,EAAA+I,KAAAi1F,QACAsQ,WAAA5sF,EAAA1hB,EAAAkvG,KAAAlvG,EAAAmvG,MACA,MACA,YACAjB,WAAAxsF,EAAA1hB,EAAA+I,KAAA2Y,KAAA1gB,QAAAhB,EAAA+I,KAAAi1F,OACA,MACA,YACAsQ,WAAA5sF,EAAA1hB,EAAAkvG,KAAAlvG,EAAAmvG,OA8BA,GAAAJ,IACA/rF,GAAA,EACAD,GAAA,EACAG,GAAA,EACAD,GAAA,GAYA0sF,EAAA,KACAC,EAAA,IA0FA,OAzFA1pG,GAAA4b,WAAA,WACA,GAAA0sF,EAAA,CACA,GAAAqB,GAAArB,EAAAhmG,QACAsnG,EAAAtB,EAAA/lG,SACAsnG,EAAA/vG,EAAA,KAAAA,EAAA+I,KAAA4R,MAAA,KACAq1F,EAAAhwG,EAAA,KAAAA,EAAA+I,KAAAi1F,QAAA,IAEA,KAAA2R,IAAAC,EAAA,CAGA,GAFAD,EAAA,SACAC,EAAA,SACA5vG,EAAAmvG,MAAA,CACA,GAAAc,GAAAjwG,EAAAmvG,MAAAhwE,MAAA,IACAwwE,GAAAM,EAAA,GACAL,EAAAK,EAAA,GAIA,OAFAnB,wBACAE,6BAAAgB,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAA,EAAA,GAAAD,EAAA,GAAAC,EAAA,IACAL,GACA,WACAnB,EAAAruG,KAA2CkI,MAAAwnG,EAAA,OAC3Cb,6BAAAa,EAAA,EACA,MACA,cACArB,EAAAruG,KAA2CkI,MAAAwnG,EAAA,SAC3Cb,6BAAAa,EAAA,EAAAA,EAAA,EACA,MACA,aACArB,EAAAruG,KAA2CkI,KAAA,IAC3C2mG,4BAAA,EAAAa,GAGA,OAAAD,GACA,UACApB,EAAAruG,KAA2CiI,KAAA4nG,EAAA,GAAAhwG,EAAAmhG,QAAA2O,EAAA,OAC3Cd,4BAAA,WAAAgB,EAAA,GAAAhwG,EAAAmhG,QAAA2O,EAAA,KACA,MACA,cACAtB,EAAAruG,KAA2CiI,KAAA0nG,EAAA,SAC3Cd,4BAAA,WAAAc,EAAA,EAAAA,EAAA,EACA,MACA,cACAtB,EAAAruG,KAA2CiI,IAAA2nG,EAAA,GAAAC,EAAA,GAAAhwG,EAAAmhG,QAAA,OAC3C6N,4BAAA,UAAAe,EAAA,GAAAC,EAAA,GAAAhwG,EAAAmhG,QAAA4O,EAAA,GAAAC,EAAA,GAAAhwG,EAAAmhG,QAAA2O,OAMA5pG,EAAAgqG,cAAA,SAAApkE,GACAA,EACA5lC,EAAAsc,aAAA,GAEAtc,EAAAwb,KAAA5F,OACA5V,EAAAsc,aAAA,IAGAtc,EAAA2c,YAAA,WACA,OACAG,GAAAwsF,EAAA,GAAAT,EAAA/rF,GACAD,GAAAysF,EAAA,GAAAT,EAAAhsF,GACAG,GAAAssF,EAAA,GAAAT,EAAA7rF,GACAD,GAAAusF,EAAA,GAAAT,EAAA9rF,KAIA/c,EAAAsoG,YACAtoG,EAAAmoG,YAcAnoG,EAAA6b,eAAA,SAAAV,GACAmuF,EAAA,GAAAnuF,EAAA,GACAmuF,EAAA,GAAAnuF,EAAA,GACAK,EAAAvhB,KACAiI,IAAAiZ,EAAA,QACAhZ,KAAAgZ,EAAA,WAIAnb","file":"./sample/js/IndoorMap.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// console.log(require('./IndoorMap_core.js'));\n\t__webpack_require__(1);\n\t__webpack_require__(2);\n\t(function($,window){\n\t    var Promise = __webpack_require__(6);\n\t    window.IndoorMap = function($parent,userOpts,fallBack){\n\t        //check if webgl available\n\t        if(!__webpack_require__(16)){\n\t            console.log('webGL을 사용할 수 있는 환경이 아닙니다.');\n\t            if(fallBack) return fallBack();\n\t        }\n\t\n\t        //for safety; confirm $parent is a jQuery Object\n\t        $parent = $($parent);\n\t        //default options\n\t        var defaultOpts = {\n\t            backgroundColor:0xefefef,\n\t            tiltAngle:60,\n\t            zoomValue:100,\n\t            zoomStep:40,\n\t            minZoom:50,\n\t            maxZoom:300,\n\t            zoomAnimation:100,\n\t            zoomOnMouseWheel:true,\n\t            pinchZoom:true,\n\t            twoFingerRotation:true,\n\t            zoomController:true,\n\t            zoomControllerCustomClass:null,\n\t            zoomControllerPosition:'topright',\n\t            autoFit:true,\n\t            floorController:true,\n\t            floorControllerCustomClass:null,\n\t            floorControllerPosition:'bottomright',\n\t            limitTranslation:true,\n\t            markerClustering:true,\n\t            markerClusteringAnimation:100,\n\t            onFloorChanged:null,\n\t            onBlockMouseOver:null,\n\t            onBlockMouseOut:null,\n\t            onBlockClick:null\n\t        };\n\t        var opts = defaultOpts;\n\t        //==================== option verification ====================\n\t        if(userOpts){\n\t            if(userOpts.backgroundColor && typeof userOpts.backgroundColor == 'string'){\n\t                userOpts.backgroundColor = parseInt(userOpts.backgroundColor, 16);\n\t            }\n\t\n\t            //option check map\n\t            var optionCheckMap = {\n\t                backgroundColor:'number',   //implemented\n\t                tiltAngle:'number',   //implemented\n\t                zoomValue:'number',     //implemented\n\t                zoomStep:'number',\n\t                minZoom:'number',       //implemented\n\t                maxZoom:'number',       //implemented\n\t                zoomAnimation:'number',//implemented\n\t                zoomOnMouseWheel:'boolean', //implemented\n\t                pinchZoom:'boolean',    //implemented\n\t                twoFingerRotation:'boolean',    //implemented\n\t                zoomController:'boolean',   //implemented\n\t                zoomControllerCustomClass:'string', //implemented\n\t                zoomControllerPosition:'string',    //implemented\n\t                autoFit:'boolean',                  //implemented\n\t                floorController:'boolean',  //implemented\n\t                floorControllerCustomClass:'string',    //implemented\n\t                floorControllerPosition:'string',   //implemented\n\t                limitTranslation:'boolean',\n\t                markerClustering:'boolean',\n\t                markerClusteringAnimation:'number',\n\t                onFloorChanged:'function',\n\t                onBlockMouseOver:'function',\n\t                onBlockMouseOut:'function',\n\t                onBlockClick:'function'\n\t            };\n\t            var positionCheckMap = {'topleft':true,'topright':true,'bottomleft':true,'bottomright':true};\n\t            for(var key in userOpts){\n\t                if(optionCheckMap[key]){\n\t                    if(typeof userOpts[key] != optionCheckMap[key]){\n\t                        printErrType('OPTION');\n\t                        console.error('옵션 값(key:'+key+')의 타입이 잘못되었습니다.'+\n\t                            (typeof userOpts[key])+'=>'+optionCheckMap[key]+'로 바꾸어주세요');\n\t                    }\n\t                }else{\n\t                    printErrType('OPTION');\n\t                    console.error('사용할 수 없는 옵션 키 값('+key+')이 포함되어 있습니다.');\n\t                }\n\t                switch (key) {\n\t                    case 'tiltAngle':\n\t                        if(!(0<=userOpts['tiltAngle'] && userOpts['tiltAngle']<=90)){\n\t                            printErrType('OPTION');\n\t                            console.error('tiltAngle 0이상 90이하의 값만 사용할 수 있습니다. 현재값:'+userOpts['tiltAngle']);\n\t                        }\n\t                        break;\n\t                    case 'floorControllerPosition':\n\t                    case 'zoomControllerPosition':\n\t                        if(!positionCheckMap[userOpts[key]]){\n\t                            console.log('positionCheckFailed');\n\t                            printErrType('OPTION');\n\t                            console.error(key+' 의 옵션값 ('+userOpts[key]+') 은 사용할 수 없습니다.');\n\t                        }\n\t                        break;\n\t                }\n\t            }\n\t            //merge defaultOpts + userOpts => opts\n\t            $.extend(opts,userOpts);\n\t        }\n\t        //positioning helper\n\t        var controllerOffset = 20;\n\t        var controllerPositionCss = {\n\t            'topleft':{\n\t                'position':'absolute',\n\t                'top':controllerOffset,\n\t                'left':controllerOffset\n\t            },\n\t            'topright':{\n\t                'position':'absolute',\n\t                'top':controllerOffset,\n\t                'right':controllerOffset\n\t            },\n\t            'bottomleft':{\n\t                'position':'absolute',\n\t                'bottom':controllerOffset,\n\t                'left':controllerOffset\n\t            },\n\t            'bottomright':{\n\t                'position':'absolute',\n\t                'bottom':controllerOffset,\n\t                'right':controllerOffset\n\t            }\n\t        };\n\t        //==================== inject container DIV ====================\n\t        var $container = $('<div></div>');\n\t        $container.css({'position':'relative', 'width':'100%', 'height':'100%',\n\t            'background-color':'#'+opts.backgroundColor.toString(16)});\n\t        $parent.append($container);\n\t        //==================== initialize IndoorMap_core ====================\n\t        var IMC = __webpack_require__(17)($,window,$container,opts);\n\t\n\t        //==================== initialize controller UI ====================\n\t        var $zoomController = null;\n\t        var $zoomInBtn = null;\n\t        var $zoomOutBtn = null;\n\t        if(opts.zoomController){\n\t            var $zoomBtn = $('<div class=\"IndoorMap-zoomBtn\"></div>').css({'display':'block'});\n\t            $zoomInBtn = $zoomBtn.clone().text('+').addClass('IndoorMap-zoomInBtn');\n\t            $zoomOutBtn = $zoomBtn.clone().text('−').addClass('IndoorMap-zoomOutBtn');\n\t            $zoomController = $('<div></div>').append($zoomInBtn).append($zoomOutBtn);\n\t            if(opts.zoomControllerCustomClass){\n\t                $zoomInBtn.addClass(opts.zoomControllerCustomClass);\n\t                $zoomOutBtn.addClass(opts.zoomControllerCustomClass);\n\t            }\n\t            $zoomController.css(controllerPositionCss[opts.zoomControllerPosition]);\n\t            $container.append($zoomController);\n\t        }\n\t        //==================== subClass =====================\n\t        var icon = __webpack_require__(41)($,window);\n\t        var defaultIcon = icon();\n\t        var marker = __webpack_require__(42)($,window,defaultIcon);\n\t        //==================== functions to be consumed ====================\n\t        function load(mapData){\n\t            var loadPromise = new Promise(function(resolve,reject){\n\t                if(mapData.constructor == String){\n\t                    $.getJSON(mapData)\n\t                        .done(function(data){\n\t                            loadPromise = loadMapData(data,function(){resolve()});\n\t                        })\n\t                        .fail(function(data){\n\t                            if(data.statusText == 'OK'){\n\t                                printErrType('LOAD');\n\t                                console.error('JSON파일 로딩은 성공하였으나 파싱하는데 에러가 발생했습니다.(invalid JSON)');\n\t                            }else{\n\t                                printErrType('LOAD');\n\t                                console.error(\"'\"+mapData+\"' 를 로드할 수 없습니다.\")\n\t                            }\n\t                        });\n\t                }else{\n\t                    loadMapData(data,resolve);\n\t                }\n\t            });\n\t            return chainObjFactory(loadPromise);\n\t        }\n\t\n\t        var $floorController = null;\n\t        function loadMapData(mapData,cb){\n\t            IMC.load(mapData);\n\t            //---------- append floorController ----------\n\t            if(opts.floorController){\n\t                if(opts.floorController){\n\t                    $floorController = $('<div></div>').css(controllerPositionCss[opts.floorControllerPosition]);\n\t                    if(opts.floorControllerCustomClass) $floorController.addClass(opts.floorControllerCustomClass);\n\t                    $container.append($floorController);\n\t                }\n\t                var $floorBtn = $('<div class=\"IndoorMap-floorBtn\"></div>');\n\t                for(var i=0;i<mapData.floors.length;i++){\n\t                    var targetFloor = mapData.floors[i];\n\t                    var $newFloorBtn = $floorBtn.clone().text(targetFloor.name);\n\t                    $floorController.append($newFloorBtn);\n\t                    $newFloorBtn.on('mousedown',\n\t                        (function(floor){\n\t                            return function(e){\n\t                                IMC.changeFloor(floor);\n\t                            }\n\t                        })(targetFloor.floor)\n\t                    );\n\t                }\n\t            }\n\t            //---------- set eventHandlers ----------\n\t            var dragging = false;\n\t            var tabPossibility = 0;  //사용자가 tab or click을 의도했을 확률\n\t            var INITIAL_TAB_POSSIBILITY = 5;\n\t            //button handlers\n\t            $zoomInBtn.on('mousedown',function(e){\n\t                IMC.stepZoom(null,opts.zoomStep,opts.zoomAnimation);\n\t            });\n\t            $zoomOutBtn.on('mousedown',function(e){\n\t                IMC.stepZoom(null,-opts.zoomStep,opts.zoomAnimation);\n\t            });\n\t            //mouse translate\n\t            IMC.markerLayer.on('mousedown',function(e){\n\t                if(IMC.isPointInMap(e.pageX,e.pageY)){\n\t                    tabPossibility = INITIAL_TAB_POSSIBILITY;\n\t                    dragging = true;\n\t                    var mapPoint = IMC.pagePoint2Map(e.pageX,e.pageY);\n\t                    // IMC.test(e.pageX,e.pageY); //TODO must remove this test line\n\t                    IMC.interaction.init([mapPoint]);\n\t                    e.preventDefault();\n\t                }\n\t            });\n\t            IMC.markerLayer.on('mousemove',function(e){\n\t                if(dragging){\n\t                    tabPossibility--;\n\t                    var mapPoint = IMC.pagePoint2Map(e.pageX,e.pageY);\n\t                    IMC.interaction.interact([mapPoint]);\n\t                    e.preventDefault();\n\t                }else{\n\t                    //block interactions\n\t                    IMC.interactionWithBlocks('mousemove',IMC.pagePoint2Map(e.pageX,e.pageY));\n\t                }\n\t            });\n\t            $(window).on('mouseup',function(e){\n\t                if(dragging) {\n\t                    dragging = false;\n\t                    if(tabPossibility>0) IMC.interactionWithBlocks('click',IMC.pagePoint2Map(e.pageX,e.pageY));\n\t                }\n\t            });\n\t            //mouse zoom (scroll)\n\t            if(opts.zoomOnMouseWheel){\n\t                IMC.markerLayer.on('mousewheel',function(e){\n\t                    var event = e.originalEvent;\n\t                    if(event.wheelDelta){\n\t                        IMC.stepZoom(IMC.pagePoint2Map(e.pageX,e.pageY),event.wheelDelta/10);\n\t                        e.preventDefault();\n\t                    }\n\t                });\n\t            }\n\t            //touch translate, zoom, pinch\n\t            var prevFingersNum = 0;\n\t            IMC.markerLayer.on('touchstart',function(e){\n\t                var event = e.originalEvent;\n\t                var mapPoints = IMC.pageTouches2Maps(event.touches);\n\t\n\t                //tabPossibility control\n\t                var currFingersNum = mapPoints.length;\n\t                if(prevFingersNum == 0) tabPossibility = INITIAL_TAB_POSSIBILITY;\n\t                if(currFingersNum > 1) tabPossibility = 0;\n\t                prevFingersNum = currFingersNum;\n\t\n\t                IMC.interaction.init(mapPoints);\n\t                if(mapPoints.length>1) tabPossibility = 0;\n\t                e.preventDefault();\n\t            });\n\t            IMC.markerLayer.on('touchmove',function(e){\n\t                var event = e.originalEvent;\n\t                var mapPoints = IMC.pageTouches2Maps(event.touches);\n\t\n\t                //tabPossibility control\n\t                tabPossibility--;\n\t\n\t                IMC.interaction.interact(mapPoints);\n\t                e.preventDefault();\n\t            });\n\t            IMC.markerLayer.on('touchend',function(e){\n\t                var event = e.originalEvent;\n\t                var mapPoints = IMC.pageTouches2Maps(event.touches);\n\t\n\t                //tabPossibility control\n\t                var currFingersNum = mapPoints.length;\n\t                console.log(tabPossibility);\n\t                if(tabPossibility>0) IMC.interactionWithBlocks('click',IMC.pagePoint2Map(e.pageX,e.pageY));\n\t                prevFingersNum = currFingersNum;\n\t\n\t                IMC.interaction.init(mapPoints);\n\t                e.preventDefault();\n\t            });\n\t            cb();\n\t        }\n\t\n\t        function setMarker(position,opts){\n\t            //apply scaleFactor\n\t            for(var i=0;i<position.length;i++){\n\t                position[i] /= IMC.getCurrentMap().scaleFactor;\n\t            }\n\t            var newMarker = marker(position,opts);\n\t            IMC.addMarker(newMarker,opts);\n\t            return newMarker;\n\t        }\n\t        function removeMarker(marker){\n\t            IMC.removeMarker(marker);\n\t        }\n\t        function removeMarkersOn(floor){\n\t            IMC.removeMarkersOn(floor);\n\t        }\n\t        function removeAllMarkers(){\n\t            IMC.removeAllMarkers();\n\t        }\n\t        function setSpray(position, opts){\n\t            IMC.setSpray(position, opts);\n\t        }\n\t        function removeSpraysOn(floor){\n\t            IMC.removeSpraysOn(floor);\n\t        }\n\t        function removeAllSprays(){\n\t            IMC.removeAllSprays();\n\t        }\n\t        function setPolyline(points,opts){\n\t            //polyline의 points는 performance를 위해 IMC안에서 scaleFactor를 적용한다.\n\t            return IMC.setPolyline(points,opts);\n\t        }\n\t        function removePolyline(polyline){\n\t            IMC.removePolyline(polyline);\n\t        }\n\t        function removePolylinesOn(floor){\n\t            IMC.removePolylinesOn(floor);\n\t        }\n\t        function removeAllPolylines(){\n\t            IMC.removeAllPolylines();\n\t        }\n\t        function getBlock(id,floor){\n\t            return IMC.getBlock(id,floor);\n\t        }\n\t        function getBlocksOn(floor){\n\t            return IMC.getBlocksOn(floor);\n\t        }\n\t        function getAllBlocks(){\n\t            return IMC.getAllBlocks();\n\t        }\n\t        function setView(_zoomLevel, _center, _animation){\n\t            return new Promise(function(resolve,reject){\n\t                var centerVector = null;\n\t                if(_center){\n\t                    centerVector = IMC.Point(_center[0],_center[1]);\n\t                    //apply scaleFactor\n\t                    centerVector.multiplyScalar(1/IMC.getCurrentMap().scaleFactor);\n\t                }\n\t                IMC.setView(_zoomLevel, centerVector, _animation, resolve);\n\t            });\n\t        }\n\t        function setTiltAngle(_tiltAngle, _animation){\n\t            return new Promise(function(resolve,reject){\n\t                IMC.setTiltAngle(_tiltAngle, _animation, resolve);\n\t            });\n\t        }\n\t        function rotate(rotationAngle, center, animation){\n\t            if(center){\n\t                for(var i=0;i<center.length;i++){\n\t                    center[i]/=IMC.getCurrentMap().scaleFactor;\n\t                }\n\t            }else{\n\t                center = [null,null];\n\t            }\n\t            return new Promise(function(resolve,reject){\n\t                IMC.externalRotate(rotationAngle,center,animation,resolve);\n\t            });\n\t        }\n\t        //==================== helpers ====================\n\t        function printErrType(type){\n\t            switch(type){\n\t                case 'OPTION':\n\t                    console.error('--- IndoorMap() 옵션 에러 ---');\n\t                    break;\n\t                case 'LOAD':\n\t                    console.error('--- .load() 에러 ---');\n\t                    break;\n\t            }\n\t        }\n\t        var self = {\n\t            load:load,\n\t            setView:setView,\n\t            setTiltAngle:setTiltAngle,\n\t            rotate:rotate,\n\t            icon:icon,\n\t            setPolyline:setPolyline,\n\t            removePolyline:removePolyline,\n\t            removeAllPolylines:removeAllPolylines,\n\t            removePolylinesOn:removePolylinesOn,\n\t            setSpray:setSpray,\n\t            removeSpraysOn:removeSpraysOn,\n\t            removeAllSprays:removeAllSprays,\n\t            setMarker:setMarker,\n\t            removeMarker:removeMarker,\n\t            removeMarkersOn:removeMarkersOn,\n\t            removeAllMarkers:removeAllMarkers,\n\t            getBlock:getBlock,\n\t            getBlocksOn:getBlocksOn,\n\t            getAllBlocks:getAllBlocks\n\t        };\n\t        function chainObjFactory(promise){\n\t            var chainingObj = {};\n\t            var chainableMethods = ['load','setView','setTiltAngle','rotate'];\n\t            for(var i=0;i<chainableMethods.length;i++){\n\t                chainingObj[chainableMethods[i]] = (function(methodName){\n\t                    return function(){\n\t                        var args = arguments;\n\t                        var chainingPromise = new Promise(function(resolve,reject){\n\t                            promise.then(function(){\n\t                                var nextPromise = self[methodName].apply(self,args);\n\t                                nextPromise.then(function(){\n\t                                    resolve();\n\t                                });\n\t                            });\n\t                        });\n\t                        return chainObjFactory(chainingPromise);\n\t                    };\n\t                })(chainableMethods[i]);\n\t            }\n\t            chainingObj.done = function(cb){\n\t                var chainingPromise = new Promise(function(resolve,reject){\n\t                    promise.then(function(){\n\t                        cb.apply(self,[resolve]);\n\t                    });\n\t                });\n\t                return chainObjFactory(chainingPromise);\n\t            };\n\t            chainingObj.delay = function(delayTime){\n\t                var chainingPromise = new Promise(function(resolve,reject){\n\t                    promise.then(function(){\n\t                        setTimeout(function(){resolve();},delayTime);\n\t                    });\n\t                });\n\t                return chainObjFactory(chainingPromise);\n\t            };\n\t            return chainingObj;\n\t        }\n\t        return self;\n\t    };\n\t})(jQuery,window);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t(function() {\n\t    var lastTime = 0;\n\t    var vendors = ['ms', 'moz', 'webkit', 'o'];\n\t    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n\t        window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\n\t            || window[vendors[x]+'CancelRequestAnimationFrame'];\n\t    }\n\t\n\t    if (!window.requestAnimationFrame)\n\t        window.requestAnimationFrame = function(callback, element) {\n\t            var currTime = new Date().getTime();\n\t            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n\t                timeToCall);\n\t            lastTime = currTime + timeToCall;\n\t            return id;\n\t        };\n\t\n\t    if (!window.cancelAnimationFrame)\n\t        window.cancelAnimationFrame = function(id) {\n\t            clearTimeout(id);\n\t        };\n\t}());\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(3);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(5)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./IndoorMapStyle.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./IndoorMapStyle.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(4)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".IndoorMap-zoomBtn{background-color:#fff;border:1px solid #dcdcdc;cursor:pointer;color:#666;font-family:Arial;font-size:28px;padding:0 8px;text-decoration:none;text-shadow:0 1px 0 #fff;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.IndoorMap-zoomInBtn{border-bottom:none;border-radius:3px 3px 0 0}.IndoorMap-zoomOutBtn{border-radius:0 0 3px 3px}.IndoorMap-zoomBtn:hover{background-color:#f6f6f6}.IndoorMap-zoomBtn:active{box-shadow:inset 0 0 11px -1px hsla(0,0%,67%,.32)}.IndoorMap-floorBtn{background-color:#fff;border:1px solid #dcdcdc;border-bottom:none;cursor:pointer;color:#666;font-family:Arial;font-size:14px;font-weight:700;padding:6px 8px;text-decoration:none;text-shadow:0 1px 0 #fff;text-align:center;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.IndoorMap-floorBtn:first-child{border-radius:3px 3px 0 0}.IndoorMap-floorBtn:last-child{border-radius:0 0 3px 3px;border-bottom:1px solid #dcdcdc}.IndoorMap-floorBtn:hover{background-color:#f6f6f6}.IndoorMap-floorBtn:active{box-shadow:inset 0 0 11px -1px hsla(0,0%,67%,.32)}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(7)\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(8);\n\t__webpack_require__(10);\n\t__webpack_require__(11);\n\t__webpack_require__(12);\n\t__webpack_require__(13);\n\t__webpack_require__(15);\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(9);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\tvar BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(8);\n\t\n\tmodule.exports = Promise;\n\tPromise.prototype.done = function (onFulfilled, onRejected) {\n\t  var self = arguments.length ? this.then.apply(this, arguments) : this;\n\t  self.then(null, function (err) {\n\t    setTimeout(function () {\n\t      throw err;\n\t    }, 0);\n\t  });\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(8);\n\t\n\tmodule.exports = Promise;\n\tPromise.prototype['finally'] = function (f) {\n\t  return this.then(function (value) {\n\t    return Promise.resolve(f()).then(function () {\n\t      return value;\n\t    });\n\t  }, function (err) {\n\t    return Promise.resolve(f()).then(function () {\n\t      throw err;\n\t    });\n\t  });\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(8);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// This file contains then/promise specific extensions that are only useful\n\t// for node.js interop\n\t\n\tvar Promise = __webpack_require__(8);\n\tvar asap = __webpack_require__(14);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tPromise.denodeify = function (fn, argumentCount) {\n\t  if (\n\t    typeof argumentCount === 'number' && argumentCount !== Infinity\n\t  ) {\n\t    return denodeifyWithCount(fn, argumentCount);\n\t  } else {\n\t    return denodeifyWithoutCount(fn);\n\t  }\n\t}\n\t\n\tvar callbackFn = (\n\t  'function (err, res) {' +\n\t  'if (err) { rj(err); } else { rs(res); }' +\n\t  '}'\n\t);\n\tfunction denodeifyWithCount(fn, argumentCount) {\n\t  var args = [];\n\t  for (var i = 0; i < argumentCount; i++) {\n\t    args.push('a' + i);\n\t  }\n\t  var body = [\n\t    'return function (' + args.join(',') + ') {',\n\t    'var self = this;',\n\t    'return new Promise(function (rs, rj) {',\n\t    'var res = fn.call(',\n\t    ['self'].concat(args).concat([callbackFn]).join(','),\n\t    ');',\n\t    'if (res &&',\n\t    '(typeof res === \"object\" || typeof res === \"function\") &&',\n\t    'typeof res.then === \"function\"',\n\t    ') {rs(res);}',\n\t    '});',\n\t    '};'\n\t  ].join('');\n\t  return Function(['Promise', 'fn'], body)(Promise, fn);\n\t}\n\tfunction denodeifyWithoutCount(fn) {\n\t  var fnLength = Math.max(fn.length - 1, 3);\n\t  var args = [];\n\t  for (var i = 0; i < fnLength; i++) {\n\t    args.push('a' + i);\n\t  }\n\t  var body = [\n\t    'return function (' + args.join(',') + ') {',\n\t    'var self = this;',\n\t    'var args;',\n\t    'var argLength = arguments.length;',\n\t    'if (arguments.length > ' + fnLength + ') {',\n\t    'args = new Array(arguments.length + 1);',\n\t    'for (var i = 0; i < arguments.length; i++) {',\n\t    'args[i] = arguments[i];',\n\t    '}',\n\t    '}',\n\t    'return new Promise(function (rs, rj) {',\n\t    'var cb = ' + callbackFn + ';',\n\t    'var res;',\n\t    'switch (argLength) {',\n\t    args.concat(['extra']).map(function (_, index) {\n\t      return (\n\t        'case ' + (index) + ':' +\n\t        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +\n\t        'break;'\n\t      );\n\t    }).join(''),\n\t    'default:',\n\t    'args[argLength] = cb;',\n\t    'res = fn.apply(self, args);',\n\t    '}',\n\t    \n\t    'if (res &&',\n\t    '(typeof res === \"object\" || typeof res === \"function\") &&',\n\t    'typeof res.then === \"function\"',\n\t    ') {rs(res);}',\n\t    '});',\n\t    '};'\n\t  ].join('');\n\t\n\t  return Function(\n\t    ['Promise', 'fn'],\n\t    body\n\t  )(Promise, fn);\n\t}\n\t\n\tPromise.nodeify = function (fn) {\n\t  return function () {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    var callback =\n\t      typeof args[args.length - 1] === 'function' ? args.pop() : null;\n\t    var ctx = this;\n\t    try {\n\t      return fn.apply(this, arguments).nodeify(callback, ctx);\n\t    } catch (ex) {\n\t      if (callback === null || typeof callback == 'undefined') {\n\t        return new Promise(function (resolve, reject) {\n\t          reject(ex);\n\t        });\n\t      } else {\n\t        asap(function () {\n\t          callback.call(ctx, ex);\n\t        })\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tPromise.prototype.nodeify = function (callback, ctx) {\n\t  if (typeof callback != 'function') return this;\n\t\n\t  this.then(function (value) {\n\t    asap(function () {\n\t      callback.call(ctx, null, value);\n\t    });\n\t  }, function (err) {\n\t    asap(function () {\n\t      callback.call(ctx, err);\n\t    });\n\t  });\n\t}\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t// rawAsap provides everything we need except exception management.\n\tvar rawAsap = __webpack_require__(9);\n\t// RawTasks are recycled to reduce GC churn.\n\tvar freeTasks = [];\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tvar pendingErrors = [];\n\tvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\t\n\tfunction throwFirstError() {\n\t    if (pendingErrors.length) {\n\t        throw pendingErrors.shift();\n\t    }\n\t}\n\t\n\t/**\n\t * Calls a task as soon as possible after returning, in its own event, with priority\n\t * over other events like animation, reflow, and repaint. An error thrown from an\n\t * event will not interrupt, nor even substantially slow down the processing of\n\t * other events, but will be rather postponed to a lower priority event.\n\t * @param {{call}} task A callable object, typically a function that takes no\n\t * arguments.\n\t */\n\tmodule.exports = asap;\n\tfunction asap(task) {\n\t    var rawTask;\n\t    if (freeTasks.length) {\n\t        rawTask = freeTasks.pop();\n\t    } else {\n\t        rawTask = new RawTask();\n\t    }\n\t    rawTask.task = task;\n\t    rawAsap(rawTask);\n\t}\n\t\n\t// We wrap tasks with recyclable task objects.  A task object implements\n\t// `call`, just like a function.\n\tfunction RawTask() {\n\t    this.task = null;\n\t}\n\t\n\t// The sole purpose of wrapping the task is to catch the exception and recycle\n\t// the task object after its single use.\n\tRawTask.prototype.call = function () {\n\t    try {\n\t        this.task.call();\n\t    } catch (error) {\n\t        if (asap.onerror) {\n\t            // This hook exists purely for testing purposes.\n\t            // Its name will be periodically randomized to break any code that\n\t            // depends on its existence.\n\t            asap.onerror(error);\n\t        } else {\n\t            // In a web browser, exceptions are not fatal. However, to avoid\n\t            // slowing down the queue of pending tasks, we rethrow the error in a\n\t            // lower priority turn.\n\t            pendingErrors.push(error);\n\t            requestErrorThrow();\n\t        }\n\t    } finally {\n\t        this.task = null;\n\t        freeTasks[freeTasks.length] = this;\n\t    }\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(8);\n\t\n\tmodule.exports = Promise;\n\tPromise.enableSynchronous = function () {\n\t  Promise.prototype.isPending = function() {\n\t    return this.getState() == 0;\n\t  };\n\t\n\t  Promise.prototype.isFulfilled = function() {\n\t    return this.getState() == 1;\n\t  };\n\t\n\t  Promise.prototype.isRejected = function() {\n\t    return this.getState() == 2;\n\t  };\n\t\n\t  Promise.prototype.getValue = function () {\n\t    if (this._81 === 3) {\n\t      return this._65.getValue();\n\t    }\n\t\n\t    if (!this.isFulfilled()) {\n\t      throw new Error('Cannot get a value of an unfulfilled promise.');\n\t    }\n\t\n\t    return this._65;\n\t  };\n\t\n\t  Promise.prototype.getReason = function () {\n\t    if (this._81 === 3) {\n\t      return this._65.getReason();\n\t    }\n\t\n\t    if (!this.isRejected()) {\n\t      throw new Error('Cannot get a rejection reason of a non-rejected promise.');\n\t    }\n\t\n\t    return this._65;\n\t  };\n\t\n\t  Promise.prototype.getState = function () {\n\t    if (this._81 === 3) {\n\t      return this._65.getState();\n\t    }\n\t    if (this._81 === -1 || this._81 === -2) {\n\t      return 0;\n\t    }\n\t\n\t    return this._81;\n\t  };\n\t};\n\t\n\tPromise.disableSynchronous = function() {\n\t  Promise.prototype.isPending = undefined;\n\t  Promise.prototype.isFulfilled = undefined;\n\t  Promise.prototype.isRejected = undefined;\n\t  Promise.prototype.getValue = undefined;\n\t  Promise.prototype.getReason = undefined;\n\t  Promise.prototype.getState = undefined;\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = (function() {\n\t  var c = document.createElement('canvas');\n\t  try {\n\t    return !!window.WebGLRenderingContext\n\t      && (!!c.getContext('experimental-webgl') || !!c.getContext('webgl'));\n\t  } catch (e) {\n\t    return null;\n\t  }\n\t}());\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//dependencies\n\tvar THREE=__webpack_require__(18);\n\tvar TWEEN=__webpack_require__(19);\n\tvar Promise=__webpack_require__(6);\n\t//---------- sub classes ----------\n\t//sprayFactory needs maps, mapObjects\n\tvar sprayFactory = __webpack_require__(21);\n\tvar spray;\n\tvar blockFactory = __webpack_require__(22);\n\tvar block;\n\t\n\t\n\tmodule.exports = function($,window,$container,opts) {\n\t    //---------- animation queues ----------\n\t    var zoomTween = new TWEEN.Tween();\n\t    var translationTween = new TWEEN.Tween();\n\t    var rotationTween = new TWEEN.Tween();\n\t    var zoomTranTween = new TWEEN.Tween();\n\t    var tiltTween = new TWEEN.Tween();\n\t    function cancelTweens(){\n\t        zoomTween.stop();\n\t        translationTween.stop();\n\t        zoomTranTween.stop();\n\t        rotationTween.stop();\n\t        // tiltTween.stop();\n\t    }\n\t    //---------- renderer ----------\n\t    var renderer = new THREE.WebGLRenderer( );\n\t    renderer.setClearColor(opts.backgroundColor, 1);\n\t    //---------- canvas ----------\n\t    var $canvas = $(renderer.domElement);\n\t    $canvas.hide();\n\t    $container.append($canvas);\n\t    $canvas.addClass('IndoorMap-canvas');\n\t    var cOffset, cWidth, cHeight;\n\t    function fitCanvas(){\n\t        cWidth = $container.width();\n\t        cHeight = $container.height();\n\t        renderer.setSize(cWidth*2,cHeight*2);\n\t        $canvas.css('width',cWidth);\n\t        $canvas.css('height',cHeight);\n\t        cOffset = $canvas.offset();\n\t        camera.aspect = cWidth/cHeight;\n\t        needRepositionMarkers = true;\n\t        camera.updateProjectionMatrix();\n\t    }\n\t    //---------- markerLayer -----------\n\t    var $markerLayer = $('<div></div>').css({\n\t        'position':'absolute',\n\t        'top':'0',\n\t        'left':'0',\n\t        'width':'100%',\n\t        'height':'100%',\n\t        'overflow':'hidden'\n\t    });\n\t    $container.append($markerLayer);\n\t\n\t    //---------- scene -----------\n\t    var scene = new THREE.Scene();\n\t\n\t    //---------- camera ----------\n\t    var fov = 45;\n\t    var zoomValue = opts.zoomValue;\n\t    var camera = new THREE.PerspectiveCamera(fov,1600/1000,0.1,100000);\n\t    var tiltAngle = opts.tiltAngle*Math.PI/180;\n\t    var cameraDistance = 8000;\n\t    var lookAtVector = new THREE.Vector3(0,0,0);\n\t    var cameraViewVector = new THREE.Vector3(0,\n\t            -cameraDistance*Math.sin(tiltAngle),\n\t            -cameraDistance*Math.cos(tiltAngle));//camera->lookAt vector\n\t    camera.position.set(\n\t        lookAtVector.x-cameraViewVector.x,\n\t        lookAtVector.y-cameraViewVector.y,\n\t        lookAtVector.z-cameraViewVector.z\n\t    );\n\t    camera.lookAt(lookAtVector);\n\t\n\t    //lights\n\t    var aLight = new THREE.AmbientLight(0xffffff,0.5);\n\t    scene.add(aLight);\n\t    var dLight = new THREE.DirectionalLight(0xffffff,0.7);\n\t    dLight.position.set(1,1,-1);\n\t    scene.add(dLight);\n\t\n\t    //---------- load ----------\n\t    var maps = {};\n\t    var mapObjects = {};\n\t    var currentFloor = null;\n\t    var currentBlocksObject = null;\n\t    var defaultFloor = null;\n\t    var preProcessor = __webpack_require__(23);\n\t    //--------- sprayFactory creates spray class with maps, mapObjects ---------- delegation technique\n\t    spray = sprayFactory(maps,mapObjects,$);\n\t    block = blockFactory(maps,mapObjects,TWEEN);\n\t\n\t    function load(mapData){\n\t        //need correct canvas size to calculate camera aspect (r) in getInitialCameraDistance()\n\t        cWidth = $container.width();\n\t        cHeight = $container.height();\n\t        cOffset = $container.offset();\n\t        //-------------------------------------------------------------------------------------\n\t        mapData = preProcessor(mapData,$);  //$ is needed for $.extend dependncy\n\t        for(var i=0;i<mapData.floors.length;i++){\n\t            var floorData = mapData.floors[i];\n\t            floorData.polylines = [];\n\t            floorData.sprays = [];\n\t            floorData.blocksWithId = [];\n\t            floorData.markers = [];\n\t            floorData.markerContainer = $markerLayer.clone();\n\t            floorData.markerContainer.hide();\n\t            floorData.boundary = { minX:9999999999,minZ:9999999999,maxX:0,maxZ:0 };\n\t\n\t            $markerLayer.append(floorData.markerContainer);\n\t\n\t            maps[floorData.floor] = floorData;\n\t\n\t            mapObjects[floorData.floor] = new THREE.Object3D();\n\t\n\t            var blocksObject = new THREE.Object3D();\n\t            blocksObject.name = 'blocks';\n\t            mapObjects[floorData.floor].add(blocksObject);\n\t\n\t            var spraysObject = new THREE.Object3D();\n\t            spraysObject.name = 'sprays';\n\t            mapObjects[floorData.floor].add(spraysObject);\n\t\n\t            var polylinesObject = new THREE.Object3D();\n\t            polylinesObject.name = 'polylines';\n\t            mapObjects[floorData.floor].add(polylinesObject);\n\t\n\t            var blockDatas = floorData.blocks;\n\t\n\t            function resetBoundary(b,x,z){\n\t                b.minX=(x<b.minX)?x:b.minX;\n\t                b.minZ=(z<b.minZ)?z:b.minZ;\n\t                b.maxX=(x>b.maxX)?x:b.maxX;\n\t                b.maxZ=(z>b.maxZ)?z:b.maxZ;\n\t            }\n\t            //blocks\n\t            for(var j=0;j<blockDatas.length;j++){\n\t                var blockData = blockDatas[j];\n\t                var newBlock = block(j, blockData, floorData.floor, floorData);\n\t\n\t                //spray on block\n\t                var newSpray = null;\n\t                if(blockData.spray){\n\t                    var blockW = newBlock.boundary.maxX - newBlock.boundary.minX;\n\t                    var blockH = newBlock.boundary.maxZ - newBlock.boundary.minZ;\n\t                    var blockCenterX = newBlock.boundary.minX + blockW/2;\n\t                    var blockCenterZ = newBlock.boundary.minZ + blockH/2;\n\t                    var sprayX = (blockData.sprayOffset)? blockCenterX + blockData.sprayOffset[0] : blockCenterX;\n\t                    var sprayZ = (blockData.sprayOffset)? blockCenterZ + blockData.sprayOffset[1] : blockCenterZ;\n\t\n\t                    var sprayScale = 0.6;\n\t                    if(floorData.defaultSprayScale) sprayScale = floorData.defaultSprayScale;\n\t                    if(blockData.sprayScale) sprayScale = blockData.sprayScale;\n\t\n\t                    newSpray = spray([sprayX,sprayZ,newBlock.originalHeight],{\n\t                        image:blockData.spray,\n\t                        size:[blockW*sprayScale],\n\t                        floor:floorData.floor\n\t                    },currentFloor,true);\n\t\n\t                    newBlock.setSpray(newSpray);\n\t                    floorData.sprays.push(newSpray);\n\t                }\n\t\n\t                floorData.blocksWithId.push(newBlock);\n\t            }\n\t            floorData.initialCameraDistance = getInitialCameraDistance(floorData.boundary);\n\t            //basePlate\n\t            if(floorData.basePlate){\n\t                var boundary = floorData.boundary;\n\t                var basePlateWidth = boundary.maxX-boundary.minX\n\t                    +2*floorData.basePlateOffset;\n\t                var basePlateHeight = boundary.maxZ-boundary.minZ\n\t                    +2*floorData.basePlateOffset;\n\t                var basePlateGeom = new THREE.BoxGeometry(basePlateWidth,floorData.basePlateHeight,basePlateHeight);\n\t                var basePlateMaterial = new THREE.MeshLambertMaterial({color:parseInt(floorData.basePlateColor,16)});\n\t                var basePlate = new THREE.Mesh(basePlateGeom,basePlateMaterial);\n\t                basePlate.position.set(basePlateWidth/2+boundary.minX-floorData.basePlateOffset,\n\t                    -floorData.basePlateHeight/2,\n\t                    basePlateHeight/2+boundary.minZ-floorData.basePlateOffset);\n\t                mapObjects[floorData.floor].add(basePlate);\n\t            }\n\t        }\n\t        defaultFloor = mapData.defaultFloor;\n\t        changeFloor(defaultFloor);\n\t\n\t        resetCameraToInitialState();\n\t\n\t        render();\n\t        $canvas.show();\n\t        fitCanvas();\n\t        if(opts.autoFit) $(window).resize(function(e){fitCanvas()});\n\t    }\n\t    function getInitialCameraDistance(floorBoundary){\n\t        var w = floorBoundary.maxX-floorBoundary.minX; //floor width\n\t        var h = floorBoundary.maxZ-floorBoundary.minZ; //floor height\n\t        var r = cWidth/cHeight;\n\t        var theta = fov * Math.PI / 180;\n\t        return w/(2*r*Math.tan(theta/2))+h/2*Math.cos(tiltAngle);\n\t    }\n\t    //view를 floor중앙으로 설정 & zoomValue=100으로\n\t    function resetCameraToInitialState(){\n\t        var floorBoundary = maps[currentFloor].boundary;\n\t        var floorCenterVector = Point((floorBoundary.minX+floorBoundary.maxX)/2,\n\t            (floorBoundary.minZ+floorBoundary.maxZ)/2);\n\t        zoomValue = 100;\n\t        setView(zoomValue,floorCenterVector);\n\t    }\n\t    //==================== change Floor ====================\n\t    function changeFloor(newFloor){\n\t        if(currentFloor != newFloor){\n\t            if(currentFloor){\n\t                scene.remove(mapObjects[currentFloor]);\n\t                maps[currentFloor].markerContainer.hide();\n\t            }\n\t            currentFloor = newFloor;\n\t            currentBlocksObject = mapObjects[currentFloor].getObjectByName('blocks');\n\t            resetCameraToInitialState();\n\t            scene.add(mapObjects[currentFloor]);\n\t            maps[currentFloor].markerContainer.show();\n\t            if(opts.onFloorChanged) opts.onFloorChanged(currentFloor);\n\t            needRepositionMarkers = true;\n\t        }\n\t    }\n\t    //==================== transforms =====================\n\t    var needRepositionMarkers = false;\n\t    function resetDLight(_lookAtVector,_cameraViewVector){\n\t        var dLightVector = _cameraViewVector.clone().multiplyScalar(-1);\n\t        dLightVector.applyAxisAngle(yAxis,-Math.PI/6);\n\t        dLight.position.set(dLightVector.x, dLightVector.y, dLightVector.z);\n\t    }\n\t\n\t    function limitZoomValue(newZoomValue){\n\t        if(newZoomValue < opts.minZoom){\n\t            newZoomValue = opts.minZoom;\n\t        } else if (newZoomValue > opts.maxZoom){\n\t            newZoomValue = opts.maxZoom;\n\t        } else {\n\t            //do nothing\n\t        }\n\t        return newZoomValue;\n\t    }\n\t    function setView(newZoomValue,newLookAtVector,animation,cb){\n\t        if(!animation){\n\t            //animation disabled\n\t            if(newZoomValue){\n\t                //set camera distance\n\t                newZoomValue = limitZoomValue(newZoomValue);\n\t                zoomValue = newZoomValue;\n\t                cameraDistance = maps[currentFloor].initialCameraDistance / (zoomValue/100);\n\t                cameraViewVector.setLength(cameraDistance);\n\t                resetDLight(lookAtVector,cameraViewVector);\n\t                needRepositionMarkers = true;\n\t                camera.position.set(\n\t                    lookAtVector.x - cameraViewVector.x,\n\t                    lookAtVector.y - cameraViewVector.y,\n\t                    lookAtVector.z - cameraViewVector.z\n\t                );\n\t            }\n\t            if(newLookAtVector){\n\t                //set camera position & lookAt vector\n\t                lookAtVector = newLookAtVector;\n\t                limitTranslation(lookAtVector,currentFloor);\n\t                resetDLight(lookAtVector,cameraViewVector);\n\t                needRepositionMarkers = true;\n\t                camera.position.set(\n\t                    lookAtVector.x - cameraViewVector.x,\n\t                    lookAtVector.y - cameraViewVector.y,\n\t                    lookAtVector.z - cameraViewVector.z\n\t                );\n\t            }\n\t            if(cb) cb();\n\t        }else{\n\t            //animation enabled\n\t            cancelTweens();\n\t            if(newZoomValue && newLookAtVector){\n\t                //animate both\n\t                var newZoomValue = limitZoomValue(newZoomValue);\n\t                zoomTranTween = new TWEEN\n\t                    .Tween({\n\t                        zoomValue:zoomValue,\n\t                        x:lookAtVector.x, y:lookAtVector.y, z:lookAtVector.z\n\t                    })\n\t                    .to({\n\t                        zoomValue:newZoomValue,\n\t                        x:newLookAtVector.x, y:newLookAtVector.y, z:newLookAtVector.z\n\t                    },animation)\n\t                    .onUpdate(function(){\n\t                        setView(this.zoomValue, new THREE.Vector3(this.x, this.y, this.z));\n\t                        resetDLight(lookAtVector,cameraViewVector);\n\t                        needRepositionMarkers = true;\n\t                    });\n\t                if(cb) zoomTranTween.onComplete(cb);\n\t                if(cb) zoomTranTween.onStop(cb);\n\t                zoomTranTween.start();\n\t            }else if(newZoomValue){\n\t                //animate zoom\n\t                newZoomValue = limitZoomValue(newZoomValue);\n\t                zoomTween = new TWEEN.Tween({zoomValue:zoomValue})\n\t                    .to({zoomValue:newZoomValue},animation)\n\t                    .onUpdate(function(){\n\t                        setView(this.zoomValue);\n\t                        resetDLight(lookAtVector,cameraViewVector);\n\t                        needRepositionMarkers = true;\n\t                    });\n\t                if(cb) zoomTween.onComplete(cb);\n\t                if(cb) zoomTween.onStop(cb);\n\t                zoomTween.start();\n\t            }else if(newLookAtVector){\n\t                //animate translation\n\t                limitTranslation(newLookAtVector,currentFloor);\n\t                translationTween = new TWEEN.Tween({x:lookAtVector.x, y:lookAtVector.y, z:lookAtVector.z})\n\t                    .to({\n\t                        x:newLookAtVector.x,\n\t                        y:newLookAtVector.y,\n\t                        z:newLookAtVector.z\n\t                    },animation)\n\t                    .onUpdate(function(){\n\t                        setView(null,new THREE.Vector3(this.x, this.y, this.z));\n\t                        resetDLight(lookAtVector,cameraViewVector);\n\t                        needRepositionMarkers = true;\n\t                    });\n\t                if(cb) translationTween.onComplete(cb);\n\t                if(cb) translationTween.onStop(cb);\n\t                translationTween.start();\n\t            }\n\t        }\n\t    }\n\t    //setTiltAngle\n\t    function setTiltAngle(newTiltAngle, animation, cb){\n\t        cancelTweens();\n\t        var initialUnitVector = null;\n\t        var rotationVector = null;\n\t        var cameraViewVectorInv = cameraViewVector.clone().multiplyScalar(-1);\n\t        var cameraViewVectorLength = cameraViewVectorInv.length();\n\t\n\t        if(0<=newTiltAngle && newTiltAngle<=90){\n\t            if(newTiltAngle == 90) newTiltAngle = 89.98;\n\t            if(newTiltAngle == 0) newTiltAngle = 0.02;\n\t            if(tiltAngle==90){\n\t                initialUnitVector = new THREE.Vector3(0,0,1);\n\t                rotationVector = initialUnitVector.clone().applyAxisAngle(yAxis,-Math.PI/2);\n\t            }else{\n\t                initialUnitVector = new THREE.Vector3(cameraViewVectorInv.x, 0, cameraViewVectorInv.z).normalize();\n\t                rotationVector = initialUnitVector.clone().applyAxisAngle(yAxis,-Math.PI/2);\n\t            }\n\t            if(!animation){\n\t                cameraViewVectorInv = initialUnitVector\n\t                    .clone()\n\t                    .applyAxisAngle(rotationVector, newTiltAngle*Math.PI/180)\n\t                    .setLength(cameraViewVectorLength);\n\t                cameraViewVector = cameraViewVectorInv.multiplyScalar(-1);\n\t                camera.position.set(\n\t                    lookAtVector.x - cameraViewVector.x,\n\t                    lookAtVector.y - cameraViewVector.y,\n\t                    lookAtVector.z - cameraViewVector.z\n\t                );\n\t                camera.lookAt(lookAtVector);\n\t                resetDLight(lookAtVector,cameraViewVector);\n\t                needRepositionMarkers = true;\n\t            }else{\n\t                cameraViewVectorInv = initialUnitVector\n\t                    .clone()\n\t                    .applyAxisAngle(rotationVector, newTiltAngle*Math.PI/180)\n\t                    .setLength(cameraViewVectorLength);\n\t                var newCameraViewVector = cameraViewVectorInv.multiplyScalar(-1);\n\t                tiltTween = new TWEEN\n\t                    .Tween({\n\t                        x:cameraViewVector.x,\n\t                        y:cameraViewVector.y,\n\t                        z:cameraViewVector.z\n\t                    })\n\t                    .to({\n\t                        x:newCameraViewVector.x,\n\t                        y:newCameraViewVector.y,\n\t                        z:newCameraViewVector.z\n\t                    },animation)\n\t                    .onUpdate(function(){\n\t                        cameraViewVector.set(this.x,this.y,this.z);\n\t                        camera.position.set(\n\t                            lookAtVector.x - this.x,\n\t                            lookAtVector.y - this.y,\n\t                            lookAtVector.z - this.z\n\t                        );\n\t                        camera.lookAt(lookAtVector);\n\t                        resetDLight(lookAtVector,cameraViewVector);\n\t                        needRepositionMarkers = true;\n\t                    });\n\t                if(cb) tiltTween.onComplete(cb);\n\t                if(cb) tiltTween.onStop(cb);\n\t                tiltTween.start();\n\t            }\n\t        }else{\n\t            console.error('setTiltAngle()의 argument는 0이상 90이하의 값만 가질 수 있습니다.');\n\t        }\n\t    }\n\t\n\t    //translate\n\t    function translate(prev,curr){\n\t        var offset = prev.clone().sub(curr.clone()); //current -> previous\n\t        lookAtVector = lookAtVector.clone().add(offset);\n\t\n\t        limitTranslation(lookAtVector, currentFloor);\n\t\n\t        var cameraPositionVector = lookAtVector.clone().sub(cameraViewVector);\n\t        resetDLight(lookAtVector,cameraViewVector);\n\t        camera.position.x = cameraPositionVector.x;\n\t        camera.position.z = cameraPositionVector.z;\n\t        needRepositionMarkers = true;\n\t    }\n\t\n\t    //rotation\n\t    var yAxis = new THREE.Vector3(0,1,0);\n\t    function rotate(centerX, centerZ, rad){\n\t        if(!(centerX || centerZ)){\n\t            var centerVector = NDC2Intersection({x:0,y:0});\n\t            centerX = centerVector.x;\n\t            centerZ = centerVector.z;\n\t        }\n\t        var rotationCenter = new THREE.Vector3(centerX, 0, centerZ);\n\t        var offsetVector = lookAtVector.clone().sub(rotationCenter); //rotationCenter -> lookAt\n\t        var offsetVector_ = offsetVector.clone().applyAxisAngle(yAxis,-rad); //rotationCenter -> lookAt_\n\t        cameraViewVector.applyAxisAngle(yAxis,-rad);\n\t        lookAtVector.add(offsetVector.multiplyScalar(-1)).add(offsetVector_);\n\t        camera.position.x = lookAtVector.x - cameraViewVector.x;\n\t        camera.position.z = lookAtVector.z - cameraViewVector.z;\n\t        camera.lookAt(lookAtVector);\n\t        resetDLight(lookAtVector,cameraViewVector);\n\t        needRepositionMarkers = true;\n\t    }\n\t    function externalRotate(degree,center,animation,cb){\n\t        var rad = degree * Math.PI/180;\n\t        var centerX, centerZ;\n\t        if(center){\n\t            centerX = center[0]; centerZ = center[1];\n\t        }else{\n\t            centerX = null; centerZ = null;\n\t        }\n\t        if(animation && animation>0){\n\t            var prevRad = 0;\n\t            rotationTween = new TWEEN\n\t                .Tween({\n\t                    rad:0\n\t                })\n\t                .to({\n\t                    rad:rad\n\t                },animation)\n\t                .onUpdate(function(){\n\t                    var deltaRad = this.rad - prevRad;\n\t                    prevRad += deltaRad;\n\t                    rotate(centerX, centerZ, deltaRad);\n\t                });\n\t            if(cb) rotationTween.onComplete(cb);\n\t            if(cb) rotationTween.onStop(cb);\n\t            rotationTween.start();\n\t        }else{\n\t            rotate(centerX, centerZ, rad);\n\t            if(cb) cb();\n\t        }\n\t    }\n\t\n\t    //zoom\n\t    function zoom(centerX, centerZ, m){\n\t        var newZoomValue = m * zoomValue;\n\t        newZoomValue = limitZoomValue(newZoomValue);\n\t        m = newZoomValue/zoomValue;\n\t        zoomValue = newZoomValue;\n\t        var scaleCenterVector = new THREE.Vector3(centerX, 0, centerZ);\n\t        var offsetVector = lookAtVector.clone().sub(scaleCenterVector); //scaleCenterVector -> lookAtVector\n\t        lookAtVector.add(offsetVector.multiplyScalar(1/m-1));\n\t\n\t        limitTranslation(lookAtVector,currentFloor);\n\t\n\t        cameraViewVector.multiplyScalar(1/m);\n\t        resetDLight(lookAtVector,cameraViewVector);\n\t        camera.position.set(lookAtVector.x - cameraViewVector.x,lookAtVector.y - cameraViewVector.y, lookAtVector.z-cameraViewVector.z);\n\t        camera.lookAt(lookAtVector);\n\t        needRepositionMarkers = true;\n\t    }\n\t\n\t    //constraints translation\n\t    function limitTranslation(_lookAtVector, floor){\n\t        //constraints translation\n\t        if(opts.limitTranslation){\n\t            var floorBoundary = maps[floor].boundary;\n\t            if(_lookAtVector.x < floorBoundary.minX) _lookAtVector.x = floorBoundary.minX;\n\t            if(_lookAtVector.x > floorBoundary.maxX) _lookAtVector.x = floorBoundary.maxX;\n\t            if(_lookAtVector.z < floorBoundary.minZ) _lookAtVector.z = floorBoundary.minZ;\n\t            if(_lookAtVector.z > floorBoundary.maxZ) _lookAtVector.z = floorBoundary.maxZ;\n\t        }\n\t    }\n\t\n\t    //helper function for wheelZoom\n\t    function stepZoom(mapPoint, zoomStep, animation){\n\t        if(!mapPoint){\n\t            mapPoint = [cOffset.left+cWidth/2,cOffset.top+cHeight/2];\n\t        }\n\t        if(animation){\n\t            cancelTweens();\n\t            zoomTween = new TWEEN.Tween({zoomValue:zoomValue})\n\t                .to({zoomValue:zoomValue+zoomStep},animation)\n\t                .onUpdate(function(){\n\t                    setView(this.zoomValue);\n\t                }).start();\n\t        }else{\n\t            var newZoomValue = zoomValue + zoomStep;\n\t            var m = newZoomValue/zoomValue;\n\t            var zoomCenter = NDC2Intersection(map2NDC(mapPoint));\n\t            zoom(zoomCenter.x, zoomCenter.z, m);\n\t        }\n\t    }\n\t\n\t    //==================== interaction ====================\n\t    var interaction =(function(){\n\t        var prevPagePoints = [];\n\t\n\t        function init(points){\n\t            prevPagePoints = [];\n\t            for(var i=0;i<Math.min(2,points.length);i++){\n\t                prevPagePoints.push(points[i]);\n\t                // currPagePoints.push(NDC2Intersection(map2NDC(points[i])));\n\t            }\n\t        }\n\t        function interact(points){\n\t            if(prevPagePoints.length <= points.length){ // for safety\n\t                var currPagePoints = [];\n\t                for(var i=0;i<points.length;i++){\n\t                    currPagePoints.push(points[i]);\n\t                }\n\t                //calculate intersections\n\t                var prevIntersections = [];\n\t                var currIntersections = [];\n\t                for(var i=0;i<prevPagePoints.length;i++){\n\t                    prevIntersections.push(NDC2Intersection(map2NDC(prevPagePoints[i])));\n\t                    currIntersections.push(NDC2Intersection(map2NDC(currPagePoints[i])));\n\t                }\n\t                prevPagePoints = currPagePoints;\n\t                switch(prevPagePoints.length){\n\t                    case 1: //only translate\n\t                        translate(prevIntersections[0], currIntersections[0]);\n\t                        break;\n\t                    case 2: //translate & rotation & zoom\n\t                        //translate\n\t                        var prevCenter = prevIntersections[0].clone()\n\t                            .add(prevIntersections[1]).multiplyScalar(0.5);\n\t                        var currCenter = currIntersections[0].clone()\n\t                            .add(currIntersections[1]).multiplyScalar(0.5);\n\t\n\t                        translate(prevCenter, currCenter);\n\t\n\t                        var a = prevIntersections[1].clone().sub(prevIntersections[0]);\n\t                        var b = currIntersections[1].clone().sub(currIntersections[0]);\n\t                        var aLength = a.length();\n\t                        var bLength = b.length();\n\t\n\t                        if(aLength!=0 && bLength!=0){ //just for safety\n\t                            //rotation\n\t                            if(opts.twoFingerRotation){\n\t                                var na = a.clone().normalize();\n\t                                var nb = b.clone().normalize();\n\t                                var cosab = na.dot(nb);\n\t                                if(cosab>1) cosab = 1;\n\t                                else if(cosab<-1) cosab = -1;\n\t                                var theta;\n\t                                if(cosab == 1){\n\t                                    theta = 0;\n\t                                }else if(cosab == -1){\n\t                                    theta = Math.PI;\n\t                                }else{\n\t                                    theta = Math.acos(cosab);\n\t                                    var rotationAxis = na.cross(nb);\n\t                                    if(rotationAxis.y > 0){ //CCW\n\t                                        theta*=(+1); // for readibility\n\t                                    }else{\n\t                                        theta*=(-1);\n\t                                    }\n\t                                }\n\t                                rotate(prevCenter.x, prevCenter.z,theta);\n\t                            }\n\t\n\t                            //zoom\n\t                            if(opts.pinchZoom){\n\t                                zoom(prevCenter.x,prevCenter.z,bLength/aLength);\n\t                            }\n\t                        }\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t\n\t        return {\n\t            init:init,\n\t            interact:interact\n\t        }\n\t    })();\n\t    //==================== interactions with blocks ====================\n\t    var NULL_BLOCK = { blockObject:null };//smooth한 if문 처리를 위한 trick\n\t    var prevMouseOveredBlock = NULL_BLOCK;\n\t\n\t    function interactionWithBlocks(eventType,mapPoint){\n\t        raycaster.setFromCamera(map2NDC(mapPoint),camera);\n\t        var intersects = raycaster.intersectObject(currentBlocksObject,true);\n\t\n\t        switch(eventType){\n\t            case 'mousemove':\n\t                newMouseOveredBlock = NULL_BLOCK;\n\t                if(intersects.length>0){\n\t                    newMouseOveredBlock = intersects[0].object;\n\t                }\n\t                //onBlockMouseOut\n\t                if(prevMouseOveredBlock.blockObject && prevMouseOveredBlock.blockObject !== newMouseOveredBlock.blockObject){\n\t                    //prevMouseOveredBlock !== newMouseOveredBlock과 같이 직접 비교하지 못하는 이유는 색이나 높이 변경시 바뀌기 때문\n\t                    if(opts.onBlockMouseOut){\n\t                        opts.onBlockMouseOut.apply(prevMouseOveredBlock.blockObject,[prevMouseOveredBlock.data]);\n\t                    }\n\t                    if(prevMouseOveredBlock.blockObject.onMouseOut) {\n\t                        prevMouseOveredBlock.blockObject.onMouseOut();\n\t                    }\n\t                }\n\t                //onBlockMouseOver\n\t                if(newMouseOveredBlock.blockObject && newMouseOveredBlock.blockObject !== prevMouseOveredBlock.blockObject){\n\t                    if(opts.onBlockMouseOver){\n\t                        opts.onBlockMouseOver.apply(newMouseOveredBlock.blockObject,[newMouseOveredBlock.data]);\n\t                    }\n\t                    if(newMouseOveredBlock.blockObject.onMouseOver){\n\t                        newMouseOveredBlock.blockObject.onMouseOver();\n\t                    }\n\t                }\n\t                prevMouseOveredBlock = newMouseOveredBlock;\n\t                break;\n\t            case 'click':\n\t                if(intersects.length>0){\n\t                    var clickedBlock = intersects[0].object;\n\t                    if(opts.onBlockClick) {\n\t                        opts.onBlockClick.apply(clickedBlock.blockObject,[clickedBlock.data]);\n\t                    }\n\t                    if(clickedBlock.blockObject.onClick){\n\t                        clickedBlock.blockObject.onClick();\n\t                    }\n\t                }\n\t                break;\n\t        }\n\t    }\n\t    //==================== block manipulation ====================\n\t    function getBlock(id, floor){\n\t        floor = (floor)? floor : currentFloor;\n\t        var resultBlock = null;\n\t        for(var i=0; i<maps[floor].blocksWithId.length; i++){\n\t            if(maps[floor].blocksWithId[i].id == id){\n\t                resultBlock = maps[floor].blocksWithId[i];\n\t                break;\n\t            }\n\t        }\n\t        return resultBlock;\n\t    }\n\t    function getBlocksOn(floor){\n\t        floor = (floor)? floor : currentFloor;\n\t        return maps[floor].blocksWithId;\n\t    }\n\t    function getAllBlocks(){\n\t        var result = { };\n\t        for(var floor in maps){\n\t            result[floor] = maps[floor].blocksWithId;\n\t        }\n\t        return result;\n\t    }\n\t\n\t    //==================== calculate coordinates & converters ====================\n\t    var raycaster = new THREE.Raycaster;\n\t    //for calculating icon & marker position\n\t    function intersection2NDC(intersection){\n\t        var z = (intersection[2])?intersection[2]:0;\n\t        var intersectionVector = new THREE.Vector3(intersection[0],z,intersection[1]);\n\t        var NDCVector = intersectionVector.project(camera);\n\t        return [\n\t            (NDCVector.x + 1) / 2 * cWidth,\n\t            (-NDCVector.y+ 1) / 2 * cHeight\n\t        ]\n\t    }\n\t\n\t    //for calculating intersection points\n\t    var intersectionPlane = new THREE.Plane(new THREE.Vector3(0,1,0),0);\n\t    function isPointInMap(pageX,pageY){\n\t        return (cOffset.left <= pageX && pageX <= cOffset.left+cWidth)\n\t            && (cOffset.top <= pageY && pageY <= cOffset.top+cHeight);\n\t    }\n\t    function map2NDC(point){\n\t        return {\n\t            x:2*(point[0]/cWidth)-1,\n\t            y:1-2*(point[1]/cHeight)\n\t        };\n\t    }\n\t    function NDC2Intersection(point){\n\t        raycaster.setFromCamera(point,camera);\n\t        return raycaster.ray.intersectPlane(intersectionPlane);\n\t    }\n\t    //==================== markers ====================\n\t    function addMarker(marker,markerOpts){\n\t        marker.elem.css('visibility','hidden');\n\t        markerOpts = (markerOpts)?markerOpts:{};\n\t        var targetFloor = markerOpts.floor||currentFloor;\n\t        var targetMarkers = maps[targetFloor].markers;\n\t        if(targetMarkers.length == 0 || targetMarkers[targetMarkers.length-1].priority <= marker.priority){\n\t            targetMarkers.push(marker);\n\t        } else {\n\t            for(var i=0;i<targetMarkers.length;i++){ //for reclustering\n\t                var wasMarkerInserted = false;\n\t                if(marker.priority < targetMarkers[i].priority){\n\t                    targetMarkers.splice(i,0,marker);\n\t                    wasMarkerInserted = true;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        maps[targetFloor].markerContainer.append(marker.elem);\n\t        marker.resetAlign();\n\t        marker.repositionElem(intersection2NDC(marker.position));\n\t        reclusteringMarkers();\n\t        setTimeout((function(markerElem){\n\t            return function(){\n\t                markerElem.css('visibility', 'visible'); // seperation from DOM rendering stream\n\t            }\n\t        })(marker.elem),100);\n\t    }\n\t    function repositionMarkers(){\n\t        var currentMarkers = maps[currentFloor].markers;\n\t        for(var i=0;i<currentMarkers.length;i++){\n\t            var targetMarker = currentMarkers[i];\n\t            targetMarker.repositionElem(intersection2NDC(targetMarker.position));\n\t        }\n\t        reclusteringMarkers();\n\t        needRepositionMarkers = false;\n\t    }\n\t    function reclusteringMarkers(){\n\t        if(opts.markerClustering){\n\t            var currentMarkers = maps[currentFloor].markers;\n\t            var overlapCount = new Array(currentMarkers.length); //부모와의 중첩 count\n\t            overlapCount.fill(0);\n\t            for(var i=0;i<currentMarkers.length;i++){\n\t                var tm /*target marker*/ = currentMarkers[i]; // higher priority than counter marker\n\t                if(overlapCount[i] > 0 && !tm.forceToShow){\n\t                    if(!tm.hidden){\n\t                        if(opts.markerClusteringAnimation == 0){\n\t                            tm.elem.hide();\n\t                        }else{\n\t                            tm.elem.fadeOut(opts.markerClusteringAnimation);\n\t                        }\n\t                        tm.hidden = true;\n\t                    }\n\t                    continue;\n\t                }else{\n\t                    if(tm.hidden){\n\t                        if(opts.markerClusteringAnimation == 0){\n\t                            tm.elem.show();\n\t                        }else{\n\t                            tm.elem.fadeIn(opts.markerClusteringAnimation);\n\t                        }\n\t                        tm.hidden = false;\n\t                    }\n\t                    //calculate overlapCount\n\t                    var tb /*target boundary*/ = tm.getBoundary();\n\t                    for(var j=i+1;j<currentMarkers.length;j++){\n\t                        var cm /*counter marker*/ = currentMarkers[j]; // lower priority than target marker\n\t                        var cb /*counter boundary*/ = cm.getBoundary();\n\t                        if(!(cb.x2 < tb.x1 || tb.x2 < cb.x1 || cb.y2 < tb.y1 || tb.y2 < cb.y1)){ //if overlapped\n\t                            overlapCount[j]++;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    function removeMarker(marker){\n\t        for(var i in maps){\n\t            var markers = maps[i].markers;\n\t            for(var j=0;j<markers.length;j++){\n\t                if(markers[j] === marker){\n\t                    markers[j].elem.remove();\n\t                    markers.splice(j,1);\n\t                    return;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    function removeMarkersOn(floor){\n\t        floor = (floor)?floor:currentFloor;\n\t        if(maps[floor]){\n\t            var markers = maps[floor].markers;\n\t            while(markers.length != 0){\n\t                var marker = markers.pop();\n\t                marker.elem.remove();\n\t            }\n\t        }else{\n\t            console.error(\"removeMarkersOn 에러 : '\"+floor+\"'를 찾을 수 없습니다.\")\n\t        }\n\t    }\n\t    function removeAllMarkers(){\n\t        for(var i in maps){\n\t            var markers = maps[i].markers;\n\t            while(markers.length != 0){\n\t                var marker = markers.pop();\n\t                marker.elem.remove();\n\t            }\n\t        }\n\t    }\n\t    //==================== sprays ====================\n\t    function setSpray(position, userOpts){\n\t        var floor = (userOpts.floor)? userOpts.floor : currentFloor;\n\t        var newSpray = spray(position, userOpts, currentFloor);\n\t        maps[floor].sprays.push(newSpray);\n\t        return newSpray;\n\t    }\n\t    function removeSpray(spray){\n\t        if(spray && spray.sprayMesh){\n\t            for(var i in mapObjects){\n\t                mapObjects[i].getObjectByName('sprays').remove(spray.sprayMesh);\n\t            }\n\t        }\n\t    }\n\t    function removeSpraysOn(floor){\n\t        floor = (floor)? floor : currentFloor;\n\t        var sprays = maps[floor].sprays;\n\t        for(var i=0;i<sprays.length;i++){\n\t            mapObjects[floor].getObjectByName('sprays').remove(sprays[i].sprayMesh);\n\t        }\n\t    }\n\t    function removeAllSprays(){\n\t        for(var i in mapObjects){\n\t            var sprays = maps[i].sprays;\n\t            for(var j=0; j<sprays.length;j++){\n\t                mapObjects[i].getObjectByName('sprays').remove(sprays[j].sprayMesh);\n\t            }\n\t        }\n\t    }\n\t    //==================== polylines ====================\n\t    function setPolyline(points,userOpts){\n\t        var defaultOpts = {\n\t            width:5,\n\t            color:0xff0000,\n\t            floor:currentFloor\n\t        };\n\t        var polylineOpts = defaultOpts;\n\t        if(userOpts){\n\t            $.extend(polylineOpts,userOpts);\n\t        }\n\t        if(typeof polylineOpts.color == 'string') polylineOpts.color = parseInt(polylineOpts.color);\n\t        var lineMaterial = new THREE.LineBasicMaterial({\n\t            color:polylineOpts.color,\n\t            linewidth:polylineOpts.width,\n\t            linecap:'round',\n\t            linejoin:'round'\n\t        });\n\t        var lineGeom = new THREE.Geometry();\n\t        var scaleFactor = maps[polylineOpts.floor].scaleFactor;\n\t        for(var i=0;i<points.length;i++){\n\t            var point = points[i];\n\t            var height = 0.05;\n\t            //동시에 scaleFactor도 적용함.\n\t            if(point[2] && point[2]>0) height = point[2]/scaleFactor+0.05;\n\t            lineGeom.vertices.push(new THREE.Vector3(point[0]/scaleFactor,height,point[1]/scaleFactor));\n\t        }\n\t        var lineMesh = new THREE.Line(lineGeom, lineMaterial);\n\t        mapObjects[polylineOpts.floor].getObjectByName('polylines').add(lineMesh);\n\t        maps[polylineOpts.floor].polylines.push(lineMesh);\n\t\n\t        return lineMesh;\n\t    }\n\t    function removePolyline(polyline){\n\t        for(var i in mapObjects){\n\t            mapObjects[i].getObjectByName('polylines').remove(polyline);\n\t        }\n\t    }\n\t    function removePolylinesOn(floor){\n\t        floor = (floor)? floor : currentFloor;\n\t        var polylines = maps[floor].polylines;\n\t        for(var i=0; i<polylines.length; i++){\n\t            mapObjects[floor].getObjectByName('polylines').remove(polylines[i]);\n\t        }\n\t    }\n\t    function removeAllPolylines(){\n\t        for(var i in mapObjects){\n\t            var polylines = maps[i].polylines;\n\t            for(var j=0; j<polylines.length; j++){\n\t                mapObjects[i].getObjectByName('polylines').remove(polylines[j]);\n\t            }\n\t        }\n\t    }\n\t    //==================== helpers ====================\n\t    function render(){\n\t        TWEEN.update(); //for animations\n\t        renderer.render(scene,camera);\n\t        if(needRepositionMarkers){\n\t            repositionMarkers();\n\t        }\n\t        requestAnimationFrame(render);\n\t    }\n\t    function Point(x,z){\n\t        return new THREE.Vector3(x,0,z);\n\t    }\n\t    function getCanvasDOM(){\n\t        return $canvas;\n\t    }\n\t    function pagePoint2Map(pageX,pageY){\n\t        return [pageX - cOffset.left, pageY - cOffset.top];\n\t    }\n\t    function pageTouches2Maps(pageTouches){\n\t        var mapPoints = [];\n\t        for(var i=0;i<pageTouches.length;i++){\n\t            mapPoints.push(pagePoint2Map(pageTouches[i].pageX, pageTouches[i].pageY));\n\t        }\n\t        return mapPoints;\n\t    }\n\t    function getMaps(){\n\t        return maps;\n\t    }\n\t    function getCurrentMap(){\n\t        return maps[currentFloor];\n\t    }\n\t\n\t    return {\n\t        load:load,\n\t        isPointInMap:isPointInMap,\n\t        interaction:interaction,\n\t        interactionWithBlocks:interactionWithBlocks,\n\t        setView:setView,\n\t        setTiltAngle:setTiltAngle,\n\t        translate:translate,\n\t        rotate:rotate,\n\t        externalRotate:externalRotate,\n\t        zoom:zoom,\n\t        stepZoom:stepZoom,\n\t        getCanvasDOM:getCanvasDOM,\n\t        markerLayer:$markerLayer,\n\t        pagePoint2Map:pagePoint2Map,\n\t        pageTouches2Maps:pageTouches2Maps,\n\t        changeFloor:changeFloor,\n\t        addMarker:addMarker,\n\t        setSpray:setSpray,\n\t        removeSpray:removeSpray,\n\t        removeSpraysOn:removeSpraysOn,\n\t        removeAllSprays:removeAllSprays,\n\t        setPolyline:setPolyline,\n\t        removePolyline:removePolyline,\n\t        removePolylinesOn:removePolylinesOn,\n\t        removeAllPolylines:removeAllPolylines,\n\t        removeMarker:removeMarker,\n\t        removeMarkersOn:removeMarkersOn,\n\t        removeAllMarkers:removeAllMarkers,\n\t        getBlock:getBlock,\n\t        getBlocksOn:getBlocksOn,\n\t        getAllBlocks:getAllBlocks,\n\t        Point:Point,\n\t        getMaps:getMaps,\n\t        getCurrentMap:getCurrentMap\n\t    };\n\t};\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;// threejs.org/license\n\t'use strict';var THREE={REVISION:\"78\"}; true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):\"undefined\"!==typeof exports&&\"undefined\"!==typeof module&&(module.exports=THREE);void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});void 0===Function.prototype.name&&Object.defineProperty(Function.prototype,\"name\",{get:function(){return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1]}});\n\tvoid 0===Object.assign&&function(){Object.assign=function(a){if(void 0===a||null===a)throw new TypeError(\"Cannot convert undefined or null to object\");for(var b=Object(a),c=1;c<arguments.length;c++){var d=arguments[c];if(void 0!==d&&null!==d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(b[e]=d[e])}return b}}();\n\tObject.assign(THREE,{MOUSE:{LEFT:0,MIDDLE:1,RIGHT:2},CullFaceNone:0,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,FrontFaceDirectionCW:0,FrontFaceDirectionCCW:1,BasicShadowMap:0,PCFShadowMap:1,PCFSoftShadowMap:2,FrontSide:0,BackSide:1,DoubleSide:2,FlatShading:1,SmoothShading:2,NoColors:0,FaceColors:1,VertexColors:2,NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5,AddEquation:100,SubtractEquation:101,ReverseSubtractEquation:102,MinEquation:103,\n\tMaxEquation:104,ZeroFactor:200,OneFactor:201,SrcColorFactor:202,OneMinusSrcColorFactor:203,SrcAlphaFactor:204,OneMinusSrcAlphaFactor:205,DstAlphaFactor:206,OneMinusDstAlphaFactor:207,DstColorFactor:208,OneMinusDstColorFactor:209,SrcAlphaSaturateFactor:210,NeverDepth:0,AlwaysDepth:1,LessDepth:2,LessEqualDepth:3,EqualDepth:4,GreaterEqualDepth:5,GreaterDepth:6,NotEqualDepth:7,MultiplyOperation:0,MixOperation:1,AddOperation:2,NoToneMapping:0,LinearToneMapping:1,ReinhardToneMapping:2,Uncharted2ToneMapping:3,\n\tCineonToneMapping:4,UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307,RepeatWrapping:1E3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002,NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008,UnsignedByteType:1009,\n\tByteType:1010,ShortType:1011,UnsignedShortType:1012,IntType:1013,UnsignedIntType:1014,FloatType:1015,HalfFloatType:1025,UnsignedShort4444Type:1016,UnsignedShort5551Type:1017,UnsignedShort565Type:1018,AlphaFormat:1019,RGBFormat:1020,RGBAFormat:1021,LuminanceFormat:1022,LuminanceAlphaFormat:1023,RGBEFormat:THREE.RGBAFormat,DepthFormat:1026,RGB_S3TC_DXT1_Format:2001,RGBA_S3TC_DXT1_Format:2002,RGBA_S3TC_DXT3_Format:2003,RGBA_S3TC_DXT5_Format:2004,RGB_PVRTC_4BPPV1_Format:2100,RGB_PVRTC_2BPPV1_Format:2101,\n\tRGBA_PVRTC_4BPPV1_Format:2102,RGBA_PVRTC_2BPPV1_Format:2103,RGB_ETC1_Format:2151,LoopOnce:2200,LoopRepeat:2201,LoopPingPong:2202,InterpolateDiscrete:2300,InterpolateLinear:2301,InterpolateSmooth:2302,ZeroCurvatureEnding:2400,ZeroSlopeEnding:2401,WrapAroundEnding:2402,TrianglesDrawMode:0,TriangleStripDrawMode:1,TriangleFanDrawMode:2,LinearEncoding:3E3,sRGBEncoding:3001,GammaEncoding:3007,RGBEEncoding:3002,LogLuvEncoding:3003,RGBM7Encoding:3004,RGBM16Encoding:3005,RGBDEncoding:3006,BasicDepthPacking:3200,\n\tRGBADepthPacking:3201});THREE.Color=function(a,b,c){return void 0===b&&void 0===c?this.set(a):this.setRGB(a,b,c)};\n\tTHREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):\"number\"===typeof a?this.setHex(a):\"string\"===typeof a&&this.setStyle(a);return this},setScalar:function(a){this.b=this.g=this.r=a},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){0>d&&(d+=1);1<d&&(d-=1);return d<1/6?a+6*(c-a)*\n\td:.5>d?c:d<2/3?a+6*(c-a)*(2/3-d):a}return function(b,c,d){b=THREE.Math.euclideanModulo(b,1);c=THREE.Math.clamp(c,0,1);d=THREE.Math.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1/3),this.g=a(d,c,b),this.b=a(d,c,b-1/3));return this}}(),setStyle:function(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn(\"THREE.Color: Alpha component of \"+a+\" will be ignored.\")}var c;if(c=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(a)){var d=c[2];switch(c[1]){case \"rgb\":case \"rgba\":if(c=\n\t/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d))return this.r=Math.min(255,parseInt(c[1],10))/255,this.g=Math.min(255,parseInt(c[2],10))/255,this.b=Math.min(255,parseInt(c[3],10))/255,b(c[5]),this;if(c=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d))return this.r=Math.min(100,parseInt(c[1],10))/100,this.g=Math.min(100,parseInt(c[2],10))/100,this.b=Math.min(100,parseInt(c[3],10))/100,b(c[5]),this;break;case \"hsl\":case \"hsla\":if(c=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d)){var d=\n\tparseFloat(c[1])/360,e=parseInt(c[2],10)/100,f=parseInt(c[3],10)/100;b(c[5]);return this.setHSL(d,e,f)}}}else if(c=/^\\#([A-Fa-f0-9]+)$/.exec(a)){c=c[1];d=c.length;if(3===d)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===d)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}a&&0<a.length&&\n\t(c=THREE.ColorKeywords[a],void 0!==c?this.setHex(c):console.warn(\"THREE.Color: Unknown color \"+a));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);var c=0<b?1/b:1;this.r=Math.pow(a.r,c);this.g=Math.pow(a.g,c);this.b=Math.pow(a.b,\n\tc);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=\n\t(f+e)/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k/(e+f):k/(2-e-f);switch(e){case b:g=(c-d)/k+(c<d?6:0);break;case c:g=(d-b)/k+2;break;case d:g=(b-c)/k+4}g/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=\n\ta.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a,b){void 0===b&&(b=0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this},toArray:function(a,\n\tb){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a}};\n\tTHREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,\n\tdarkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,\n\tgrey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,\n\tlime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,\n\tpalegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,\n\ttomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};\n\tTHREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},\n\tcopy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error(\"THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2),k=a.order;\"XYZ\"===k?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"YXZ\"===\n\tk?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"ZXY\"===k?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"ZYX\"===k?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"YZX\"===k?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):\"XZY\"===k&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,\n\tb){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],k=b[6],b=b[10],l=c+f+b;0<l?(c=.5/Math.sqrt(l+1),this._w=.25/c,this._x=(k-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=\n\t.25*c,this._z=(g+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+k)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;return this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){this._x*=\n\t-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},\n\tmultiply:function(a,b){return void 0!==b?(console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},premultiply:function(a){return this.multiplyQuaternions(a,this)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,k=b._z,l=b._w;this._x=c*l+f*g+d*k-e*h;this._y=d*l+f*h+e*g-c*k;this._z=e*l+f*k+c*h-d*g;this._w=f*l-c*g-d*h-e*k;this.onChangeCallback();\n\treturn this},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.sqrt(1-g*g);if(.001>Math.abs(h))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var k=Math.atan2(h,g),g=Math.sin((1-b)*k)/h,h=Math.sin(b*\n\tk)/h;this._w=f*g+this._w*h;this._x=c*g+this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=\n\ta;return this},onChangeCallback:function(){}};\n\tObject.assign(THREE.Quaternion,{slerp:function(a,b,c,d){return c.copy(a).slerp(b,d)},slerpFlat:function(a,b,c,d,e,f,g){var h=c[d+0],k=c[d+1],l=c[d+2];c=c[d+3];d=e[f+0];var n=e[f+1],p=e[f+2];e=e[f+3];if(c!==e||h!==d||k!==n||l!==p){f=1-g;var m=h*d+k*n+l*p+c*e,q=0<=m?1:-1,r=1-m*m;r>Number.EPSILON&&(r=Math.sqrt(r),m=Math.atan2(r,m*q),f=Math.sin(f*m)/r,g=Math.sin(g*m)/r);q*=g;h=h*f+d*q;k=k*f+n*q;l=l*f+p*q;c=c*f+e*q;f===1-g&&(g=1/Math.sqrt(h*h+k*k+l*l+c*c),h*=g,k*=g,l*=g,c*=g)}a[b]=h;a[b+1]=k;a[b+2]=l;\n\ta[b+3]=c}});THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};\n\tTHREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(a){this.x=a},get height(){return this.y},set height(a){this.y=a},set:function(a,b){this.x=a;this.y=b;return this},setScalar:function(a){this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;\n\tcase 1:return this.y;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},\n\taddScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,\n\tthis.y*=a):this.y=this.x=0;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));return this},clampScalar:function(){var a,b;return function(c,d){void 0===\n\ta&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.multiplyScalar(Math.max(a,Math.min(b,c))/c)},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);\n\tthis.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var a=Math.atan2(this.y,this.x);0>a&&(a+=2*Math.PI);return a},\n\tdistanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},\n\ttoArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];return this},rotateAround:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;this.x=e*c-f*d+a.x;this.y=e*d+f*c+a.y;return this}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};\n\tTHREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setScalar:function(a){this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;\n\tcase 2:return this.z;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,\n\tb){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},\n\tmultiply:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&\n\tconsole.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\");void 0===a&&(a=new THREE.Quaternion);return this.applyQuaternion(a.setFromEuler(b))}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);return this.applyQuaternion(a.setFromAxisAngle(b,c))}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},\n\tapplyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=\n\ta.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},project:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),\n\ttransformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;return this.normalize()},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=\n\tMath.max(this.z,a.z);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.multiplyScalar(Math.max(a,Math.min(b,c))/c)},floor:function(){this.x=Math.floor(this.x);this.y=\n\tMath.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=\n\t-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=\n\t(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},cross:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;\n\tthis.z=c*g-d*f;return this},projectOnVector:function(a){var b=a.dot(this)/a.lengthSq();return this.copy(a).multiplyScalar(b)},projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/Math.sqrt(this.lengthSq()*a.lengthSq());return Math.acos(THREE.Math.clamp(a,\n\t-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setFromSpherical:function(a){var b=Math.sin(a.phi)*a.radius;this.x=b*Math.sin(a.theta);this.y=Math.cos(a.phi)*a.radius;this.z=b*Math.cos(a.theta);return this},setFromMatrixPosition:function(a){return this.setFromMatrixColumn(a,3)},setFromMatrixScale:function(a){var b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,\n\t1).length();a=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){if(\"number\"===typeof a){console.warn(\"THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).\");var c=a;a=b;b=c}return this.fromArray(a.elements,4*b)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===\n\tb&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];return this}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\n\tTHREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setScalar:function(a){this.w=this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error(\"index is out of range: \"+\n\ta);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);\n\tthis.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=\n\ta.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,this.y*=a,this.z*=a,this.w*=a):this.w=this.z=this.y=this.x=0;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=\n\ta[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],k=a[9];c=a[2];b=a[6];var l=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>\n\tMath.abs(k-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(k+b)&&.1>Math.abs(e+h+l-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;l=(l+1)/2;d=(d+g)/4;f=(f+c)/4;k=(k+b)/4;e>h&&e>l?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>l?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),b=d/c,d=k/c):.01>l?(c=b=.707106781,d=0):(d=Math.sqrt(l),b=f/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-k)/\n\ta;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+l-1)/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));\n\tthis.w=Math.max(a.w,Math.min(b.w,this.w));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=\n\tMath.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*\n\ta.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-\n\tthis.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+\n\tc;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];this.w=a.array[b+3];return this}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=\"XYZ YZX ZXY XZY YXZ ZYX\".split(\" \");THREE.Euler.DefaultOrder=\"XYZ\";\n\tTHREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,\n\tthis._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=THREE.Math.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],k=e[5],l=e[9],n=e[2],p=e[6],e=e[10];b=b||this._order;\"XYZ\"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-l,e),this._z=Math.atan2(-f,a)):(this._x=Math.atan2(p,k),this._z=0)):\"YXZ\"===b?(this._x=Math.asin(-d(l,-1,1)),.99999>Math.abs(l)?\n\t(this._y=Math.atan2(g,e),this._z=Math.atan2(h,k)):(this._y=Math.atan2(-n,a),this._z=0)):\"ZXY\"===b?(this._x=Math.asin(d(p,-1,1)),.99999>Math.abs(p)?(this._y=Math.atan2(-n,e),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(h,a))):\"ZYX\"===b?(this._y=Math.asin(-d(n,-1,1)),.99999>Math.abs(n)?(this._x=Math.atan2(p,e),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-f,k))):\"YZX\"===b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-n,a)):(this._x=\n\t0,this._y=Math.atan2(g,e))):\"XZY\"===b?(this._z=Math.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(p,k),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-l,e),this._y=0)):console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeRotationFromQuaternion(b);return this.setFromRotationMatrix(a,c,d)}}(),setFromVector3:function(a,\n\tb){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);return this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;\n\ta[b+3]=this._order;return a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};\n\tTHREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},\n\tat:function(a,b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);\n\tthis.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};\n\tTHREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);\n\treturn this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);\n\tthis.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>\n\tthis.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&\n\ta.max.equals(this.max)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};\n\tTHREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromArray:function(a){for(var b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.length;h<k;h+=3){var l=a[h],n=a[h+1],p=a[h+2];l<b&&(b=l);n<c&&(c=n);p<d&&(d=p);l>e&&(e=l);n>f&&(f=n);p>g&&(g=p)}this.min.set(b,c,d);this.max.set(e,f,g)},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=\n\tnew THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);this.makeEmpty();b.traverse(function(b){var e=b.geometry;if(void 0!==e)if(e instanceof THREE.Geometry)for(var f=e.vertices,e=0,g=f.length;e<g;e++)a.copy(f[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else if(e instanceof THREE.BufferGeometry&&void 0!==\n\te.attributes.position)for(f=e.attributes.position.array,e=0,g=f.length;e<g;e+=3)a.fromArray(f,e),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},\n\tcenter:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<\n\tthis.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<\n\tthis.min.z||a.min.z>this.max.z?!1:!0},intersectsSphere:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);this.clampPoint(b.center,a);return a.distanceToSquared(b.center)<=b.radius*b.radius}}(),intersectsPlane:function(a){var b,c;0<a.normal.x?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x);0<a.normal.y?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y);0<a.normal.z?(b+=a.normal.z*\n\tthis.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z);return b<=a.constant&&c>=a.constant},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),\n\tintersect:function(a){this.min.max(a.min);this.max.min(a.max);this.isEmpty()&&this.makeEmpty();return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){if(this.isEmpty())return this;a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);\n\ta[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&\n\ta.max.equals(this.max)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")};\n\tTHREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,k){var l=this.elements;l[0]=a;l[1]=d;l[2]=g;l[3]=b;l[4]=e;l[5]=h;l[6]=c;l[7]=f;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},setFromMatrix4:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]);\n\treturn this},applyToVector3Array:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.fromArray(b,c),a.applyMatrix3(this),a.toArray(b,c);return b}}(),applyToBuffer:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix3(this),b.setXYZ(a.x,a.y,a.z);return b}}(),\n\tmultiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,b){a instanceof THREE.Matrix4&&console.error(\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\");var c=a.elements,d=this.elements,e=c[0],f=c[1],g=c[2],h=c[3],k=c[4],l=c[5],n=c[6],p=c[7],\n\tc=c[8],m=c*k-l*p,q=l*n-c*h,r=p*h-k*n,s=e*m+f*q+g*r;if(0===s){if(b)throw Error(\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\");return this.identity()}s=1/s;d[0]=m*s;d[1]=(g*p-c*f)*s;d[2]=(l*f-g*k)*s;d[3]=q*s;d[4]=(c*e-g*n)*s;d[5]=(g*h-l*e)*s;d[6]=r*s;d[7]=(f*n-p*e)*s;d[8]=(k*e-f*h)*s;return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=\n\tb[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead.\");return this.toArray(a,b)},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose()},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(a,b){void 0===\n\ta&&(a=[]);void 0===b&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")};\n\tTHREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,k,l,n,p,m,q,r,s){var t=this.elements;t[0]=a;t[4]=b;t[8]=c;t[12]=d;t[1]=e;t[5]=f;t[9]=g;t[13]=h;t[2]=k;t[6]=l;t[10]=n;t[14]=p;t[3]=m;t[7]=q;t[11]=r;t[15]=s;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(a){this.elements.set(a.elements);return this},copyPosition:function(a){var b=this.elements;a=a.elements;\n\tb[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){a.setFromMatrixColumn(this,0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this},makeBasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);var c=this.elements,d=b.elements,e=1/a.setFromMatrixColumn(b,0).length(),f=1/a.setFromMatrixColumn(b,1).length();b=1/a.setFromMatrixColumn(b,\n\t2).length();c[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*b;c[9]=d[9]*b;c[10]=d[10]*b;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&console.error(\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if(\"XYZ\"===a.order){a=f*h;var k=f*e,l=c*h,n=c*e;b[0]=g*h;b[4]=\n\t-g*e;b[8]=d;b[1]=k+l*d;b[5]=a-n*d;b[9]=-c*g;b[2]=n-a*d;b[6]=l+k*d;b[10]=f*g}else\"YXZ\"===a.order?(a=g*h,k=g*e,l=d*h,n=d*e,b[0]=a+n*c,b[4]=l*c-k,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=k*c-l,b[6]=n+a*c,b[10]=f*g):\"ZXY\"===a.order?(a=g*h,k=g*e,l=d*h,n=d*e,b[0]=a-n*c,b[4]=-f*e,b[8]=l+k*c,b[1]=k+l*c,b[5]=f*h,b[9]=n-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):\"ZYX\"===a.order?(a=f*h,k=f*e,l=c*h,n=c*e,b[0]=g*h,b[4]=l*d-k,b[8]=a*d+n,b[1]=g*e,b[5]=n*d+a,b[9]=k*d-l,b[2]=-d,b[6]=c*g,b[10]=f*g):\"YZX\"===a.order?(a=f*g,k=f*\n\td,l=c*g,n=c*d,b[0]=g*h,b[4]=n-a*e,b[8]=l*e+k,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=k*e+l,b[10]=a-n*e):\"XZY\"===a.order&&(a=f*g,k=f*d,l=c*g,n=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+n,b[5]=f*h,b[9]=k*e-l,b[2]=l*e-k,b[6]=c*h,b[10]=n*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,k=e+e;a=c*g;var l=c*h,c=c*k,n=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(n+e);b[4]=l-f;b[8]=c+h;b[1]=l+\n\tf;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+n);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a,b,c;return function(d,e,f){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3);var g=this.elements;c.subVectors(d,e).normalize();0===c.lengthSq()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.lengthSq()&&(c.z+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;\n\tg[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],k=c[12],l=c[1],n=c[5],p=c[9],m=c[13],q=c[2],r=c[6],s=c[10],t=c[14],u=c[3],v=c[7],C=c[11],c=c[15],\n\tw=d[0],E=d[4],z=d[8],y=d[12],A=d[1],I=d[5],B=d[9],F=d[13],K=d[2],P=d[6],M=d[10],H=d[14],L=d[3],O=d[7],N=d[11],d=d[15];e[0]=f*w+g*A+h*K+k*L;e[4]=f*E+g*I+h*P+k*O;e[8]=f*z+g*B+h*M+k*N;e[12]=f*y+g*F+h*H+k*d;e[1]=l*w+n*A+p*K+m*L;e[5]=l*E+n*I+p*P+m*O;e[9]=l*z+n*B+p*M+m*N;e[13]=l*y+n*F+p*H+m*d;e[2]=q*w+r*A+s*K+t*L;e[6]=q*E+r*I+s*P+t*O;e[10]=q*z+r*B+s*M+t*N;e[14]=q*y+r*F+s*H+t*d;e[3]=u*w+v*A+C*K+c*L;e[7]=u*E+v*I+C*P+c*O;e[11]=u*z+v*B+C*M+c*N;e[15]=u*y+v*F+C*H+c*d;return this},multiplyToArray:function(a,b,\n\tc){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},applyToVector3Array:function(){var a;return function(b,c,d){void 0===a&&\n\t(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.fromArray(b,c),a.applyMatrix4(this),a.toArray(b,c);return b}}(),applyToBuffer:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix4(this),b.setXYZ(a.x,a.y,a.z);return b}}(),determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=\n\ta[5],h=a[9],k=a[13],l=a[2],n=a[6],p=a[10],m=a[14];return a[3]*(+e*h*n-d*k*n-e*g*p+c*k*p+d*g*m-c*h*m)+a[7]*(+b*h*m-b*k*p+e*f*p-d*f*m+d*k*l-e*h*l)+a[11]*(+b*k*n-b*g*m-e*f*n+c*f*m+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*n+b*g*p+d*f*n-c*f*p+c*h*l)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,b){console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead.\");\n\treturn this.toArray(a,b)},getPosition:function(){var a;return function(){void 0===a&&(a=new THREE.Vector3);console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\");return a.setFromMatrixColumn(this,3)}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[1],g=d[2],h=d[3],k=d[4],l=d[5],n=d[6],p=d[7],m=d[8],q=d[9],r=d[10],s=d[11],t=d[12],\n\tu=d[13],v=d[14],d=d[15],C=q*v*p-u*r*p+u*n*s-l*v*s-q*n*d+l*r*d,w=t*r*p-m*v*p-t*n*s+k*v*s+m*n*d-k*r*d,E=m*u*p-t*q*p+t*l*s-k*u*s-m*l*d+k*q*d,z=t*q*n-m*u*n-t*l*r+k*u*r+m*l*v-k*q*v,y=e*C+f*w+g*E+h*z;if(0===y){if(b)throw Error(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");return this.identity()}y=1/y;c[0]=C*y;c[1]=(u*r*h-q*v*h-u*g*s+f*v*s+q*g*d-f*r*d)*y;c[2]=(l*v*h-u*n*h+u*g*p-f*v*p-l*g*d+f*n*d)*y;c[3]=\n\t(q*n*h-l*r*h-q*g*p+f*r*p+l*g*s-f*n*s)*y;c[4]=w*y;c[5]=(m*v*h-t*r*h+t*g*s-e*v*s-m*g*d+e*r*d)*y;c[6]=(t*n*h-k*v*h-t*g*p+e*v*p+k*g*d-e*n*d)*y;c[7]=(k*r*h-m*n*h+m*g*p-e*r*p-k*g*s+e*n*s)*y;c[8]=E*y;c[9]=(t*q*h-m*u*h-t*f*s+e*u*s+m*f*d-e*q*d)*y;c[10]=(k*u*h-t*l*h+t*f*p-e*u*p-k*f*d+e*l*d)*y;c[11]=(m*l*h-k*q*h-m*f*p+e*q*p+k*f*s-e*l*s)*y;c[12]=z*y;c[13]=(m*u*g-t*q*g+t*f*r-e*u*r-m*f*v+e*q*v)*y;c[14]=(t*l*g-k*u*g-t*f*n+e*u*n+k*f*v-e*l*v)*y;c[15]=(k*q*g-m*l*g+m*f*n-e*q*n-k*f*r+e*l*r)*y;return this},scale:function(a){var b=\n\tthis.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10]))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);\n\treturn this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,k=e*f,l=e*g;this.set(k*f+c,k*g-d*h,k*h+d*g,0,k*g+d*h,l*g+c,l*h-d*f,0,k*h-d*g,l*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,\n\t0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a,b;return function(c,d,e){void 0===a&&(a=new THREE.Vector3,b=new THREE.Matrix4);var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,l=1/k;b.elements[0]*=c;b.elements[1]*=c;\n\tb.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.DEG2RAD*a*.5);var e=\n\t-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=1/(b-a),k=1/(c-d),l=1/(f-e);g[0]=2*h;g[4]=0;g[8]=0;g[12]=-((b+a)*h);g[1]=0;g[5]=2*k;g[9]=0;g[13]=-((c+d)*k);g[2]=0;g[6]=0;g[10]=-2*l;g[14]=-((f+e)*l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},equals:function(a){var b=this.elements;a=a.elements;for(var c=0;16>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a){this.elements.set(a);return this},toArray:function(a,b){void 0===a&&(a=[]);\n\tvoid 0===b&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};\n\tTHREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},lookAt:function(a){this.direction.copy(a).sub(this.origin).normalize();return this},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,\n\ta));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceToSquared(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);\n\treturn a.distanceToSquared(b)}}(),distanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5);b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),k=-this.direction.dot(b),l=c.dot(this.direction),n=-c.dot(b),p=c.lengthSq(),m=Math.abs(1-k*k),q;0<m?(d=k*n-l,e=k*l-n,q=h*m,0<=d?e>=-q?e<=q?(h=1/m,d*=h,e*=h,k=d*(d+k*e+2*l)+e*(k*d+e+2*n)+p):(e=h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*\n\tn)+p):(e=-h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*n)+p):e<=-q?(d=Math.max(0,-(-k*h+l)),e=0<d?-h:Math.min(Math.max(-h,-n),h),k=-d*d+e*(e+2*n)+p):e<=q?(d=0,e=Math.min(Math.max(-h,-n),h),k=e*(e+2*n)+p):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-n),h),k=-d*d+e*(e+2*n)+p)):(e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*n)+p);f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return k}}(),intersectSphere:function(){var a=new THREE.Vector3;return function(b,\n\tc){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;if(e>f)return null;f=Math.sqrt(f-e);e=d-f;d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),intersectsSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=\n\tthis.distanceToPlane(a);return null===c?null:this.at(c,b)},intersectsPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==\n\td)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectsBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,k){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);\n\tif(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e/f,k)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}};\n\tTHREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};\n\tTHREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},\n\tempty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},intersectsBox:function(a){return a.intersectsSphere(this)},intersectsPlane:function(a){return Math.abs(this.center.dot(a.normal)-a.constant)<=this.radius},clampPoint:function(a,b){var c=\n\tthis.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&\n\ta.radius===this.radius}};THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};\n\tTHREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],l=c[7],n=c[8],p=c[9],m=c[10],q=c[11],r=c[12],s=c[13],t=c[14],\n\tc=c[15];b[0].setComponents(f-a,l-g,q-n,c-r).normalize();b[1].setComponents(f+a,l+g,q+n,c+r).normalize();b[2].setComponents(f+d,l+h,q+p,c+s).normalize();b[3].setComponents(f-d,l-h,q-p,c-s).normalize();b[4].setComponents(f-e,l-k,q-m,c-t).normalize();b[5].setComponents(f+e,l+k,q+m,c+t).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere).applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),\n\tintersectsSprite:function(){var a=new THREE.Sphere;return function(b){a.center.set(0,0,0);a.radius=.7071067811865476;a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?\n\tc.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};\n\tTHREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,\n\tc);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,\n\tb){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0===f){if(0===this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),intersectsLine:function(a){var b=\n\tthis.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectsBox:function(a){return a.intersectsPlane(this)},intersectsSphere:function(a){return a.intersectsPlane(this)},coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Matrix3;return function(c,d){var e=this.coplanarPoint(a).applyMatrix4(c),f=d||b.getNormalMatrix(c),f=this.normal.applyMatrix3(f).normalize();\n\tthis.constant=-e.dot(f);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}};THREE.Spherical=function(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this};\n\tTHREE.Spherical.prototype={constructor:THREE.Spherical,set:function(a,b,c){this.radius=a;this.phi=b;this.theta=c;return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.radius.copy(a.radius);this.phi.copy(a.phi);this.theta.copy(a.theta);return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=\n\tMath.acos(THREE.Math.clamp(a.y/this.radius,-1,1)));return this}};\n\tTHREE.Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var a=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8===e||13===e||18===e||23===e?b[e]=\"-\":14===e?b[e]=\"4\":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19===e?d&3|8:d]);return b.join(\"\")}}(),clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,\n\td,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){console.warn(\"THREE.Math.random16() has been deprecated. Use Math.random() instead.\");return Math.random()},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*\n\t(.5-Math.random())},degToRad:function(a){return a*THREE.Math.DEG2RAD},radToDeg:function(a){return a*THREE.Math.RAD2DEG},isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},nearestPowerOfTwo:function(a){return Math.pow(2,Math.round(Math.log(a)/Math.LN2))},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};\n\tTHREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,k,l,n,p,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+\n\t2;l=this.points[c[0]];n=this.points[c[1]];p=this.points[c[2]];m=this.points[c[3]];h=g*g;k=g*h;d.x=b(l.x,n.x,p.x,m.x,g,h,k);d.y=b(l.y,n.y,p.y,m.y,g,h,k);d.z=b(l.z,n.z,p.z,m.z,g,h,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],k=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=\n\ta/c,d=this.getPoint(b),g.copy(d),k+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!==e&&(h[b]=k,e=b);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],k=new THREE.Vector3,m=this.getLength();h.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];g=Math.ceil(a*c/m.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),\n\th.push(k.copy(d).clone());h.push(k.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();\n\tTHREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new THREE.Vector3;if(0===l)return h.set(-2,-1,-1);l=1/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}();\n\tTHREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();\n\tTHREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,\n\tthis.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},\n\tclosestPointToPoint:function(){var a,b,c,d;return function(e,f){void 0===a&&(a=new THREE.Plane,b=[new THREE.Line3,new THREE.Line3,new THREE.Line3],c=new THREE.Vector3,d=new THREE.Vector3);var g=f||new THREE.Vector3,h=Infinity;a.setFromCoplanarPoints(this.a,this.b,this.c);a.projectPoint(e,c);if(!0===this.containsPoint(c))g.copy(c);else{b[0].set(this.a,this.b);b[1].set(this.b,this.c);b[2].set(this.c,this.a);for(var k=0;k<b.length;k++){b[k].closestPointToPoint(c,!0,d);var l=c.distanceToSquared(d);l<\n\th&&(h=l,g.copy(d))}}return g}}(),equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}};THREE.Interpolant=function(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c};\n\tTHREE.Interpolant.prototype={constructor:THREE.Interpolant,evaluate:function(a){var b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];a:{b:{c:{d:if(!(a<d)){for(var f=c+2;;){if(void 0===d){if(a<e)break d;this._cachedIndex=c=b.length;return this.afterEnd_(c-1,a,e)}if(c===f)break;e=d;d=b[++c];if(a<d)break b}d=b.length;break c}if(a>=e)break a;else{f=b[1];a<f&&(c=2,e=f);for(f=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=\n\tc;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,d=this.valueSize;a*=d;for(var e=0;e!==d;++e)b[e]=\n\tc[a+e];return b},interpolate_:function(a,b,c,d){throw Error(\"call to abstract method\");},intervalChanged_:function(a,b,c){}};Object.assign(THREE.Interpolant.prototype,{beforeStart_:THREE.Interpolant.prototype.copySampleValue_,afterEnd_:THREE.Interpolant.prototype.copySampleValue_});THREE.CubicInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0};\n\tTHREE.CubicInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.CubicInterpolant,DefaultSettings_:{endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case THREE.ZeroSlopeEnding:e=a;g=2*b-c;break;case THREE.WrapAroundEnding:e=d.length-2;g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case THREE.ZeroSlopeEnding:f=\n\ta;h=2*c-b;break;case THREE.WrapAroundEnding:f=1;h=c+d[1]-d[0];break;default:f=a-1,h=b}a=.5*(c-b);d=this.valueSize;this._weightPrev=a/(b-g);this._weightNext=a/(h-c);this._offsetPrev=e*d;this._offsetNext=f*d},interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g,k=this._offsetPrev,l=this._offsetNext,n=this._weightPrev,p=this._weightNext,m=(c-b)/(d-b);c=m*m;d=c*m;b=-n*d+2*n*c-n*m;n=(1+n)*d+(-1.5-2*n)*c+(-.5+n)*m+1;m=(-1-p)*d+(1.5+p)*c+.5*m;p=p*d-p*\n\tc;for(c=0;c!==g;++c)e[c]=b*f[k+c]+n*f[h+c]+m*f[a+c]+p*f[l+c];return e}});THREE.DiscreteInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)};THREE.DiscreteInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.DiscreteInterpolant,interpolate_:function(a,b,c,d){return this.copySampleValue_(a-1)}});THREE.LinearInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)};\n\tTHREE.LinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.LinearInterpolant,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g;b=(c-b)/(d-b);c=1-b;for(d=0;d!==g;++d)e[d]=f[h+d]*c+f[a+d]*b;return e}});THREE.QuaternionLinearInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)};\n\tTHREE.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.QuaternionLinearInterpolant,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;b=(c-b)/(d-b);for(c=a+g;a!==c;a+=4)THREE.Quaternion.slerpFlat(e,0,f,a-g,f,a,b);return e}});THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};\n\tTHREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=(performance||Date).now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=(performance||Date).now(),a=(b-this.oldTime)/1E3;this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};\n\tObject.assign(THREE.EventDispatcher.prototype,{addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==\n\tthis._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=0,e=b.length,d=0;d<e;d++)c[d]=b[d];for(d=0;d<e;d++)c[d].call(this,a)}}}});THREE.Layers=function(){this.mask=1};THREE.Layers.prototype={constructor:THREE.Layers,set:function(a){this.mask=1<<a},enable:function(a){this.mask|=1<<a},toggle:function(a){this.mask^=1<<a},disable:function(a){this.mask&=~(1<<a)},test:function(a){return 0!==(this.mask&a.mask)}};\n\t(function(a){function b(a,b){return a.distance-b.distance}function c(a,b,f,g){if(!1!==a.visible&&(a.raycast(b,f),!0===g)){a=a.children;g=0;for(var h=a.length;g<h;g++)c(a[g],b,f,!0)}}a.Raycaster=function(b,c,f,g){this.ray=new a.Ray(b,c);this.near=f||0;this.far=g||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\");return this.Points}}})};\n\ta.Raycaster.prototype={constructor:a.Raycaster,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){c instanceof a.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(c.matrixWorld),this.ray.direction.set(b.x,b.y,.5).unproject(c).sub(this.ray.origin).normalize()):c instanceof a.OrthographicCamera?(this.ray.origin.set(b.x,b.y,(c.near+c.far)/(c.near-c.far)).unproject(c),this.ray.direction.set(0,0,-1).transformDirection(c.matrixWorld)):console.error(\"THREE.Raycaster: Unsupported camera type.\")},\n\tintersectObject:function(a,e){var f=[];c(a,this,f,e);f.sort(b);return f},intersectObjects:function(a,e){var f=[];if(!1===Array.isArray(a))return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),f;for(var g=0,h=a.length;g<h;g++)c(a[g],this,f,e);f.sort(b);return f}}})(THREE);\n\tTHREE.Object3D=function(){Object.defineProperty(this,\"id\",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Object3D\";this.parent=null;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,\n\tvalue:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}});this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new THREE.Layers;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}};\n\tTHREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.DefaultMatrixAutoUpdate=!0;\n\tObject.assign(THREE.Object3D.prototype,THREE.EventDispatcher.prototype,{applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=\n\tnew THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);\n\tthis.position.add(a.multiplyScalar(c));return this}}(),translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),\n\tlookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",a),this;a instanceof THREE.Object3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:\"added\"}),this.children.push(a)):console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",\n\ta);return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=null,a.dispatchEvent({type:\"removed\"}),this.children.splice(b,1))},getObjectById:function(a){return this.getObjectByProperty(\"id\",a)},getObjectByName:function(a){return this.getObjectByProperty(\"name\",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,\n\tb);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new THREE.Vector3;this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){c=c||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,\n\tthis.rotation.order,!1)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;return function(c){c=c||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==\n\tthis.visible){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,\n\tthis.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=void 0===a||\"\"===a,d={};c&&(a={geometries:{},materials:{},textures:{},images:{}},d.metadata={version:4.4,type:\"Object\",generator:\"Object3D.toJSON\"});var e={};e.uuid=this.uuid;e.type=this.type;\"\"!==this.name&&(e.name=this.name);\"{}\"!==JSON.stringify(this.userData)&&\n\t(e.userData=this.userData);!0===this.castShadow&&(e.castShadow=!0);!0===this.receiveShadow&&(e.receiveShadow=!0);!1===this.visible&&(e.visible=!1);e.matrix=this.matrix.toArray();void 0!==this.geometry&&(void 0===a.geometries[this.geometry.uuid]&&(a.geometries[this.geometry.uuid]=this.geometry.toJSON(a)),e.geometry=this.geometry.uuid);void 0!==this.material&&(void 0===a.materials[this.material.uuid]&&(a.materials[this.material.uuid]=this.material.toJSON(a)),e.material=this.material.uuid);if(0<this.children.length){e.children=\n\t[];for(var f=0;f<this.children.length;f++)e.children.push(this.children[f].toJSON(a).object)}if(c){var c=b(a.geometries),f=b(a.materials),g=b(a.textures);a=b(a.images);0<c.length&&(d.geometries=c);0<f.length&&(d.materials=f);0<g.length&&(d.textures=g);0<a.length&&(d.images=a)}d.object=e;return d},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){void 0===b&&(b=!0);this.name=a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);\n\tthis.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));if(!0===b)for(var c=0;c<a.children.length;c++)this.add(a.children[c].clone());return this}});THREE.Object3DIdCount=0;\n\tTHREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=Array.isArray(d)?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0};\n\tTHREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();b=0;for(c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}};\n\tTHREE.BufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.array=a;this.itemSize=b;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0;this.normalized=!0===c};\n\tTHREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(a){!0===a&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);\n\treturn this},copyColorsArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\",d),f=new THREE.Color);b[c++]=f.r;b[c++]=f.g;b[c++]=f.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];b[c++]=f.a;b[c++]=f.b;b[c++]=f.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",\n\td),f=new THREE.Vector2);b[c++]=f.x;b[c++]=f.y}return this},copyVector3sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",d),f=new THREE.Vector3);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z}return this},copyVector4sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",d),f=new THREE.Vector4);\n\tb[c++]=f.x;b[c++]=f.y;b[c++]=f.z;b[c++]=f.w}return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,b){this.array[a*this.itemSize]=b;return this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*\n\tthis.itemSize+3]},setW:function(a,b){this.array[a*this.itemSize+3]=b;return this},setXY:function(a,b,c){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},clone:function(){return(new this.constructor).copy(this)}};\n\tTHREE.Int8Attribute=function(a,b){return new THREE.BufferAttribute(new Int8Array(a),b)};THREE.Uint8Attribute=function(a,b){return new THREE.BufferAttribute(new Uint8Array(a),b)};THREE.Uint8ClampedAttribute=function(a,b){return new THREE.BufferAttribute(new Uint8ClampedArray(a),b)};THREE.Int16Attribute=function(a,b){return new THREE.BufferAttribute(new Int16Array(a),b)};THREE.Uint16Attribute=function(a,b){return new THREE.BufferAttribute(new Uint16Array(a),b)};\n\tTHREE.Int32Attribute=function(a,b){return new THREE.BufferAttribute(new Int32Array(a),b)};THREE.Uint32Attribute=function(a,b){return new THREE.BufferAttribute(new Uint32Array(a),b)};THREE.Float32Attribute=function(a,b){return new THREE.BufferAttribute(new Float32Array(a),b)};THREE.Float64Attribute=function(a,b){return new THREE.BufferAttribute(new Float64Array(a),b)};\n\tTHREE.DynamicBufferAttribute=function(a,b){console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.\");return(new THREE.BufferAttribute(a,b)).setDynamic(!0)};THREE.InstancedBufferAttribute=function(a,b,c){THREE.BufferAttribute.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute;\n\tTHREE.InstancedBufferAttribute.prototype.copy=function(a){THREE.BufferAttribute.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBuffer=function(a,b){this.uuid=THREE.Math.generateUUID();this.array=a;this.stride=b;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0};\n\tTHREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(a){!0===a&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.stride=a.stride;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(var d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,\n\tb){void 0===b&&(b=0);this.array.set(a,b);return this},clone:function(){return(new this.constructor).copy(this)}};THREE.InstancedInterleavedBuffer=function(a,b,c){THREE.InterleavedBuffer.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype);THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer;\n\tTHREE.InstancedInterleavedBuffer.prototype.copy=function(a){THREE.InterleavedBuffer.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.data=a;this.itemSize=b;this.offset=c};\n\tTHREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");return this.array.length},get count(){return this.data.count},setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+2]=b;return this},\n\tsetW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;return this},setXYZ:function(a,\n\tb,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this}};\n\tTHREE.Geometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Geometry\";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=\n\tthis.verticesNeedUpdate=!1};\n\tObject.assign(THREE.Geometry.prototype,THREE.EventDispatcher.prototype,{applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();\n\tthis.normalsNeedUpdate=this.verticesNeedUpdate=!0;return this},rotateX:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,\n\tc,d){void 0===a&&(a=new THREE.Matrix4);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(a){function b(a,b,d,e){var f=void 0!==g?[n[a].clone(),n[b].clone(),n[d].clone()]:[],q=void 0!==h?[c.colors[a].clone(),\n\tc.colors[b].clone(),c.colors[d].clone()]:[];e=new THREE.Face3(a,b,d,f,q,e);c.faces.push(e);void 0!==k&&c.faceVertexUvs[0].push([p[a].clone(),p[b].clone(),p[d].clone()]);void 0!==l&&c.faceVertexUvs[1].push([m[a].clone(),m[b].clone(),m[d].clone()])}var c=this,d=null!==a.index?a.index.array:void 0,e=a.attributes,f=e.position.array,g=void 0!==e.normal?e.normal.array:void 0,h=void 0!==e.color?e.color.array:void 0,k=void 0!==e.uv?e.uv.array:void 0,l=void 0!==e.uv2?e.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=\n\t[]);for(var n=[],p=[],m=[],q=e=0;e<f.length;e+=3,q+=2)c.vertices.push(new THREE.Vector3(f[e],f[e+1],f[e+2])),void 0!==g&&n.push(new THREE.Vector3(g[e],g[e+1],g[e+2])),void 0!==h&&c.colors.push(new THREE.Color(h[e],h[e+1],h[e+2])),void 0!==k&&p.push(new THREE.Vector2(k[q],k[q+1])),void 0!==l&&m.push(new THREE.Vector2(l[q],l[q+1]));if(void 0!==d)if(f=a.groups,0<f.length)for(e=0;e<f.length;e++)for(var r=f[e],s=r.start,t=r.count,q=s,s=s+t;q<s;q+=3)b(d[q],d[q+1],d[q+2],r.materialIndex);else for(e=0;e<\n\td.length;e+=3)b(d[e],d[e+1],d[e+2]);else for(e=0;e<f.length/3;e+=3)b(e,e+1,e+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,b=this.boundingSphere.radius,b=0===b?1:1/\n\tb,c=new THREE.Matrix4;c.set(b,0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){void 0===a&&(a=!0);var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<\n\tc;b++)d[b]=new THREE.Vector3;if(a){var e,f,g,h=new THREE.Vector3,k=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),k.subVectors(e,f),h.cross(k),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=\n\tthis.faces[a],e=c.vertexNormals,3===e.length?(e[0].copy(d[c.a]),e[1].copy(d[c.b]),e[2].copy(d[c.c])):(e[0]=d[c.a].clone(),e[1]=d[c.b].clone(),e[2]=d[c.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<\n\tb;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var g=this.morphNormals[a].vertexNormals,h,k;c=0;for(d=this.faces.length;c<d;c++)h=new THREE.Vector3,k={a:new THREE.Vector3,\n\tb:new THREE.Vector3,c:new THREE.Vector3},e.push(h),g.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){console.warn(\"THREE.Geometry: .computeTangents() has been removed.\")},\n\tcomputeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(!1===a instanceof THREE.Geometry)console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",\n\ta);else{var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===c&&(c=0);void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var n=0,p=g.length;n<p;n++){var m=g[n].clone();void 0!==b&&m.applyMatrix4(b);f.push(m)}n=0;for(p=k.length;n<p;n++){var g=k[n],q,r=g.vertexNormals,s=g.vertexColors,m=new THREE.Face3(g.a+e,g.b+e,g.c+e);m.normal.copy(g.normal);void 0!==d&&m.normal.applyMatrix3(d).normalize();b=0;for(f=r.length;b<\n\tf;b++)q=r[b].clone(),void 0!==d&&q.applyMatrix3(d).normalize(),m.vertexNormals.push(q);m.color.copy(g.color);b=0;for(f=s.length;b<f;b++)q=s[b],m.vertexColors.push(q.clone());m.materialIndex=g.materialIndex+c;h.push(m)}n=0;for(p=a.length;n<p;n++)if(c=a[n],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());l.push(d)}}},mergeMesh:function(a){!1===a instanceof THREE.Mesh?console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",a):(a.matrixAutoUpdate&&a.updateMatrix(),\n\tthis.merge(a.geometry,a.matrix))},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+\"_\"+Math.round(d.y*e)+\"_\"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(g=this.faces.length;f<g;f++)for(e=this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]===e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,\n\t1),c=0,g=this.faceVertexUvs.length;c<g;c++)this.faceVertexUvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return f},sortFacesByMaterialIndex:function(){for(var a=this.faces,b=a.length,c=0;c<b;c++)a[c]._id=c;a.sort(function(a,b){return a.materialIndex-b.materialIndex});var d=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f,g;d&&d.length===b&&(f=[]);e&&e.length===b&&(g=[]);for(c=0;c<b;c++){var h=a[c]._id;f&&f.push(d[h]);g&&g.push(e[h])}f&&(this.faceVertexUvs[0]=f);g&&(this.faceVertexUvs[1]=\n\tg)},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==l[b])return l[b];l[b]=k.length/3;k.push(a.x,a.y,a.z);return l[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==p[b])return p[b];p[b]=n.length;n.push(a.getHex());return p[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==q[b])return q[b];q[b]=m.length/2;m.push(a.x,a.y);return q[b]}var e={metadata:{version:4.4,type:\"Geometry\",\n\tgenerator:\"Geometry.toJSON\"}};e.uuid=this.uuid;e.type=this.type;\"\"!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},n=[],p={},m=[],q={};for(g=0;g<this.faces.length;g++){var r=this.faces[g],s=void 0!==this.faceVertexUvs[0][g],t=0<r.normal.length(),u=0<r.vertexNormals.length,v=1!==r.color.r||1!==r.color.g||1!==r.color.b,\n\tC=0<r.vertexColors.length,w=0,w=a(w,0,0),w=a(w,1,!0),w=a(w,2,!1),w=a(w,3,s),w=a(w,4,t),w=a(w,5,u),w=a(w,6,v),w=a(w,7,C);h.push(w);h.push(r.a,r.b,r.c);h.push(r.materialIndex);s&&(s=this.faceVertexUvs[0][g],h.push(d(s[0]),d(s[1]),d(s[2])));t&&h.push(b(r.normal));u&&(t=r.vertexNormals,h.push(b(t[0]),b(t[1]),b(t[2])));v&&h.push(c(r.color));C&&(r=r.vertexColors,h.push(c(r[0]),c(r[1]),c(r[2])))}e.data={};e.data.vertices=f;e.data.normals=k;0<n.length&&(e.data.colors=n);0<m.length&&(e.data.uvs=[m]);e.data.faces=\n\th;return e},clone:function(){return(new THREE.Geometry).copy(this)},copy:function(a){this.vertices=[];this.faces=[];this.faceVertexUvs=[[]];for(var b=a.vertices,c=0,d=b.length;c<d;c++)this.vertices.push(b[c].clone());b=a.faces;c=0;for(d=b.length;c<d;c++)this.faces.push(b[c].clone());c=0;for(d=a.faceVertexUvs.length;c<d;c++){b=a.faceVertexUvs[c];void 0===this.faceVertexUvs[c]&&(this.faceVertexUvs[c]=[]);for(var e=0,f=b.length;e<f;e++){for(var g=b[e],h=[],k=0,l=g.length;k<l;k++)h.push(g[k].clone());\n\tthis.faceVertexUvs[c].push(h)}}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}});THREE.GeometryIdCount=0;\n\tTHREE.DirectGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"DirectGeometry\";this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1};\n\tObject.assign(THREE.DirectGeometry.prototype,THREE.EventDispatcher.prototype,{computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn(\"THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.\")},computeVertexNormals:function(){console.warn(\"THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.\")},computeGroups:function(a){var b,\n\tc=[],d;a=a.faces;for(var e=0;e<a.length;e++){var f=a[e];f.materialIndex!==d&&(d=f.materialIndex,void 0!==b&&(b.count=3*e-b.start,c.push(b)),b={start:3*e,materialIndex:d})}void 0!==b&&(b.count=3*e-b.start,c.push(b));this.groups=c},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,e=d[0]&&0<d[0].length,f=d[1]&&0<d[1].length,g=a.morphTargets,h=g.length,k;if(0<h){k=[];for(var l=0;l<h;l++)k[l]=[];this.morphTargets.position=k}var n=a.morphNormals,p=n.length,m;if(0<p){m=[];for(l=0;l<\n\tp;l++)m[l]=[];this.morphTargets.normal=m}for(var q=a.skinIndices,r=a.skinWeights,s=q.length===c.length,t=r.length===c.length,l=0;l<b.length;l++){var u=b[l];this.vertices.push(c[u.a],c[u.b],c[u.c]);var v=u.vertexNormals;3===v.length?this.normals.push(v[0],v[1],v[2]):(v=u.normal,this.normals.push(v,v,v));v=u.vertexColors;3===v.length?this.colors.push(v[0],v[1],v[2]):(v=u.color,this.colors.push(v,v,v));!0===e&&(v=d[0][l],void 0!==v?this.uvs.push(v[0],v[1],v[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \",\n\tl),this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)));!0===f&&(v=d[1][l],void 0!==v?this.uvs2.push(v[0],v[1],v[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \",l),this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)));for(v=0;v<h;v++){var C=g[v].vertices;k[v].push(C[u.a],C[u.b],C[u.c])}for(v=0;v<p;v++)C=n[v].vertexNormals[l],m[v].push(C.a,C.b,C.c);s&&this.skinIndices.push(q[u.a],q[u.b],q[u.c]);t&&this.skinWeights.push(r[u.a],r[u.b],\n\tr[u.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}});\n\tTHREE.BufferGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"BufferGeometry\";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}};\n\tObject.assign(THREE.BufferGeometry.prototype,THREE.EventDispatcher.prototype,{getIndex:function(){return this.index},setIndex:function(a){this.index=a},addAttribute:function(a,b,c){if(!1===b instanceof THREE.BufferAttribute&&!1===b instanceof THREE.InterleavedBufferAttribute)console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.addAttribute(a,new THREE.BufferAttribute(b,c));else if(\"index\"===a)console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"),\n\tthis.setIndex(b);else return this.attributes[a]=b,this},getAttribute:function(a){return this.attributes[a]},removeAttribute:function(a){delete this.attributes[a];return this},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=b},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);b=this.attributes.normal;\n\tvoid 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this},rotateX:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;\n\treturn function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),\n\tcenter:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a instanceof THREE.Points||a instanceof THREE.Line){a=new THREE.Float32Attribute(3*b.vertices.length,3);var c=new THREE.Float32Attribute(3*b.colors.length,3);this.addAttribute(\"position\",a.copyVector3sArray(b.vertices));this.addAttribute(\"color\",c.copyColorsArray(b.colors));b.lineDistances&&b.lineDistances.length===b.vertices.length&&\n\t(a=new THREE.Float32Attribute(b.lineDistances.length,1),this.addAttribute(\"lineDistance\",a.copyArray(b.lineDistances)));null!==b.boundingSphere&&(this.boundingSphere=b.boundingSphere.clone());null!==b.boundingBox&&(this.boundingBox=b.boundingBox.clone())}else a instanceof THREE.Mesh&&b instanceof THREE.Geometry&&this.fromGeometry(b);return this},updateFromObject:function(a){var b=a.geometry;if(a instanceof THREE.Mesh){var c=b.__directGeometry;if(void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=\n\tb.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.groupsNeedUpdate=!1;b=c}!0===b.verticesNeedUpdate&&(c=this.attributes.position,void 0!==c&&(c.copyVector3sArray(b.vertices),c.needsUpdate=!0),b.verticesNeedUpdate=!1);!0===b.normalsNeedUpdate&&(c=this.attributes.normal,void 0!==c&&(c.copyVector3sArray(b.normals),\n\tc.needsUpdate=!0),b.normalsNeedUpdate=!1);!0===b.colorsNeedUpdate&&(c=this.attributes.color,void 0!==c&&(c.copyColorsArray(b.colors),c.needsUpdate=!0),b.colorsNeedUpdate=!1);b.uvsNeedUpdate&&(c=this.attributes.uv,void 0!==c&&(c.copyVector2sArray(b.uvs),c.needsUpdate=!0),b.uvsNeedUpdate=!1);b.lineDistancesNeedUpdate&&(c=this.attributes.lineDistance,void 0!==c&&(c.copyArray(b.lineDistances),c.needsUpdate=!0),b.lineDistancesNeedUpdate=!1);b.groupsNeedUpdate&&(b.computeGroups(a.geometry),this.groups=\n\tb.groups,b.groupsNeedUpdate=!1);return this},fromGeometry:function(a){a.__directGeometry=(new THREE.DirectGeometry).fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){var b=new Float32Array(3*a.vertices.length);this.addAttribute(\"position\",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.vertices));0<a.normals.length&&(b=new Float32Array(3*a.normals.length),this.addAttribute(\"normal\",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.normals)));\n\t0<a.colors.length&&(b=new Float32Array(3*a.colors.length),this.addAttribute(\"color\",(new THREE.BufferAttribute(b,3)).copyColorsArray(a.colors)));0<a.uvs.length&&(b=new Float32Array(2*a.uvs.length),this.addAttribute(\"uv\",(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs)));0<a.uvs2.length&&(b=new Float32Array(2*a.uvs2.length),this.addAttribute(\"uv2\",(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs2)));0<a.indices.length&&(b=new (65535<a.vertices.length?Uint32Array:Uint16Array)(3*a.indices.length),\n\tthis.setIndex((new THREE.BufferAttribute(b,1)).copyIndicesArray(a.indices)));this.groups=a.groups;for(var c in a.morphTargets){for(var b=[],d=a.morphTargets[c],e=0,f=d.length;e<f;e++){var g=d[e],h=new THREE.Float32Attribute(3*g.length,3);b.push(h.copyVector3sArray(g))}this.morphAttributes[c]=b}0<a.skinIndices.length&&(c=new THREE.Float32Attribute(4*a.skinIndices.length,4),this.addAttribute(\"skinIndex\",c.copyVector4sArray(a.skinIndices)));0<a.skinWeights.length&&(c=new THREE.Float32Attribute(4*a.skinWeights.length,\n\t4),this.addAttribute(\"skinWeight\",c.copyVector4sArray(a.skinWeights)));null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;void 0!==a?this.boundingBox.setFromArray(a):this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&\n\tconsole.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position;if(c){var c=c.array,d=this.boundingSphere.center;a.setFromArray(c);a.center(d);for(var e=0,f=0,g=c.length;f<g;f+=3)b.fromArray(c,f),e=Math.max(e,d.distanceToSquared(b));\n\tthis.boundingSphere.radius=Math.sqrt(e);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index,b=this.attributes,c=this.groups;if(b.position){var d=b.position.array;if(void 0===b.normal)this.addAttribute(\"normal\",new THREE.BufferAttribute(new Float32Array(d.length),3));else for(var e=b.normal.array,\n\tf=0,g=e.length;f<g;f++)e[f]=0;var e=b.normal.array,h,k,l,n=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3;if(a){a=a.array;0===c.length&&this.addGroup(0,a.length);for(var s=0,t=c.length;s<t;++s)for(f=c[s],g=f.start,h=f.count,f=g,g+=h;f<g;f+=3)h=3*a[f+0],k=3*a[f+1],l=3*a[f+2],n.fromArray(d,h),p.fromArray(d,k),m.fromArray(d,l),q.subVectors(m,p),r.subVectors(n,p),q.cross(r),e[h]+=q.x,e[h+1]+=q.y,e[h+2]+=q.z,e[k]+=q.x,e[k+1]+=q.y,e[k+2]+=q.z,e[l]+=q.x,\n\te[l+1]+=q.y,e[l+2]+=q.z}else for(f=0,g=d.length;f<g;f+=9)n.fromArray(d,f),p.fromArray(d,f+3),m.fromArray(d,f+6),q.subVectors(m,p),r.subVectors(n,p),q.cross(r),e[f]=q.x,e[f+1]=q.y,e[f+2]=q.z,e[f+3]=q.x,e[f+4]=q.y,e[f+5]=q.z,e[f+6]=q.x,e[f+7]=q.y,e[f+8]=q.z;this.normalizeNormals();b.normal.needsUpdate=!0}},merge:function(a,b){if(!1===a instanceof THREE.BufferGeometry)console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",a);else{void 0===b&&(b=0);var c=this.attributes,\n\td;for(d in c)if(void 0!==a.attributes[d])for(var e=c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},toNonIndexed:function(){if(null===this.index)return console.warn(\"THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.\"),this;var a=new THREE.BufferGeometry,\n\tb=this.index.array,c=this.attributes,d;for(d in c){for(var e=c[d],f=e.array,e=e.itemSize,g=new f.constructor(b.length*e),h=0,k=0,l=0,n=b.length;l<n;l++)for(var h=b[l]*e,p=0;p<e;p++)g[k++]=f[h++];a.addAttribute(d,new THREE.BufferAttribute(g,e))}return a},toJSON:function(){var a={metadata:{version:4.4,type:\"BufferGeometry\",generator:\"BufferGeometry.toJSON\"}};a.uuid=this.uuid;a.type=this.type;\"\"!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters,c;for(c in b)void 0!==\n\tb[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};var d=this.index;null!==d&&(b=Array.prototype.slice.call(d.array),a.data.index={type:d.array.constructor.name,array:b});d=this.attributes;for(c in d){var e=d[c],b=Array.prototype.slice.call(e.array);a.data.attributes[c]={itemSize:e.itemSize,type:e.array.constructor.name,array:b,normalized:e.normalized}}c=this.groups;0<c.length&&(a.data.groups=JSON.parse(JSON.stringify(c)));c=this.boundingSphere;null!==c&&(a.data.boundingSphere={center:c.center.toArray(),\n\tradius:c.radius});return a},clone:function(){return(new THREE.BufferGeometry).copy(this)},copy:function(a){var b=a.index;null!==b&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count,d.materialIndex)}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}});THREE.BufferGeometry.MaxIndex=65535;\n\tTHREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this);this.type=\"InstancedBufferGeometry\";this.maxInstancedCount=void 0};THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry;THREE.InstancedBufferGeometry.prototype.addGroup=function(a,b,c){this.groups.push({start:a,count:b,instances:c})};\n\tTHREE.InstancedBufferGeometry.prototype.copy=function(a){var b=a.index;null!==b&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count,d.instances)}return this};THREE.Uniform=function(a,b){\"string\"===typeof a&&(console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"),a=b);this.value=a;this.dynamic=!1};\n\tTHREE.Uniform.prototype={constructor:THREE.Uniform,onUpdate:function(a){this.dynamic=!0;this.onUpdateCallback=a;return this}};THREE.AnimationAction=function(){throw Error(\"THREE.AnimationAction: Use mixer.clipAction for construction.\");};\n\tTHREE.AnimationAction._new=function(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;b=a.length;c=Array(b);for(var d={endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},e=0;e!==b;++e){var f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=THREE.LoopRepeat;this._loopCount=\n\t-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0};\n\tTHREE.AnimationAction._new.prototype={constructor:THREE.AnimationAction._new,play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},\n\tstartAt:function(a){this._startTime=a;return this},setLoop:function(a,b){this.loop=a;this.repetitions=b;return this},setEffectiveWeight:function(a){this.weight=a;this._effectiveWeight=this.enabled?a:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(a){return this._scheduleFading(a,0,1)},fadeOut:function(a){return this._scheduleFading(a,1,0)},crossFadeFrom:function(a,b,c){a.fadeOut(b);this.fadeIn(b);if(c){c=this._clip.duration;var d=a._clip.duration,\n\te=c/d;a.warp(1,d/c,b);this.warp(e,1,b)}return this},crossFadeTo:function(a,b,c){return a.crossFadeFrom(this,b,c)},stopFading:function(){var a=this._weightInterpolant;null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},setEffectiveTimeScale:function(a){this.timeScale=a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(a){this.timeScale=this._clip.duration/\n\ta;return this.stopWarping()},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()},halt:function(a){return this.warp(this._effectiveTimeScale,0,a)},warp:function(a,b,c){var d=this._mixer,e=d.time,f=this._timeScaleInterpolant,g=this.timeScale;null===f&&(this._timeScaleInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;d[1]=e+c;f[0]=a/g;f[1]=b/g;return this},stopWarping:function(){var a=this._timeScaleInterpolant;null!==a&&\n\t(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(a,b,c,d){var e=this._startTime;if(null!==e){b=(a-e)*c;if(0>b||0===c)return;this._startTime=null;b*=c}b*=this._updateTimeScale(a);c=this._updateTime(b);a=this._updateWeight(a);if(0<a){b=this._interpolants;for(var e=this._propertyBindings,f=0,g=b.length;f!==\n\tg;++f)b[f].evaluate(c),e[f].accumulate(d,a)}},_updateWeight:function(a){var b=0;if(this.enabled){var b=this.weight,c=this._weightInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b},_updateTimeScale:function(a){var b=0;if(!this.paused){var b=this.timeScale,c=this._timeScaleInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:\n\tthis.timeScale=b)}}return this._effectiveTimeScale=b},_updateTime:function(a){var b=this.time+a;if(0===a)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount;if(d===THREE.LoopOnce)a:{if(-1===e&&(this.loopCount=0,this._setEndings(!0,!0,!1)),b>=c)b=c;else if(0>b)b=0;else break a;this.clampWhenFinished?this.paused=!0:this.enabled=!1;this._mixer.dispatchEvent({type:\"finished\",action:this,direction:0>a?-1:1})}else{d=d===THREE.LoopPingPong;-1===e&&(0<=a?(e=0,this._setEndings(!0,0===this.repetitions,\n\td)):this._setEndings(0===this.repetitions,!0,d));if(b>=c||0>b){var f=Math.floor(b/c),b=b-c*f,e=e+Math.abs(f),g=this.repetitions-e;0>g?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,b=0<a?c:0,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:0<a?1:-1})):(0===g?(a=0>a,this._setEndings(a,!a,d)):this._setEndings(!1,!1,d),this._loopCount=e,this._mixer.dispatchEvent({type:\"loop\",action:this,loopDelta:f}))}if(d&&1===(e&1))return this.time=b,c-b}return this.time=b},_setEndings:function(a,\n\tb,c){var d=this._interpolantSettings;c?(d.endingStart=THREE.ZeroSlopeEnding,d.endingEnd=THREE.ZeroSlopeEnding):(d.endingStart=a?this.zeroSlopeAtStart?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding,d.endingEnd=b?this.zeroSlopeAtEnd?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding)},_scheduleFading:function(a,b,c){var d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(this._weightInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;\n\tf=f.sampleValues;d[0]=e;f[0]=b;d[1]=e+a;f[1]=c;return this}};THREE.AnimationClip=function(a,b,c){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.uuid=THREE.Math.generateUUID();0>this.duration&&this.resetDuration();this.trim();this.optimize()};\n\tTHREE.AnimationClip.prototype={constructor:THREE.AnimationClip,resetDuration:function(){for(var a=0,b=0,c=this.tracks.length;b!==c;++b)var d=this.tracks[b],a=Math.max(a,d.times[d.times.length-1]);this.duration=a},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}};\n\tObject.assign(THREE.AnimationClip,{parse:function(a){for(var b=[],c=a.tracks,d=1/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(THREE.KeyframeTrack.parse(c[e]).scale(d));return new THREE.AnimationClip(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(THREE.KeyframeTrack.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%\n\te,g,(g+1)%e);k.push(0,1,0);var l=THREE.AnimationUtils.getKeyframeOrder(h),h=THREE.AnimationUtils.sortedArray(h,1,l),k=THREE.AnimationUtils.sortedArray(k,1,l);d||0!==h[0]||(h.push(e),k.push(k[0]));f.push((new THREE.NumberKeyframeTrack(\".morphTargetInfluences[\"+b[g].name+\"]\",h,k)).scale(1/c))}return new THREE.AnimationClip(a,-1,f)},findByName:function(a,b){var c=a;Array.isArray(a)||(c=a.geometry&&a.geometry.animations||a.animations);for(var d=0;d<c.length;d++)if(c[d].name===b)return c[d];return null},\n\tCreateClipsFromMorphTargetSequences:function(a,b,c){for(var d={},e=/^([\\w-]*?)([\\d]+)$/,f=0,g=a.length;f<g;f++){var h=a[f],k=h.name.match(e);if(k&&1<k.length){var l=k[1];(k=d[l])||(d[l]=k=[]);k.push(h)}}a=[];for(l in d)a.push(THREE.AnimationClip.CreateFromMorphTargetSequence(l,d[l],b,c));return a},parseAnimation:function(a,b,c){if(!a)return console.error(\"  no animation in JSONLoader data\"),null;c=function(a,b,c,d,e){if(0!==c.length){var f=[],g=[];THREE.AnimationUtils.flattenJSON(c,f,g,d);0!==f.length&&\n\te.push(new a(b,f,g))}};var d=[],e=a.name||\"default\",f=a.length||-1,g=a.fps||30;a=a.hierarchy||[];for(var h=0;h<a.length;h++){var k=a[h].keys;if(k&&0!==k.length)if(k[0].morphTargets){for(var f={},l=0;l<k.length;l++)if(k[l].morphTargets)for(var n=0;n<k[l].morphTargets.length;n++)f[k[l].morphTargets[n]]=-1;for(var p in f){for(var m=[],q=[],n=0;n!==k[l].morphTargets.length;++n){var r=k[l];m.push(r.time);q.push(r.morphTarget===p?1:0)}d.push(new THREE.NumberKeyframeTrack(\".morphTargetInfluence[\"+p+\"]\",\n\tm,q))}f=f.length*(g||1)}else l=\".bones[\"+b[h].name+\"]\",c(THREE.VectorKeyframeTrack,l+\".position\",k,\"pos\",d),c(THREE.QuaternionKeyframeTrack,l+\".quaternion\",k,\"rot\",d),c(THREE.VectorKeyframeTrack,l+\".scale\",k,\"scl\",d)}return 0===d.length?null:new THREE.AnimationClip(e,f,d)}});THREE.AnimationMixer=function(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1};\n\tObject.assign(THREE.AnimationMixer.prototype,THREE.EventDispatcher.prototype,{clipAction:function(a,b){var c=b||this._root,d=c.uuid,e=\"string\"===typeof a?THREE.AnimationClip.findByName(c,a):a,c=null!==e?e.uuid:a,f=this._actionsByClip[c],g=null;if(void 0!==f){g=f.actionByRoot[d];if(void 0!==g)return g;g=f.knownActions[0];null===e&&(e=g._clip)}if(null===e)return null;e=new THREE.AnimationMixer._Action(this,e,b);this._bindAction(e,g);this._addInactiveAction(e,c,d);return e},existingAction:function(a,\n\tb){var c=b||this._root,d=c.uuid,c=\"string\"===typeof a?THREE.AnimationClip.findByName(c,a):a,c=this._actionsByClip[c?c.uuid:a];return void 0!==c?c.actionByRoot[d]||null:null},stopAllAction:function(){for(var a=this._actions,b=this._nActiveActions,c=this._bindings,d=this._nActiveBindings,e=this._nActiveBindings=this._nActiveActions=0;e!==b;++e)a[e].reset();for(e=0;e!==d;++e)c[e].useCount=0;return this},update:function(a){a*=this.timeScale;for(var b=this._actions,c=this._nActiveActions,d=this.time+=\n\ta,e=Math.sign(a),f=this._accuIndex^=1,g=0;g!==c;++g){var h=b[g];h.enabled&&h._update(d,a,e,f)}a=this._bindings;b=this._nActiveBindings;for(g=0;g!==b;++g)a[g].apply(f);return this},getRoot:function(){return this._root},uncacheClip:function(a){var b=this._actions;a=a.uuid;var c=this._actionsByClip,d=c[a];if(void 0!==d){for(var d=d.knownActions,e=0,f=d.length;e!==f;++e){var g=d[e];this._deactivateAction(g);var h=g._cacheIndex,k=b[b.length-1];g._cacheIndex=null;g._byClipCacheIndex=null;k._cacheIndex=\n\th;b[h]=k;b.pop();this._removeInactiveBindingsForAction(g)}delete c[a]}},uncacheRoot:function(a){a=a.uuid;var b=this._actionsByClip,c;for(c in b){var d=b[c].actionByRoot[a];void 0!==d&&(this._deactivateAction(d),this._removeInactiveAction(d))}c=this._bindingsByRootAndName[a];if(void 0!==c)for(var e in c)a=c[e],a.restoreOriginalState(),this._removeInactiveBinding(a)},uncacheAction:function(a,b){var c=this.existingAction(a,b);null!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}});\n\tTHREE.AnimationMixer._Action=THREE.AnimationAction._new;\n\tObject.assign(THREE.AnimationMixer.prototype,{_bindAction:function(a,b){var c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,k=this._bindingsByRootAndName,l=k[h];void 0===l&&(l={},k[h]=l);for(k=0;k!==e;++k){var n=d[k],p=n.name,m=l[p];if(void 0===m){m=f[k];if(void 0!==m){null===m._cacheIndex&&(++m.referenceCount,this._addInactiveBinding(m,h,p));continue}m=new THREE.PropertyMixer(THREE.PropertyBinding.create(c,p,b&&b._propertyBindings[k].binding.parsedPath),\n\tn.ValueTypeName,n.getValueSize());++m.referenceCount;this._addInactiveBinding(m,h,p)}f[k]=m;g[k].resultBuffer=m.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){var b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]);this._addInactiveAction(a,c,b)}b=a._propertyBindings;c=0;for(d=b.length;c!==d;++c){var e=b[c];0===e.useCount++&&(this._lendBinding(e),e.saveOriginalState())}this._lendAction(a)}},\n\t_deactivateAction:function(a){if(this._isActiveAction(a)){for(var b=a._propertyBindings,c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},\n\tget inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){a=a._cacheIndex;return null!==a&&a<this._nActiveActions},_addInactiveAction:function(a,b,c){var d=this._actions,e=this._actionsByClip,f=e[b];void 0===f?(f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f):(b=\n\tf.knownActions,a._byClipCacheIndex=b.length,b.push(a));a._cacheIndex=d.length;d.push(a);f.actionByRoot[c]=a},_removeInactiveAction:function(a){var b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d;b[d]=c;b.pop();a._cacheIndex=null;var c=a._clip.uuid,d=this._actionsByClip,e=d[c],f=e.knownActions,g=f[f.length-1],h=a._byClipCacheIndex;g._byClipCacheIndex=h;f[h]=g;f.pop();a._byClipCacheIndex=null;delete e.actionByRoot[(b._localRoot||this._root).uuid];0===f.length&&delete d[c];this._removeInactiveBindingsForAction(a)},\n\t_removeInactiveBindingsForAction:function(a){a=a._propertyBindings;for(var b=0,c=a.length;b!==c;++b){var d=a[b];0===--d.referenceCount&&this._removeInactiveBinding(d)}},_lendAction:function(a){var b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackAction:function(a){var b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_addInactiveBinding:function(a,b,c){var d=this._bindingsByRootAndName,\n\te=d[b],f=this._bindings;void 0===e&&(e={},d[b]=e);e[c]=a;a._cacheIndex=f.length;f.push(a)},_removeInactiveBinding:function(a){var b=this._bindings,c=a.binding,d=c.rootNode.uuid,c=c.path,e=this._bindingsByRootAndName,f=e[d],g=b[b.length-1];a=a._cacheIndex;g._cacheIndex=a;b[a]=g;b.pop();delete f[c];a:{for(var h in f)break a;delete e[d]}},_lendBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackBinding:function(a){var b=\n\tthis._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_lendControlInterpolant:function(){var a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];void 0===c&&(c=new THREE.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),c.__cacheIndex=b,a[b]=c);return c},_takeBackControlInterpolant:function(a){var b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,\n\te=b[d];a.__cacheIndex=d;b[d]=a;e.__cacheIndex=c;b[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1)});\n\tTHREE.AnimationObjectGroup=function(a){this.uuid=THREE.Math.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var b={};this._indicesByUUID=b;for(var c=0,d=arguments.length;c!==d;++c)b[arguments[c].uuid]=c;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}};\n\tTHREE.AnimationObjectGroup.prototype={constructor:THREE.AnimationObjectGroup,add:function(a){for(var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._paths,g=this._parsedPaths,h=this._bindings,k=h.length,l=0,n=arguments.length;l!==n;++l){var p=arguments[l],m=p.uuid,q=e[m];if(void 0===q){q=c++;e[m]=q;b.push(p);for(var m=0,r=k;m!==r;++m)h[m].push(new THREE.PropertyBinding(p,f[m],g[m]))}else if(q<d){var s=b[q],t=--d,r=b[t];e[r.uuid]=q;b[q]=r;e[m]=t;b[t]=p;m=0;for(r=k;m!==\n\tr;++m){var u=h[m],v=u[q];u[q]=u[t];void 0===v&&(v=new THREE.PropertyBinding(p,f[m],g[m]));u[t]=v}}else b[q]!==s&&console.error(\"Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...\")}this.nCachedObjects_=d},remove:function(a){for(var b=this._objects,c=this.nCachedObjects_,d=this._indicesByUUID,e=this._bindings,f=e.length,g=0,h=arguments.length;g!==h;++g){var k=arguments[g],l=k.uuid,n=d[l];if(void 0!==n&&n>=c){var p=c++,m=b[p];d[m.uuid]=\n\tn;b[n]=m;d[l]=p;b[p]=k;k=0;for(l=f;k!==l;++k){var m=e[k],q=m[n];m[n]=m[p];m[p]=q}}}this.nCachedObjects_=c},uncache:function(a){for(var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._bindings,g=f.length,h=0,k=arguments.length;h!==k;++h){var l=arguments[h].uuid,n=e[l];if(void 0!==n)if(delete e[l],n<d){var l=--d,p=b[l],m=--c,q=b[m];e[p.uuid]=n;b[n]=p;e[q.uuid]=l;b[l]=q;b.pop();p=0;for(q=g;p!==q;++p){var r=f[p],s=r[m];r[n]=r[l];r[l]=s;r.pop()}}else for(m=--c,q=b[m],e[q.uuid]=\n\tn,b[n]=q,b.pop(),p=0,q=g;p!==q;++p)r=f[p],r[n]=r[m],r.pop()}this.nCachedObjects_=d},subscribe_:function(a,b){var c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];var f=this._paths,g=this._parsedPaths,h=this._objects,k=this.nCachedObjects_,l=Array(h.length),d=e.length;c[a]=d;f.push(a);g.push(b);e.push(l);c=k;for(d=h.length;c!==d;++c)l[c]=new THREE.PropertyBinding(h[c],a,b);return l},unsubscribe_:function(a){var b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){var d=\n\tthis._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=f[g];b[a[g]]=c;f[c]=h;f.pop();e[c]=e[g];e.pop();d[c]=d[g];d.pop()}}};\n\tTHREE.AnimationUtils={arraySlice:function(a,b,c){return THREE.AnimationUtils.isTypedArray(a)?new a.constructor(a.subarray(b,c)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:\"number\"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var b=a.length,c=Array(b),d=0;d!==b;++d)c[d]=d;c.sort(function(b,c){return a[b]-a[c]});return c},sortedArray:function(a,\n\tb,c){for(var d=a.length,e=new a.constructor(d),f=0,g=0;g!==d;++f)for(var h=c[f]*b,k=0;k!==b;++k)e[g++]=a[h+k];return e},flattenJSON:function(a,b,c,d){for(var e=1,f=a[0];void 0!==f&&void 0===f[d];)f=a[e++];if(void 0!==f){var g=f[d];if(void 0!==g)if(Array.isArray(g)){do g=f[d],void 0!==g&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f)}else if(void 0!==g.toArray){do g=f[d],void 0!==g&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==f)}else{do g=f[d],void 0!==g&&(b.push(f.time),\n\tc.push(g)),f=a[e++];while(void 0!==f)}}}};THREE.KeyframeTrack=function(a,b,c,d){if(void 0===a)throw Error(\"track name is undefined\");if(void 0===b||0===b.length)throw Error(\"no keyframes in track named \"+a);this.name=a;this.times=THREE.AnimationUtils.convertArray(b,this.TimeBufferType);this.values=THREE.AnimationUtils.convertArray(c,this.ValueBufferType);this.setInterpolation(d||this.DefaultInterpolation);this.validate();this.optimize()};\n\tTHREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(a){return new THREE.DiscreteInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new THREE.LinearInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new THREE.CubicInterpolant(this.times,\n\tthis.values,this.getValueSize(),a)},setInterpolation:function(a){var b;switch(a){case THREE.InterpolateDiscrete:b=this.InterpolantFactoryMethodDiscrete;break;case THREE.InterpolateLinear:b=this.InterpolantFactoryMethodLinear;break;case THREE.InterpolateSmooth:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){b=\"unsupported interpolation for \"+this.ValueTypeName+\" keyframe track named \"+this.name;if(void 0===this.createInterpolant)if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);\n\telse throw Error(b);console.warn(b)}else this.createInterpolant=b},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return THREE.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return THREE.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return THREE.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(a){if(0!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]+=a;return this},\n\tscale:function(a){if(1!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]*=a;return this},trim:function(a,b){for(var c=this.times,d=c.length,e=0,f=d-1;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;++f;if(0!==e||f!==d)e>=f&&(f=Math.max(f,1),e=f-1),d=this.getValueSize(),this.times=THREE.AnimationUtils.arraySlice(c,e,f),this.values=THREE.AnimationUtils.arraySlice(this.values,e*d,f*d);return this},validate:function(){var a=!0,b=this.getValueSize();0!==b-Math.floor(b)&&(console.error(\"invalid value size in track\",\n\tthis),a=!1);var c=this.times,b=this.values,d=c.length;0===d&&(console.error(\"track is empty\",this),a=!1);for(var e=null,f=0;f!==d;f++){var g=c[f];if(\"number\"===typeof g&&isNaN(g)){console.error(\"time is not a valid number\",this,f,g);a=!1;break}if(null!==e&&e>g){console.error(\"out of order keys\",this,f,g,e);a=!1;break}e=g}if(void 0!==b&&THREE.AnimationUtils.isTypedArray(b))for(f=0,c=b.length;f!==c;++f)if(d=b[f],isNaN(d)){console.error(\"value is not a valid number\",this,f,d);a=!1;break}return a},optimize:function(){for(var a=\n\tthis.times,b=this.values,c=this.getValueSize(),d=1,e=1,f=a.length-1;e<=f;++e){var g=!1,h=a[e];if(h!==a[e+1]&&(1!==e||h!==h[0]))for(var k=e*c,l=k-c,n=k+c,h=0;h!==c;++h){var p=b[k+h];if(p!==b[l+h]||p!==b[n+h]){g=!0;break}}if(g){if(e!==d)for(a[d]=a[e],g=e*c,k=d*c,h=0;h!==c;++h)b[k+h]=b[g+h];++d}}d!==a.length&&(this.times=THREE.AnimationUtils.arraySlice(a,0,d),this.values=THREE.AnimationUtils.arraySlice(b,0,d*c));return this}};\n\tObject.assign(THREE.KeyframeTrack,{parse:function(a){if(void 0===a.type)throw Error(\"track type undefined, can not parse\");var b=THREE.KeyframeTrack._getTrackTypeForValueTypeName(a.type);if(void 0===a.times){var c=[],d=[];THREE.AnimationUtils.flattenJSON(a.keys,c,d,\"value\");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)},toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=b.toJSON(a);else{var b={name:a.name,times:THREE.AnimationUtils.convertArray(a.times,\n\tArray),values:THREE.AnimationUtils.convertArray(a.values,Array)},c=a.getInterpolation();c!==a.DefaultInterpolation&&(b.interpolation=c)}b.type=a.ValueTypeName;return b},_getTrackTypeForValueTypeName:function(a){switch(a.toLowerCase()){case \"scalar\":case \"double\":case \"float\":case \"number\":case \"integer\":return THREE.NumberKeyframeTrack;case \"vector\":case \"vector2\":case \"vector3\":case \"vector4\":return THREE.VectorKeyframeTrack;case \"color\":return THREE.ColorKeyframeTrack;case \"quaternion\":return THREE.QuaternionKeyframeTrack;\n\tcase \"bool\":case \"boolean\":return THREE.BooleanKeyframeTrack;case \"string\":return THREE.StringKeyframeTrack}throw Error(\"Unsupported typeName: \"+a);}});THREE.PropertyBinding=function(a,b,c){this.path=b;this.parsedPath=c||THREE.PropertyBinding.parseTrackName(b);this.node=THREE.PropertyBinding.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a};\n\tTHREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,getValue:function(a,b){this.bind();this.getValue(a,b)},setValue:function(a,b){this.bind();this.setValue(a,b)},bind:function(){var a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;a||(this.node=a=THREE.PropertyBinding.findNode(this.rootNode,b.nodeName)||this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(a){if(c){var f=b.objectIndex;switch(c){case \"materials\":if(!a.material){console.error(\"  can not bind to material as node does not have a material\",\n\tthis);return}if(!a.material.materials){console.error(\"  can not bind to material.materials as node.material does not have a materials array\",this);return}a=a.material.materials;break;case \"bones\":if(!a.skeleton){console.error(\"  can not bind to bones as node does not have a skeleton\",this);return}a=a.skeleton.bones;for(c=0;c<a.length;c++)if(a[c].name===f){f=c;break}break;default:if(void 0===a[c]){console.error(\"  can not bind to objectName of node, undefined\",this);return}a=a[c]}if(void 0!==f){if(void 0===\n\ta[f]){console.error(\"  trying to bind to objectIndex of objectName, but is undefined:\",this,a);return}a=a[f]}}f=a[d];if(void 0===f)console.error(\"  trying to update property for track: \"+b.nodeName+\".\"+d+\" but it wasn't found.\",a);else{b=this.Versioning.None;void 0!==a.needsUpdate?(b=this.Versioning.NeedsUpdate,this.targetObject=a):void 0!==a.matrixWorldNeedsUpdate&&(b=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=a);c=this.BindingType.Direct;if(void 0!==e){if(\"morphTargetInfluences\"===\n\td){if(!a.geometry){console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry\",this);return}if(!a.geometry.morphTargets){console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets\",this);return}for(c=0;c<this.node.geometry.morphTargets.length;c++)if(a.geometry.morphTargets[c].name===e){e=c;break}}c=this.BindingType.ArrayElement;this.resolvedProperty=f;this.propertyIndex=e}else void 0!==f.fromArray&&void 0!==f.toArray?\n\t(c=this.BindingType.HasFromToArray,this.resolvedProperty=f):void 0!==f.length?(c=this.BindingType.EntireArray,this.resolvedProperty=f):this.propertyName=d;this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][b]}}else console.error(\"  trying to update node for track: \"+this.path+\" but it wasn't found.\")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}};\n\tObject.assign(THREE.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:THREE.PropertyBinding.prototype.getValue,_setValue_unbound:THREE.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=\n\tc[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.node[this.propertyName]=a[b]},function(a,b){this.node[this.propertyName]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.node[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++]},function(a,b){for(var c=this.resolvedProperty,\n\td=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty[this.propertyIndex]=a[b]},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty.fromArray(a,\n\tb)},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.matrixWorldNeedsUpdate=!0}]]});THREE.PropertyBinding.Composite=function(a,b,c){c=c||THREE.PropertyBinding.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,c)};\n\tTHREE.PropertyBinding.Composite.prototype={constructor:THREE.PropertyBinding.Composite,getValue:function(a,b){this.bind();var c=this._bindings[this._targetGroup.nCachedObjects_];void 0!==c&&c.getValue(a,b)},setValue:function(a,b){for(var c=this._bindings,d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)},bind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()},unbind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,\n\tc=a.length;b!==c;++b)a[b].unbind()}};THREE.PropertyBinding.create=function(a,b,c){return a instanceof THREE.AnimationObjectGroup?new THREE.PropertyBinding.Composite(a,b,c):new THREE.PropertyBinding(a,b,c)};\n\tTHREE.PropertyBinding.parseTrackName=function(a){var b=/^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/,c=b.exec(a);if(!c)throw Error(\"cannot parse trackName at all: \"+a);c.index===b.lastIndex&&b.lastIndex++;b={nodeName:c[3],objectName:c[5],objectIndex:c[7],propertyName:c[9],propertyIndex:c[11]};if(null===b.propertyName||0===b.propertyName.length)throw Error(\"can not parse propertyName from trackName: \"+a);return b};\n\tTHREE.PropertyBinding.findNode=function(a,b){if(!b||\"\"===b||\"root\"===b||\".\"===b||-1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){var c=function(a){for(var c=0;c<a.bones.length;c++){var d=a.bones[c];if(d.name===b)return d}return null}(a.skeleton);if(c)return c}if(a.children){var d=function(a){for(var c=0;c<a.length;c++){var g=a[c];if(g.name===b||g.uuid===b||(g=d(g.children)))return g}return null};if(c=d(a.children))return c}return null};\n\tTHREE.PropertyMixer=function(a,b,c){this.binding=a;this.valueSize=c;a=Float64Array;switch(b){case \"quaternion\":b=this._slerp;break;case \"string\":case \"bool\":a=Array;b=this._select;break;default:b=this._lerp}this.buffer=new a(4*c);this._mixBufferRegion=b;this.referenceCount=this.useCount=this.cumulativeWeight=0};\n\tTHREE.PropertyMixer.prototype={constructor:THREE.PropertyMixer,accumulate:function(a,b){var c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(0===f){for(f=0;f!==d;++f)c[e+f]=c[f];f=b}else f+=b,this._mixBufferRegion(c,e,0,b/f,d);this.cumulativeWeight=f},apply:function(a){var b=this.valueSize,c=this.buffer;a=a*b+b;var d=this.cumulativeWeight,e=this.binding;this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,3*b,1-d,b);for(var d=b,f=b+b;d!==f;++d)if(c[d]!==c[d+b]){e.setValue(c,a);\n\tbreak}},saveOriginalState:function(){var a=this.buffer,b=this.valueSize,c=3*b;this.binding.getValue(a,c);for(var d=b;d!==c;++d)a[d]=a[c+d%b];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(a,b,c,d,e){if(.5<=d)for(d=0;d!==e;++d)a[b+d]=a[c+d]},_slerp:function(a,b,c,d,e){THREE.Quaternion.slerpFlat(a,b,a,b,a,c,d)},_lerp:function(a,b,c,d,e){for(var f=1-d,g=0;g!==e;++g){var h=b+g;a[h]=a[h]*f+a[c+g]*d}}};\n\tTHREE.BooleanKeyframeTrack=function(a,b,c){THREE.KeyframeTrack.call(this,a,b,c)};THREE.BooleanKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.BooleanKeyframeTrack,ValueTypeName:\"bool\",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});THREE.ColorKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\n\tTHREE.ColorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.ColorKeyframeTrack,ValueTypeName:\"color\"});THREE.NumberKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};THREE.NumberKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.NumberKeyframeTrack,ValueTypeName:\"number\"});THREE.QuaternionKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\n\tTHREE.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.QuaternionKeyframeTrack,ValueTypeName:\"quaternion\",DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodLinear:function(a){return new THREE.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0});THREE.StringKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\n\tTHREE.StringKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.StringKeyframeTrack,ValueTypeName:\"string\",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});THREE.VectorKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\n\tTHREE.VectorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.VectorKeyframeTrack,ValueTypeName:\"vector\"});\n\tTHREE.Audio=function(a){THREE.Object3D.call(this);this.type=\"Audio\";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType=\"empty\";this.filters=[]};\n\tTHREE.Audio.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Audio,getOutput:function(){return this.gain},setNodeSource:function(a){this.hasPlaybackControl=!1;this.sourceType=\"audioNode\";this.source=a;this.connect();return this},setBuffer:function(a){this.source.buffer=a;this.sourceType=\"buffer\";this.autoplay&&this.play();return this},play:function(){if(!0===this.isPlaying)console.warn(\"THREE.Audio: Audio is already playing.\");else if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");\n\telse{var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.start(0,this.startTime);a.playbackRate.value=this.playbackRate;this.isPlaying=!0;this.source=a;return this.connect()}},pause:function(){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");else return this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this},stop:function(){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");\n\telse return this.source.stop(),this.startTime=0,this.isPlaying=!1,this},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-\n\t1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(a){a||(a=[]);!0===this.isPlaying?(this.disconnect(),this.filters=a,this.connect()):this.filters=a;return this},getFilter:function(){return this.getFilters()[0]},setFilter:function(a){return this.setFilters(a?[a]:[])},setPlaybackRate:function(a){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");\n\telse return this.playbackRate=a,!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn(\"THREE.Audio: this Audio has no playback control.\"),!1):this.source.loop},setLoop:function(a){!1===this.hasPlaybackControl?console.warn(\"THREE.Audio: this Audio has no playback control.\"):this.source.loop=a},getVolume:function(){return this.gain.gain.value},\n\tsetVolume:function(a){this.gain.gain.value=a;return this}});THREE.AudioAnalyser=function(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser)};\n\tObject.assign(THREE.AudioAnalyser.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){for(var a=0,b=this.getFrequencyData(),c=0;c<b.length;c++)a+=b[c];return a/b.length}});Object.defineProperty(THREE,\"AudioContext\",{get:function(){var a;return function(){void 0===a&&(a=new (window.AudioContext||window.webkitAudioContext));return a}}()});\n\tTHREE.PositionalAudio=function(a){THREE.Audio.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)};\n\tTHREE.PositionalAudio.prototype=Object.assign(Object.create(THREE.Audio.prototype),{constructor:THREE.PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(a){this.panner.refDistance=a},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(a){this.panner.rolloffFactor=a},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(a){this.panner.distanceModel=\n\ta},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(a){this.panner.maxDistance=a},updateMatrixWorld:function(){var a=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}}()});\n\tTHREE.AudioListener=function(){THREE.Object3D.call(this);this.type=\"AudioListener\";this.context=THREE.AudioContext;this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null};\n\tTHREE.AudioListener.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.AudioListener,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(a){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):\n\tthis.gain.disconnect(this.context.destination);this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(a){this.gain.gain.value=a},updateMatrixWorld:function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3;return function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e);e=this.context.listener;var f=this.up;this.matrixWorld.decompose(a,\n\tb,c);d.set(0,0,-1).applyQuaternion(b);e.setPosition(a.x,a.y,a.z);e.setOrientation(d.x,d.y,d.z,f.x,f.y,f.z)}}()});THREE.Camera=function(){THREE.Object3D.call(this);this.type=\"Camera\";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;\n\tTHREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)};\n\tTHREE.Camera.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);return this};\n\tTHREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);this.type=\"CubeCamera\";var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));\n\tthis.add(g);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var k=new THREE.PerspectiveCamera(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,-1));this.add(k);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){null===this.parent&&this.updateMatrixWorld();var c=this.renderTarget,m=c.texture.generateMipmaps;c.texture.generateMipmaps=\n\t!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=m;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;\n\tTHREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.type=\"OrthographicCamera\";this.zoom=1;this.view=null;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};\n\tTHREE.OrthographicCamera.prototype=Object.assign(Object.create(THREE.Camera.prototype),{constructor:THREE.OrthographicCamera,copy:function(a){THREE.Camera.prototype.copy.call(this,a);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;this.view=null===a.view?null:Object.assign({},a.view);return this},setViewOffset:function(a,b,c,d,e,f){this.view={fullWidth:a,fullHeight:b,offsetX:c,offsetY:d,width:e,height:f};this.updateProjectionMatrix()},\n\tclearViewOffset:function(){this.view=null;this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2,e=c-a,c=c+a,a=d+b,b=d-b;if(null!==this.view)var c=this.zoom/(this.view.width/this.view.fullWidth),b=this.zoom/(this.view.height/this.view.fullHeight),f=(this.right-this.left)/this.view.width,d=(this.top-this.bottom)/this.view.height,e=e+this.view.offsetX/c*f,\n\tc=e+this.view.width/c*f,a=a-this.view.offsetY/b*d,b=a-this.view.height/b*d;this.projectionMatrix.makeOrthographic(e,c,a,b,this.near,this.far)},toJSON:function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;null!==this.view&&(a.object.view=Object.assign({},this.view));return a}});\n\tTHREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.type=\"PerspectiveCamera\";this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()};\n\tTHREE.PerspectiveCamera.prototype=Object.assign(Object.create(THREE.Camera.prototype),{constructor:THREE.PerspectiveCamera,copy:function(a){THREE.Camera.prototype.copy.call(this,a);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;this.view=null===a.view?null:Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this},setFocalLength:function(a){a=.5*this.getFilmHeight()/a;this.fov=2*THREE.Math.RAD2DEG*Math.atan(a);\n\tthis.updateProjectionMatrix()},getFocalLength:function(){var a=Math.tan(.5*THREE.Math.DEG2RAD*this.fov);return.5*this.getFilmHeight()/a},getEffectiveFOV:function(){return 2*THREE.Math.RAD2DEG*Math.atan(Math.tan(.5*THREE.Math.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(a,b,c,d,e,f){this.aspect=a/b;this.view={fullWidth:a,fullHeight:b,offsetX:c,offsetY:d,\n\twidth:e,height:f};this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null;this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=this.near,b=a*Math.tan(.5*THREE.Math.DEG2RAD*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==f)var g=f.fullWidth,h=f.fullHeight,e=e+f.offsetX*d/g,b=b-f.offsetY*c/h,d=f.width/g*d,c=f.height/h*c;f=this.filmOffset;0!==f&&(e+=a*f/this.getFilmWidth());this.projectionMatrix.makeFrustum(e,e+d,b-c,b,a,this.far)},toJSON:function(a){a=\n\tTHREE.Object3D.prototype.toJSON.call(this,a);a.object.fov=this.fov;a.object.zoom=this.zoom;a.object.near=this.near;a.object.far=this.far;a.object.focus=this.focus;a.object.aspect=this.aspect;null!==this.view&&(a.object.view=Object.assign({},this.view));a.object.filmGauge=this.filmGauge;a.object.filmOffset=this.filmOffset;return a}});\n\tTHREE.StereoCamera=function(){this.type=\"StereoCamera\";this.aspect=1;this.cameraL=new THREE.PerspectiveCamera;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new THREE.PerspectiveCamera;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1};\n\tObject.assign(THREE.StereoCamera.prototype,{update:function(){var a,b,c,d,e,f=new THREE.Matrix4,g=new THREE.Matrix4;return function(h){if(a!==h.focus||b!==h.fov||c!==h.aspect*this.aspect||d!==h.near||e!==h.far){a=h.focus;b=h.fov;c=h.aspect*this.aspect;d=h.near;e=h.far;var k=h.projectionMatrix.clone(),l=.032*d/a,n=d*Math.tan(THREE.Math.DEG2RAD*b*.5),p,m;g.elements[12]=-.032;f.elements[12]=.032;p=-n*c+l;m=n*c+l;k.elements[0]=2*d/(m-p);k.elements[8]=(m+p)/(m-p);this.cameraL.projectionMatrix.copy(k);\n\tp=-n*c-l;m=n*c-l;k.elements[0]=2*d/(m-p);k.elements[8]=(m+p)/(m-p);this.cameraR.projectionMatrix.copy(k)}this.cameraL.matrixWorld.copy(h.matrixWorld).multiply(g);this.cameraR.matrixWorld.copy(h.matrixWorld).multiply(f)}}()});THREE.Light=function(a,b){THREE.Object3D.call(this);this.type=\"Light\";this.color=new THREE.Color(a);this.intensity=void 0!==b?b:1;this.receiveShadow=void 0};\n\tTHREE.Light.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Light,copy:function(a){THREE.Object3D.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this},toJSON:function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.color=this.color.getHex();a.object.intensity=this.intensity;void 0!==this.groundColor&&(a.object.groundColor=this.groundColor.getHex());void 0!==this.distance&&(a.object.distance=this.distance);void 0!==\n\tthis.angle&&(a.object.angle=this.angle);void 0!==this.decay&&(a.object.decay=this.decay);void 0!==this.penumbra&&(a.object.penumbra=this.penumbra);return a}});THREE.LightShadow=function(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new THREE.Vector2(512,512);this.map=null;this.matrix=new THREE.Matrix4};Object.assign(THREE.LightShadow.prototype,{copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this},clone:function(){return(new this.constructor).copy(this)}});\n\tTHREE.AmbientLight=function(a,b){THREE.Light.call(this,a,b);this.type=\"AmbientLight\";this.castShadow=void 0};THREE.AmbientLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.AmbientLight});THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a,b);this.type=\"DirectionalLight\";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.shadow=new THREE.DirectionalLightShadow};\n\tTHREE.DirectionalLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.DirectionalLight,copy:function(a){THREE.Light.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});THREE.DirectionalLightShadow=function(a){THREE.LightShadow.call(this,new THREE.OrthographicCamera(-5,5,5,-5,.5,500))};THREE.DirectionalLightShadow.prototype=Object.assign(Object.create(THREE.LightShadow.prototype),{constructor:THREE.DirectionalLightShadow});\n\tTHREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a,c);this.type=\"HemisphereLight\";this.castShadow=void 0;this.position.set(0,1,0);this.updateMatrix();this.groundColor=new THREE.Color(b)};THREE.HemisphereLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.HemisphereLight,copy:function(a){THREE.Light.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this}});\n\tTHREE.PointLight=function(a,b,c,d){THREE.Light.call(this,a,b);this.type=\"PointLight\";Object.defineProperty(this,\"power\",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=a/(4*Math.PI)}});this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,.5,500))};\n\tTHREE.PointLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.PointLight,copy:function(a){THREE.Light.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this}});\n\tTHREE.SpotLight=function(a,b,c,d,e,f){THREE.Light.call(this,a,b);this.type=\"SpotLight\";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;Object.defineProperty(this,\"power\",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}});this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.penumbra=void 0!==e?e:0;this.decay=void 0!==f?f:1;this.shadow=new THREE.SpotLightShadow};\n\tTHREE.SpotLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.SpotLight,copy:function(a){THREE.Light.prototype.copy.call(this,a);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});THREE.SpotLightShadow=function(){THREE.LightShadow.call(this,new THREE.PerspectiveCamera(50,1,.5,500))};\n\tTHREE.SpotLightShadow.prototype=Object.assign(Object.create(THREE.LightShadow.prototype),{constructor:THREE.SpotLightShadow,update:function(a){var b=2*THREE.Math.RAD2DEG*a.angle,c=this.mapSize.width/this.mapSize.height;a=a.distance||500;var d=this.camera;if(b!==d.fov||c!==d.aspect||a!==d.far)d.fov=b,d.aspect=c,d.far=a,d.updateProjectionMatrix()}});THREE.AudioLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\n\tObject.assign(THREE.AudioLoader.prototype,{load:function(a,b,c,d){var e=new THREE.XHRLoader(this.manager);e.setResponseType(\"arraybuffer\");e.load(a,function(a){THREE.AudioContext.decodeAudioData(a,function(a){b(a)})},c,d)}});THREE.Cache={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};\n\tTHREE.Loader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};\n\tTHREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,extractUrlBase:function(a){a=a.split(\"/\");if(1===a.length)return\"./\";a.pop();return a.join(\"/\")+\"/\"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a,b,c;return function(d,e,f){function g(a,c,d,g,k){a=e+a;var l=THREE.Loader.Handlers.get(a);null!==l?a=l.load(a):(b.setCrossOrigin(f),a=b.load(a));void 0!==c&&(a.repeat.fromArray(c),1!==c[0]&&(a.wrapS=\n\tTHREE.RepeatWrapping),1!==c[1]&&(a.wrapT=THREE.RepeatWrapping));void 0!==d&&a.offset.fromArray(d);void 0!==g&&(\"repeat\"===g[0]&&(a.wrapS=THREE.RepeatWrapping),\"mirror\"===g[0]&&(a.wrapS=THREE.MirroredRepeatWrapping),\"repeat\"===g[1]&&(a.wrapT=THREE.RepeatWrapping),\"mirror\"===g[1]&&(a.wrapT=THREE.MirroredRepeatWrapping));void 0!==k&&(a.anisotropy=k);c=THREE.Math.generateUUID();h[c]=a;return c}void 0===a&&(a=new THREE.Color);void 0===b&&(b=new THREE.TextureLoader);void 0===c&&(c=new THREE.MaterialLoader);\n\tvar h={},k={uuid:THREE.Math.generateUUID(),type:\"MeshLambertMaterial\"},l;for(l in d){var n=d[l];switch(l){case \"DbgColor\":case \"DbgIndex\":case \"opticalDensity\":case \"illumination\":break;case \"DbgName\":k.name=n;break;case \"blending\":k.blending=THREE[n];break;case \"colorAmbient\":case \"mapAmbient\":console.warn(\"THREE.Loader.createMaterial:\",l,\"is no longer supported.\");break;case \"colorDiffuse\":k.color=a.fromArray(n).getHex();break;case \"colorSpecular\":k.specular=a.fromArray(n).getHex();break;case \"colorEmissive\":k.emissive=\n\ta.fromArray(n).getHex();break;case \"specularCoef\":k.shininess=n;break;case \"shading\":\"basic\"===n.toLowerCase()&&(k.type=\"MeshBasicMaterial\");\"phong\"===n.toLowerCase()&&(k.type=\"MeshPhongMaterial\");\"standard\"===n.toLowerCase()&&(k.type=\"MeshStandardMaterial\");break;case \"mapDiffuse\":k.map=g(n,d.mapDiffuseRepeat,d.mapDiffuseOffset,d.mapDiffuseWrap,d.mapDiffuseAnisotropy);break;case \"mapDiffuseRepeat\":case \"mapDiffuseOffset\":case \"mapDiffuseWrap\":case \"mapDiffuseAnisotropy\":break;case \"mapEmissive\":k.emissiveMap=\n\tg(n,d.mapEmissiveRepeat,d.mapEmissiveOffset,d.mapEmissiveWrap,d.mapEmissiveAnisotropy);break;case \"mapEmissiveRepeat\":case \"mapEmissiveOffset\":case \"mapEmissiveWrap\":case \"mapEmissiveAnisotropy\":break;case \"mapLight\":k.lightMap=g(n,d.mapLightRepeat,d.mapLightOffset,d.mapLightWrap,d.mapLightAnisotropy);break;case \"mapLightRepeat\":case \"mapLightOffset\":case \"mapLightWrap\":case \"mapLightAnisotropy\":break;case \"mapAO\":k.aoMap=g(n,d.mapAORepeat,d.mapAOOffset,d.mapAOWrap,d.mapAOAnisotropy);break;case \"mapAORepeat\":case \"mapAOOffset\":case \"mapAOWrap\":case \"mapAOAnisotropy\":break;\n\tcase \"mapBump\":k.bumpMap=g(n,d.mapBumpRepeat,d.mapBumpOffset,d.mapBumpWrap,d.mapBumpAnisotropy);break;case \"mapBumpScale\":k.bumpScale=n;break;case \"mapBumpRepeat\":case \"mapBumpOffset\":case \"mapBumpWrap\":case \"mapBumpAnisotropy\":break;case \"mapNormal\":k.normalMap=g(n,d.mapNormalRepeat,d.mapNormalOffset,d.mapNormalWrap,d.mapNormalAnisotropy);break;case \"mapNormalFactor\":k.normalScale=[n,n];break;case \"mapNormalRepeat\":case \"mapNormalOffset\":case \"mapNormalWrap\":case \"mapNormalAnisotropy\":break;case \"mapSpecular\":k.specularMap=\n\tg(n,d.mapSpecularRepeat,d.mapSpecularOffset,d.mapSpecularWrap,d.mapSpecularAnisotropy);break;case \"mapSpecularRepeat\":case \"mapSpecularOffset\":case \"mapSpecularWrap\":case \"mapSpecularAnisotropy\":break;case \"mapMetalness\":k.metalnessMap=g(n,d.mapMetalnessRepeat,d.mapMetalnessOffset,d.mapMetalnessWrap,d.mapMetalnessAnisotropy);break;case \"mapMetalnessRepeat\":case \"mapMetalnessOffset\":case \"mapMetalnessWrap\":case \"mapMetalnessAnisotropy\":break;case \"mapRoughness\":k.roughnessMap=g(n,d.mapRoughnessRepeat,\n\td.mapRoughnessOffset,d.mapRoughnessWrap,d.mapRoughnessAnisotropy);break;case \"mapRoughnessRepeat\":case \"mapRoughnessOffset\":case \"mapRoughnessWrap\":case \"mapRoughnessAnisotropy\":break;case \"mapAlpha\":k.alphaMap=g(n,d.mapAlphaRepeat,d.mapAlphaOffset,d.mapAlphaWrap,d.mapAlphaAnisotropy);break;case \"mapAlphaRepeat\":case \"mapAlphaOffset\":case \"mapAlphaWrap\":case \"mapAlphaAnisotropy\":break;case \"flipSided\":k.side=THREE.BackSide;break;case \"doubleSided\":k.side=THREE.DoubleSide;break;case \"transparency\":console.warn(\"THREE.Loader.createMaterial: transparency has been renamed to opacity\");\n\tk.opacity=n;break;case \"depthTest\":case \"depthWrite\":case \"colorWrite\":case \"opacity\":case \"reflectivity\":case \"transparent\":case \"visible\":case \"wireframe\":k[l]=n;break;case \"vertexColors\":!0===n&&(k.vertexColors=THREE.VertexColors);\"face\"===n&&(k.vertexColors=THREE.FaceColors);break;default:console.error(\"THREE.Loader.createMaterial: Unsupported\",l,n)}}\"MeshBasicMaterial\"===k.type&&delete k.emissive;\"MeshPhongMaterial\"!==k.type&&delete k.specular;1>k.opacity&&(k.transparent=!0);c.setTextures(h);\n\treturn c.parse(k)}}()};THREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c+=2){var e=b[c+1];if(b[c].test(a))return e}return null}};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\n\tObject.assign(THREE.XHRLoader.prototype,{load:function(a,b,c,d){void 0!==this.path&&(a=this.path+a);var e=this,f=THREE.Cache.get(a);if(void 0!==f)return b&&setTimeout(function(){b(f)},0),f;var g=new XMLHttpRequest;g.overrideMimeType(\"text/plain\");g.open(\"GET\",a,!0);g.addEventListener(\"load\",function(c){var f=c.target.response;THREE.Cache.add(a,f);200===this.status?(b&&b(f),e.manager.itemEnd(a)):0===this.status?(console.warn(\"THREE.XHRLoader: HTTP Status 0 received.\"),b&&b(f),e.manager.itemEnd(a)):\n\t(d&&d(c),e.manager.itemError(a))},!1);void 0!==c&&g.addEventListener(\"progress\",function(a){c(a)},!1);g.addEventListener(\"error\",function(b){d&&d(b);e.manager.itemError(a)},!1);void 0!==this.responseType&&(g.responseType=this.responseType);void 0!==this.withCredentials&&(g.withCredentials=this.withCredentials);g.send(null);e.manager.itemStart(a);return g},setPath:function(a){this.path=a;return this},setResponseType:function(a){this.responseType=a;return this},setWithCredentials:function(a){this.withCredentials=\n\ta;return this}});THREE.FontLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};Object.assign(THREE.FontLoader.prototype,{load:function(a,b,c,d){var e=this;(new THREE.XHRLoader(this.manager)).load(a,function(a){var c;try{c=JSON.parse(a)}catch(d){console.warn(\"THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.\"),c=JSON.parse(a.substring(65,a.length-2))}a=e.parse(c);b&&b(a)},c,d)},parse:function(a){return new THREE.Font(a)}});\n\tTHREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\n\tObject.assign(THREE.ImageLoader.prototype,{load:function(a,b,c,d){var e=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"img\");e.onload=function(){URL.revokeObjectURL(e.src);b&&b(e)};if(0===a.indexOf(\"data:\"))e.src=a;else{var f=new THREE.XHRLoader(this.manager);f.setPath(this.path);f.setResponseType(\"blob\");f.load(a,function(a){e.src=URL.createObjectURL(a)},c,d)}return e},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});\n\tTHREE.JSONLoader=function(a){\"boolean\"===typeof a&&(console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"),a=void 0);this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.withCredentials=!1};\n\tObject.assign(THREE.JSONLoader.prototype,{load:function(a,b,c,d){var e=this,f=this.texturePath&&\"string\"===typeof this.texturePath?this.texturePath:THREE.Loader.prototype.extractUrlBase(a),g=new THREE.XHRLoader(this.manager);g.setWithCredentials(this.withCredentials);g.load(a,function(c){c=JSON.parse(c);var d=c.metadata;if(void 0!==d&&(d=d.type,void 0!==d)){if(\"object\"===d.toLowerCase()){console.error(\"THREE.JSONLoader: \"+a+\" should be loaded with THREE.ObjectLoader instead.\");return}if(\"scene\"===\n\td.toLowerCase()){console.error(\"THREE.JSONLoader: \"+a+\" should be loaded with THREE.SceneLoader instead.\");return}}c=e.parse(c,f);b(c.geometry,c.materials)},c,d)},setTexturePath:function(a){this.texturePath=a},parse:function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/a.scale:1;(function(b){var d,g,h,k,l,n,p,m,q,r,s,t,u,v=a.faces;n=a.vertices;var C=a.normals,w=a.colors,E=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&E++;for(d=0;d<E;d++)c.faceVertexUvs[d]=[]}k=0;for(l=n.length;k<\n\tl;)d=new THREE.Vector3,d.x=n[k++]*b,d.y=n[k++]*b,d.z=n[k++]*b,c.vertices.push(d);k=0;for(l=v.length;k<l;)if(b=v[k++],q=b&1,h=b&2,d=b&8,p=b&16,r=b&32,n=b&64,b&=128,q){q=new THREE.Face3;q.a=v[k];q.b=v[k+1];q.c=v[k+3];s=new THREE.Face3;s.a=v[k+1];s.b=v[k+2];s.c=v[k+3];k+=4;h&&(h=v[k++],q.materialIndex=h,s.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<E;d++)for(t=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4>g;g++)m=v[k++],u=t[2*m],m=t[2*m+1],u=new THREE.Vector2(u,m),2!==g&&c.faceVertexUvs[d][h].push(u),\n\t0!==g&&c.faceVertexUvs[d][h+1].push(u);p&&(p=3*v[k++],q.normal.set(C[p++],C[p++],C[p]),s.normal.copy(q.normal));if(r)for(d=0;4>d;d++)p=3*v[k++],r=new THREE.Vector3(C[p++],C[p++],C[p]),2!==d&&q.vertexNormals.push(r),0!==d&&s.vertexNormals.push(r);n&&(n=v[k++],n=w[n],q.color.setHex(n),s.color.setHex(n));if(b)for(d=0;4>d;d++)n=v[k++],n=w[n],2!==d&&q.vertexColors.push(new THREE.Color(n)),0!==d&&s.vertexColors.push(new THREE.Color(n));c.faces.push(q);c.faces.push(s)}else{q=new THREE.Face3;q.a=v[k++];q.b=\n\tv[k++];q.c=v[k++];h&&(h=v[k++],q.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<E;d++)for(t=a.uvs[d],c.faceVertexUvs[d][h]=[],g=0;3>g;g++)m=v[k++],u=t[2*m],m=t[2*m+1],u=new THREE.Vector2(u,m),c.faceVertexUvs[d][h].push(u);p&&(p=3*v[k++],q.normal.set(C[p++],C[p++],C[p]));if(r)for(d=0;3>d;d++)p=3*v[k++],r=new THREE.Vector3(C[p++],C[p++],C[p]),q.vertexNormals.push(r);n&&(n=v[k++],q.color.setHex(w[n]));if(b)for(d=0;3>d;d++)n=v[k++],q.vertexColors.push(new THREE.Color(w[n]));c.faces.push(q)}})(d);(function(){var b=\n\tvoid 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,g=a.skinWeights.length;d<g;d+=b)c.skinWeights.push(new THREE.Vector4(a.skinWeights[d],1<b?a.skinWeights[d+1]:0,2<b?a.skinWeights[d+2]:0,3<b?a.skinWeights[d+3]:0));if(a.skinIndices)for(d=0,g=a.skinIndices.length;d<g;d+=b)c.skinIndices.push(new THREE.Vector4(a.skinIndices[d],1<b?a.skinIndices[d+1]:0,2<b?a.skinIndices[d+2]:0,3<b?a.skinIndices[d+3]:0));c.bones=a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==\n\tc.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&console.warn(\"When skinning, number of vertices (\"+c.vertices.length+\"), skinIndices (\"+c.skinIndices.length+\"), and skinWeights (\"+c.skinWeights.length+\") should match.\")})();(function(b){if(void 0!==a.morphTargets)for(var d=0,g=a.morphTargets.length;d<g;d++){c.morphTargets[d]={};c.morphTargets[d].name=a.morphTargets[d].name;c.morphTargets[d].vertices=[];for(var h=c.morphTargets[d].vertices,k=a.morphTargets[d].vertices,l=0,n=k.length;l<\n\tn;l+=3){var p=new THREE.Vector3;p.x=k[l]*b;p.y=k[l+1]*b;p.z=k[l+2]*b;h.push(p)}}if(void 0!==a.morphColors&&0<a.morphColors.length)for(console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.'),b=c.faces,h=a.morphColors[0].colors,d=0,g=b.length;d<g;d++)b[d].color.fromArray(h,3*d)})(d);(function(){var b=[],d=[];void 0!==a.animation&&d.push(a.animation);void 0!==a.animations&&(a.animations.length?d=d.concat(a.animations):d.push(a.animations));for(var g=0;g<d.length;g++){var h=\n\tTHREE.AnimationClip.parseAnimation(d[g],c.bones);h&&b.push(h)}c.morphTargets&&(d=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(c.morphTargets,10),b=b.concat(d));0<b.length&&(c.animations=b)})();c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:c};d=THREE.Loader.prototype.initMaterials(a.materials,b,this.crossOrigin);return{geometry:c,materials:d}}});\n\tTHREE.LoadingManager=function(a,b,c){var d=this,e=!1,f=0,g=0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(!1===e&&void 0!==d.onStart)d.onStart(a,f,g);e=!0};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,f,g);if(f===g&&(e=!1,void 0!==d.onLoad))d.onLoad()};this.itemError=function(a){if(void 0!==d.onError)d.onError(a)}};THREE.DefaultLoadingManager=new THREE.LoadingManager;\n\tTHREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\n\tObject.assign(THREE.BufferGeometryLoader.prototype,{load:function(a,b,c,d){var e=this;(new THREE.XHRLoader(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},parse:function(a){var b=new THREE.BufferGeometry,c=a.data.index,d={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};void 0!==c&&(c=new d[c.type](c.array),b.setIndex(new THREE.BufferAttribute(c,\n\t1)));var e=a.data.attributes,f;for(f in e){var g=e[f],c=new d[g.type](g.array);b.addAttribute(f,new THREE.BufferAttribute(c,g.itemSize,g.normalized))}d=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==d)for(f=0,c=d.length;f!==c;++f)e=d[f],b.addGroup(e.start,e.count,e.materialIndex);a=a.data.boundingSphere;void 0!==a&&(d=new THREE.Vector3,void 0!==a.center&&d.fromArray(a.center),b.boundingSphere=new THREE.Sphere(d,a.radius));return b}});\n\tTHREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.textures={}};\n\tObject.assign(THREE.MaterialLoader.prototype,{load:function(a,b,c,d){var e=this;(new THREE.XHRLoader(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setTextures:function(a){this.textures=a},getTexture:function(a){var b=this.textures;void 0===b[a]&&console.warn(\"THREE.MaterialLoader: Undefined texture\",a);return b[a]},parse:function(a){var b=new THREE[a.type];void 0!==a.uuid&&(b.uuid=a.uuid);void 0!==a.name&&(b.name=a.name);void 0!==a.color&&b.color.setHex(a.color);void 0!==a.roughness&&\n\t(b.roughness=a.roughness);void 0!==a.metalness&&(b.metalness=a.metalness);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&(b.shininess=a.shininess);void 0!==a.uniforms&&(b.uniforms=a.uniforms);void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.shading&&(b.shading=a.shading);void 0!==a.blending&&\n\t(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.alphaTest&&(b.alphaTest=a.alphaTest);void 0!==a.depthTest&&(b.depthTest=a.depthTest);void 0!==a.depthWrite&&(b.depthWrite=a.depthWrite);void 0!==a.colorWrite&&(b.colorWrite=a.colorWrite);void 0!==a.wireframe&&(b.wireframe=a.wireframe);void 0!==a.wireframeLinewidth&&(b.wireframeLinewidth=a.wireframeLinewidth);void 0!==a.size&&(b.size=a.size);\n\tvoid 0!==a.sizeAttenuation&&(b.sizeAttenuation=a.sizeAttenuation);void 0!==a.map&&(b.map=this.getTexture(a.map));void 0!==a.alphaMap&&(b.alphaMap=this.getTexture(a.alphaMap),b.transparent=!0);void 0!==a.bumpMap&&(b.bumpMap=this.getTexture(a.bumpMap));void 0!==a.bumpScale&&(b.bumpScale=a.bumpScale);void 0!==a.normalMap&&(b.normalMap=this.getTexture(a.normalMap));if(void 0!==a.normalScale){var c=a.normalScale;!1===Array.isArray(c)&&(c=[c,c]);b.normalScale=(new THREE.Vector2).fromArray(c)}void 0!==a.displacementMap&&\n\t(b.displacementMap=this.getTexture(a.displacementMap));void 0!==a.displacementScale&&(b.displacementScale=a.displacementScale);void 0!==a.displacementBias&&(b.displacementBias=a.displacementBias);void 0!==a.roughnessMap&&(b.roughnessMap=this.getTexture(a.roughnessMap));void 0!==a.metalnessMap&&(b.metalnessMap=this.getTexture(a.metalnessMap));void 0!==a.emissiveMap&&(b.emissiveMap=this.getTexture(a.emissiveMap));void 0!==a.emissiveIntensity&&(b.emissiveIntensity=a.emissiveIntensity);void 0!==a.specularMap&&\n\t(b.specularMap=this.getTexture(a.specularMap));void 0!==a.envMap&&(b.envMap=this.getTexture(a.envMap),b.combine=THREE.MultiplyOperation);void 0!==a.reflectivity&&(b.reflectivity=a.reflectivity);void 0!==a.lightMap&&(b.lightMap=this.getTexture(a.lightMap));void 0!==a.lightMapIntensity&&(b.lightMapIntensity=a.lightMapIntensity);void 0!==a.aoMap&&(b.aoMap=this.getTexture(a.aoMap));void 0!==a.aoMapIntensity&&(b.aoMapIntensity=a.aoMapIntensity);if(void 0!==a.materials)for(var c=0,d=a.materials.length;c<\n\td;c++)b.materials.push(this.parse(a.materials[c]));return b}});THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.texturePath=\"\"};\n\tObject.assign(THREE.ObjectLoader.prototype,{load:function(a,b,c,d){\"\"===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf(\"/\")+1));var e=this;(new THREE.XHRLoader(e.manager)).load(a,function(a){e.parse(JSON.parse(a),b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==b&&b(e)}),d=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,\n\td),e=this.parseObject(a.object,c,d);a.animations&&(e.animations=this.parseAnimations(a.animations));void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,f=a.length;e<f;e++){var g,h=a[e];switch(h.type){case \"PlaneGeometry\":case \"PlaneBufferGeometry\":g=new THREE[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case \"BoxGeometry\":case \"BoxBufferGeometry\":case \"CubeGeometry\":g=\n\tnew THREE[h.type](h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case \"CircleGeometry\":case \"CircleBufferGeometry\":g=new THREE[h.type](h.radius,h.segments,h.thetaStart,h.thetaLength);break;case \"CylinderGeometry\":case \"CylinderBufferGeometry\":g=new THREE[h.type](h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case \"ConeGeometry\":case \"ConeBufferGeometry\":g=new THREE[h.type](h.radius,h.height,h.radialSegments,\n\th.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case \"SphereGeometry\":case \"SphereBufferGeometry\":g=new THREE[h.type](h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case \"DodecahedronGeometry\":case \"IcosahedronGeometry\":case \"OctahedronGeometry\":case \"TetrahedronGeometry\":g=new THREE[h.type](h.radius,h.detail);break;case \"RingGeometry\":case \"RingBufferGeometry\":g=new THREE[h.type](h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,\n\th.thetaStart,h.thetaLength);break;case \"TorusGeometry\":case \"TorusBufferGeometry\":g=new THREE[h.type](h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case \"TorusKnotGeometry\":case \"TorusKnotBufferGeometry\":g=new THREE[h.type](h.radius,h.tube,h.tubularSegments,h.radialSegments,h.p,h.q);break;case \"LatheGeometry\":case \"LatheBufferGeometry\":g=new THREE[h.type](h.points,h.segments,h.phiStart,h.phiLength);break;case \"BufferGeometry\":g=d.parse(h);break;case \"Geometry\":g=c.parse(h.data,this.texturePath).geometry;\n\tbreak;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+h.type+'\"');continue}g.uuid=h.uuid;void 0!==h.name&&(g.name=h.name);b[h.uuid]=g}return b},parseMaterials:function(a,b){var c={};if(void 0!==a){var d=new THREE.MaterialLoader;d.setTextures(b);for(var e=0,f=a.length;e<f;e++){var g=d.parse(a[e]);c[g.uuid]=g}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=THREE.AnimationClip.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);\n\treturn g.load(a,function(){d.manager.itemEnd(a)})}var d=this,e={};if(void 0!==a&&0<a.length){var f=new THREE.LoadingManager(b),g=new THREE.ImageLoader(f);g.setCrossOrigin(this.crossOrigin);for(var f=0,h=a.length;f<h;f++){var k=a[f],l=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(k.url)?k.url:d.texturePath+k.url;e[k.uuid]=c(l)}}return e},parseTextures:function(a,b){function c(a){if(\"number\"===typeof a)return a;console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",a);return THREE[a]}\n\tvar d={};if(void 0!==a)for(var e=0,f=a.length;e<f;e++){var g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No \"image\" specified for',g.uuid);void 0===b[g.image]&&console.warn(\"THREE.ObjectLoader: Undefined image\",g.image);var h=new THREE.Texture(b[g.image]);h.needsUpdate=!0;h.uuid=g.uuid;void 0!==g.name&&(h.name=g.name);void 0!==g.mapping&&(h.mapping=c(g.mapping));void 0!==g.offset&&(h.offset=new THREE.Vector2(g.offset[0],g.offset[1]));void 0!==g.repeat&&(h.repeat=new THREE.Vector2(g.repeat[0],\n\tg.repeat[1]));void 0!==g.minFilter&&(h.minFilter=c(g.minFilter));void 0!==g.magFilter&&(h.magFilter=c(g.magFilter));void 0!==g.anisotropy&&(h.anisotropy=g.anisotropy);Array.isArray(g.wrap)&&(h.wrapS=c(g.wrap[0]),h.wrapT=c(g.wrap[1]));d[g.uuid]=h}return d},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){function e(a){void 0===c[a]&&console.warn(\"THREE.ObjectLoader: Undefined geometry\",a);return c[a]}function f(a){if(void 0!==a)return void 0===d[a]&&console.warn(\"THREE.ObjectLoader: Undefined material\",\n\ta),d[a]}var g;switch(b.type){case \"Scene\":g=new THREE.Scene;break;case \"PerspectiveCamera\":g=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);void 0!==b.focus&&(g.focus=b.focus);void 0!==b.zoom&&(g.zoom=b.zoom);void 0!==b.filmGauge&&(g.filmGauge=b.filmGauge);void 0!==b.filmOffset&&(g.filmOffset=b.filmOffset);void 0!==b.view&&(g.view=Object.assign({},b.view));break;case \"OrthographicCamera\":g=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case \"AmbientLight\":g=\n\tnew THREE.AmbientLight(b.color,b.intensity);break;case \"DirectionalLight\":g=new THREE.DirectionalLight(b.color,b.intensity);break;case \"PointLight\":g=new THREE.PointLight(b.color,b.intensity,b.distance,b.decay);break;case \"SpotLight\":g=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.penumbra,b.decay);break;case \"HemisphereLight\":g=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case \"Mesh\":g=e(b.geometry);var h=f(b.material);g=g.bones&&0<g.bones.length?new THREE.SkinnedMesh(g,\n\th):new THREE.Mesh(g,h);break;case \"LOD\":g=new THREE.LOD;break;case \"Line\":g=new THREE.Line(e(b.geometry),f(b.material),b.mode);break;case \"PointCloud\":case \"Points\":g=new THREE.Points(e(b.geometry),f(b.material));break;case \"Sprite\":g=new THREE.Sprite(f(b.material));break;case \"Group\":g=new THREE.Group;break;default:g=new THREE.Object3D}g.uuid=b.uuid;void 0!==b.name&&(g.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(g.position,g.quaternion,g.scale)):(void 0!==b.position&&g.position.fromArray(b.position),\n\tvoid 0!==b.rotation&&g.rotation.fromArray(b.rotation),void 0!==b.scale&&g.scale.fromArray(b.scale));void 0!==b.castShadow&&(g.castShadow=b.castShadow);void 0!==b.receiveShadow&&(g.receiveShadow=b.receiveShadow);void 0!==b.visible&&(g.visible=b.visible);void 0!==b.userData&&(g.userData=b.userData);if(void 0!==b.children)for(var k in b.children)g.add(this.parseObject(b.children[k],c,d));if(\"LOD\"===b.type)for(b=b.levels,h=0;h<b.length;h++){var l=b[h];k=g.getObjectByProperty(\"uuid\",l.object);void 0!==\n\tk&&g.addLevel(k,l.distance)}return g}}()});THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};Object.assign(THREE.TextureLoader.prototype,{load:function(a,b,c,d){var e=new THREE.Texture,f=new THREE.ImageLoader(this.manager);f.setCrossOrigin(this.crossOrigin);f.setPath(this.path);f.load(a,function(a){e.image=a;e.needsUpdate=!0;void 0!==b&&b(e)},c,d);return e},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});\n\tTHREE.CubeTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\n\tObject.assign(THREE.CubeTextureLoader.prototype,{load:function(a,b,c,d){function e(c){g.load(a[c],function(a){f.images[c]=a;h++;6===h&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}var f=new THREE.CubeTexture,g=new THREE.ImageLoader(this.manager);g.setCrossOrigin(this.crossOrigin);g.setPath(this.path);var h=0;for(c=0;c<a.length;++c)e(c);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});\n\tTHREE.DataTextureLoader=THREE.BinaryTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this._parser=null};\n\tObject.assign(THREE.BinaryTextureLoader.prototype,{load:function(a,b,c,d){var e=this,f=new THREE.DataTexture,g=new THREE.XHRLoader(this.manager);g.setResponseType(\"arraybuffer\");g.load(a,function(a){if(a=e._parser(a))void 0!==a.image?f.image=a.image:void 0!==a.data&&(f.image.width=a.width,f.image.height=a.height,f.image.data=a.data),f.wrapS=void 0!==a.wrapS?a.wrapS:THREE.ClampToEdgeWrapping,f.wrapT=void 0!==a.wrapT?a.wrapT:THREE.ClampToEdgeWrapping,f.magFilter=void 0!==a.magFilter?a.magFilter:THREE.LinearFilter,\n\tf.minFilter=void 0!==a.minFilter?a.minFilter:THREE.LinearMipMapLinearFilter,f.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps),1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.needsUpdate=!0,b&&b(f,a)},c,d);return f}});THREE.CompressedTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this._parser=null};\n\tObject.assign(THREE.CompressedTextureLoader.prototype,{load:function(a,b,c,d){function e(e){k.load(a[e],function(a){a=f._parser(a,!0);g[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};l+=1;6===l&&(1===a.mipmapCount&&(h.minFilter=THREE.LinearFilter),h.format=a.format,h.needsUpdate=!0,b&&b(h))},c,d)}var f=this,g=[],h=new THREE.CompressedTexture;h.image=g;var k=new THREE.XHRLoader(this.manager);k.setPath(this.path);k.setResponseType(\"arraybuffer\");if(Array.isArray(a))for(var l=0,\n\tn=0,p=a.length;n<p;++n)e(n);else k.load(a,function(a){a=f._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length/a.mipmapCount,d=0;d<c;d++){g[d]={mipmaps:[]};for(var e=0;e<a.mipmapCount;e++)g[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+e]),g[d].format=a.format,g[d].width=a.width,g[d].height=a.height}else h.image.width=a.width,h.image.height=a.height,h.mipmaps=a.mipmaps;1===a.mipmapCount&&(h.minFilter=THREE.LinearFilter);h.format=a.format;h.needsUpdate=!0;b&&b(h)},c,d);return h},setPath:function(a){this.path=\n\ta;return this}});\n\tTHREE.Material=function(){Object.defineProperty(this,\"id\",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Material\";this.lights=this.fog=!0;this.blending=THREE.NormalBlending;this.side=THREE.FrontSide;this.shading=THREE.SmoothShading;this.vertexColors=THREE.NoColors;this.opacity=1;this.transparent=!1;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendEquationAlpha=this.blendDstAlpha=\n\tthis.blendSrcAlpha=null;this.depthFunc=THREE.LessEqualDepth;this.depthWrite=this.depthTest=!0;this.clippingPlanes=null;this.clipShadows=!1;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.premultipliedAlpha=!1;this.overdraw=0;this._needsUpdate=this.visible=!0};\n\tTHREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn(\"THREE.Material: '\"+b+\"' parameter is undefined.\");else{var d=this[b];void 0===d?console.warn(\"THREE.\"+this.type+\": '\"+b+\"' is not a property of this material.\"):d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):\n\tthis[b]=\"overdraw\"===b?Number(c):c}}},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=void 0===a;c&&(a={textures:{},images:{}});var d={metadata:{version:4.4,type:\"Material\",generator:\"Material.toJSON\"}};d.uuid=this.uuid;d.type=this.type;\"\"!==this.name&&(d.name=this.name);this.color instanceof THREE.Color&&(d.color=this.color.getHex());void 0!==this.roughness&&(d.roughness=this.roughness);void 0!==this.metalness&&(d.metalness=this.metalness);\n\tthis.emissive instanceof THREE.Color&&(d.emissive=this.emissive.getHex());this.specular instanceof THREE.Color&&(d.specular=this.specular.getHex());void 0!==this.shininess&&(d.shininess=this.shininess);this.map instanceof THREE.Texture&&(d.map=this.map.toJSON(a).uuid);this.alphaMap instanceof THREE.Texture&&(d.alphaMap=this.alphaMap.toJSON(a).uuid);this.lightMap instanceof THREE.Texture&&(d.lightMap=this.lightMap.toJSON(a).uuid);this.bumpMap instanceof THREE.Texture&&(d.bumpMap=this.bumpMap.toJSON(a).uuid,\n\td.bumpScale=this.bumpScale);this.normalMap instanceof THREE.Texture&&(d.normalMap=this.normalMap.toJSON(a).uuid,d.normalScale=this.normalScale.toArray());this.displacementMap instanceof THREE.Texture&&(d.displacementMap=this.displacementMap.toJSON(a).uuid,d.displacementScale=this.displacementScale,d.displacementBias=this.displacementBias);this.roughnessMap instanceof THREE.Texture&&(d.roughnessMap=this.roughnessMap.toJSON(a).uuid);this.metalnessMap instanceof THREE.Texture&&(d.metalnessMap=this.metalnessMap.toJSON(a).uuid);\n\tthis.emissiveMap instanceof THREE.Texture&&(d.emissiveMap=this.emissiveMap.toJSON(a).uuid);this.specularMap instanceof THREE.Texture&&(d.specularMap=this.specularMap.toJSON(a).uuid);this.envMap instanceof THREE.Texture&&(d.envMap=this.envMap.toJSON(a).uuid,d.reflectivity=this.reflectivity);void 0!==this.size&&(d.size=this.size);void 0!==this.sizeAttenuation&&(d.sizeAttenuation=this.sizeAttenuation);this.blending!==THREE.NormalBlending&&(d.blending=this.blending);this.shading!==THREE.SmoothShading&&\n\t(d.shading=this.shading);this.side!==THREE.FrontSide&&(d.side=this.side);this.vertexColors!==THREE.NoColors&&(d.vertexColors=this.vertexColors);1>this.opacity&&(d.opacity=this.opacity);!0===this.transparent&&(d.transparent=this.transparent);0<this.alphaTest&&(d.alphaTest=this.alphaTest);!0===this.premultipliedAlpha&&(d.premultipliedAlpha=this.premultipliedAlpha);!0===this.wireframe&&(d.wireframe=this.wireframe);1<this.wireframeLinewidth&&(d.wireframeLinewidth=this.wireframeLinewidth);c&&(c=b(a.textures),\n\ta=b(a.images),0<c.length&&(d.textures=c),0<a.length&&(d.images=a));return d},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.fog=a.fog;this.lights=a.lights;this.blending=a.blending;this.side=a.side;this.shading=a.shading;this.vertexColors=a.vertexColors;this.opacity=a.opacity;this.transparent=a.transparent;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;\n\tthis.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.colorWrite=a.colorWrite;this.precision=a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.alphaTest=a.alphaTest;this.premultipliedAlpha=a.premultipliedAlpha;this.overdraw=a.overdraw;this.visible=a.visible;this.clipShadows=a.clipShadows;a=a.clippingPlanes;var b=null;if(null!==\n\ta)for(var c=a.length,b=Array(c),d=0;d!==c;++d)b[d]=a[d].clone();this.clippingPlanes=b;return this},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};Object.assign(THREE.Material.prototype,THREE.EventDispatcher.prototype);THREE.MaterialIdCount=0;\n\tTHREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type=\"LineBasicMaterial\";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap=\"round\";this.lights=!1;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;\n\tTHREE.LineBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;return this};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type=\"LineDashedMaterial\";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.lights=!1;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);\n\tTHREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;THREE.LineDashedMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;return this};\n\tTHREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type=\"MeshBasicMaterial\";this.color=new THREE.Color(16777215);this.aoMap=this.map=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.lights=this.morphTargets=this.skinning=!1;this.setValues(a)};\n\tTHREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;\n\tTHREE.MeshBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;\n\tthis.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type=\"MeshDepthMaterial\";this.depthPacking=THREE.BasicDepthPacking;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);\n\tTHREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;THREE.MeshDepthMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};\n\tTHREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type=\"MeshLambertMaterial\";this.color=new THREE.Color(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\n\t\"round\";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;\n\tTHREE.MeshLambertMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=\n\ta.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type=\"MeshNormalMaterial\";this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=this.lights=this.fog=!1;this.setValues(a)};\n\tTHREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};\n\tTHREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type=\"MeshPhongMaterial\";this.color=new THREE.Color(16777215);this.specular=new THREE.Color(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=\n\t0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;\n\tTHREE.MeshPhongMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);\n\tthis.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;\n\tthis.morphNormals=a.morphNormals;return this};\n\tTHREE.MeshStandardMaterial=function(a){THREE.Material.call(this);this.defines={STANDARD:\"\"};this.type=\"MeshStandardMaterial\";this.color=new THREE.Color(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=\n\t1;this.displacementBias=0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshStandardMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshStandardMaterial.prototype.constructor=THREE.MeshStandardMaterial;\n\tTHREE.MeshStandardMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.defines={STANDARD:\"\"};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=\n\ta.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.roughnessMap=a.roughnessMap;this.metalnessMap=a.metalnessMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.envMapIntensity=a.envMapIntensity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;\n\tthis.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshPhysicalMaterial=function(a){THREE.MeshStandardMaterial.call(this);this.defines={PHYSICAL:\"\"};this.type=\"MeshPhysicalMaterial\";this.reflectivity=.5;this.clearCoatRoughness=this.clearCoat=0;this.setValues(a)};THREE.MeshPhysicalMaterial.prototype=Object.create(THREE.MeshStandardMaterial.prototype);THREE.MeshPhysicalMaterial.prototype.constructor=THREE.MeshPhysicalMaterial;\n\tTHREE.MeshPhysicalMaterial.prototype.copy=function(a){THREE.MeshStandardMaterial.prototype.copy.call(this,a);this.defines={PHYSICAL:\"\"};this.reflectivity=a.reflectivity;this.clearCoat=a.clearCoat;this.clearCoatRoughness=a.clearCoatRoughness;return this};THREE.MultiMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type=\"MultiMaterial\";this.materials=a instanceof Array?a:[];this.visible=!0};\n\tTHREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(a){for(var b={metadata:{version:4.2,type:\"material\",generator:\"MaterialExporter\"},uuid:this.uuid,type:this.type,materials:[]},c=this.materials,d=0,e=c.length;d<e;d++){var f=c[d].toJSON(a);delete f.metadata;b.materials.push(f)}b.visible=this.visible;return b},clone:function(){for(var a=new this.constructor,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());a.visible=this.visible;return a}};\n\tTHREE.PointsMaterial=function(a){THREE.Material.call(this);this.type=\"PointsMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.lights=!1;this.setValues(a)};THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial;\n\tTHREE.PointsMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;return this};\n\tTHREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type=\"ShaderMaterial\";this.defines={};this.uniforms={};this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,\n\tdrawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"),this.setValues(a))};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;\n\tTHREE.ShaderMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.defines=a.defines;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.lights=a.lights;this.clipping=a.clipping;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.extensions=a.extensions;return this};\n\tTHREE.ShaderMaterial.prototype.toJSON=function(a){a=THREE.Material.prototype.toJSON.call(this,a);a.uniforms=this.uniforms;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type=\"RawShaderMaterial\"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;\n\tTHREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type=\"SpriteMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.lights=this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;THREE.SpriteMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;return this};\n\tTHREE.ShadowMaterial=function(){THREE.ShaderMaterial.call(this,{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.lights,{opacity:{value:1}}]),vertexShader:THREE.ShaderChunk.shadow_vert,fragmentShader:THREE.ShaderChunk.shadow_frag});this.transparent=this.lights=!0;Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(a){this.uniforms.opacity.value=a}}})};THREE.ShadowMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);\n\tTHREE.ShadowMaterial.prototype.constructor=THREE.ShadowMaterial;\n\tTHREE.Texture=function(a,b,c,d,e,f,g,h,k,l){Object.defineProperty(this,\"id\",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.sourceFile=this.name=\"\";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;\n\tthis.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==l?l:THREE.LinearEncoding;this.version=0;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;\n\tTHREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(a){!0===a&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=\n\ta.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;this.encoding=a.encoding;return this},toJSON:function(a){if(void 0!==a.textures[this.uuid])return a.textures[this.uuid];var b={metadata:{version:4.4,type:\"Texture\",generator:\"Texture.toJSON\"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};\n\tif(void 0!==this.image){var c=this.image;void 0===c.uuid&&(c.uuid=THREE.Math.generateUUID());if(void 0===a.images[c.uuid]){var d=a.images,e=c.uuid,f=c.uuid,g;void 0!==c.toDataURL?g=c:(g=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),g.width=c.width,g.height=c.height,g.getContext(\"2d\").drawImage(c,0,0,c.width,c.height));g=2048<g.width||2048<g.height?g.toDataURL(\"image/jpeg\",.6):g.toDataURL(\"image/png\");d[e]={uuid:f,url:g}}b.image=c.uuid}return a.textures[this.uuid]=b},dispose:function(){this.dispatchEvent({type:\"dispose\"})},\n\ttransformUv:function(a){if(this.mapping===THREE.UVMapping){a.multiply(this.repeat);a.add(this.offset);if(0>a.x||1<a.x)switch(this.wrapS){case THREE.RepeatWrapping:a.x-=Math.floor(a.x);break;case THREE.ClampToEdgeWrapping:a.x=0>a.x?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x-=Math.floor(a.x)}if(0>a.y||1<a.y)switch(this.wrapT){case THREE.RepeatWrapping:a.y-=Math.floor(a.y);break;case THREE.ClampToEdgeWrapping:a.y=0>a.y?0:1;break;case THREE.MirroredRepeatWrapping:1===\n\tMath.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y-=Math.floor(a.y)}this.flipY&&(a.y=1-a.y)}}};Object.assign(THREE.Texture.prototype,THREE.EventDispatcher.prototype);THREE.TextureIdCount=0;\n\tTHREE.DepthTexture=function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,null,d,e,f,g,h,THREE.DepthFormat,c,k);this.image={width:a,height:b};this.type=void 0!==c?c:THREE.UnsignedShortType;this.magFilter=void 0!==g?g:THREE.NearestFilter;this.minFilter=void 0!==h?h:THREE.NearestFilter;this.generateMipmaps=this.flipY=!1};THREE.DepthTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DepthTexture.prototype.constructor=THREE.DepthTexture;\n\tTHREE.CanvasTexture=function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.needsUpdate=!0};THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture;THREE.CubeTexture=function(a,b,c,d,e,f,g,h,k,l){a=void 0!==a?a:[];b=void 0!==b?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,a,b,c,d,e,f,g,h,k,l);this.flipY=!1};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);\n\tTHREE.CubeTexture.prototype.constructor=THREE.CubeTexture;Object.defineProperty(THREE.CubeTexture.prototype,\"images\",{get:function(){return this.image},set:function(a){this.image=a}});THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,k,l,n,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,n,p);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;\n\tTHREE.DataTexture=function(a,b,c,d,e,f,g,h,k,l,n,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,n,p);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:THREE.NearestFilter;this.minFilter=void 0!==l?l:THREE.NearestFilter;this.generateMipmaps=this.flipY=!1};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;\n\tTHREE.VideoTexture=function(a,b,c,d,e,f,g,h,k){function l(){requestAnimationFrame(l);a.readyState>=a.HAVE_CURRENT_DATA&&(n.needsUpdate=!0)}THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var n=this;l()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type=\"Group\"};THREE.Group.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Group});\n\tTHREE.Points=function(a,b){THREE.Object3D.call(this);this.type=\"Points\";this.geometry=void 0!==a?a:new THREE.BufferGeometry;this.material=void 0!==b?b:new THREE.PointsMaterial({color:16777215*Math.random()})};\n\tTHREE.Points.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Points,raycast:function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){function f(a,c){var f=b.distanceSqToPoint(a);if(f<n){var h=b.closestPointToPoint(a);h.applyMatrix4(k);var m=d.ray.origin.distanceTo(h);m<d.near||m>d.far||e.push({distance:m,distanceToRay:Math.sqrt(f),point:h.clone(),index:c,face:null,object:g})}}var g=this,h=this.geometry,k=this.matrixWorld,l=d.params.Points.threshold;\n\tnull===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(k);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(k);b.copy(d.ray).applyMatrix4(a);var l=l/((this.scale.x+this.scale.y+this.scale.z)/3),n=l*l,l=new THREE.Vector3;if(h instanceof THREE.BufferGeometry){var p=h.index,h=h.attributes.position.array;if(null!==p)for(var m=p.array,p=0,q=m.length;p<q;p++){var r=m[p];l.fromArray(h,3*r);f(l,r)}else for(p=0,m=h.length/3;p<m;p++)l.fromArray(h,3*p),f(l,p)}else for(l=h.vertices,\n\tp=0,m=l.length;p<m;p++)f(l[p],p)}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});THREE.Line=function(a,b,c){if(1===c)return console.warn(\"THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.\"),new THREE.LineSegments(a,b);THREE.Object3D.call(this);this.type=\"Line\";this.geometry=void 0!==a?a:new THREE.BufferGeometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()})};\n\tTHREE.Line.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Line,raycast:function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry,h=this.matrixWorld;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(h);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(h);b.copy(d.ray).applyMatrix4(a);var k=new THREE.Vector3,l=new THREE.Vector3,h=new THREE.Vector3,n=\n\tnew THREE.Vector3,p=this instanceof THREE.LineSegments?2:1;if(g instanceof THREE.BufferGeometry){var m=g.index,q=g.attributes.position.array;if(null!==m)for(var m=m.array,g=0,r=m.length-1;g<r;g+=p){var s=m[g+1];k.fromArray(q,3*m[g]);l.fromArray(q,3*s);s=b.distanceSqToSegment(k,l,n,h);s>f||(n.applyMatrix4(this.matrixWorld),s=d.ray.origin.distanceTo(n),s<d.near||s>d.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else for(g=0,r=\n\tq.length/3-1;g<r;g+=p)k.fromArray(q,3*g),l.fromArray(q,3*g+3),s=b.distanceSqToSegment(k,l,n,h),s>f||(n.applyMatrix4(this.matrixWorld),s=d.ray.origin.distanceTo(n),s<d.near||s>d.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g instanceof THREE.Geometry)for(k=g.vertices,l=k.length,g=0;g<l-1;g+=p)s=b.distanceSqToSegment(k[g],k[g+1],n,h),s>f||(n.applyMatrix4(this.matrixWorld),s=d.ray.origin.distanceTo(n),s<d.near||s>d.far||\n\te.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});THREE.LineSegments=function(a,b){THREE.Line.call(this,a,b);this.type=\"LineSegments\"};THREE.LineSegments.prototype=Object.assign(Object.create(THREE.Line.prototype),{constructor:THREE.LineSegments});\n\tTHREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type=\"Mesh\";this.geometry=void 0!==a?a:new THREE.BufferGeometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.drawMode=THREE.TrianglesDrawMode;this.updateMorphTargets()};\n\tTHREE.Mesh.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Mesh,setDrawMode:function(a){this.drawMode=a},copy:function(a){THREE.Object3D.prototype.copy.call(this,a);this.drawMode=a.drawMode;return this},updateMorphTargets:function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),\n\tthis.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}},getMorphTargetIndexByName:function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.warn(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+a+\" does not exist. Returning 0.\");return 0},raycast:function(){function a(a,b,c,d,e,g,f){THREE.Triangle.barycoordFromPoint(a,b,c,d,s);e.multiplyScalar(s.x);g.multiplyScalar(s.y);f.multiplyScalar(s.z);e.add(g).add(f);return e.clone()}function b(a,b,c,\n\td,e,g,f){var h=a.material;if(null===(h.side===THREE.BackSide?c.intersectTriangle(g,e,d,!0,f):c.intersectTriangle(d,e,g,h.side!==THREE.DoubleSide,f)))return null;u.copy(f);u.applyMatrix4(a.matrixWorld);c=b.ray.origin.distanceTo(u);return c<b.near||c>b.far?null:{distance:c,point:u.clone(),object:a}}function c(c,d,e,f,l,p,n,s){g.fromArray(f,3*p);h.fromArray(f,3*n);k.fromArray(f,3*s);if(c=b(c,d,e,g,h,k,t))l&&(m.fromArray(l,2*p),q.fromArray(l,2*n),r.fromArray(l,2*s),c.uv=a(t,g,h,k,m,q,r)),c.face=new THREE.Face3(p,\n\tn,s,THREE.Triangle.normal(g,h,k)),c.faceIndex=p;return c}var d=new THREE.Matrix4,e=new THREE.Ray,f=new THREE.Sphere,g=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector2,q=new THREE.Vector2,r=new THREE.Vector2,s=new THREE.Vector3,t=new THREE.Vector3,u=new THREE.Vector3;return function(v,s){var w=this.geometry,u=this.material,z=this.matrixWorld;if(void 0!==u&&(null===w.boundingSphere&&w.computeBoundingSphere(),f.copy(w.boundingSphere),\n\tf.applyMatrix4(z),!1!==v.ray.intersectsSphere(f)&&(d.getInverse(z),e.copy(v.ray).applyMatrix4(d),null===w.boundingBox||!1!==e.intersectsBox(w.boundingBox)))){var y,A;if(w instanceof THREE.BufferGeometry){var I,B,u=w.index,z=w.attributes,w=z.position.array;void 0!==z.uv&&(y=z.uv.array);if(null!==u)for(var z=u.array,F=0,K=z.length;F<K;F+=3){if(u=z[F],I=z[F+1],B=z[F+2],A=c(this,v,e,w,y,u,I,B))A.faceIndex=Math.floor(F/3),s.push(A)}else for(F=0,K=w.length;F<K;F+=9)if(u=F/3,I=u+1,B=u+2,A=c(this,v,e,w,y,\n\tu,I,B))A.index=u,s.push(A)}else if(w instanceof THREE.Geometry){var P,M,z=u instanceof THREE.MultiMaterial,F=!0===z?u.materials:null,K=w.vertices;I=w.faces;B=w.faceVertexUvs[0];0<B.length&&(y=B);for(var H=0,L=I.length;H<L;H++){var O=I[H];A=!0===z?F[O.materialIndex]:u;if(void 0!==A){B=K[O.a];P=K[O.b];M=K[O.c];if(!0===A.morphTargets){A=w.morphTargets;var N=this.morphTargetInfluences;g.set(0,0,0);h.set(0,0,0);k.set(0,0,0);for(var Q=0,J=A.length;Q<J;Q++){var D=N[Q];if(0!==D){var G=A[Q].vertices;g.addScaledVector(l.subVectors(G[O.a],\n\tB),D);h.addScaledVector(n.subVectors(G[O.b],P),D);k.addScaledVector(p.subVectors(G[O.c],M),D)}}g.add(B);h.add(P);k.add(M);B=g;P=h;M=k}if(A=b(this,v,e,B,P,M,t))y&&(N=y[H],m.copy(N[0]),q.copy(N[1]),r.copy(N[2]),A.uv=a(t,B,P,M,m,q,r)),A.face=O,A.faceIndex=H,s.push(A)}}}}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});THREE.Bone=function(a){THREE.Object3D.call(this);this.type=\"Bone\";this.skin=a};\n\tTHREE.Bone.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Bone,copy:function(a){THREE.Object3D.prototype.copy.call(this,a);this.skin=a.skin;return this}});\n\tTHREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(a=Math.sqrt(4*this.bones.length),a=THREE.Math.nextPowerOfTwo(Math.ceil(a)),this.boneTextureHeight=this.boneTextureWidth=a=Math.max(a,4),this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)):\n\tthis.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn(\"THREE.Skeleton bonInverses is the wrong length.\"),this.boneInverses=[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)};\n\tObject.assign(THREE.Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}},pose:function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent instanceof THREE.Bone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):\n\ta.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)},update:function(){var a=new THREE.Matrix4;return function(){for(var b=0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.toArray(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),clone:function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)}});\n\tTHREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.type=\"SkinnedMesh\";this.bindMode=\"attached\";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e=0,f=this.geometry.bones.length;e<f;++e)d=this.geometry.bones[e],b=new THREE.Bone(this),a.push(b),b.name=d.name,b.position.fromArray(d.pos),b.quaternion.fromArray(d.rotq),void 0!==d.scl&&b.scale.fromArray(d.scl);e=0;for(f=this.geometry.bones.length;e<f;++e)d=\n\tthis.geometry.bones[e],-1!==d.parent&&null!==d.parent&&void 0!==a[d.parent]?a[d.parent].add(a[e]):this.add(a[e])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,c),this.matrixWorld)};\n\tTHREE.SkinnedMesh.prototype=Object.assign(Object.create(THREE.Mesh.prototype),{constructor:THREE.SkinnedMesh,bind:function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinWeights.length;a++){var b=this.geometry.skinWeights[a],c=\n\t1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0)}else if(this.geometry instanceof THREE.BufferGeometry)for(var b=new THREE.Vector4,d=this.geometry.attributes.skinWeight,a=0;a<d.count;a++)b.x=d.getX(a),b.y=d.getY(a),b.z=d.getZ(a),b.w=d.getW(a),c=1/b.lengthManhattan(),Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0),d.setXYZW(a,b.x,b.y,b.z,b.w)},updateMatrixWorld:function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\n\t\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn(\"THREE.SkinnedMesh unrecognized bindMode: \"+this.bindMode)},clone:function(){return(new this.constructor(this.geometry,this.material,this.skeleton.useVertexTexture)).copy(this)}});THREE.LOD=function(){THREE.Object3D.call(this);this.type=\"LOD\";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})};\n\tTHREE.LOD.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.LOD,copy:function(a){THREE.Object3D.prototype.copy.call(this,a,!1);a=a.levels;for(var b=0,c=a.length;b<c;b++){var d=a[b];this.addLevel(d.object.clone(),d.distance)}return this},addLevel:function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=this.levels,d=0;d<c.length&&!(b<c[d].distance);d++);c.splice(d,0,{distance:b,object:a});this.add(a)},getObjectForDistance:function(a){for(var b=this.levels,c=1,d=b.length;c<\n\td&&!(a<b[c].distance);c++);return b[c-1].object},raycast:function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}(),update:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){var d=this.levels;if(1<d.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);d[0].object.visible=!0;for(var e=1,f=d.length;e<f;e++)if(c>=\n\td[e].distance)d[e-1].object.visible=!1,d[e].object.visible=!0;else break;for(;e<f;e++)d[e].object.visible=!1}}}(),toJSON:function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.levels=[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a}});THREE.Sprite=function(a){THREE.Object3D.call(this);this.type=\"Sprite\";this.material=void 0!==a?a:new THREE.SpriteMaterial};\n\tTHREE.Sprite.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Sprite,raycast:function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceSqToPoint(a);d>this.scale.x*this.scale.y/4||c.push({distance:Math.sqrt(d),point:this.position,face:null,object:this})}}(),clone:function(){return(new this.constructor(this.material)).copy(this)}});\n\tTHREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};\n\tTHREE.LensFlare.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.LensFlare,copy:function(a){THREE.Object3D.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this},add:function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);\n\tc=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d})},updateLensFlares:function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)}});\n\tTHREE.Scene=function(){THREE.Object3D.call(this);this.type=\"Scene\";this.overrideMaterial=this.fog=this.background=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;\n\tTHREE.Scene.prototype.copy=function(a,b){THREE.Object3D.prototype.copy.call(this,a,b);null!==a.background&&(this.background=a.background.clone());null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone());this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this};THREE.Fog=function(a,b,c){this.name=\"\";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};\n\tTHREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name=\"\";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";THREE.ShaderChunk.alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\tTHREE.ShaderChunk.alphatest_fragment=\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";THREE.ShaderChunk.aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\tTHREE.ShaderChunk.aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";THREE.ShaderChunk.begin_vertex=\"\\nvec3 transformed = vec3( position );\\n\";THREE.ShaderChunk.beginnormal_vertex=\"\\nvec3 objectNormal = vec3( normal );\\n\";THREE.ShaderChunk.bsdfs=\"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\tTHREE.ShaderChunk.bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\tTHREE.ShaderChunk.clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n#endif\\n\";THREE.ShaderChunk.clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\tTHREE.ShaderChunk.clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";THREE.ShaderChunk.clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";THREE.ShaderChunk.color_fragment=\"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";THREE.ShaderChunk.color_pars_fragment=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\tTHREE.ShaderChunk.color_pars_vertex=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";THREE.ShaderChunk.color_vertex=\"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";THREE.ShaderChunk.common=\"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\n\tTHREE.ShaderChunk.cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\tTHREE.ShaderChunk.defaultnormal_vertex=\"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";THREE.ShaderChunk.displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";THREE.ShaderChunk.displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\tTHREE.ShaderChunk.emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";THREE.ShaderChunk.emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";THREE.ShaderChunk.encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\tTHREE.ShaderChunk.encodings_fragment=\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";THREE.ShaderChunk.envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\tTHREE.ShaderChunk.envmap_pars_fragment=\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\tTHREE.ShaderChunk.envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\tTHREE.ShaderChunk.fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\tTHREE.ShaderChunk.fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";THREE.ShaderChunk.lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";THREE.ShaderChunk.lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\tTHREE.ShaderChunk.lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\tTHREE.ShaderChunk.lights_pars=\"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\\t\\t\\tdirectLight.color = pointLight.color;\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\t#include <normal_flip>\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\t#include <normal_flip>\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\tTHREE.ShaderChunk.lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";THREE.ShaderChunk.lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\tTHREE.ShaderChunk.lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\tTHREE.ShaderChunk.lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\tTHREE.ShaderChunk.lights_template=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\t\\t\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\tTHREE.ShaderChunk.logdepthbuf_fragment=\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";THREE.ShaderChunk.logdepthbuf_pars_fragment=\"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\tTHREE.ShaderChunk.logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\tTHREE.ShaderChunk.map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";THREE.ShaderChunk.map_particle_fragment=\"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";THREE.ShaderChunk.map_particle_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";THREE.ShaderChunk.metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\n\tTHREE.ShaderChunk.metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";THREE.ShaderChunk.morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\tTHREE.ShaderChunk.morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";THREE.ShaderChunk.morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\tTHREE.ShaderChunk.normal_flip=\"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";THREE.ShaderChunk.normal_fragment=\"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\tTHREE.ShaderChunk.normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\tTHREE.ShaderChunk.packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\tTHREE.ShaderChunk.premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";THREE.ShaderChunk.project_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";THREE.ShaderChunk.roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\n\tTHREE.ShaderChunk.roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";THREE.ShaderChunk.shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\tTHREE.ShaderChunk.shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\tTHREE.ShaderChunk.shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\tTHREE.ShaderChunk.shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\tTHREE.ShaderChunk.skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";THREE.ShaderChunk.skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\tTHREE.ShaderChunk.skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";THREE.ShaderChunk.skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\tTHREE.ShaderChunk.specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";THREE.ShaderChunk.specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";THREE.ShaderChunk.tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\tTHREE.ShaderChunk.tonemapping_pars_fragment=\"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\tTHREE.ShaderChunk.uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";THREE.ShaderChunk.uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";THREE.ShaderChunk.uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";THREE.ShaderChunk.uv_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\tTHREE.ShaderChunk.uv_pars_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";THREE.ShaderChunk.uv_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\tTHREE.ShaderChunk.worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\";\n\tTHREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix3||e instanceof THREE.Matrix4||e instanceof THREE.Texture?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}};\n\tTHREE.UniformsLib={common:{diffuse:{value:new THREE.Color(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new THREE.Vector4(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},\n\tnormalScale:{value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},fog:{fogDensity:{value:2.5E-4},fogNear:{value:1},fogFar:{value:2E3},fogColor:{value:new THREE.Color(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},\n\tdirectionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},\n\tskyColor:{},groundColor:{}}}},points:{diffuse:{value:new THREE.Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new THREE.Vector4(0,0,1,1)}}};THREE.ShaderChunk.cube_frag=\"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\n\tTHREE.ShaderChunk.cube_vert=\"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";THREE.ShaderChunk.depth_frag=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\tTHREE.ShaderChunk.depth_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\tTHREE.ShaderChunk.distanceRGBA_frag=\"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";THREE.ShaderChunk.distanceRGBA_vert=\"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n\tTHREE.ShaderChunk.equirect_frag=\"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\n\tTHREE.ShaderChunk.equirect_vert=\"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";THREE.ShaderChunk.linedashed_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\tTHREE.ShaderChunk.linedashed_vert=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\tTHREE.ShaderChunk.meshbasic_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\tTHREE.ShaderChunk.meshbasic_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n}\\n\";\n\tTHREE.ShaderChunk.meshlambert_frag=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\tTHREE.ShaderChunk.meshlambert_vert=\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\tTHREE.ShaderChunk.meshphong_frag=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\tTHREE.ShaderChunk.meshphong_vert=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\tTHREE.ShaderChunk.meshphysical_frag=\"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\tTHREE.ShaderChunk.meshphysical_vert=\"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\tTHREE.ShaderChunk.normal_frag=\"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";THREE.ShaderChunk.normal_vert=\"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvNormal = normalize( normalMatrix * normal );\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\tTHREE.ShaderChunk.points_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\tTHREE.ShaderChunk.points_vert=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\tTHREE.ShaderChunk.shadow_frag=\"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";THREE.ShaderChunk.shadow_vert=\"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\tTHREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.meshbasic_vert,fragmentShader:THREE.ShaderChunk.meshbasic_frag},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)}}]),vertexShader:THREE.ShaderChunk.meshlambert_vert,\n\tfragmentShader:THREE.ShaderChunk.meshlambert_frag},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)},specular:{value:new THREE.Color(1118481)},shininess:{value:30}}]),vertexShader:THREE.ShaderChunk.meshphong_vert,fragmentShader:THREE.ShaderChunk.meshphong_frag},\n\tstandard:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.roughnessmap,THREE.UniformsLib.metalnessmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)},roughness:{value:.5},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,\n\tfragmentShader:THREE.ShaderChunk.meshphysical_frag},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.points_vert,fragmentShader:THREE.ShaderChunk.points_frag},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:THREE.ShaderChunk.linedashed_vert,fragmentShader:THREE.ShaderChunk.linedashed_frag},depth:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,\n\tTHREE.UniformsLib.displacementmap]),vertexShader:THREE.ShaderChunk.depth_vert,fragmentShader:THREE.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{value:1}},vertexShader:THREE.ShaderChunk.normal_vert,fragmentShader:THREE.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1}},vertexShader:THREE.ShaderChunk.cube_vert,fragmentShader:THREE.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:THREE.ShaderChunk.equirect_vert,fragmentShader:THREE.ShaderChunk.equirect_frag},\n\tdistanceRGBA:{uniforms:{lightPos:{value:new THREE.Vector3}},vertexShader:THREE.ShaderChunk.distanceRGBA_vert,fragmentShader:THREE.ShaderChunk.distanceRGBA_frag}};THREE.ShaderLib.physical={uniforms:THREE.UniformsUtils.merge([THREE.ShaderLib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,fragmentShader:THREE.ShaderChunk.meshphysical_frag};\n\tTHREE.WebGLRenderer=function(a){function b(a,b,c,d){!0===A&&(a*=d,b*=d,c*=d);R.clearColor(a,b,c,d)}function c(){R.init();R.scissor(X.copy(ua).multiplyScalar($));R.viewport(ba.copy(ma).multiplyScalar($));b(V.r,V.g,V.b,Y)}function d(){T=Q=null;aa=\"\";G=-1;R.reset()}function e(a){a.preventDefault();d();c();Z.clear()}function f(a){a=a.target;a.removeEventListener(\"dispose\",f);g(a);Z.delete(a)}function g(a){var b=Z.get(a).program;a.program=void 0;void 0!==b&&na.releaseProgram(b)}function h(a,b){return Math.abs(b[0])-\n\tMath.abs(a[0])}function k(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function l(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function n(a,b,c,d,e){var f;c.transparent?(d=P,f=++M):(d=F,f=++K);f=d[f];void 0!==f?(f.id=a.id,f.object=a,f.geometry=b,f.material=c,f.z=W.z,f.group=e):(f=\n\t{id:a.id,object:a,geometry:b,material:c,z:W.z,group:e},d.push(f))}function p(a){if(!wa.intersectsSphere(a))return!1;var b=ca.numPlanes;if(0===b)return!0;var c=N.clippingPlanes,d=a.center;a=-a.radius;var e=0;do if(c[e].distanceToPoint(d)<a)return!1;while(++e!==b);return!0}function m(a,b){if(!1!==a.visible){if(a.layers.test(b.layers))if(a instanceof THREE.Light)B.push(a);else if(a instanceof THREE.Sprite){var c;(c=!1===a.frustumCulled)||(ha.center.set(0,0,0),ha.radius=.7071067811865476,ha.applyMatrix4(a.matrixWorld),\n\tc=!0===p(ha));c&&L.push(a)}else if(a instanceof THREE.LensFlare)O.push(a);else if(a instanceof THREE.ImmediateRenderObject)!0===N.sortObjects&&(W.setFromMatrixPosition(a.matrixWorld),W.applyProjection(pa)),n(a,null,a.material,W.z,null);else if(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Points)if(a instanceof THREE.SkinnedMesh&&a.skeleton.update(),(c=!1===a.frustumCulled)||(c=a.geometry,null===c.boundingSphere&&c.computeBoundingSphere(),ha.copy(c.boundingSphere).applyMatrix4(a.matrixWorld),\n\tc=!0===p(ha)),c){var d=a.material;if(!0===d.visible)if(!0===N.sortObjects&&(W.setFromMatrixPosition(a.matrixWorld),W.applyProjection(pa)),c=ea.update(a),d instanceof THREE.MultiMaterial)for(var e=c.groups,f=d.materials,d=0,g=e.length;d<g;d++){var h=e[d],k=f[h.materialIndex];!0===k.visible&&n(a,c,k,W.z,h)}else n(a,c,d,W.z,null)}c=a.children;d=0;for(g=c.length;d<g;d++)m(c[d],b)}}function q(a,b,c,d){for(var e=0,f=a.length;e<f;e++){var g=a[e],h=g.object,k=g.geometry,m=void 0===d?g.material:d,g=g.group;\n\th.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,h.matrixWorld);h.normalMatrix.getNormalMatrix(h.modelViewMatrix);if(h instanceof THREE.ImmediateRenderObject){r(m);var l=s(b,c,m,h);aa=\"\";h.render(function(a){N.renderBufferImmediate(a,l,m)})}else N.renderBufferDirect(b,c,k,m,h,g)}}function r(a){a.side!==THREE.DoubleSide?R.enable(x.CULL_FACE):R.disable(x.CULL_FACE);R.setFlipSided(a.side===THREE.BackSide);!0===a.transparent?R.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,\n\ta.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha):R.setBlending(THREE.NoBlending);R.setDepthFunc(a.depthFunc);R.setDepthTest(a.depthTest);R.setDepthWrite(a.depthWrite);R.setColorWrite(a.colorWrite);R.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}function s(a,b,c,d){ia=0;var e=Z.get(c);qa&&((va||a!==T)&&ca.setState(c.clippingPlanes,c.clipShadows,a,e,a===T&&c.id===G),void 0!==e.numClippingPlanes&&e.numClippingPlanes!==ca.numPlanes&&(c.needsUpdate=!0));void 0===e.program&&\n\t(c.needsUpdate=!0);void 0!==e.lightsHash&&e.lightsHash!==S.hash&&(c.needsUpdate=!0);if(c.needsUpdate){a:{var h=Z.get(c),k=na.getParameters(c,S,b,ca.numPlanes,d),m=na.getProgramCode(c,k),l=h.program,p=!0;if(void 0===l)c.addEventListener(\"dispose\",f);else if(l.code!==m)g(c);else if(void 0!==k.shaderID)break a;else p=!1;p&&(k.shaderID?(l=THREE.ShaderLib[k.shaderID],h.__webglShader={name:c.type,uniforms:THREE.UniformsUtils.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}):\n\th.__webglShader={name:c.type,uniforms:c.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader},c.__webglShader=h.__webglShader,l=na.acquireProgram(c,k,m),h.program=l,c.program=l);k=l.getAttributes();if(c.morphTargets)for(m=c.numSupportedMorphTargets=0;m<N.maxMorphTargets;m++)0<=k[\"morphTarget\"+m]&&c.numSupportedMorphTargets++;if(c.morphNormals)for(m=c.numSupportedMorphNormals=0;m<N.maxMorphNormals;m++)0<=k[\"morphNormal\"+m]&&c.numSupportedMorphNormals++;k=h.__webglShader.uniforms;(c instanceof\n\tTHREE.ShaderMaterial||c instanceof THREE.RawShaderMaterial)&&!0!==c.clipping||(h.numClippingPlanes=ca.numPlanes,k.clippingPlanes=ca.uniform);c.lights&&(h.lightsHash=S.hash,k.ambientLightColor.value=S.ambient,k.directionalLights.value=S.directional,k.spotLights.value=S.spot,k.pointLights.value=S.point,k.hemisphereLights.value=S.hemi,k.directionalShadowMap.value=S.directionalShadowMap,k.directionalShadowMatrix.value=S.directionalShadowMatrix,k.spotShadowMap.value=S.spotShadowMap,k.spotShadowMatrix.value=\n\tS.spotShadowMatrix,k.pointShadowMap.value=S.pointShadowMap,k.pointShadowMatrix.value=S.pointShadowMatrix);m=h.program.getUniforms();m=THREE.WebGLUniforms.seqWithValue(m.seq,k);h.uniformsList=m;h.dynamicUniforms=THREE.WebGLUniforms.splitDynamic(m,k)}c.needsUpdate=!1}var n=!1,p=l=!1,h=e.program,m=h.getUniforms(),k=e.__webglShader.uniforms;h.id!==Q&&(x.useProgram(h.program),Q=h.id,p=l=n=!0);c.id!==G&&(G=c.id,l=!0);if(n||a!==T){m.set(x,a,\"projectionMatrix\");da.logarithmicDepthBuffer&&m.setValue(x,\"logDepthBufFC\",\n\t2/(Math.log(a.far+1)/Math.LN2));a!==T&&(T=a,p=l=!0);if(c instanceof THREE.ShaderMaterial||c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshStandardMaterial||c.envMap)n=m.map.cameraPosition,void 0!==n&&n.setValue(x,W.setFromMatrixPosition(a.matrixWorld));(c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshBasicMaterial||c instanceof THREE.MeshStandardMaterial||c instanceof THREE.ShaderMaterial||c.skinning)&&m.setValue(x,\"viewMatrix\",a.matrixWorldInverse);\n\tm.set(x,N,\"toneMappingExposure\");m.set(x,N,\"toneMappingWhitePoint\")}c.skinning&&(m.setOptional(x,d,\"bindMatrix\"),m.setOptional(x,d,\"bindMatrixInverse\"),n=d.skeleton)&&(da.floatVertexTextures&&n.useVertexTexture?(m.set(x,n,\"boneTexture\"),m.set(x,n,\"boneTextureWidth\"),m.set(x,n,\"boneTextureHeight\")):m.setOptional(x,n,\"boneMatrices\"));if(l){c.lights&&(l=p,k.ambientLightColor.needsUpdate=l,k.directionalLights.needsUpdate=l,k.pointLights.needsUpdate=l,k.spotLights.needsUpdate=l,k.hemisphereLights.needsUpdate=\n\tl);b&&c.fog&&(k.fogColor.value=b.color,b instanceof THREE.Fog?(k.fogNear.value=b.near,k.fogFar.value=b.far):b instanceof THREE.FogExp2&&(k.fogDensity.value=b.density));if(c instanceof THREE.MeshBasicMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshStandardMaterial||c instanceof THREE.MeshDepthMaterial){k.opacity.value=c.opacity;k.diffuse.value=c.color;c.emissive&&k.emissive.value.copy(c.emissive).multiplyScalar(c.emissiveIntensity);k.map.value=\n\tc.map;k.specularMap.value=c.specularMap;k.alphaMap.value=c.alphaMap;c.aoMap&&(k.aoMap.value=c.aoMap,k.aoMapIntensity.value=c.aoMapIntensity);var q;c.map?q=c.map:c.specularMap?q=c.specularMap:c.displacementMap?q=c.displacementMap:c.normalMap?q=c.normalMap:c.bumpMap?q=c.bumpMap:c.roughnessMap?q=c.roughnessMap:c.metalnessMap?q=c.metalnessMap:c.alphaMap?q=c.alphaMap:c.emissiveMap&&(q=c.emissiveMap);void 0!==q&&(q instanceof THREE.WebGLRenderTarget&&(q=q.texture),b=q.offset,q=q.repeat,k.offsetRepeat.value.set(b.x,\n\tb.y,q.x,q.y));k.envMap.value=c.envMap;k.flipEnvMap.value=c.envMap instanceof THREE.CubeTexture?-1:1;k.reflectivity.value=c.reflectivity;k.refractionRatio.value=c.refractionRatio}c instanceof THREE.LineBasicMaterial?(k.diffuse.value=c.color,k.opacity.value=c.opacity):c instanceof THREE.LineDashedMaterial?(k.diffuse.value=c.color,k.opacity.value=c.opacity,k.dashSize.value=c.dashSize,k.totalSize.value=c.dashSize+c.gapSize,k.scale.value=c.scale):c instanceof THREE.PointsMaterial?(k.diffuse.value=c.color,\n\tk.opacity.value=c.opacity,k.size.value=c.size*$,k.scale.value=.5*v.clientHeight,k.map.value=c.map,null!==c.map&&(q=c.map.offset,c=c.map.repeat,k.offsetRepeat.value.set(q.x,q.y,c.x,c.y))):c instanceof THREE.MeshLambertMaterial?(c.lightMap&&(k.lightMap.value=c.lightMap,k.lightMapIntensity.value=c.lightMapIntensity),c.emissiveMap&&(k.emissiveMap.value=c.emissiveMap)):c instanceof THREE.MeshPhongMaterial?(k.specular.value=c.specular,k.shininess.value=Math.max(c.shininess,1E-4),c.lightMap&&(k.lightMap.value=\n\tc.lightMap,k.lightMapIntensity.value=c.lightMapIntensity),c.emissiveMap&&(k.emissiveMap.value=c.emissiveMap),c.bumpMap&&(k.bumpMap.value=c.bumpMap,k.bumpScale.value=c.bumpScale),c.normalMap&&(k.normalMap.value=c.normalMap,k.normalScale.value.copy(c.normalScale)),c.displacementMap&&(k.displacementMap.value=c.displacementMap,k.displacementScale.value=c.displacementScale,k.displacementBias.value=c.displacementBias)):c instanceof THREE.MeshPhysicalMaterial?(k.clearCoat.value=c.clearCoat,k.clearCoatRoughness.value=\n\tc.clearCoatRoughness,t(k,c)):c instanceof THREE.MeshStandardMaterial?t(k,c):c instanceof THREE.MeshDepthMaterial?c.displacementMap&&(k.displacementMap.value=c.displacementMap,k.displacementScale.value=c.displacementScale,k.displacementBias.value=c.displacementBias):c instanceof THREE.MeshNormalMaterial&&(k.opacity.value=c.opacity);THREE.WebGLUniforms.upload(x,e.uniformsList,k,N)}m.set(x,d,\"modelViewMatrix\");m.set(x,d,\"normalMatrix\");m.setValue(x,\"modelMatrix\",d.matrixWorld);e=e.dynamicUniforms;null!==\n\te&&(THREE.WebGLUniforms.evalDynamic(e,k,d,a),THREE.WebGLUniforms.upload(x,e,k,N));return h}function t(a,b){a.roughness.value=b.roughness;a.metalness.value=b.metalness;b.roughnessMap&&(a.roughnessMap.value=b.roughnessMap);b.metalnessMap&&(a.metalnessMap.value=b.metalnessMap);b.lightMap&&(a.lightMap.value=b.lightMap,a.lightMapIntensity.value=b.lightMapIntensity);b.emissiveMap&&(a.emissiveMap.value=b.emissiveMap);b.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale);b.normalMap&&(a.normalMap.value=\n\tb.normalMap,a.normalScale.value.copy(b.normalScale));b.displacementMap&&(a.displacementMap.value=b.displacementMap,a.displacementScale.value=b.displacementScale,a.displacementBias.value=b.displacementBias);b.envMap&&(a.envMapIntensity.value=b.envMapIntensity)}function u(a){var b;if(a===THREE.RepeatWrapping)return x.REPEAT;if(a===THREE.ClampToEdgeWrapping)return x.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return x.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return x.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return x.NEAREST_MIPMAP_NEAREST;\n\tif(a===THREE.NearestMipMapLinearFilter)return x.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return x.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return x.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return x.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return x.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return x.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return x.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return x.UNSIGNED_SHORT_5_6_5;\n\tif(a===THREE.ByteType)return x.BYTE;if(a===THREE.ShortType)return x.SHORT;if(a===THREE.UnsignedShortType)return x.UNSIGNED_SHORT;if(a===THREE.IntType)return x.INT;if(a===THREE.UnsignedIntType)return x.UNSIGNED_INT;if(a===THREE.FloatType)return x.FLOAT;b=U.get(\"OES_texture_half_float\");if(null!==b&&a===THREE.HalfFloatType)return b.HALF_FLOAT_OES;if(a===THREE.AlphaFormat)return x.ALPHA;if(a===THREE.RGBFormat)return x.RGB;if(a===THREE.RGBAFormat)return x.RGBA;if(a===THREE.LuminanceFormat)return x.LUMINANCE;\n\tif(a===THREE.LuminanceAlphaFormat)return x.LUMINANCE_ALPHA;if(a===THREE.DepthFormat)return x.DEPTH_COMPONENT;if(a===THREE.AddEquation)return x.FUNC_ADD;if(a===THREE.SubtractEquation)return x.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return x.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return x.ZERO;if(a===THREE.OneFactor)return x.ONE;if(a===THREE.SrcColorFactor)return x.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return x.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return x.SRC_ALPHA;\n\tif(a===THREE.OneMinusSrcAlphaFactor)return x.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return x.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return x.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return x.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return x.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return x.SRC_ALPHA_SATURATE;b=U.get(\"WEBGL_compressed_texture_s3tc\");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\tif(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=U.get(\"WEBGL_compressed_texture_pvrtc\");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=\n\tU.get(\"WEBGL_compressed_texture_etc1\");if(null!==b&&a===THREE.RGB_ETC1_Format)return b.COMPRESSED_RGB_ETC1_WEBGL;b=U.get(\"EXT_blend_minmax\");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}console.log(\"THREE.WebGLRenderer\",THREE.REVISION);a=a||{};var v=void 0!==a.canvas?a.canvas:document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),C=void 0!==a.context?a.context:null,w=void 0!==a.alpha?a.alpha:!1,E=void 0!==a.depth?a.depth:!0,z=\n\tvoid 0!==a.stencil?a.stencil:!0,y=void 0!==a.antialias?a.antialias:!1,A=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,I=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,B=[],F=[],K=-1,P=[],M=-1,H=new Float32Array(8),L=[],O=[];this.domElement=v;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;this.gammaFactor=2;this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=\n\t!1;this.toneMapping=THREE.LinearToneMapping;this.toneMappingWhitePoint=this.toneMappingExposure=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var N=this,Q=null,J=null,D=null,G=-1,aa=\"\",T=null,X=new THREE.Vector4,ja=null,ba=new THREE.Vector4,ia=0,V=new THREE.Color(0),Y=0,ra=v.width,sa=v.height,$=1,ua=new THREE.Vector4(0,0,ra,sa),xa=!1,ma=new THREE.Vector4(0,0,ra,sa),wa=new THREE.Frustum,ca=new THREE.WebGLClipping,qa=!1,va=!1,ha=new THREE.Sphere,pa=new THREE.Matrix4,W=new THREE.Vector3,S={hash:\"\",\n\tambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},fa={calls:0,vertices:0,faces:0,points:0};this.info={render:fa,memory:{geometries:0,textures:0},programs:null};var x;try{w={alpha:w,depth:E,stencil:z,antialias:y,premultipliedAlpha:A,preserveDrawingBuffer:I};x=C||v.getContext(\"webgl\",w)||v.getContext(\"experimental-webgl\",w);if(null===x){if(null!==v.getContext(\"webgl\"))throw\"Error creating WebGL context with your selected attributes.\";\n\tthrow\"Error creating WebGL context.\";}void 0===x.getShaderPrecisionFormat&&(x.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});v.addEventListener(\"webglcontextlost\",e,!1)}catch(za){console.error(\"THREE.WebGLRenderer: \"+za)}var U=new THREE.WebGLExtensions(x);U.get(\"WEBGL_depth_texture\");U.get(\"OES_texture_float\");U.get(\"OES_texture_float_linear\");U.get(\"OES_texture_half_float\");U.get(\"OES_texture_half_float_linear\");U.get(\"OES_standard_derivatives\");U.get(\"ANGLE_instanced_arrays\");\n\tU.get(\"OES_element_index_uint\")&&(THREE.BufferGeometry.MaxIndex=4294967296);var da=new THREE.WebGLCapabilities(x,U,a),R=new THREE.WebGLState(x,U,u),Z=new THREE.WebGLProperties,ka=new THREE.WebGLTextures(x,U,R,Z,da,u,this.info),ea=new THREE.WebGLObjects(x,Z,this.info),na=new THREE.WebGLPrograms(this,da),ta=new THREE.WebGLLights;this.info.programs=na.programs;var Aa=new THREE.WebGLBufferRenderer(x,U,fa),Ba=new THREE.WebGLIndexedBufferRenderer(x,U,fa),Ca=new THREE.OrthographicCamera(-1,1,1,-1,0,1),la=\n\tnew THREE.PerspectiveCamera,oa=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.MeshBasicMaterial({depthTest:!1,depthWrite:!1}));a=THREE.ShaderLib.cube;var ga=new THREE.Mesh(new THREE.BoxBufferGeometry(5,5,5),new THREE.ShaderMaterial({uniforms:a.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,depthTest:!1,depthWrite:!1,side:THREE.BackSide}));ea.update(oa);ea.update(ga);c();this.context=x;this.capabilities=da;this.extensions=U;this.properties=Z;this.state=R;var ya=new THREE.WebGLShadowMap(this,\n\tS,ea);this.shadowMap=ya;var Da=new THREE.SpritePlugin(this,L),Ea=new THREE.LensFlarePlugin(this,O);this.getContext=function(){return x};this.getContextAttributes=function(){return x.getContextAttributes()};this.forceContextLoss=function(){U.get(\"WEBGL_lose_context\").loseContext()};this.getMaxAnisotropy=function(){return da.getMaxAnisotropy()};this.getPrecision=function(){return da.precision};this.getPixelRatio=function(){return $};this.setPixelRatio=function(a){void 0!==a&&($=a,this.setSize(ma.z,\n\tma.w,!1))};this.getSize=function(){return{width:ra,height:sa}};this.setSize=function(a,b,c){ra=a;sa=b;v.width=a*$;v.height=b*$;!1!==c&&(v.style.width=a+\"px\",v.style.height=b+\"px\");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){R.viewport(ma.set(a,b,c,d))};this.setScissor=function(a,b,c,d){R.scissor(ua.set(a,b,c,d))};this.setScissorTest=function(a){R.setScissorTest(xa=a)};this.getClearColor=function(){return V};this.setClearColor=function(a,c){V.set(a);Y=void 0!==c?c:1;b(V.r,V.g,V.b,\n\tY)};this.getClearAlpha=function(){return Y};this.setClearAlpha=function(a){Y=a;b(V.r,V.g,V.b,Y)};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=x.COLOR_BUFFER_BIT;if(void 0===b||b)d|=x.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=x.STENCIL_BUFFER_BIT;x.clear(d)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.resetGLState=\n\td;this.dispose=function(){P=[];M=-1;F=[];K=-1;v.removeEventListener(\"webglcontextlost\",e,!1)};this.renderBufferImmediate=function(a,b,c){R.initAttributes();var d=Z.get(a);a.hasPositions&&!d.position&&(d.position=x.createBuffer());a.hasNormals&&!d.normal&&(d.normal=x.createBuffer());a.hasUvs&&!d.uv&&(d.uv=x.createBuffer());a.hasColors&&!d.color&&(d.color=x.createBuffer());b=b.getAttributes();a.hasPositions&&(x.bindBuffer(x.ARRAY_BUFFER,d.position),x.bufferData(x.ARRAY_BUFFER,a.positionArray,x.DYNAMIC_DRAW),\n\tR.enableAttribute(b.position),x.vertexAttribPointer(b.position,3,x.FLOAT,!1,0,0));if(a.hasNormals){x.bindBuffer(x.ARRAY_BUFFER,d.normal);if(\"MeshPhongMaterial\"!==c.type&&\"MeshStandardMaterial\"!==c.type&&\"MeshPhysicalMaterial\"!==c.type&&c.shading===THREE.FlatShading)for(var e=0,f=3*a.count;e<f;e+=9){var g=a.normalArray,h=(g[e+0]+g[e+3]+g[e+6])/3,k=(g[e+1]+g[e+4]+g[e+7])/3,m=(g[e+2]+g[e+5]+g[e+8])/3;g[e+0]=h;g[e+1]=k;g[e+2]=m;g[e+3]=h;g[e+4]=k;g[e+5]=m;g[e+6]=h;g[e+7]=k;g[e+8]=m}x.bufferData(x.ARRAY_BUFFER,\n\ta.normalArray,x.DYNAMIC_DRAW);R.enableAttribute(b.normal);x.vertexAttribPointer(b.normal,3,x.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(x.bindBuffer(x.ARRAY_BUFFER,d.uv),x.bufferData(x.ARRAY_BUFFER,a.uvArray,x.DYNAMIC_DRAW),R.enableAttribute(b.uv),x.vertexAttribPointer(b.uv,2,x.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(x.bindBuffer(x.ARRAY_BUFFER,d.color),x.bufferData(x.ARRAY_BUFFER,a.colorArray,x.DYNAMIC_DRAW),R.enableAttribute(b.color),x.vertexAttribPointer(b.color,3,x.FLOAT,!1,0,0));R.disableUnusedAttributes();\n\tx.drawArrays(x.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,g){r(d);var f=s(a,b,d,e),k=!1;a=c.id+\"_\"+f.id+\"_\"+d.wireframe;a!==aa&&(aa=a,k=!0);b=e.morphTargetInfluences;if(void 0!==b){a=[];for(var m=0,k=b.length;m<k;m++){var l=b[m];a.push([l,m])}a.sort(h);8<a.length&&(a.length=8);for(var n=c.morphAttributes,m=0,k=a.length;m<k;m++)l=a[m],H[m]=l[0],0!==l[0]?(b=l[1],!0===d.morphTargets&&n.position&&c.addAttribute(\"morphTarget\"+m,n.position[b]),!0===d.morphNormals&&n.normal&&\n\tc.addAttribute(\"morphNormal\"+m,n.normal[b])):(!0===d.morphTargets&&c.removeAttribute(\"morphTarget\"+m),!0===d.morphNormals&&c.removeAttribute(\"morphNormal\"+m));f.getUniforms().setValue(x,\"morphTargetInfluences\",H);k=!0}b=c.index;m=c.attributes.position;!0===d.wireframe&&(b=ea.getWireframeAttribute(c));null!==b?(a=Ba,a.setIndex(b)):a=Aa;if(k){a:{var k=void 0,p;if(c instanceof THREE.InstancedBufferGeometry&&(p=U.get(\"ANGLE_instanced_arrays\"),null===p)){console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\n\tbreak a}void 0===k&&(k=0);R.initAttributes();var l=c.attributes,f=f.getAttributes(),n=d.defaultAttributeValues,q;for(q in f){var v=f[q];if(0<=v){var u=l[q];if(void 0!==u){var w=x.FLOAT,C=u.array,t=u.normalized;C instanceof Float32Array?w=x.FLOAT:C instanceof Float64Array?console.warn(\"Unsupported data buffer format: Float64Array\"):C instanceof Uint16Array?w=x.UNSIGNED_SHORT:C instanceof Int16Array?w=x.SHORT:C instanceof Uint32Array?w=x.UNSIGNED_INT:C instanceof Int32Array?w=x.INT:C instanceof Int8Array?\n\tw=x.BYTE:C instanceof Uint8Array&&(w=x.UNSIGNED_BYTE);var C=u.itemSize,y=ea.getAttributeBuffer(u);if(u instanceof THREE.InterleavedBufferAttribute){var z=u.data,A=z.stride,u=u.offset;z instanceof THREE.InstancedInterleavedBuffer?(R.enableAttributeAndDivisor(v,z.meshPerAttribute,p),void 0===c.maxInstancedCount&&(c.maxInstancedCount=z.meshPerAttribute*z.count)):R.enableAttribute(v);x.bindBuffer(x.ARRAY_BUFFER,y);x.vertexAttribPointer(v,C,w,t,A*z.array.BYTES_PER_ELEMENT,(k*A+u)*z.array.BYTES_PER_ELEMENT)}else u instanceof\n\tTHREE.InstancedBufferAttribute?(R.enableAttributeAndDivisor(v,u.meshPerAttribute,p),void 0===c.maxInstancedCount&&(c.maxInstancedCount=u.meshPerAttribute*u.count)):R.enableAttribute(v),x.bindBuffer(x.ARRAY_BUFFER,y),x.vertexAttribPointer(v,C,w,t,0,k*C*u.array.BYTES_PER_ELEMENT)}else if(void 0!==n&&(w=n[q],void 0!==w))switch(w.length){case 2:x.vertexAttrib2fv(v,w);break;case 3:x.vertexAttrib3fv(v,w);break;case 4:x.vertexAttrib4fv(v,w);break;default:x.vertexAttrib1fv(v,w)}}}R.disableUnusedAttributes()}null!==\n\tb&&x.bindBuffer(x.ELEMENT_ARRAY_BUFFER,ea.getAttributeBuffer(b))}p=Infinity;null!==b?p=b.count:void 0!==m&&(p=m.count);q=c.drawRange.start;b=c.drawRange.count;m=null!==g?g.start:0;k=null!==g?g.count:Infinity;g=Math.max(0,q,m);p=Math.min(0+p,q+b,m+k)-1;p=Math.max(0,p-g+1);if(e instanceof THREE.Mesh)if(!0===d.wireframe)R.setLineWidth(d.wireframeLinewidth*(null===J?$:1)),a.setMode(x.LINES);else switch(e.drawMode){case THREE.TrianglesDrawMode:a.setMode(x.TRIANGLES);break;case THREE.TriangleStripDrawMode:a.setMode(x.TRIANGLE_STRIP);\n\tbreak;case THREE.TriangleFanDrawMode:a.setMode(x.TRIANGLE_FAN)}else e instanceof THREE.Line?(d=d.linewidth,void 0===d&&(d=1),R.setLineWidth(d*(null===J?$:1)),e instanceof THREE.LineSegments?a.setMode(x.LINES):a.setMode(x.LINE_STRIP)):e instanceof THREE.Points&&a.setMode(x.POINTS);c instanceof THREE.InstancedBufferGeometry?0<c.maxInstancedCount&&a.renderInstances(c,g,p):a.render(g,p)};this.render=function(a,c,d,e){if(!1===c instanceof THREE.Camera)console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");\n\telse{var g=a.fog;aa=\"\";G=-1;T=null;!0===a.autoUpdate&&a.updateMatrixWorld();null===c.parent&&c.updateMatrixWorld();c.matrixWorldInverse.getInverse(c.matrixWorld);pa.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse);wa.setFromMatrix(pa);B.length=0;M=K=-1;L.length=0;O.length=0;va=this.localClippingEnabled;qa=ca.init(this.clippingPlanes,va,c);m(a,c);F.length=K+1;P.length=M+1;!0===N.sortObjects&&(F.sort(k),P.sort(l));qa&&ca.beginShadows();for(var f=B,h=0,p=0,n=f.length;p<n;p++){var v=f[p];v.castShadow&&\n\t(S.shadows[h++]=v)}S.shadows.length=h;ya.render(a,c);for(var f=B,r=v=0,s=0,u,w,C,t,H=c.matrixWorldInverse,y=0,z=0,J=0,A=0,h=0,p=f.length;h<p;h++)if(n=f[h],u=n.color,w=n.intensity,C=n.distance,t=n.shadow&&n.shadow.map?n.shadow.map.texture:null,n instanceof THREE.AmbientLight)v+=u.r*w,r+=u.g*w,s+=u.b*w;else if(n instanceof THREE.DirectionalLight){var D=ta.get(n);D.color.copy(n.color).multiplyScalar(n.intensity);D.direction.setFromMatrixPosition(n.matrixWorld);W.setFromMatrixPosition(n.target.matrixWorld);\n\tD.direction.sub(W);D.direction.transformDirection(H);if(D.shadow=n.castShadow)D.shadowBias=n.shadow.bias,D.shadowRadius=n.shadow.radius,D.shadowMapSize=n.shadow.mapSize;S.directionalShadowMap[y]=t;S.directionalShadowMatrix[y]=n.shadow.matrix;S.directional[y++]=D}else if(n instanceof THREE.SpotLight){D=ta.get(n);D.position.setFromMatrixPosition(n.matrixWorld);D.position.applyMatrix4(H);D.color.copy(u).multiplyScalar(w);D.distance=C;D.direction.setFromMatrixPosition(n.matrixWorld);W.setFromMatrixPosition(n.target.matrixWorld);\n\tD.direction.sub(W);D.direction.transformDirection(H);D.coneCos=Math.cos(n.angle);D.penumbraCos=Math.cos(n.angle*(1-n.penumbra));D.decay=0===n.distance?0:n.decay;if(D.shadow=n.castShadow)D.shadowBias=n.shadow.bias,D.shadowRadius=n.shadow.radius,D.shadowMapSize=n.shadow.mapSize;S.spotShadowMap[J]=t;S.spotShadowMatrix[J]=n.shadow.matrix;S.spot[J++]=D}else if(n instanceof THREE.PointLight){D=ta.get(n);D.position.setFromMatrixPosition(n.matrixWorld);D.position.applyMatrix4(H);D.color.copy(n.color).multiplyScalar(n.intensity);\n\tD.distance=n.distance;D.decay=0===n.distance?0:n.decay;if(D.shadow=n.castShadow)D.shadowBias=n.shadow.bias,D.shadowRadius=n.shadow.radius,D.shadowMapSize=n.shadow.mapSize;S.pointShadowMap[z]=t;void 0===S.pointShadowMatrix[z]&&(S.pointShadowMatrix[z]=new THREE.Matrix4);W.setFromMatrixPosition(n.matrixWorld).negate();S.pointShadowMatrix[z].identity().setPosition(W);S.point[z++]=D}else n instanceof THREE.HemisphereLight&&(D=ta.get(n),D.direction.setFromMatrixPosition(n.matrixWorld),D.direction.transformDirection(H),\n\tD.direction.normalize(),D.skyColor.copy(n.color).multiplyScalar(w),D.groundColor.copy(n.groundColor).multiplyScalar(w),S.hemi[A++]=D);S.ambient[0]=v;S.ambient[1]=r;S.ambient[2]=s;S.directional.length=y;S.spot.length=J;S.point.length=z;S.hemi.length=A;S.hash=y+\",\"+z+\",\"+J+\",\"+A+\",\"+S.shadows.length;qa&&ca.endShadows();fa.calls=0;fa.vertices=0;fa.faces=0;fa.points=0;void 0===d&&(d=null);this.setRenderTarget(d);f=a.background;null===f?b(V.r,V.g,V.b,Y):f instanceof THREE.Color&&b(f.r,f.g,f.b,1);(this.autoClear||\n\te)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);f instanceof THREE.CubeTexture?(la.projectionMatrix.copy(c.projectionMatrix),la.matrixWorld.extractRotation(c.matrixWorld),la.matrixWorldInverse.getInverse(la.matrixWorld),ga.material.uniforms.tCube.value=f,ga.modelViewMatrix.multiplyMatrices(la.matrixWorldInverse,ga.matrixWorld),N.renderBufferDirect(la,null,ga.geometry,ga.material,ga,null)):f instanceof THREE.Texture&&(oa.material.map=f,N.renderBufferDirect(Ca,null,oa.geometry,\n\toa.material,oa,null));a.overrideMaterial?(e=a.overrideMaterial,q(F,c,g,e),q(P,c,g,e)):(R.setBlending(THREE.NoBlending),q(F,c,g),q(P,c,g));Da.render(a,c);Ea.render(a,c,ba);d&&ka.updateRenderTargetMipmap(d);R.setDepthTest(!0);R.setDepthWrite(!0);R.setColorWrite(!0)}};this.setFaceCulling=function(a,b){R.setCullFace(a);R.setFlipSided(b===THREE.FrontFaceDirectionCW)};this.allocTextureUnit=function(){var a=ia;a>=da.maxTextures&&console.warn(\"WebGLRenderer: trying to use \"+a+\" texture units while this GPU supports only \"+\n\tda.maxTextures);ia+=1;return a};this.setTexture2D=function(){var a=!1;return function(b,c){b instanceof THREE.WebGLRenderTarget&&(a||(console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\"),a=!0),b=b.texture);ka.setTexture2D(b,c)}}();this.setTexture=function(){var a=!1;return function(b,c){a||(console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\"),a=!0);ka.setTexture2D(b,c)}}();this.setTextureCube=\n\tfunction(){var a=!1;return function(b,c){b instanceof THREE.WebGLRenderTargetCube&&(a||(console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"),a=!0),b=b.texture);b instanceof THREE.CubeTexture||Array.isArray(b.image)&&6===b.image.length?ka.setTextureCube(b,c):ka.setTextureCubeDynamic(b,c)}}();this.getCurrentRenderTarget=function(){return J};this.setRenderTarget=function(a){(J=a)&&void 0===Z.get(a).__webglFramebuffer&&ka.setupRenderTarget(a);\n\tvar b=a instanceof THREE.WebGLRenderTargetCube,c;a?(c=Z.get(a),c=b?c.__webglFramebuffer[a.activeCubeFace]:c.__webglFramebuffer,X.copy(a.scissor),ja=a.scissorTest,ba.copy(a.viewport)):(c=null,X.copy(ua).multiplyScalar($),ja=xa,ba.copy(ma).multiplyScalar($));D!==c&&(x.bindFramebuffer(x.FRAMEBUFFER,c),D=c);R.scissor(X);R.setScissorTest(ja);R.viewport(ba);b&&(b=Z.get(a.texture),x.framebufferTexture2D(x.FRAMEBUFFER,x.COLOR_ATTACHMENT0,x.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,b.__webglTexture,a.activeMipMapLevel))};\n\tthis.readRenderTargetPixels=function(a,b,c,d,e,f){if(!1===a instanceof THREE.WebGLRenderTarget)console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");else{var g=Z.get(a).__webglFramebuffer;if(g){var h=!1;g!==D&&(x.bindFramebuffer(x.FRAMEBUFFER,g),h=!0);try{var k=a.texture;k.format!==THREE.RGBAFormat&&u(k.format)!==x.getParameter(x.IMPLEMENTATION_COLOR_READ_FORMAT)?console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\"):\n\tk.type===THREE.UnsignedByteType||u(k.type)===x.getParameter(x.IMPLEMENTATION_COLOR_READ_TYPE)||k.type===THREE.FloatType&&U.get(\"WEBGL_color_buffer_float\")||k.type===THREE.HalfFloatType&&U.get(\"EXT_color_buffer_half_float\")?x.checkFramebufferStatus(x.FRAMEBUFFER)===x.FRAMEBUFFER_COMPLETE?0<=b&&b<=a.width-d&&0<=c&&c<=a.height-e&&x.readPixels(b,c,d,e,u(k.format),u(k.type),f):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\"):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\")}finally{h&&\n\tx.bindFramebuffer(x.FRAMEBUFFER,D)}}}}};\n\tTHREE.WebGLRenderTarget=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.width=a;this.height=b;this.scissor=new THREE.Vector4(0,0,a,b);this.scissorTest=!1;this.viewport=new THREE.Vector4(0,0,a,b);c=c||{};void 0===c.minFilter&&(c.minFilter=THREE.LinearFilter);this.texture=new THREE.Texture(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:\n\t!0;this.depthTexture=null};\n\tObject.assign(THREE.WebGLRenderTarget.prototype,THREE.EventDispatcher.prototype,{setSize:function(a,b){if(this.width!==a||this.height!==b)this.width=a,this.height=b,this.dispose();this.viewport.set(0,0,a,b);this.scissor.set(0,0,a,b)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.width=a.width;this.height=a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.depthTexture=a.depthTexture;\n\treturn this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}});THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeMipMapLevel=this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;\n\tTHREE.WebGLBufferRenderer=function(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,f){a.drawArrays(d,b,f);c.calls++;c.vertices+=f;d===a.TRIANGLES&&(c.faces+=f/3)};this.renderInstances=function(e){var f=b.get(\"ANGLE_instanced_arrays\");if(null===f)console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");else{var g=e.attributes.position,h=0,h=g instanceof THREE.InterleavedBufferAttribute?g.data.count:\n\tg.count;f.drawArraysInstancedANGLE(d,0,h,e.maxInstancedCount);c.calls++;c.vertices+=h*e.maxInstancedCount;d===a.TRIANGLES&&(c.faces+=e.maxInstancedCount*h/3)}}};\n\tTHREE.WebGLClipping=function(){function a(){l.value!==d&&(l.value=d,l.needsUpdate=0<e);c.numPlanes=e}function b(a,b,d,e){var f=null!==a?a.length:0,g=null;if(0!==f){g=l.value;if(!0!==e||null===g){e=d+4*f;b=b.matrixWorldInverse;k.getNormalMatrix(b);if(null===g||g.length<e)g=new Float32Array(e);for(e=0;e!==f;++e,d+=4)h.copy(a[e]).applyMatrix4(b,k),h.normal.toArray(g,d),g[d+3]=h.constant}l.value=g;l.needsUpdate=!0}c.numPlanes=f;return g}var c=this,d=null,e=0,f=!1,g=!1,h=new THREE.Plane,k=new THREE.Matrix3,\n\tl={value:null,needsUpdate:!1};this.uniform=l;this.numPlanes=0;this.init=function(a,c,g){var h=0!==a.length||c||0!==e||f;f=c;d=b(a,g,0);e=a.length;return h};this.beginShadows=function(){g=!0;b(null)};this.endShadows=function(){g=!1;a()};this.setState=function(c,h,k,q,r){if(!f||null===c||0===c.length||g&&!h)g?b(null):a();else{h=g?0:e;var s=4*h,t=q.clippingState||null;l.value=t;t=b(c,k,s,r);for(c=0;c!==s;++c)t[c]=d[c];q.clippingState=t;this.numPlanes+=h}}};\n\tTHREE.WebGLIndexedBufferRenderer=function(a,b,c){var d,e,f;this.setMode=function(a){d=a};this.setIndex=function(c){c.array instanceof Uint32Array&&b.get(\"OES_element_index_uint\")?(e=a.UNSIGNED_INT,f=4):(e=a.UNSIGNED_SHORT,f=2)};this.render=function(b,h){a.drawElements(d,h,e,b*f);c.calls++;c.vertices+=h;d===a.TRIANGLES&&(c.faces+=h/3)};this.renderInstances=function(g,h,k){var l=b.get(\"ANGLE_instanced_arrays\");null===l?console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\"):\n\t(l.drawElementsInstancedANGLE(d,k,e,h*f,g.maxInstancedCount),c.calls++,c.vertices+=k*g.maxInstancedCount,d===a.TRIANGLES&&(c.faces+=g.maxInstancedCount*k/3))}};\n\tTHREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case \"WEBGL_depth_texture\":d=a.getExtension(\"WEBGL_depth_texture\")||a.getExtension(\"MOZ_WEBGL_depth_texture\")||a.getExtension(\"WEBKIT_WEBGL_depth_texture\");break;case \"EXT_texture_filter_anisotropic\":d=a.getExtension(\"EXT_texture_filter_anisotropic\")||a.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||a.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case \"WEBGL_compressed_texture_s3tc\":d=\n\ta.getExtension(\"WEBGL_compressed_texture_s3tc\")||a.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");break;case \"WEBGL_compressed_texture_pvrtc\":d=a.getExtension(\"WEBGL_compressed_texture_pvrtc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;case \"WEBGL_compressed_texture_etc1\":d=a.getExtension(\"WEBGL_compressed_texture_etc1\");break;default:d=a.getExtension(c)}null===d&&console.warn(\"THREE.WebGLRenderer: \"+c+\" extension not supported.\");\n\treturn b[c]=d}};\n\tTHREE.WebGLCapabilities=function(a,b,c){function d(b){if(\"highp\"===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return\"highp\";b=\"mediump\"}return\"mediump\"===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision?\"mediump\":\"lowp\"}var e;this.getMaxAnisotropy=function(){if(void 0!==e)return e;var c=b.get(\"EXT_texture_filter_anisotropic\");\n\treturn e=null!==c?a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0};this.getMaxPrecision=d;this.precision=void 0!==c.precision?c.precision:\"highp\";this.logarithmicDepthBuffer=void 0!==c.logarithmicDepthBuffer?c.logarithmicDepthBuffer:!1;this.maxTextures=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS);this.maxVertexTextures=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.maxTextureSize=a.getParameter(a.MAX_TEXTURE_SIZE);this.maxCubemapSize=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxAttributes=\n\ta.getParameter(a.MAX_VERTEX_ATTRIBS);this.maxVertexUniforms=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS);this.maxVaryings=a.getParameter(a.MAX_VARYING_VECTORS);this.maxFragmentUniforms=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS);this.vertexTextures=0<this.maxVertexTextures;this.floatFragmentTextures=!!b.get(\"OES_texture_float\");this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;c=d(this.precision);c!==this.precision&&(console.warn(\"THREE.WebGLRenderer:\",this.precision,\"not supported, using\",\n\tc,\"instead.\"),this.precision=c);this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!b.get(\"EXT_frag_depth\"))};\n\tTHREE.WebGLGeometries=function(a,b,c){function d(a){var h=a.target;a=f[h.id];null!==a.index&&e(a.index);var k=a.attributes,l;for(l in k)e(k[l]);h.removeEventListener(\"dispose\",d);delete f[h.id];l=b.get(h);l.wireframe&&e(l.wireframe);b.delete(h);h=b.get(a);h.wireframe&&e(h.wireframe);b.delete(a);c.memory.geometries--}function e(c){var d;d=c instanceof THREE.InterleavedBufferAttribute?b.get(c.data).__webglBuffer:b.get(c).__webglBuffer;void 0!==d&&(a.deleteBuffer(d),c instanceof THREE.InterleavedBufferAttribute?\n\tb.delete(c.data):b.delete(c))}var f={};this.get=function(a){var b=a.geometry;if(void 0!==f[b.id])return f[b.id];b.addEventListener(\"dispose\",d);var e;b instanceof THREE.BufferGeometry?e=b:b instanceof THREE.Geometry&&(void 0===b._bufferGeometry&&(b._bufferGeometry=(new THREE.BufferGeometry).setFromObject(a)),e=b._bufferGeometry);f[b.id]=e;c.memory.geometries++;return e}};\n\tTHREE.WebGLLights=function(){var a={};this.get=function(b){if(void 0!==a[b.id])return a[b.id];var c;switch(b.type){case \"DirectionalLight\":c={direction:new THREE.Vector3,color:new THREE.Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case \"SpotLight\":c={position:new THREE.Vector3,direction:new THREE.Vector3,color:new THREE.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case \"PointLight\":c=\n\t{position:new THREE.Vector3,color:new THREE.Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case \"HemisphereLight\":c={direction:new THREE.Vector3,skyColor:new THREE.Color,groundColor:new THREE.Color}}return a[b.id]=c}};\n\tTHREE.WebGLObjects=function(a,b,c){function d(c,d){var e=c instanceof THREE.InterleavedBufferAttribute?c.data:c,f=b.get(e);void 0===f.__webglBuffer?(f.__webglBuffer=a.createBuffer(),a.bindBuffer(d,f.__webglBuffer),a.bufferData(d,e.array,e.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW),f.version=e.version):f.version!==e.version&&(a.bindBuffer(d,f.__webglBuffer),!1===e.dynamic||-1===e.updateRange.count?a.bufferSubData(d,0,e.array):0===e.updateRange.count?console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\"):\n\t(a.bufferSubData(d,e.updateRange.offset*e.array.BYTES_PER_ELEMENT,e.array.subarray(e.updateRange.offset,e.updateRange.offset+e.updateRange.count)),e.updateRange.count=0),f.version=e.version)}function e(a,b,c){if(b>c){var d=b;b=c;c=d}d=a[b];return void 0===d?(a[b]=[c],!0):-1===d.indexOf(c)?(d.push(c),!0):!1}var f=new THREE.WebGLGeometries(a,b,c);this.getAttributeBuffer=function(a){return a instanceof THREE.InterleavedBufferAttribute?b.get(a.data).__webglBuffer:b.get(a).__webglBuffer};this.getWireframeAttribute=\n\tfunction(c){var f=b.get(c);if(void 0!==f.wireframe)return f.wireframe;var k=[],l=c.index,n=c.attributes;c=n.position;if(null!==l)for(var n={},l=l.array,p=0,m=l.length;p<m;p+=3){var q=l[p+0],r=l[p+1],s=l[p+2];e(n,q,r)&&k.push(q,r);e(n,r,s)&&k.push(r,s);e(n,s,q)&&k.push(s,q)}else for(l=n.position.array,p=0,m=l.length/3-1;p<m;p+=3)q=p+0,r=p+1,s=p+2,k.push(q,r,r,s,s,q);k=new THREE.BufferAttribute(new (65535<c.count?Uint32Array:Uint16Array)(k),1);d(k,a.ELEMENT_ARRAY_BUFFER);return f.wireframe=k};this.update=\n\tfunction(b){var c=f.get(b);b.geometry instanceof THREE.Geometry&&c.updateFromObject(b);b=c.index;var e=c.attributes;null!==b&&d(b,a.ELEMENT_ARRAY_BUFFER);for(var l in e)d(e[l],a.ARRAY_BUFFER);b=c.morphAttributes;for(l in b)for(var e=b[l],n=0,p=e.length;n<p;n++)d(e[n],a.ARRAY_BUFFER);return c}};\n\tTHREE.WebGLProgram=function(){function a(a){switch(a){case THREE.LinearEncoding:return[\"Linear\",\"( value )\"];case THREE.sRGBEncoding:return[\"sRGB\",\"( value )\"];case THREE.RGBEEncoding:return[\"RGBE\",\"( value )\"];case THREE.RGBM7Encoding:return[\"RGBM\",\"( value, 7.0 )\"];case THREE.RGBM16Encoding:return[\"RGBM\",\"( value, 16.0 )\"];case THREE.RGBDEncoding:return[\"RGBD\",\"( value, 256.0 )\"];case THREE.GammaEncoding:return[\"Gamma\",\"( value, float( GAMMA_FACTOR ) )\"];default:throw Error(\"unsupported encoding: \"+\n\ta);}}function b(b,c){var d=a(c);return\"vec4 \"+b+\"( vec4 value ) { return \"+d[0]+\"ToLinear\"+d[1]+\"; }\"}function c(b,c){var d=a(c);return\"vec4 \"+b+\"( vec4 value ) { return LinearTo\"+d[0]+d[1]+\"; }\"}function d(a,b){var c;switch(b){case THREE.LinearToneMapping:c=\"Linear\";break;case THREE.ReinhardToneMapping:c=\"Reinhard\";break;case THREE.Uncharted2ToneMapping:c=\"Uncharted2\";break;case THREE.CineonToneMapping:c=\"OptimizedCineon\";break;default:throw Error(\"unsupported toneMapping: \"+b);}return\"vec3 \"+a+\n\t\"( vec3 color ) { return \"+c+\"ToneMapping( color ); }\"}function e(a,b,c){a=a||{};return[a.derivatives||b.envMapCubeUV||b.bumpMap||b.normalMap||b.flatShading?\"#extension GL_OES_standard_derivatives : enable\":\"\",(a.fragDepth||b.logarithmicDepthBuffer)&&c.get(\"EXT_frag_depth\")?\"#extension GL_EXT_frag_depth : enable\":\"\",a.drawBuffers&&c.get(\"WEBGL_draw_buffers\")?\"#extension GL_EXT_draw_buffers : require\":\"\",(a.shaderTextureLOD||b.envMap)&&c.get(\"EXT_shader_texture_lod\")?\"#extension GL_EXT_shader_texture_lod : enable\":\n\t\"\"].filter(g).join(\"\\n\")}function f(a){var b=[],c;for(c in a){var d=a[c];!1!==d&&b.push(\"#define \"+c+\" \"+d)}return b.join(\"\\n\")}function g(a){return\"\"!==a}function h(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights)}function k(a){return a.replace(/#include +<([\\w\\d.]+)>/g,function(a,b){var c=THREE.ShaderChunk[b];if(void 0===c)throw Error(\"Can not resolve #include <\"+\n\tb+\">\");return k(c)})}function l(a){return a.replace(/for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g,function(a,b,c,d){a=\"\";for(b=parseInt(b);b<parseInt(c);b++)a+=d.replace(/\\[ i \\]/g,\"[ \"+b+\" ]\");return a})}var n=0;return function(a,m,q,r){var s=a.context,t=q.extensions,u=q.defines,v=q.__webglShader.vertexShader,C=q.__webglShader.fragmentShader,w=\"SHADOWMAP_TYPE_BASIC\";r.shadowMapType===THREE.PCFShadowMap?w=\"SHADOWMAP_TYPE_PCF\":r.shadowMapType===THREE.PCFSoftShadowMap&&(w=\"SHADOWMAP_TYPE_PCF_SOFT\");\n\tvar E=\"ENVMAP_TYPE_CUBE\",z=\"ENVMAP_MODE_REFLECTION\",y=\"ENVMAP_BLENDING_MULTIPLY\";if(r.envMap){switch(q.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:E=\"ENVMAP_TYPE_CUBE\";break;case THREE.CubeUVReflectionMapping:case THREE.CubeUVRefractionMapping:E=\"ENVMAP_TYPE_CUBE_UV\";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:E=\"ENVMAP_TYPE_EQUIREC\";break;case THREE.SphericalReflectionMapping:E=\"ENVMAP_TYPE_SPHERE\"}switch(q.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:z=\n\t\"ENVMAP_MODE_REFRACTION\"}switch(q.combine){case THREE.MultiplyOperation:y=\"ENVMAP_BLENDING_MULTIPLY\";break;case THREE.MixOperation:y=\"ENVMAP_BLENDING_MIX\";break;case THREE.AddOperation:y=\"ENVMAP_BLENDING_ADD\"}}var A=0<a.gammaFactor?a.gammaFactor:1,t=e(t,r,a.extensions),I=f(u),B=s.createProgram();q instanceof THREE.RawShaderMaterial?(u=[I].filter(g).join(\"\\n\"),w=[I].filter(g).join(\"\\n\")):(u=[\"precision \"+r.precision+\" float;\",\"precision \"+r.precision+\" int;\",\"#define SHADER_NAME \"+q.__webglShader.name,\n\tI,r.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",\"#define GAMMA_FACTOR \"+A,\"#define MAX_BONES \"+r.maxBones,r.map?\"#define USE_MAP\":\"\",r.envMap?\"#define USE_ENVMAP\":\"\",r.envMap?\"#define \"+z:\"\",r.lightMap?\"#define USE_LIGHTMAP\":\"\",r.aoMap?\"#define USE_AOMAP\":\"\",r.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",r.bumpMap?\"#define USE_BUMPMAP\":\"\",r.normalMap?\"#define USE_NORMALMAP\":\"\",r.displacementMap&&r.supportsVertexTextures?\"#define USE_DISPLACEMENTMAP\":\"\",r.specularMap?\"#define USE_SPECULARMAP\":\n\t\"\",r.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",r.metalnessMap?\"#define USE_METALNESSMAP\":\"\",r.alphaMap?\"#define USE_ALPHAMAP\":\"\",r.vertexColors?\"#define USE_COLOR\":\"\",r.flatShading?\"#define FLAT_SHADED\":\"\",r.skinning?\"#define USE_SKINNING\":\"\",r.useVertexTexture?\"#define BONE_TEXTURE\":\"\",r.morphTargets?\"#define USE_MORPHTARGETS\":\"\",r.morphNormals&&!1===r.flatShading?\"#define USE_MORPHNORMALS\":\"\",r.doubleSided?\"#define DOUBLE_SIDED\":\"\",r.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+\n\tr.numClippingPlanes,r.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",r.shadowMapEnabled?\"#define \"+w:\"\",r.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",r.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",r.logarithmicDepthBuffer&&a.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"attribute vec3 position;\",\n\t\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"#ifdef USE_COLOR\",\"\\tattribute vec3 color;\",\"#endif\",\"#ifdef USE_MORPHTARGETS\",\"\\tattribute vec3 morphTarget0;\",\"\\tattribute vec3 morphTarget1;\",\"\\tattribute vec3 morphTarget2;\",\"\\tattribute vec3 morphTarget3;\",\"\\t#ifdef USE_MORPHNORMALS\",\"\\t\\tattribute vec3 morphNormal0;\",\"\\t\\tattribute vec3 morphNormal1;\",\"\\t\\tattribute vec3 morphNormal2;\",\"\\t\\tattribute vec3 morphNormal3;\",\"\\t#else\",\"\\t\\tattribute vec3 morphTarget4;\",\"\\t\\tattribute vec3 morphTarget5;\",\n\t\"\\t\\tattribute vec3 morphTarget6;\",\"\\t\\tattribute vec3 morphTarget7;\",\"\\t#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"\\tattribute vec4 skinIndex;\",\"\\tattribute vec4 skinWeight;\",\"#endif\",\"\\n\"].filter(g).join(\"\\n\"),w=[t,\"precision \"+r.precision+\" float;\",\"precision \"+r.precision+\" int;\",\"#define SHADER_NAME \"+q.__webglShader.name,I,r.alphaTest?\"#define ALPHATEST \"+r.alphaTest:\"\",\"#define GAMMA_FACTOR \"+A,r.useFog&&r.fog?\"#define USE_FOG\":\"\",r.useFog&&r.fogExp?\"#define FOG_EXP2\":\"\",r.map?\"#define USE_MAP\":\n\t\"\",r.envMap?\"#define USE_ENVMAP\":\"\",r.envMap?\"#define \"+E:\"\",r.envMap?\"#define \"+z:\"\",r.envMap?\"#define \"+y:\"\",r.lightMap?\"#define USE_LIGHTMAP\":\"\",r.aoMap?\"#define USE_AOMAP\":\"\",r.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",r.bumpMap?\"#define USE_BUMPMAP\":\"\",r.normalMap?\"#define USE_NORMALMAP\":\"\",r.specularMap?\"#define USE_SPECULARMAP\":\"\",r.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",r.metalnessMap?\"#define USE_METALNESSMAP\":\"\",r.alphaMap?\"#define USE_ALPHAMAP\":\"\",r.vertexColors?\"#define USE_COLOR\":\n\t\"\",r.flatShading?\"#define FLAT_SHADED\":\"\",r.doubleSided?\"#define DOUBLE_SIDED\":\"\",r.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+r.numClippingPlanes,r.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",r.shadowMapEnabled?\"#define \"+w:\"\",r.premultipliedAlpha?\"#define PREMULTIPLIED_ALPHA\":\"\",r.physicallyCorrectLights?\"#define PHYSICALLY_CORRECT_LIGHTS\":\"\",r.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",r.logarithmicDepthBuffer&&a.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\n\t\"\",r.envMap&&a.extensions.get(\"EXT_shader_texture_lod\")?\"#define TEXTURE_LOD_EXT\":\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",r.toneMapping!==THREE.NoToneMapping?\"#define TONE_MAPPING\":\"\",r.toneMapping!==THREE.NoToneMapping?THREE.ShaderChunk.tonemapping_pars_fragment:\"\",r.toneMapping!==THREE.NoToneMapping?d(\"toneMapping\",r.toneMapping):\"\",r.outputEncoding||r.mapEncoding||r.envMapEncoding||r.emissiveMapEncoding?THREE.ShaderChunk.encodings_pars_fragment:\"\",r.mapEncoding?b(\"mapTexelToLinear\",\n\tr.mapEncoding):\"\",r.envMapEncoding?b(\"envMapTexelToLinear\",r.envMapEncoding):\"\",r.emissiveMapEncoding?b(\"emissiveMapTexelToLinear\",r.emissiveMapEncoding):\"\",r.outputEncoding?c(\"linearToOutputTexel\",r.outputEncoding):\"\",r.depthPacking?\"#define DEPTH_PACKING \"+q.depthPacking:\"\",\"\\n\"].filter(g).join(\"\\n\"));v=k(v,r);v=h(v,r);C=k(C,r);C=h(C,r);!1===q instanceof THREE.ShaderMaterial&&(v=l(v),C=l(C));C=w+C;v=THREE.WebGLShader(s,s.VERTEX_SHADER,u+v);C=THREE.WebGLShader(s,s.FRAGMENT_SHADER,C);s.attachShader(B,\n\tv);s.attachShader(B,C);void 0!==q.index0AttributeName?s.bindAttribLocation(B,0,q.index0AttributeName):!0===r.morphTargets&&s.bindAttribLocation(B,0,\"position\");s.linkProgram(B);r=s.getProgramInfoLog(B);E=s.getShaderInfoLog(v);z=s.getShaderInfoLog(C);A=y=!0;if(!1===s.getProgramParameter(B,s.LINK_STATUS))y=!1,console.error(\"THREE.WebGLProgram: shader error: \",s.getError(),\"gl.VALIDATE_STATUS\",s.getProgramParameter(B,s.VALIDATE_STATUS),\"gl.getProgramInfoLog\",r,E,z);else if(\"\"!==r)console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\",\n\tr);else if(\"\"===E||\"\"===z)A=!1;A&&(this.diagnostics={runnable:y,material:q,programLog:r,vertexShader:{log:E,prefix:u},fragmentShader:{log:z,prefix:w}});s.deleteShader(v);s.deleteShader(C);var F;this.getUniforms=function(){void 0===F&&(F=new THREE.WebGLUniforms(s,B,a));return F};var K;this.getAttributes=function(){if(void 0===K){for(var a={},b=s.getProgramParameter(B,s.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=s.getActiveAttrib(B,c).name;a[d]=s.getAttribLocation(B,d)}K=a}return K};this.destroy=function(){s.deleteProgram(B);\n\tthis.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\");return this.getUniforms()}},attributes:{get:function(){console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\");return this.getAttributes()}}});this.id=n++;this.code=m;this.usedTimes=1;this.program=B;this.vertexShader=v;this.fragmentShader=C;return this}}();\n\tTHREE.WebGLPrograms=function(a,b){function c(a,b){var c;a?a instanceof THREE.Texture?c=a.encoding:a instanceof THREE.WebGLRenderTarget&&(console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"),c=a.texture.encoding):c=THREE.LinearEncoding;c===THREE.LinearEncoding&&b&&(c=THREE.GammaEncoding);return c}var d=[],e={MeshDepthMaterial:\"depth\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",\n\tMeshPhongMaterial:\"phong\",MeshStandardMaterial:\"physical\",MeshPhysicalMaterial:\"physical\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointsMaterial:\"points\"},f=\"precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap displacementMap specularMap roughnessMap metalnessMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes depthPacking\".split(\" \");\n\tthis.getParameters=function(d,f,k,l,n){var p=e[d.type],m;b.floatVertexTextures&&n&&n.skeleton&&n.skeleton.useVertexTexture?m=1024:(m=Math.floor((b.maxVertexUniforms-20)/4),void 0!==n&&n instanceof THREE.SkinnedMesh&&(m=Math.min(n.skeleton.bones.length,m),m<n.skeleton.bones.length&&console.warn(\"WebGLRenderer: too many bones - \"+n.skeleton.bones.length+\", this GPU supports just \"+m+\" (try OpenGL instead of ANGLE)\")));var q=a.getPrecision();null!==d.precision&&(q=b.getMaxPrecision(d.precision),q!==\n\td.precision&&console.warn(\"THREE.WebGLProgram.getParameters:\",d.precision,\"not supported, using\",q,\"instead.\"));var r=a.getCurrentRenderTarget();return{shaderID:p,precision:q,supportsVertexTextures:b.vertexTextures,outputEncoding:c(r?r.texture:null,a.gammaOutput),map:!!d.map,mapEncoding:c(d.map,a.gammaInput),envMap:!!d.envMap,envMapMode:d.envMap&&d.envMap.mapping,envMapEncoding:c(d.envMap,a.gammaInput),envMapCubeUV:!!d.envMap&&(d.envMap.mapping===THREE.CubeUVReflectionMapping||d.envMap.mapping===\n\tTHREE.CubeUVRefractionMapping),lightMap:!!d.lightMap,aoMap:!!d.aoMap,emissiveMap:!!d.emissiveMap,emissiveMapEncoding:c(d.emissiveMap,a.gammaInput),bumpMap:!!d.bumpMap,normalMap:!!d.normalMap,displacementMap:!!d.displacementMap,roughnessMap:!!d.roughnessMap,metalnessMap:!!d.metalnessMap,specularMap:!!d.specularMap,alphaMap:!!d.alphaMap,combine:d.combine,vertexColors:d.vertexColors,fog:k,useFog:d.fog,fogExp:k instanceof THREE.FogExp2,flatShading:d.shading===THREE.FlatShading,sizeAttenuation:d.sizeAttenuation,\n\tlogarithmicDepthBuffer:b.logarithmicDepthBuffer,skinning:d.skinning,maxBones:m,useVertexTexture:b.floatVertexTextures&&n&&n.skeleton&&n.skeleton.useVertexTexture,morphTargets:d.morphTargets,morphNormals:d.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:f.directional.length,numPointLights:f.point.length,numSpotLights:f.spot.length,numHemiLights:f.hemi.length,numClippingPlanes:l,shadowMapEnabled:a.shadowMap.enabled&&n.receiveShadow&&0<f.shadows.length,shadowMapType:a.shadowMap.type,\n\ttoneMapping:a.toneMapping,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:d.premultipliedAlpha,alphaTest:d.alphaTest,doubleSided:d.side===THREE.DoubleSide,flipSided:d.side===THREE.BackSide,depthPacking:void 0!==d.depthPacking?d.depthPacking:!1}};this.getProgramCode=function(a,b){var c=[];b.shaderID?c.push(b.shaderID):(c.push(a.fragmentShader),c.push(a.vertexShader));if(void 0!==a.defines)for(var d in a.defines)c.push(d),c.push(a.defines[d]);for(d=0;d<f.length;d++)c.push(b[f[d]]);\n\treturn c.join()};this.acquireProgram=function(b,c,e){for(var f,n=0,p=d.length;n<p;n++){var m=d[n];if(m.code===e){f=m;++f.usedTimes;break}}void 0===f&&(f=new THREE.WebGLProgram(a,e,b,c),d.push(f));return f};this.releaseProgram=function(a){if(0===--a.usedTimes){var b=d.indexOf(a);d[b]=d[d.length-1];d.pop();a.destroy()}};this.programs=d};\n\tTHREE.WebGLProperties=function(){var a={};this.get=function(b){b=b.uuid;var c=a[b];void 0===c&&(c={},a[b]=c);return c};this.delete=function(b){delete a[b.uuid]};this.clear=function(){a={}}};\n\tTHREE.WebGLShader=function(){function a(a){a=a.split(\"\\n\");for(var c=0;c<a.length;c++)a[c]=c+1+\": \"+a[c];return a.join(\"\\n\")}return function(b,c,d){var e=b.createShader(c);b.shaderSource(e,d);b.compileShader(e);!1===b.getShaderParameter(e,b.COMPILE_STATUS)&&console.error(\"THREE.WebGLShader: Shader couldn't compile.\");\"\"!==b.getShaderInfoLog(e)&&console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",c===b.VERTEX_SHADER?\"vertex\":\"fragment\",b.getShaderInfoLog(e),a(d));return e}}();\n\tTHREE.WebGLShadowMap=function(a,b,c){function d(b,c,d,e){var f=b.geometry,g=null,g=r,h=b.customDepthMaterial;d&&(g=s,h=b.customDistanceMaterial);h?g=h:(b=b instanceof THREE.SkinnedMesh&&c.skinning,h=0,void 0!==f.morphTargets&&0<f.morphTargets.length&&c.morphTargets&&(h|=1),b&&(h|=2),g=g[h]);a.localClippingEnabled&&!0===c.clipShadows&&0!==c.clippingPlanes.length&&(h=g.uuid,f=c.uuid,b=t[h],void 0===b&&(b={},t[h]=b),h=b[f],void 0===h&&(h=g.clone(),b[f]=h),g=h);g.visible=c.visible;g.wireframe=c.wireframe;\n\tf=c.side;B.renderSingleSided&&f==THREE.DoubleSide&&(f=THREE.FrontSide);B.renderReverseSided&&(f===THREE.FrontSide?f=THREE.BackSide:f===THREE.BackSide&&(f=THREE.FrontSide));g.side=f;g.clipShadows=c.clipShadows;g.clippingPlanes=c.clippingPlanes;g.wireframeLinewidth=c.wireframeLinewidth;g.linewidth=c.linewidth;d&&void 0!==g.uniforms.lightPos&&g.uniforms.lightPos.value.copy(e);return g}function e(a,b,c){if(!1!==a.visible){a.layers.test(b.layers)&&(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof\n\tTHREE.Points)&&a.castShadow&&(!1===a.frustumCulled||!0===h.intersectsObject(a))&&!0===a.material.visible&&(a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),q.push(a));a=a.children;for(var d=0,f=a.length;d<f;d++)e(a[d],b,c)}}var f=a.context,g=a.state,h=new THREE.Frustum,k=new THREE.Matrix4,l=b.shadows,n=new THREE.Vector2,p=new THREE.Vector3,m=new THREE.Vector3,q=[],r=Array(4),s=Array(4),t={},u=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,\n\t0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)],v=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],C=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4];b=new THREE.MeshDepthMaterial;b.depthPacking=THREE.RGBADepthPacking;b.clipping=!0;for(var w=THREE.ShaderLib.distanceRGBA,E=THREE.UniformsUtils.clone(w.uniforms),z=0;4!==z;++z){var y=\n\t0!==(z&1),A=0!==(z&2),I=b.clone();I.morphTargets=y;I.skinning=A;r[z]=I;y=new THREE.ShaderMaterial({defines:{USE_SHADOWMAP:\"\"},uniforms:E,vertexShader:w.vertexShader,fragmentShader:w.fragmentShader,morphTargets:y,skinning:A,clipping:!0});s[z]=y}var B=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=THREE.PCFShadowMap;this.renderSingleSided=this.renderReverseSided=!0;this.render=function(b,r){if(!1!==B.enabled&&(!1!==B.autoUpdate||!1!==B.needsUpdate)&&0!==l.length){g.clearColor(1,\n\t1,1,1);g.disable(f.BLEND);g.setDepthTest(!0);g.setScissorTest(!1);for(var w,s,t=0,y=l.length;t<y;t++){var z=l[t],A=z.shadow;if(void 0===A)console.warn(\"THREE.WebGLShadowMap:\",z,\"has no shadow.\");else{var E=A.camera;n.copy(A.mapSize);if(z instanceof THREE.PointLight){w=6;s=!0;var J=n.x,D=n.y;C[0].set(2*J,D,J,D);C[1].set(0,D,J,D);C[2].set(3*J,D,J,D);C[3].set(J,D,J,D);C[4].set(3*J,0,J,D);C[5].set(J,0,J,D);n.x*=4;n.y*=2}else w=1,s=!1;null===A.map&&(A.map=new THREE.WebGLRenderTarget(n.x,n.y,{minFilter:THREE.NearestFilter,\n\tmagFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),E.updateProjectionMatrix());A instanceof THREE.SpotLightShadow&&A.update(z);J=A.map;A=A.matrix;m.setFromMatrixPosition(z.matrixWorld);E.position.copy(m);a.setRenderTarget(J);a.clear();for(J=0;J<w;J++){s?(p.copy(E.position),p.add(u[J]),E.up.copy(v[J]),E.lookAt(p),g.viewport(C[J])):(p.setFromMatrixPosition(z.target.matrixWorld),E.lookAt(p));E.updateMatrixWorld();E.matrixWorldInverse.getInverse(E.matrixWorld);A.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,\n\t0,0,0,1);A.multiply(E.projectionMatrix);A.multiply(E.matrixWorldInverse);k.multiplyMatrices(E.projectionMatrix,E.matrixWorldInverse);h.setFromMatrix(k);q.length=0;e(b,r,E);for(var D=0,G=q.length;D<G;D++){var I=q[D],T=c.update(I),X=I.material;if(X instanceof THREE.MultiMaterial)for(var ja=T.groups,X=X.materials,ba=0,ia=ja.length;ba<ia;ba++){var V=ja[ba],Y=X[V.materialIndex];!0===Y.visible&&(Y=d(I,Y,s,m),a.renderBufferDirect(E,null,T,Y,I,V))}else Y=d(I,X,s,m),a.renderBufferDirect(E,null,T,Y,I,null)}}}}w=\n\ta.getClearColor();s=a.getClearAlpha();a.setClearColor(w,s);B.needsUpdate=!1}}};\n\tTHREE.WebGLState=function(a,b,c){function d(b,c,d){var e=new Uint8Array(4),f=a.createTexture();a.bindTexture(b,f);a.texParameteri(b,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texParameteri(b,a.TEXTURE_MAG_FILTER,a.NEAREST);for(b=0;b<d;b++)a.texImage2D(c+b,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,e);return f}var e=this;this.buffers={color:new THREE.WebGLColorBuffer(a,this),depth:new THREE.WebGLDepthBuffer(a,this),stencil:new THREE.WebGLStencilBuffer(a,this)};var f=a.getParameter(a.MAX_VERTEX_ATTRIBS),g=new Uint8Array(f),\n\th=new Uint8Array(f),k=new Uint8Array(f),l={},n=null,p=null,m=null,q=null,r=null,s=null,t=null,u=null,v=!1,C=null,w=null,E=null,z=null,y=null,A=null,I=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),B=null,F={},K=new THREE.Vector4,P=new THREE.Vector4,M={};M[a.TEXTURE_2D]=d(a.TEXTURE_2D,a.TEXTURE_2D,1);M[a.TEXTURE_CUBE_MAP]=d(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);this.init=function(){this.clearColor(0,0,0,1);this.clearDepth(1);this.clearStencil(0);this.enable(a.DEPTH_TEST);this.setDepthFunc(THREE.LessEqualDepth);\n\tthis.setFlipSided(!1);this.setCullFace(THREE.CullFaceBack);this.enable(a.CULL_FACE);this.enable(a.BLEND);this.setBlending(THREE.NormalBlending)};this.initAttributes=function(){for(var a=0,b=g.length;a<b;a++)g[a]=0};this.enableAttribute=function(c){g[c]=1;0===h[c]&&(a.enableVertexAttribArray(c),h[c]=1);0!==k[c]&&(b.get(\"ANGLE_instanced_arrays\").vertexAttribDivisorANGLE(c,0),k[c]=0)};this.enableAttributeAndDivisor=function(b,c,d){g[b]=1;0===h[b]&&(a.enableVertexAttribArray(b),h[b]=1);k[b]!==c&&(d.vertexAttribDivisorANGLE(b,\n\tc),k[b]=c)};this.disableUnusedAttributes=function(){for(var b=0,c=h.length;b!==c;++b)h[b]!==g[b]&&(a.disableVertexAttribArray(b),h[b]=0)};this.enable=function(b){!0!==l[b]&&(a.enable(b),l[b]=!0)};this.disable=function(b){!1!==l[b]&&(a.disable(b),l[b]=!1)};this.getCompressedTextureFormats=function(){if(null===n&&(n=[],b.get(\"WEBGL_compressed_texture_pvrtc\")||b.get(\"WEBGL_compressed_texture_s3tc\")||b.get(\"WEBGL_compressed_texture_etc1\")))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<\n\tc.length;d++)n.push(c[d]);return n};this.setBlending=function(b,d,e,f,g,h,k,l){if(b!==THREE.NoBlending){this.enable(a.BLEND);if(b!==p||l!==v)b===THREE.AdditiveBlending?l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE,a.ONE,a.ONE)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):b===THREE.SubtractiveBlending?l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),\n\ta.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):b===THREE.MultiplyBlending?l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),\n\tp=b,v=l;if(b===THREE.CustomBlending){g=g||d;h=h||e;k=k||f;if(d!==m||g!==s)a.blendEquationSeparate(c(d),c(g)),m=d,s=g;if(e!==q||f!==r||h!==t||k!==u)a.blendFuncSeparate(c(e),c(f),c(h),c(k)),q=e,r=f,t=h,u=k}else u=t=s=r=q=m=null}else this.disable(a.BLEND),p=b};this.setColorWrite=function(a){this.buffers.color.setMask(a)};this.setDepthTest=function(a){this.buffers.depth.setTest(a)};this.setDepthWrite=function(a){this.buffers.depth.setMask(a)};this.setDepthFunc=function(a){this.buffers.depth.setFunc(a)};\n\tthis.setStencilTest=function(a){this.buffers.stencil.setTest(a)};this.setStencilWrite=function(a){this.buffers.stencil.setMask(a)};this.setStencilFunc=function(a,b,c){this.buffers.stencil.setFunc(a,b,c)};this.setStencilOp=function(a,b,c){this.buffers.stencil.setOp(a,b,c)};this.setFlipSided=function(b){C!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),C=b)};this.setCullFace=function(b){b!==THREE.CullFaceNone?(this.enable(a.CULL_FACE),b!==w&&(b===THREE.CullFaceBack?a.cullFace(a.BACK):b===THREE.CullFaceFront?\n\ta.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):this.disable(a.CULL_FACE);w=b};this.setLineWidth=function(b){b!==E&&(a.lineWidth(b),E=b)};this.setPolygonOffset=function(b,c,d){if(b){if(this.enable(a.POLYGON_OFFSET_FILL),z!==c||y!==d)a.polygonOffset(c,d),z=c,y=d}else this.disable(a.POLYGON_OFFSET_FILL)};this.getScissorTest=function(){return A};this.setScissorTest=function(b){(A=b)?this.enable(a.SCISSOR_TEST):this.disable(a.SCISSOR_TEST)};this.activeTexture=function(b){void 0===b&&(b=a.TEXTURE0+\n\tI-1);B!==b&&(a.activeTexture(b),B=b)};this.bindTexture=function(b,c){null===B&&e.activeTexture();var d=F[B];void 0===d&&(d={type:void 0,texture:void 0},F[B]=d);if(d.type!==b||d.texture!==c)a.bindTexture(b,c||M[b]),d.type=b,d.texture=c};this.compressedTexImage2D=function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error(b)}};this.texImage2D=function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error(b)}};this.clearColor=function(a,b,c,d){this.buffers.color.setClear(a,\n\tb,c,d)};this.clearDepth=function(a){this.buffers.depth.setClear(a)};this.clearStencil=function(a){this.buffers.stencil.setClear(a)};this.scissor=function(b){!1===K.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),K.copy(b))};this.viewport=function(b){!1===P.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),P.copy(b))};this.reset=function(){for(var b=0;b<h.length;b++)1===h[b]&&(a.disableVertexAttribArray(b),h[b]=0);l={};B=n=null;F={};w=C=p=null;this.buffers.color.reset();this.buffers.depth.reset();this.buffers.stencil.reset()}};\n\tTHREE.WebGLColorBuffer=function(a,b){var c=!1,d=new THREE.Vector4,e=null,f=new THREE.Vector4;this.setMask=function(b){e===b||c||(a.colorMask(b,b,b,b),e=b)};this.setLocked=function(a){c=a};this.setClear=function(b,c,e,l){d.set(b,c,e,l);!1===f.equals(d)&&(a.clearColor(b,c,e,l),f.copy(d))};this.reset=function(){c=!1;e=null;f=new THREE.Vector4}};\n\tTHREE.WebGLDepthBuffer=function(a,b){var c=!1,d=null,e=null,f=null;this.setTest=function(c){c?b.enable(a.DEPTH_TEST):b.disable(a.DEPTH_TEST)};this.setMask=function(b){d===b||c||(a.depthMask(b),d=b)};this.setFunc=function(b){if(e!==b){if(b)switch(b){case THREE.NeverDepth:a.depthFunc(a.NEVER);break;case THREE.AlwaysDepth:a.depthFunc(a.ALWAYS);break;case THREE.LessDepth:a.depthFunc(a.LESS);break;case THREE.LessEqualDepth:a.depthFunc(a.LEQUAL);break;case THREE.EqualDepth:a.depthFunc(a.EQUAL);break;case THREE.GreaterEqualDepth:a.depthFunc(a.GEQUAL);\n\tbreak;case THREE.GreaterDepth:a.depthFunc(a.GREATER);break;case THREE.NotEqualDepth:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}else a.depthFunc(a.LEQUAL);e=b}};this.setLocked=function(a){c=a};this.setClear=function(b){f!==b&&(a.clearDepth(b),f=b)};this.reset=function(){c=!1;f=e=d=null}};\n\tTHREE.WebGLStencilBuffer=function(a,b){var c=!1,d=null,e=null,f=null,g=null,h=null,k=null,l=null,n=null;this.setTest=function(c){c?b.enable(a.STENCIL_TEST):b.disable(a.STENCIL_TEST)};this.setMask=function(b){d===b||c||(a.stencilMask(b),d=b)};this.setFunc=function(b,c,d){if(e!==b||f!==c||g!==d)a.stencilFunc(b,c,d),e=b,f=c,g=d};this.setOp=function(b,c,d){if(h!==b||k!==c||l!==d)a.stencilOp(b,c,d),h=b,k=c,l=d};this.setLocked=function(a){c=a};this.setClear=function(b){n!==b&&(a.clearStencil(b),n=b)};this.reset=\n\tfunction(){c=!1;n=l=k=h=g=f=e=d=null}};\n\tTHREE.WebGLTextures=function(a,b,c,d,e,f,g){function h(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext(\"2d\").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.warn(\"THREE.WebGLRenderer: image is too big (\"+a.width+\"x\"+a.height+\"). Resized to \"+d.width+\"x\"+d.height,a);return d}return a}function k(a){return THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height)}\n\tfunction l(b){return b===THREE.NearestFilter||b===THREE.NearestMipMapNearestFilter||b===THREE.NearestMipMapLinearFilter?a.NEAREST:a.LINEAR}function n(b){b=b.target;b.removeEventListener(\"dispose\",n);a:{var c=d.get(b);if(b.image&&c.__image__webglTextureCube)a.deleteTexture(c.__image__webglTextureCube);else{if(void 0===c.__webglInit)break a;a.deleteTexture(c.__webglTexture)}d.delete(b)}t.textures--}function p(b){b=b.target;b.removeEventListener(\"dispose\",p);var c=d.get(b),e=d.get(b.texture);if(b){void 0!==\n\te.__webglTexture&&a.deleteTexture(e.__webglTexture);b.depthTexture&&b.depthTexture.dispose();if(b instanceof THREE.WebGLRenderTargetCube)for(e=0;6>e;e++)a.deleteFramebuffer(c.__webglFramebuffer[e]),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer[e]);else a.deleteFramebuffer(c.__webglFramebuffer),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer);d.delete(b.texture);d.delete(b)}t.textures--}function m(b,g){var m=d.get(b);if(0<b.version&&m.__version!==b.version){var l=\n\tb.image;if(void 0===l)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\",b);else if(!1===l.complete)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\",b);else{void 0===m.__webglInit&&(m.__webglInit=!0,b.addEventListener(\"dispose\",n),m.__webglTexture=a.createTexture(),t.textures++);c.activeTexture(a.TEXTURE0+g);c.bindTexture(a.TEXTURE_2D,m.__webglTexture);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,\n\tb.premultiplyAlpha);a.pixelStorei(a.UNPACK_ALIGNMENT,b.unpackAlignment);var p=h(b.image,e.maxTextureSize);if((b.wrapS!==THREE.ClampToEdgeWrapping||b.wrapT!==THREE.ClampToEdgeWrapping||b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter)&&!1===k(p))if(l=p,l instanceof HTMLImageElement||l instanceof HTMLCanvasElement){var r=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");r.width=THREE.Math.nearestPowerOfTwo(l.width);r.height=THREE.Math.nearestPowerOfTwo(l.height);r.getContext(\"2d\").drawImage(l,\n\t0,0,r.width,r.height);console.warn(\"THREE.WebGLRenderer: image is not power of two (\"+l.width+\"x\"+l.height+\"). Resized to \"+r.width+\"x\"+r.height,l);p=r}else p=l;var l=k(p),r=f(b.format),s=f(b.type);q(a.TEXTURE_2D,b,l);var I=b.mipmaps;if(b instanceof THREE.DepthTexture){I=a.DEPTH_COMPONENT;if(b.type===THREE.FloatType){if(!u)throw Error(\"Float Depth Texture only supported in WebGL2.0\");I=a.DEPTH_COMPONENT32F}else u&&(I=a.DEPTH_COMPONENT16);c.texImage2D(a.TEXTURE_2D,0,I,p.width,p.height,0,r,s,null)}else if(b instanceof\n\tTHREE.DataTexture)if(0<I.length&&l){for(var B=0,F=I.length;B<F;B++)p=I[B],c.texImage2D(a.TEXTURE_2D,B,r,p.width,p.height,0,r,s,p.data);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,r,p.width,p.height,0,r,s,p.data);else if(b instanceof THREE.CompressedTexture)for(B=0,F=I.length;B<F;B++)p=I[B],b.format!==THREE.RGBAFormat&&b.format!==THREE.RGBFormat?-1<c.getCompressedTextureFormats().indexOf(r)?c.compressedTexImage2D(a.TEXTURE_2D,B,r,p.width,p.height,0,p.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):\n\tc.texImage2D(a.TEXTURE_2D,B,r,p.width,p.height,0,r,s,p.data);else if(0<I.length&&l){B=0;for(F=I.length;B<F;B++)p=I[B],c.texImage2D(a.TEXTURE_2D,B,r,r,s,p);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,r,r,s,p);b.generateMipmaps&&l&&a.generateMipmap(a.TEXTURE_2D);m.__version=b.version;if(b.onUpdate)b.onUpdate(b);return}}c.activeTexture(a.TEXTURE0+g);c.bindTexture(a.TEXTURE_2D,m.__webglTexture)}function q(c,g,h){h?(a.texParameteri(c,a.TEXTURE_WRAP_S,f(g.wrapS)),a.texParameteri(c,a.TEXTURE_WRAP_T,\n\tf(g.wrapT)),a.texParameteri(c,a.TEXTURE_MAG_FILTER,f(g.magFilter)),a.texParameteri(c,a.TEXTURE_MIN_FILTER,f(g.minFilter))):(a.texParameteri(c,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(c,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),g.wrapS===THREE.ClampToEdgeWrapping&&g.wrapT===THREE.ClampToEdgeWrapping||console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\",g),a.texParameteri(c,a.TEXTURE_MAG_FILTER,l(g.magFilter)),\n\ta.texParameteri(c,a.TEXTURE_MIN_FILTER,l(g.minFilter)),g.minFilter!==THREE.NearestFilter&&g.minFilter!==THREE.LinearFilter&&console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\",g));!(h=b.get(\"EXT_texture_filter_anisotropic\"))||g.type===THREE.FloatType&&null===b.get(\"OES_texture_float_linear\")||g.type===THREE.HalfFloatType&&null===b.get(\"OES_texture_half_float_linear\")||!(1<g.anisotropy||d.get(g).__currentAnisotropy)||\n\t(a.texParameterf(c,h.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(g.anisotropy,e.getMaxAnisotropy())),d.get(g).__currentAnisotropy=g.anisotropy)}function r(b,e,g,h){var k=f(e.texture.format),l=f(e.texture.type);c.texImage2D(h,0,k,e.width,e.height,0,k,l,null);a.bindFramebuffer(a.FRAMEBUFFER,b);a.framebufferTexture2D(a.FRAMEBUFFER,g,h,d.get(e.texture).__webglTexture,0);a.bindFramebuffer(a.FRAMEBUFFER,null)}function s(b,c){a.bindRenderbuffer(a.RENDERBUFFER,b);c.depthBuffer&&!c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,\n\ta.DEPTH_COMPONENT16,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b)):c.depthBuffer&&c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,b)):a.renderbufferStorage(a.RENDERBUFFER,a.RGBA4,c.width,c.height);a.bindRenderbuffer(a.RENDERBUFFER,null)}var t=g.memory,u=\"undefined\"!==typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext;\n\tthis.setTexture2D=m;this.setTextureCube=function(b,g){var l=d.get(b);if(6===b.image.length)if(0<b.version&&l.__version!==b.version){l.__image__webglTextureCube||(b.addEventListener(\"dispose\",n),l.__image__webglTextureCube=a.createTexture(),t.textures++);c.activeTexture(a.TEXTURE0+g);c.bindTexture(a.TEXTURE_CUBE_MAP,l.__image__webglTextureCube);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);for(var m=b instanceof THREE.CompressedTexture,p=b.image[0]instanceof THREE.DataTexture,r=[],s=0;6>s;s++)r[s]=\n\tm||p?p?b.image[s].image:b.image[s]:h(b.image[s],e.maxCubemapSize);var u=k(r[0]),B=f(b.format),F=f(b.type);q(a.TEXTURE_CUBE_MAP,b,u);for(s=0;6>s;s++)if(m)for(var K,P=r[s].mipmaps,M=0,H=P.length;M<H;M++)K=P[M],b.format!==THREE.RGBAFormat&&b.format!==THREE.RGBFormat?-1<c.getCompressedTextureFormats().indexOf(B)?c.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,M,B,K.width,K.height,0,K.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\"):\n\tc.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,M,B,K.width,K.height,0,B,F,K.data);else p?c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,B,r[s].width,r[s].height,0,B,F,r[s].data):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,B,B,F,r[s]);b.generateMipmaps&&u&&a.generateMipmap(a.TEXTURE_CUBE_MAP);l.__version=b.version;if(b.onUpdate)b.onUpdate(b)}else c.activeTexture(a.TEXTURE0+g),c.bindTexture(a.TEXTURE_CUBE_MAP,l.__image__webglTextureCube)};this.setTextureCubeDynamic=function(b,e){c.activeTexture(a.TEXTURE0+\n\te);c.bindTexture(a.TEXTURE_CUBE_MAP,d.get(b).__webglTexture)};this.setupRenderTarget=function(b){var e=d.get(b),f=d.get(b.texture);b.addEventListener(\"dispose\",p);f.__webglTexture=a.createTexture();t.textures++;var g=b instanceof THREE.WebGLRenderTargetCube,h=k(b);if(g){e.__webglFramebuffer=[];for(var l=0;6>l;l++)e.__webglFramebuffer[l]=a.createFramebuffer()}else e.__webglFramebuffer=a.createFramebuffer();if(g){c.bindTexture(a.TEXTURE_CUBE_MAP,f.__webglTexture);q(a.TEXTURE_CUBE_MAP,b.texture,h);for(l=\n\t0;6>l;l++)r(e.__webglFramebuffer[l],b,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+l);b.texture.generateMipmaps&&h&&a.generateMipmap(a.TEXTURE_CUBE_MAP);c.bindTexture(a.TEXTURE_CUBE_MAP,null)}else c.bindTexture(a.TEXTURE_2D,f.__webglTexture),q(a.TEXTURE_2D,b.texture,h),r(e.__webglFramebuffer,b,a.COLOR_ATTACHMENT0,a.TEXTURE_2D),b.texture.generateMipmaps&&h&&a.generateMipmap(a.TEXTURE_2D),c.bindTexture(a.TEXTURE_2D,null);if(b.depthBuffer){e=d.get(b);f=b instanceof THREE.WebGLRenderTargetCube;if(b.depthTexture){if(f)throw Error(\"target.depthTexture not supported in Cube render targets\");\n\tif(b instanceof THREE.WebGLRenderTargetCube)throw Error(\"Depth Texture with cube render targets is not supported!\");a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer);if(!(b.depthTexture instanceof THREE.DepthTexture))throw Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");d.get(b.depthTexture).__webglTexture&&b.depthTexture.image.width===b.width&&b.depthTexture.image.height===b.height||(b.depthTexture.image.width=b.width,b.depthTexture.image.height=b.height,b.depthTexture.needsUpdate=\n\t!0);m(b.depthTexture,0);b=d.get(b.depthTexture).__webglTexture;a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,b,0)}else if(f)for(e.__webglDepthbuffer=[],f=0;6>f;f++)a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer[f]),e.__webglDepthbuffer[f]=a.createRenderbuffer(),s(e.__webglDepthbuffer[f],b);else a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),s(e.__webglDepthbuffer,b);a.bindFramebuffer(a.FRAMEBUFFER,null)}};this.updateRenderTargetMipmap=\n\tfunction(b){var e=b.texture;e.generateMipmaps&&k(b)&&e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter&&(b=b instanceof THREE.WebGLRenderTargetCube?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D,e=d.get(e).__webglTexture,c.bindTexture(b,e),a.generateMipmap(b),c.bindTexture(b,null))}};\n\tTHREE.WebGLUniforms=function(){var a=new THREE.Texture,b=new THREE.CubeTexture,c=[],d=[],e=function(a,b,d){var e=a[0];if(0>=e||0<e)return a;var f=b*d,g=c[f];void 0===g&&(g=new Float32Array(f),c[f]=g);if(0!==b)for(e.toArray(g,0),e=1,f=0;e!==b;++e)f+=d,a[e].toArray(g,f);return g},f=function(a,b){var c=d[b];void 0===c&&(c=new Int32Array(b),d[b]=c);for(var e=0;e!==b;++e)c[e]=a.allocTextureUnit();return c},g=function(a,b){a.uniform1f(this.addr,b)},h=function(a,b){a.uniform1i(this.addr,b)},k=function(a,\n\tb){void 0===b.x?a.uniform2fv(this.addr,b):a.uniform2f(this.addr,b.x,b.y)},l=function(a,b){void 0!==b.x?a.uniform3f(this.addr,b.x,b.y,b.z):void 0!==b.r?a.uniform3f(this.addr,b.r,b.g,b.b):a.uniform3fv(this.addr,b)},n=function(a,b){void 0===b.x?a.uniform4fv(this.addr,b):a.uniform4f(this.addr,b.x,b.y,b.z,b.w)},p=function(a,b){a.uniformMatrix2fv(this.addr,!1,b.elements||b)},m=function(a,b){a.uniformMatrix3fv(this.addr,!1,b.elements||b)},q=function(a,b){a.uniformMatrix4fv(this.addr,!1,b.elements||b)},r=\n\tfunction(b,c,d){var e=d.allocTextureUnit();b.uniform1i(this.addr,e);d.setTexture2D(c||a,e)},s=function(a,c,d){var e=d.allocTextureUnit();a.uniform1i(this.addr,e);d.setTextureCube(c||b,e)},t=function(a,b){a.uniform2iv(this.addr,b)},u=function(a,b){a.uniform3iv(this.addr,b)},v=function(a,b){a.uniform4iv(this.addr,b)},C=function(a){switch(a){case 5126:return g;case 35664:return k;case 35665:return l;case 35666:return n;case 35674:return p;case 35675:return m;case 35676:return q;case 35678:return r;case 35680:return s;\n\tcase 5124:case 35670:return h;case 35667:case 35671:return t;case 35668:case 35672:return u;case 35669:case 35673:return v}},w=function(a,b){a.uniform1fv(this.addr,b)},E=function(a,b){a.uniform1iv(this.addr,b)},z=function(a,b){a.uniform2fv(this.addr,e(b,this.size,2))},y=function(a,b){a.uniform3fv(this.addr,e(b,this.size,3))},A=function(a,b){a.uniform4fv(this.addr,e(b,this.size,4))},I=function(a,b){a.uniformMatrix2fv(this.addr,!1,e(b,this.size,4))},B=function(a,b){a.uniformMatrix3fv(this.addr,!1,e(b,\n\tthis.size,9))},F=function(a,b){a.uniformMatrix4fv(this.addr,!1,e(b,this.size,16))},K=function(b,c,d){var e=c.length,g=f(d,e);b.uniform1iv(this.addr,g);for(b=0;b!==e;++b)d.setTexture2D(c[b]||a,g[b])},P=function(a,c,d){var e=c.length,g=f(d,e);a.uniform1iv(this.addr,g);for(a=0;a!==e;++a)d.setTextureCube(c[a]||b,g[a])},M=function(a){switch(a){case 5126:return w;case 35664:return z;case 35665:return y;case 35666:return A;case 35674:return I;case 35675:return B;case 35676:return F;case 35678:return K;case 35680:return P;\n\tcase 5124:case 35670:return E;case 35667:case 35671:return t;case 35668:case 35672:return u;case 35669:case 35673:return v}},H=function(a,b,c){this.id=a;this.addr=c;this.setValue=C(b.type)},L=function(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=M(b.type)},O=function(a){this.id=a;this.seq=[];this.map={}};O.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id])}};var N=/([\\w\\d_]+)(\\])?(\\[|\\.)?/g,Q=function(a,b,c){this.seq=[];this.map=\n\t{};this.renderer=c;c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var d=0;d!==c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,k=h.length;for(N.lastIndex=0;;){var l=N.exec(h),m=N.lastIndex,n=l[1],p=l[3];\"]\"===l[2]&&(n|=0);if(void 0===p||\"[\"===p&&m+2===k){h=g;e=void 0===p?new H(n,e,f):new L(n,e,f);h.seq.push(e);h.map[e.id]=e;break}else p=g.map[n],void 0===p&&(p=new O(n),n=g,g=p,n.seq.push(g),n.map[g.id]=g),g=p}}};Q.prototype.setValue=function(a,b,c){b=this.map[b];\n\tvoid 0!==b&&b.setValue(a,c,this.renderer)};Q.prototype.set=function(a,b,c){var d=this.map[c];void 0!==d&&d.setValue(a,b[c],this.renderer)};Q.prototype.setOptional=function(a,b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};Q.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}};Q.seqWithValue=function(a,b){for(var c=[],d=0,e=a.length;d!==e;++d){var f=a[d];f.id in b&&c.push(f)}return c};Q.splitDynamic=function(a,b){for(var c=null,\n\td=a.length,e=0,f=0;f!==d;++f){var g=a[f],h=b[g.id];h&&!0===h.dynamic?(null===c&&(c=[]),c.push(g)):(e<f&&(a[e]=g),++e)}e<d&&(a.length=e);return c};Q.evalDynamic=function(a,b,c,d){for(var e=0,f=a.length;e!==f;++e){var g=b[a[e].id],h=g.onUpdateCallback;void 0!==h&&h.call(g,c,d)}};return Q}();\n\tTHREE.LensFlarePlugin=function(a,b){var c,d,e,f,g,h,k,l,n,p,m=a.context,q=a.state,r,s,t,u,v,C;this.render=function(w,E,z){if(0!==b.length){w=new THREE.Vector3;var y=z.w/z.z,A=.5*z.z,I=.5*z.w,B=16/z.w,F=new THREE.Vector2(B*y,B),K=new THREE.Vector3(1,1,0),P=new THREE.Vector2(1,1),M=new THREE.Box2;M.min.set(0,0);M.max.set(z.z-16,z.w-16);if(void 0===u){var B=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),H=new Uint16Array([0,1,2,0,2,3]);r=m.createBuffer();s=m.createBuffer();m.bindBuffer(m.ARRAY_BUFFER,\n\tr);m.bufferData(m.ARRAY_BUFFER,B,m.STATIC_DRAW);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,s);m.bufferData(m.ELEMENT_ARRAY_BUFFER,H,m.STATIC_DRAW);v=m.createTexture();C=m.createTexture();q.bindTexture(m.TEXTURE_2D,v);m.texImage2D(m.TEXTURE_2D,0,m.RGB,16,16,0,m.RGB,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,\n\tm.NEAREST);q.bindTexture(m.TEXTURE_2D,C);m.texImage2D(m.TEXTURE_2D,0,m.RGBA,16,16,0,m.RGBA,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST);var B=t={vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif ( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility =        visibility.r / 9.0;\\nvVisibility *= 1.0 - visibility.g / 9.0;\\nvVisibility *=       visibility.b / 9.0;\\nvVisibility *= 1.0 - visibility.a / 9.0;\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\n\tfragmentShader:\"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif ( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if ( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},H=m.createProgram(),L=m.createShader(m.FRAGMENT_SHADER),\n\tO=m.createShader(m.VERTEX_SHADER),N=\"precision \"+a.getPrecision()+\" float;\\n\";m.shaderSource(L,N+B.fragmentShader);m.shaderSource(O,N+B.vertexShader);m.compileShader(L);m.compileShader(O);m.attachShader(H,L);m.attachShader(H,O);m.linkProgram(H);u=H;n=m.getAttribLocation(u,\"position\");p=m.getAttribLocation(u,\"uv\");c=m.getUniformLocation(u,\"renderType\");d=m.getUniformLocation(u,\"map\");e=m.getUniformLocation(u,\"occlusionMap\");f=m.getUniformLocation(u,\"opacity\");g=m.getUniformLocation(u,\"color\");h=m.getUniformLocation(u,\n\t\"scale\");k=m.getUniformLocation(u,\"rotation\");l=m.getUniformLocation(u,\"screenPosition\")}m.useProgram(u);q.initAttributes();q.enableAttribute(n);q.enableAttribute(p);q.disableUnusedAttributes();m.uniform1i(e,0);m.uniform1i(d,1);m.bindBuffer(m.ARRAY_BUFFER,r);m.vertexAttribPointer(n,2,m.FLOAT,!1,16,0);m.vertexAttribPointer(p,2,m.FLOAT,!1,16,8);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,s);q.disable(m.CULL_FACE);q.setDepthWrite(!1);H=0;for(L=b.length;H<L;H++)if(B=16/z.w,F.set(B*y,B),O=b[H],w.set(O.matrixWorld.elements[12],\n\tO.matrixWorld.elements[13],O.matrixWorld.elements[14]),w.applyMatrix4(E.matrixWorldInverse),w.applyProjection(E.projectionMatrix),K.copy(w),P.x=z.x+K.x*A+A-8,P.y=z.y+K.y*I+I-8,!0===M.containsPoint(P)){q.activeTexture(m.TEXTURE0);q.bindTexture(m.TEXTURE_2D,null);q.activeTexture(m.TEXTURE1);q.bindTexture(m.TEXTURE_2D,v);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGB,P.x,P.y,16,16,0);m.uniform1i(c,0);m.uniform2f(h,F.x,F.y);m.uniform3f(l,K.x,K.y,K.z);q.disable(m.BLEND);q.enable(m.DEPTH_TEST);m.drawElements(m.TRIANGLES,\n\t6,m.UNSIGNED_SHORT,0);q.activeTexture(m.TEXTURE0);q.bindTexture(m.TEXTURE_2D,C);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGBA,P.x,P.y,16,16,0);m.uniform1i(c,1);q.disable(m.DEPTH_TEST);q.activeTexture(m.TEXTURE1);q.bindTexture(m.TEXTURE_2D,v);m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0);O.positionScreen.copy(K);O.customUpdateCallback?O.customUpdateCallback(O):O.updateLensFlares();m.uniform1i(c,2);q.enable(m.BLEND);for(var N=0,Q=O.lensFlares.length;N<Q;N++){var J=O.lensFlares[N];.001<J.opacity&&.001<J.scale&&\n\t(K.x=J.x,K.y=J.y,K.z=J.z,B=J.size*J.scale/z.w,F.x=B*y,F.y=B,m.uniform3f(l,K.x,K.y,K.z),m.uniform2f(h,F.x,F.y),m.uniform1f(k,J.rotation),m.uniform1f(f,J.opacity),m.uniform3f(g,J.color.r,J.color.g,J.color.b),q.setBlending(J.blending,J.blendEquation,J.blendSrc,J.blendDst),a.setTexture2D(J.texture,1),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0))}}q.enable(m.CULL_FACE);q.enable(m.DEPTH_TEST);q.setDepthWrite(!0);a.resetGLState()}}};\n\tTHREE.SpritePlugin=function(a,b){var c,d,e,f,g,h,k,l,n,p,m,q,r,s,t,u,v;function C(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:b.id-a.id}var w=a.context,E=a.state,z,y,A,I,B=new THREE.Vector3,F=new THREE.Quaternion,K=new THREE.Vector3;this.render=function(P,M){if(0!==b.length){if(void 0===A){var H=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),L=new Uint16Array([0,1,2,0,2,3]);z=w.createBuffer();y=w.createBuffer();w.bindBuffer(w.ARRAY_BUFFER,\n\tz);w.bufferData(w.ARRAY_BUFFER,H,w.STATIC_DRAW);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,y);w.bufferData(w.ELEMENT_ARRAY_BUFFER,L,w.STATIC_DRAW);var H=w.createProgram(),L=w.createShader(w.VERTEX_SHADER),O=w.createShader(w.FRAGMENT_SHADER);w.shaderSource(L,[\"precision \"+a.getPrecision()+\" float;\",\"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position * scale;\\nvec2 rotatedPosition;\\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\nvec4 finalPosition;\\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition;\\nfinalPosition = projectionMatrix * finalPosition;\\ngl_Position = finalPosition;\\n}\"].join(\"\\n\"));\n\tw.shaderSource(O,[\"precision \"+a.getPrecision()+\" float;\",\"uniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\nif ( texture.a < alphaTest ) discard;\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\nif ( fogType > 0 ) {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat fogFactor = 0.0;\\nif ( fogType == 1 ) {\\nfogFactor = smoothstep( fogNear, fogFar, depth );\\n} else {\\nconst float LOG2 = 1.442695;\\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n}\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\\n}\"].join(\"\\n\"));\n\tw.compileShader(L);w.compileShader(O);w.attachShader(H,L);w.attachShader(H,O);w.linkProgram(H);A=H;u=w.getAttribLocation(A,\"position\");v=w.getAttribLocation(A,\"uv\");c=w.getUniformLocation(A,\"uvOffset\");d=w.getUniformLocation(A,\"uvScale\");e=w.getUniformLocation(A,\"rotation\");f=w.getUniformLocation(A,\"scale\");g=w.getUniformLocation(A,\"color\");h=w.getUniformLocation(A,\"map\");k=w.getUniformLocation(A,\"opacity\");l=w.getUniformLocation(A,\"modelViewMatrix\");n=w.getUniformLocation(A,\"projectionMatrix\");p=\n\tw.getUniformLocation(A,\"fogType\");m=w.getUniformLocation(A,\"fogDensity\");q=w.getUniformLocation(A,\"fogNear\");r=w.getUniformLocation(A,\"fogFar\");s=w.getUniformLocation(A,\"fogColor\");t=w.getUniformLocation(A,\"alphaTest\");H=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");H.width=8;H.height=8;L=H.getContext(\"2d\");L.fillStyle=\"white\";L.fillRect(0,0,8,8);I=new THREE.Texture(H);I.needsUpdate=!0}w.useProgram(A);E.initAttributes();E.enableAttribute(u);E.enableAttribute(v);E.disableUnusedAttributes();\n\tE.disable(w.CULL_FACE);E.enable(w.BLEND);w.bindBuffer(w.ARRAY_BUFFER,z);w.vertexAttribPointer(u,2,w.FLOAT,!1,16,0);w.vertexAttribPointer(v,2,w.FLOAT,!1,16,8);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,y);w.uniformMatrix4fv(n,!1,M.projectionMatrix.elements);E.activeTexture(w.TEXTURE0);w.uniform1i(h,0);L=H=0;(O=P.fog)?(w.uniform3f(s,O.color.r,O.color.g,O.color.b),O instanceof THREE.Fog?(w.uniform1f(q,O.near),w.uniform1f(r,O.far),w.uniform1i(p,1),L=H=1):O instanceof THREE.FogExp2&&(w.uniform1f(m,O.density),\n\tw.uniform1i(p,2),L=H=2)):(w.uniform1i(p,0),L=H=0);for(var O=0,N=b.length;O<N;O++){var Q=b[O];Q.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,Q.matrixWorld);Q.z=-Q.modelViewMatrix.elements[14]}b.sort(C);for(var J=[],O=0,N=b.length;O<N;O++){var Q=b[O],D=Q.material;w.uniform1f(t,D.alphaTest);w.uniformMatrix4fv(l,!1,Q.modelViewMatrix.elements);Q.matrixWorld.decompose(B,F,K);J[0]=K.x;J[1]=K.y;Q=0;P.fog&&D.fog&&(Q=L);H!==Q&&(w.uniform1i(p,Q),H=Q);null!==D.map?(w.uniform2f(c,D.map.offset.x,D.map.offset.y),\n\tw.uniform2f(d,D.map.repeat.x,D.map.repeat.y)):(w.uniform2f(c,0,0),w.uniform2f(d,1,1));w.uniform1f(k,D.opacity);w.uniform3f(g,D.color.r,D.color.g,D.color.b);w.uniform1f(e,D.rotation);w.uniform2fv(f,J);E.setBlending(D.blending,D.blendEquation,D.blendSrc,D.blendDst);E.setDepthTest(D.depthTest);E.setDepthWrite(D.depthWrite);D.map?a.setTexture2D(D.map,0):a.setTexture2D(I,0);w.drawElements(w.TRIANGLES,6,w.UNSIGNED_SHORT,0)}E.enable(w.CULL_FACE);a.resetGLState()}}};\n\tObject.assign(THREE,{Face4:function(a,b,c,d,e,f,g){console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\");return new THREE.Face3(a,b,c,e,f,g)},LineStrip:0,LinePieces:1,MeshFaceMaterial:THREE.MultiMaterial,PointCloud:function(a,b){console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\");return new THREE.Points(a,b)},Particle:THREE.Sprite,ParticleSystem:function(a,b){console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\");return new THREE.Points(a,\n\tb)},PointCloudMaterial:function(a){console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)},ParticleBasicMaterial:function(a){console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)},ParticleSystemMaterial:function(a){console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)},Vertex:function(a,b,c){console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\");\n\treturn new THREE.Vector3(a,b,c)}});Object.assign(THREE.Box2.prototype,{empty:function(){console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\");return this.isEmpty()},isIntersectionBox:function(a){console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)}});\n\tObject.assign(THREE.Box3.prototype,{empty:function(){console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\");return this.isEmpty()},isIntersectionBox:function(a){console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)},isIntersectionSphere:function(a){console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\");return this.intersectsSphere(a)}});\n\tObject.assign(THREE.Matrix3.prototype,{multiplyVector3:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\");return a.applyMatrix3(this)},multiplyVector3Array:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");return this.applyToVector3Array(a)}});\n\tObject.assign(THREE.Matrix4.prototype,{extractPosition:function(a){console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\");return this.copyPosition(a)},setRotationFromQuaternion:function(a){console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\");return this.makeRotationFromQuaternion(a)},multiplyVector3:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\");\n\treturn a.applyProjection(this)},multiplyVector4:function(a){console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},multiplyVector3Array:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");return this.applyToVector3Array(a)},rotateAxis:function(a){console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\");\n\ta.transformDirection(this)},crossVector:function(a){console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},translate:function(a){console.error(\"THREE.Matrix4: .translate() has been removed.\")},rotateX:function(a){console.error(\"THREE.Matrix4: .rotateX() has been removed.\")},rotateY:function(a){console.error(\"THREE.Matrix4: .rotateY() has been removed.\")},rotateZ:function(a){console.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},\n\trotateByAxis:function(a,b){console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")}});Object.assign(THREE.Plane.prototype,{isIntersectionLine:function(a){console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\");return this.intersectsLine(a)}});Object.assign(THREE.Quaternion.prototype,{multiplyVector3:function(a){console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\");return a.applyQuaternion(this)}});\n\tObject.assign(THREE.Ray.prototype,{isIntersectionBox:function(a){console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)},isIntersectionPlane:function(a){console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\");return this.intersectsPlane(a)},isIntersectionSphere:function(a){console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\");return this.intersectsSphere(a)}});\n\tObject.assign(THREE.Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},setEulerFromQuaternion:function(){console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},getPositionFromMatrix:function(a){console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\");return this.setFromMatrixPosition(a)},\n\tgetScaleFromMatrix:function(a){console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\");return this.setFromMatrixColumn(b,a)}});\n\tObject.assign(THREE.Object3D.prototype,{getChildByName:function(a){console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\");return this.getObjectByName(a)},renderDepth:function(a){console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\")},translate:function(a,b){console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\");return this.translateOnAxis(b,a)}});\n\tObject.defineProperties(THREE.Object3D.prototype,{eulerOrder:{get:function(){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");return this.rotation.order},set:function(a){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");this.rotation.order=a}},useQuaternion:{get:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set:function(a){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")}}});\n\tObject.defineProperties(THREE.LOD.prototype,{objects:{get:function(){console.warn(\"THREE.LOD: .objects has been renamed to .levels.\");return this.levels}}});THREE.PerspectiveCamera.prototype.setLens=function(a,b){console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\");void 0!==b&&(this.filmGauge=b);this.setFocalLength(a)};\n\tObject.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(a){console.warn(\"THREE.Light: .onlyShadow has been removed.\")}},shadowCameraFov:{set:function(a){console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\");this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\");this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\");\n\tthis.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\");this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\");this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\");this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\");\n\tthis.shadow.camera.far=a}},shadowCameraVisible:{set:function(a){console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\")}},shadowBias:{set:function(a){console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\");this.shadow.bias=a}},shadowDarkness:{set:function(a){console.warn(\"THREE.Light: .shadowDarkness has been removed.\")}},shadowMapWidth:{set:function(a){console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\");\n\tthis.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\");this.shadow.mapSize.height=a}}});Object.defineProperties(THREE.BufferAttribute.prototype,{length:{get:function(){console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");return this.array.length}}});\n\tObject.assign(THREE.BufferGeometry.prototype,{addIndex:function(a){console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\");this.setIndex(a)},addDrawCall:function(a,b,c){void 0!==c&&console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\");console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\");this.addGroup(a,b)},clearDrawCalls:function(){console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\");this.clearGroups()},\n\tcomputeTangents:function(){console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\")},computeOffsets:function(){console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\")}});Object.defineProperties(THREE.BufferGeometry.prototype,{drawcalls:{get:function(){console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\");return this.groups}},offsets:{get:function(){console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\");return this.groups}}});\n\tObject.defineProperties(THREE.Material.prototype,{wrapAround:{get:function(){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")},set:function(a){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")}},wrapRGB:{get:function(){console.warn(\"THREE.\"+this.type+\": .wrapRGB has been removed.\");return new THREE.Color}}});\n\tObject.defineProperties(THREE.MeshPhongMaterial.prototype,{metal:{get:function(){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.\");return!1},set:function(a){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead\")}}});\n\tObject.defineProperties(THREE.ShaderMaterial.prototype,{derivatives:{get:function(){console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");return this.extensions.derivatives},set:function(a){console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");this.extensions.derivatives=a}}});\n\tTHREE.EventDispatcher.prototype=Object.assign(Object.create({constructor:THREE.EventDispatcher,apply:function(a){console.warn(\"THREE.EventDispatcher: .apply is deprecated, just inherit or Object.assign the prototype to mix-in.\");Object.assign(a,this)}}),THREE.EventDispatcher.prototype);\n\tObject.assign(THREE.WebGLRenderer.prototype,{supportsFloatTextures:function(){console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\");return this.extensions.get(\"OES_texture_float\")},supportsHalfFloatTextures:function(){console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\");return this.extensions.get(\"OES_texture_half_float\")},supportsStandardDerivatives:function(){console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\");\n\treturn this.extensions.get(\"OES_standard_derivatives\")},supportsCompressedTextureS3TC:function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\");return this.extensions.get(\"WEBGL_compressed_texture_s3tc\")},supportsCompressedTexturePVRTC:function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\");return this.extensions.get(\"WEBGL_compressed_texture_pvrtc\")},\n\tsupportsBlendMinMax:function(){console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\");return this.extensions.get(\"EXT_blend_minmax\")},supportsVertexTextures:function(){return this.capabilities.vertexTextures},supportsInstancedArrays:function(){console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\");return this.extensions.get(\"ANGLE_instanced_arrays\")},enableScissorTest:function(a){console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\");\n\tthis.setScissorTest(a)},initMaterial:function(){console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")},addPrePlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")},addPostPlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")},updateShadowMap:function(){console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")}});\n\tObject.defineProperties(THREE.WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\");this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\");this.shadowMap.type=a}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.\");\n\tthis.shadowMap.cullFace=a}}});Object.defineProperties(THREE.WebGLShadowMap.prototype,{cullFace:{get:function(){return this.renderReverseSided?THREE.CullFaceFront:THREE.CullFaceBack},set:function(a){a=a!==THREE.CullFaceBack;console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \"+a+\".\");this.renderReverseSided=a}}});\n\tObject.defineProperties(THREE.WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");return this.texture.wrapS},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");this.texture.wrapS=a}},wrapT:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");return this.texture.wrapT},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");this.texture.wrapT=\n\ta}},magFilter:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\");return this.texture.magFilter},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\");this.texture.magFilter=a}},minFilter:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\");return this.texture.minFilter},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\");this.texture.minFilter=\n\ta}},anisotropy:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\");return this.texture.anisotropy},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\");this.texture.anisotropy=a}},offset:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");return this.texture.offset},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");this.texture.offset=\n\ta}},repeat:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");return this.texture.repeat},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");this.texture.repeat=a}},format:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");return this.texture.format},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");this.texture.format=a}},type:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");\n\treturn this.texture.type},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");this.texture.type=a}},generateMipmaps:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\");return this.texture.generateMipmaps},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\");this.texture.generateMipmaps=a}}});\n\tObject.assign(THREE.Audio.prototype,{load:function(a){console.warn(\"THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.\");var b=this;(new THREE.AudioLoader).load(a,function(a){b.setBuffer(a)});return this}});Object.assign(THREE.AudioAnalyser.prototype,{getData:function(a){console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\");return this.getFrequencyData()}});\n\tTHREE.GeometryUtils={merge:function(a,b,c){console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\");var d;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\");return a.center()}};\n\tTHREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");var e=new THREE.TextureLoader;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadTextureCube:function(a,b,c,d){console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");var e=new THREE.CubeTextureLoader;e.setCrossOrigin(this.crossOrigin);a=e.load(a,\n\tc,void 0,d);b&&(a.mapping=b);return a},loadCompressedTexture:function(){console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},loadCompressedTextureCube:function(){console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")}};\n\tTHREE.Projector=function(){console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\");this.projectVector=function(a,b){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");a.project(b)};this.unprojectVector=function(a,b){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");a.unproject(b)};this.pickingRay=function(a,b){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}};\n\tTHREE.CanvasRenderer=function(){console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\");this.domElement=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};\n\tTHREE.CurveUtils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};\n\tTHREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Group,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};\n\tTHREE.ShapeUtils={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g,h,k;if(0<THREE.ShapeUtils.area(a))for(h=0;h<c;h++)e[h]=h;else for(h=0;h<c;h++)e[h]=c-1-h;var l=2*c;for(h=c-1;2<c;){if(0>=l--){console.warn(\"THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()\");break}g=h;c<=g&&(g=0);h=g+1;c<=h&&(h=0);k=h+1;c<=k&&(k=0);var n;a:{var p=\n\tn=void 0,m=void 0,q=void 0,r=void 0,s=void 0,t=void 0,u=void 0,v=void 0,p=a[e[g]].x,m=a[e[g]].y,q=a[e[h]].x,r=a[e[h]].y,s=a[e[k]].x,t=a[e[k]].y;if(Number.EPSILON>(q-p)*(t-m)-(r-m)*(s-p))n=!1;else{var C=void 0,w=void 0,E=void 0,z=void 0,y=void 0,A=void 0,I=void 0,B=void 0,F=void 0,K=void 0,F=B=I=v=u=void 0,C=s-q,w=t-r,E=p-s,z=m-t,y=q-p,A=r-m;for(n=0;n<c;n++)if(u=a[e[n]].x,v=a[e[n]].y,!(u===p&&v===m||u===q&&v===r||u===s&&v===t)&&(I=u-p,B=v-m,F=u-q,K=v-r,u-=s,v-=t,F=C*K-w*F,I=y*B-A*I,B=E*v-z*u,F>=-Number.EPSILON&&\n\tB>=-Number.EPSILON&&I>=-Number.EPSILON)){n=!1;break a}n=!0}}if(n){d.push([a[e[g]],a[e[h]],a[e[k]]]);f.push([e[g],e[h],e[k]]);g=h;for(k=h+1;k<c;g++,k++)e[g]=e[k];c--;l=2*c}}return b?f:d}}(),triangulateShape:function(a,b){function c(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-d.x,l=e.y-d.y,n=a.x-d.x,p=a.y-d.y,y=h*k-g*l,A=h*n-g*p;if(Math.abs(y)>Number.EPSILON){if(0<y){if(0>A||A>\n\ty)return[];k=l*n-k*p;if(0>k||k>y)return[]}else{if(0<A||A<y)return[];k=l*n-k*p;if(0<k||k<y)return[]}if(0===k)return!f||0!==A&&A!==y?[a]:[];if(k===y)return!f||0!==A&&A!==y?[b]:[];if(0===A)return[d];if(A===y)return[e];f=k/y;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!==A||l*n!==k*p)return[];h=0===g&&0===h;k=0===k&&0===l;if(h&&k)return a.x!==d.x||a.y!==d.y?[]:[a];if(h)return c(d,e,a)?[a]:[];if(k)return c(a,b,d)?[d]:[];0!==g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),d.x<e.x?(b=d,y=d.x,l=e,d=e.x):(b=\n\te,y=e.x,l=d,d=d.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),d.y<e.y?(b=d,y=d.y,l=e,d=e.y):(b=e,y=e.y,l=d,d=d.y));return k<=y?a<y?[]:a===y?f?[]:[b]:a<=d?[b,h]:[b,l]:k>d?[]:k===d?f?[]:[g]:a<=d?[g,h]:[g,l]}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return Math.abs(a)>Number.EPSILON?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var f,g,h,k,l,n={};h=a.concat();f=0;for(g=b.length;f<g;f++)Array.prototype.push.apply(h,b[f]);f=0;for(g=\n\th.length;f<g;f++)l=h[f].x+\":\"+h[f].y,void 0!==n[l]&&console.warn(\"THREE.Shape: Duplicate point\",l),n[l]=f;f=function(a,b){function c(a,b){var d=h.length-1,f=a-1;0>f&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],k[b]);if(!d)return!1;d=k.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(k[b],k[f],k[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,h,k;for(e=0;e<l.length;e++)for(f=b[l[e]],\n\th=0;h<f.length;h++)if(k=h+1,k%=f.length,k=d(a,c,f[h],f[k],!0),0<k.length)return!0;return!1}var h=a.concat(),k,l=[],n,p,z,y,A,I=[],B,F,K,P=0;for(n=b.length;P<n;P++)l.push(P);B=0;for(var M=2*l.length;0<l.length;){M--;if(0>M){console.log(\"Infinite Loop! Holes left:\"+l.length+\", Probably Hole outside Shape!\");break}for(p=B;p<h.length;p++){z=h[p];n=-1;for(P=0;P<l.length;P++)if(y=l[P],A=z.x+\":\"+z.y+\":\"+y,void 0===I[A]){k=b[y];for(F=0;F<k.length;F++)if(y=k[F],c(p,F)&&!f(z,y)&&!g(z,y)){n=F;l.splice(P,1);\n\tB=h.slice(0,p+1);y=h.slice(p);F=k.slice(n);K=k.slice(0,n+1);h=B.concat(F).concat(K).concat(y);B=p;break}if(0<=n)break;I[A]=!0}if(0<=n)break}}return h}(a,b);var p=THREE.ShapeUtils.triangulate(f,!1);f=0;for(g=p.length;f<g;f++)for(k=p[f],h=0;3>h;h++)l=k[h].x+\":\"+k[h].y,l=n[l],void 0!==l&&(k[h]=l);return p.concat()},isClockWise:function(a){return 0>THREE.ShapeUtils.area(a)},b2:function(){return function(a,b,c,d){var e=1-a;return e*e*b+2*(1-a)*a*c+a*a*d}}(),b3:function(){return function(a,b,c,d,e){var f=\n\t1-a,g=1-a;return f*f*f*b+3*g*g*a*c+3*(1-a)*a*a*d+a*a*a*e}}()};THREE.Curve=function(){};\n\tTHREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(a){console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");return null},getPointAt:function(a){a=this.getUtoTmapping(a);return this.getPoint(a)},getPoints:function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c},getSpacedPoints:function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){a||\n\t(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-\n\t1,k;g<=h;)if(d=Math.floor(g+(h-g)/2),k=c[d]-f,0>k)g=d+1;else if(0<k)h=d-1;else{h=d;break}d=h;if(c[d]===f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)},getTangent:function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()},getTangentAt:function(a){a=this.getUtoTmapping(a);return this.getTangent(a)}};\n\tTHREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.autoClose=!1};\n\tTHREE.CurvePath.prototype=Object.assign(Object.create(THREE.Curve.prototype),{constructor:THREE.CurvePath,add:function(a){this.curves.push(a)},closePath:function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))},getPoint:function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),d=0;d<c.length;){if(c[d]>=b)return a=this.curves[d],b=1-(c[d]-b)/a.getLength(),a.getPointAt(b);d++}return null},getLength:function(){var a=\n\tthis.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=!0;this.cacheLengths=null;this.getLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],b=0,c=0,d=this.curves.length;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a},createPointsGeometry:function(a){a=this.getPoints(a);return this.createGeometry(a)},createSpacedPointsGeometry:function(a){a=this.getSpacedPoints(a);\n\treturn this.createGeometry(a)},createGeometry:function(a){for(var b=new THREE.Geometry,c=0,d=a.length;c<d;c++){var e=a[c];b.vertices.push(new THREE.Vector3(e.x,e.y,e.z||0))}return b}});THREE.Font=function(a){this.data=a};\n\tObject.assign(THREE.Font.prototype,{generateShapes:function(a,b,c){void 0===b&&(b=100);void 0===c&&(c=4);var d=this.data;a=String(a).split(\"\");var e=b/d.resolution,f=0;b=[];for(var g=0;g<a.length;g++){var h;h=e;var k=f,l=d.glyphs[a[g]]||d.glyphs[\"?\"];if(l){var n=new THREE.Path,p=[],m=THREE.ShapeUtils.b2,q=THREE.ShapeUtils.b3,r=void 0,s=void 0,t=s=r=void 0,u=void 0,v=void 0,C=void 0,w=void 0,E=void 0,u=void 0;if(l.o)for(var z=l._cachedOutline||(l._cachedOutline=l.o.split(\" \")),y=0,A=z.length;y<A;)switch(z[y++]){case \"m\":r=\n\tz[y++]*h+k;s=z[y++]*h;n.moveTo(r,s);break;case \"l\":r=z[y++]*h+k;s=z[y++]*h;n.lineTo(r,s);break;case \"q\":r=z[y++]*h+k;s=z[y++]*h;v=z[y++]*h+k;C=z[y++]*h;n.quadraticCurveTo(v,C,r,s);if(u=p[p.length-1])for(var t=u.x,u=u.y,I=1;I<=c;I++){var B=I/c;m(B,t,v,r);m(B,u,C,s)}break;case \"b\":if(r=z[y++]*h+k,s=z[y++]*h,v=z[y++]*h+k,C=z[y++]*h,w=z[y++]*h+k,E=z[y++]*h,n.bezierCurveTo(v,C,w,E,r,s),u=p[p.length-1])for(t=u.x,u=u.y,I=1;I<=c;I++)B=I/c,q(B,t,v,w,r),q(B,u,C,E,s)}h={offset:l.ha*h,path:n}}else h=void 0;f+=\n\th.offset;b.push(h.path)}c=[];d=0;for(a=b.length;d<a;d++)Array.prototype.push.apply(c,b[d].toShapes());return c}});THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};\n\tTHREE.Path.prototype=Object.assign(Object.create(THREE.CurvePath.prototype),{constructor:THREE.Path,fromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},moveTo:function(a,b){this.actions.push({action:\"moveTo\",args:[a,b]})},lineTo:function(a,b){var c=this.actions[this.actions.length-1].args,c=new THREE.LineCurve(new THREE.Vector2(c[c.length-2],c[c.length-1]),new THREE.Vector2(a,b));this.curves.push(c);this.actions.push({action:\"lineTo\",args:[a,\n\tb]})},quadraticCurveTo:function(a,b,c,d){var e=this.actions[this.actions.length-1].args,e=new THREE.QuadraticBezierCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(e);this.actions.push({action:\"quadraticCurveTo\",args:[a,b,c,d]})},bezierCurveTo:function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args,g=new THREE.CubicBezierCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),\n\tnew THREE.Vector2(e,f));this.curves.push(g);this.actions.push({action:\"bezierCurveTo\",args:[a,b,c,d,e,f]})},splineThru:function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);c=a[a.length-1];b.push(c.x);b.push(c.y);this.actions.push({action:\"splineThru\",args:b})},arc:function(a,b,c,d,e,f){var g=this.actions[this.actions.length-\n\t1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)},absarc:function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},ellipse:function(a,b,c,d,e,f,g,h){var k=this.actions[this.actions.length-1].args;this.absellipse(a+k[k.length-2],b+k[k.length-1],c,d,e,f,g,h)},absellipse:function(a,b,c,d,e,f,g,h){var k=[a,b,c,d,e,f,g,h||0];a=new THREE.EllipseCurve(a,b,c,d,e,f,g,h);this.curves.push(a);a=a.getPoint(1);k.push(a.x);k.push(a.y);this.actions.push({action:\"ellipse\",args:k})},getSpacedPoints:function(a){a||\n\t(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));this.autoClose&&b.push(b[0]);return b},getPoints:function(a){a=a||12;for(var b=THREE.ShapeUtils.b2,c=THREE.ShapeUtils.b3,d=[],e,f,g,h,k,l,n,p,m,q,r=0,s=this.actions.length;r<s;r++){m=this.actions[r];var t=m.args;switch(m.action){case \"moveTo\":d.push(new THREE.Vector2(t[0],t[1]));break;case \"lineTo\":d.push(new THREE.Vector2(t[0],t[1]));break;case \"quadraticCurveTo\":e=t[2];f=t[3];k=t[0];l=t[1];0<d.length?(m=d[d.length-1],n=m.x,p=m.y):(m=this.actions[r-\n\t1].args,n=m[m.length-2],p=m[m.length-1]);for(t=1;t<=a;t++)q=t/a,m=b(q,n,k,e),q=b(q,p,l,f),d.push(new THREE.Vector2(m,q));break;case \"bezierCurveTo\":e=t[4];f=t[5];k=t[0];l=t[1];g=t[2];h=t[3];0<d.length?(m=d[d.length-1],n=m.x,p=m.y):(m=this.actions[r-1].args,n=m[m.length-2],p=m[m.length-1]);for(t=1;t<=a;t++)q=t/a,m=c(q,n,k,g,e),q=c(q,p,l,h,f),d.push(new THREE.Vector2(m,q));break;case \"splineThru\":m=this.actions[r-1].args;q=[new THREE.Vector2(m[m.length-2],m[m.length-1])];m=a*t[0].length;q=q.concat(t[0]);\n\tq=new THREE.SplineCurve(q);for(t=1;t<=m;t++)d.push(q.getPointAt(t/m));break;case \"arc\":e=t[0];f=t[1];l=t[2];g=t[3];m=t[4];k=!!t[5];n=m-g;p=2*a;for(t=1;t<=p;t++)q=t/p,k||(q=1-q),q=g+q*n,m=e+l*Math.cos(q),q=f+l*Math.sin(q),d.push(new THREE.Vector2(m,q));break;case \"ellipse\":e=t[0];f=t[1];l=t[2];h=t[3];g=t[4];m=t[5];k=!!t[6];var u=t[7];n=m-g;p=2*a;var v,C;0!==u&&(v=Math.cos(u),C=Math.sin(u));for(t=1;t<=p;t++){q=t/p;k||(q=1-q);q=g+q*n;m=e+l*Math.cos(q);q=f+h*Math.sin(q);if(0!==u){var w=m;m=(w-e)*v-(q-\n\tf)*C+e;q=(w-e)*C+(q-f)*v+f}d.push(new THREE.Vector2(m,q))}}}a=d[d.length-1];Math.abs(a.x-d[0].x)<Number.EPSILON&&Math.abs(a.y-d[0].y)<Number.EPSILON&&d.splice(d.length-1,1);this.autoClose&&d.push(d[0]);return d},toShapes:function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],k=h.x-g.x,l=h.y-g.y;if(Math.abs(l)>Number.EPSILON){if(0>\n\tl&&(g=b[f],k=-k,h=b[e],l=-l),!(a.y<g.y||a.y>h.y))if(a.y===g.y){if(a.x===g.x)return!0}else{e=l*(a.x-g.x)-k*(a.y-g.y);if(0===e)return!0;0>e||(d=!d)}}else if(a.y===g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=h.x))return!0}return d}var e=THREE.ShapeUtils.isClockWise,f=function(a){for(var b=[],c=new THREE.Path,d=0,e=a.length;d<e;d++){var f=a[d],g=f.args,f=f.action;\"moveTo\"===f&&0!==c.actions.length&&(b.push(c),c=new THREE.Path);c[f].apply(c,g)}0!==c.actions.length&&b.push(c);return b}(this.actions);if(0===\n\tf.length)return[];if(!0===b)return c(f);var g,h,k,l=[];if(1===f.length)return h=f[0],k=new THREE.Shape,k.actions=h.actions,k.curves=h.curves,l.push(k),l;var n=!e(f[0].getPoints()),n=a?!n:n;k=[];var p=[],m=[],q=0,r;p[q]=void 0;m[q]=[];for(var s=0,t=f.length;s<t;s++)h=f[s],r=h.getPoints(),g=e(r),(g=a?!g:g)?(!n&&p[q]&&q++,p[q]={s:new THREE.Shape,p:r},p[q].s.actions=h.actions,p[q].s.curves=h.curves,n&&q++,m[q]=[]):m[q].push({h:h,p:r[0]});if(!p[0])return c(f);if(1<p.length){s=!1;h=[];e=0;for(f=p.length;e<\n\tf;e++)k[e]=[];e=0;for(f=p.length;e<f;e++)for(g=m[e],n=0;n<g.length;n++){q=g[n];r=!0;for(t=0;t<p.length;t++)d(q.p,p[t].p)&&(e!==t&&h.push({froms:e,tos:t,hole:n}),r?(r=!1,k[t].push(q)):s=!0);r&&k[e].push(q)}0<h.length&&(s||(m=k))}s=0;for(e=p.length;s<e;s++)for(k=p[s].s,l.push(k),h=m[s],f=0,g=h.length;f<g;f++)k.holes.push(h[f].h);return l}});THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};\n\tTHREE.Shape.prototype=Object.assign(Object.create(THREE.Path.prototype),{constructor:THREE.Shape,extrude:function(a){return new THREE.ExtrudeGeometry(this,a)},makeGeometry:function(a){return new THREE.ShapeGeometry(this,a)},getPointsHoles:function(a){for(var b=[],c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b},extractAllPoints:function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}},extractPoints:function(a){return this.extractAllPoints(a)}});\n\tTHREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};\n\tTHREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=THREE.ShapeUtils.b2;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y))};\n\tTHREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentQuadraticBezier;return(new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y))).normalize()};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;\n\tTHREE.CubicBezierCurve.prototype.getPoint=function(a){var b=THREE.ShapeUtils.b3;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y))};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentCubicBezier;return(new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y))).normalize()};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};\n\tTHREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;THREE.SplineCurve.prototype.getPoint=function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0===c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector2(c(d.x,e.x,f.x,b.x,a),c(d.y,e.y,f.y,b.y,a))};\n\tTHREE.EllipseCurve=function(a,b,c,d,e,f,g,h){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g;this.aRotation=h||0};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;\n\tTHREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);b=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);var c=this.aY+this.yRadius*Math.sin(b);if(0!==this.aRotation){var b=Math.cos(this.aRotation),d=Math.sin(this.aRotation),e=a;a=(e-this.aX)*b-(c-this.aY)*d+this.aX;c=(e-this.aX)*d+(c-this.aY)*b+this.aY}return new THREE.Vector2(a,c)};\n\tTHREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});\n\tTHREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b=THREE.ShapeUtils.b2;return new THREE.Vector3(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y),b(a,this.v0.z,this.v1.z,this.v2.z))});\n\tTHREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b=THREE.ShapeUtils.b3;return new THREE.Vector3(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),b(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z))});\n\tTHREE.SplineCurve3=THREE.Curve.create(function(a){console.warn(\"THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3\");this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(d.x,e.x,f.x,b.x,a),c(d.y,e.y,f.y,b.y,a),c(d.z,e.z,f.z,b.z,a))});\n\tTHREE.CatmullRomCurve3=function(){function a(){}var b=new THREE.Vector3,c=new a,d=new a,e=new a;a.prototype.init=function(a,b,c,d){this.c0=a;this.c1=c;this.c2=-3*a+3*b-2*c-d;this.c3=2*a-2*b+c+d};a.prototype.initNonuniformCatmullRom=function(a,b,c,d,e,n,p){a=((b-a)/e-(c-a)/(e+n)+(c-b)/n)*n;d=((c-b)/n-(d-b)/(n+p)+(d-c)/p)*n;this.init(b,c,a,d)};a.prototype.initCatmullRom=function(a,b,c,d,e){this.init(b,c,e*(c-a),e*(d-b))};a.prototype.calc=function(a){var b=a*a;return this.c0+this.c1*a+this.c2*b+this.c3*\n\tb*a};return THREE.Curve.create(function(a){this.points=a||[];this.closed=!1},function(a){var g=this.points,h,k;k=g.length;2>k&&console.log(\"duh, you need at least 2 points\");a*=k-(this.closed?0:1);h=Math.floor(a);a-=h;this.closed?h+=0<h?0:(Math.floor(Math.abs(h)/g.length)+1)*g.length:0===a&&h===k-1&&(h=k-2,a=1);var l,n,p;this.closed||0<h?l=g[(h-1)%k]:(b.subVectors(g[0],g[1]).add(g[0]),l=b);n=g[h%k];p=g[(h+1)%k];this.closed||h+2<k?g=g[(h+2)%k]:(b.subVectors(g[k-1],g[k-2]).add(g[k-1]),g=b);if(void 0===\n\tthis.type||\"centripetal\"===this.type||\"chordal\"===this.type){var m=\"chordal\"===this.type?.5:.25;k=Math.pow(l.distanceToSquared(n),m);h=Math.pow(n.distanceToSquared(p),m);m=Math.pow(p.distanceToSquared(g),m);1E-4>h&&(h=1);1E-4>k&&(k=h);1E-4>m&&(m=h);c.initNonuniformCatmullRom(l.x,n.x,p.x,g.x,k,h,m);d.initNonuniformCatmullRom(l.y,n.y,p.y,g.y,k,h,m);e.initNonuniformCatmullRom(l.z,n.z,p.z,g.z,k,h,m)}else\"catmullrom\"===this.type&&(k=void 0!==this.tension?this.tension:.5,c.initCatmullRom(l.x,n.x,p.x,g.x,\n\tk),d.initCatmullRom(l.y,n.y,p.y,g.y,k),e.initCatmullRom(l.z,n.z,p.z,g.z,k));return new THREE.Vector3(c.calc(a),d.calc(a),e.calc(a))})}();THREE.ClosedSplineCurve3=function(a){console.warn(\"THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.\");THREE.CatmullRomCurve3.call(this,a);this.type=\"catmullrom\";this.closed=!0};THREE.ClosedSplineCurve3.prototype=Object.create(THREE.CatmullRomCurve3.prototype);\n\tTHREE.BoxGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"BoxGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new THREE.BoxBufferGeometry(a,b,c,d,e,f));this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.CubeGeometry=THREE.BoxGeometry;\n\tTHREE.BoxBufferGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,k,l,K,P){var M=f/l,H=g/K,L=f/2,O=g/2,N=k/2;g=l+1;for(var Q=K+1,J=f=0,D=new THREE.Vector3,G=0;G<Q;G++)for(var aa=G*H-O,T=0;T<g;T++)D[a]=(T*M-L)*d,D[b]=aa*e,D[c]=N,p[r]=D.x,p[r+1]=D.y,p[r+2]=D.z,D[a]=0,D[b]=0,D[c]=0<k?1:-1,m[r]=D.x,m[r+1]=D.y,m[r+2]=D.z,q[s]=T/l,q[s+1]=1-G/K,r+=3,s+=2,f+=1;for(G=0;G<K;G++)for(T=0;T<l;T++)a=u+T+g*(G+1),b=u+(T+1)+g*(G+1),c=u+(T+1)+g*G,n[t]=u+T+g*G,n[t+1]=a,n[t+2]=c,n[t+3]=a,n[t+4]=b,n[t+5]=c,t+=6,\n\tJ+=6;h.addGroup(v,J,P);v+=J;u+=f}THREE.BufferGeometry.call(this);this.type=\"BoxBufferGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};var h=this;d=Math.floor(d)||1;e=Math.floor(e)||1;f=Math.floor(f)||1;var k=function(a,b,c){a=0+(a+1)*(b+1)*2+(a+1)*(c+1)*2;return a+=(c+1)*(b+1)*2}(d,e,f),l=function(a,b,c){a=0+a*b*2+a*c*2;a+=c*b*2;return 6*a}(d,e,f),n=new (65535<l?Uint32Array:Uint16Array)(l),p=new Float32Array(3*k),m=new Float32Array(3*k),q=new Float32Array(2*\n\tk),r=0,s=0,t=0,u=0,v=0;g(\"z\",\"y\",\"x\",-1,-1,c,b,a,f,e,0);g(\"z\",\"y\",\"x\",1,-1,c,b,-a,f,e,1);g(\"x\",\"z\",\"y\",1,1,a,c,b,d,f,2);g(\"x\",\"z\",\"y\",1,-1,a,c,-b,d,f,3);g(\"x\",\"y\",\"z\",1,-1,a,b,c,d,e,4);g(\"x\",\"y\",\"z\",-1,-1,a,b,-c,d,e,5);this.setIndex(new THREE.BufferAttribute(n,1));this.addAttribute(\"position\",new THREE.BufferAttribute(p,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(m,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(q,2))};THREE.BoxBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);\n\tTHREE.BoxBufferGeometry.prototype.constructor=THREE.BoxBufferGeometry;THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"CircleGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new THREE.CircleBufferGeometry(a,b,c,d))};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;\n\tTHREE.CircleBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"CircleBufferGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=b+2,f=new Float32Array(3*e),g=new Float32Array(3*e),e=new Float32Array(2*e);g[2]=1;e[0]=.5;e[1]=.5;for(var h=0,k=3,l=2;h<=b;h++,k+=3,l+=2){var n=c+h/b*d;f[k]=a*Math.cos(n);f[k+1]=a*Math.sin(n);g[k+2]=1;e[l]=(f[k]/a+1)/2;e[l+1]=(f[k+1]/a+1)/2}c=\n\t[];for(k=1;k<=b;k++)c.push(k,k+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(c),1));this.addAttribute(\"position\",new THREE.BufferAttribute(f,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(g,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(e,2));this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry;\n\tTHREE.CylinderBufferGeometry=function(a,b,c,d,e,f,g,h){function k(c){var e,f,k,m=new THREE.Vector2,n=new THREE.Vector3,p=0,C=!0===c?a:b,M=!0===c?1:-1;f=u;for(e=1;e<=d;e++)r.setXYZ(u,0,w*M,0),s.setXYZ(u,0,M,0),m.x=.5,m.y=.5,t.setXY(u,m.x,m.y),u++;k=u;for(e=0;e<=d;e++){var H=e/d*h+g,L=Math.cos(H),H=Math.sin(H);n.x=C*H;n.y=w*M;n.z=C*L;r.setXYZ(u,n.x,n.y,n.z);s.setXYZ(u,0,M,0);m.x=.5*L+.5;m.y=.5*H*M+.5;t.setXY(u,m.x,m.y);u++}for(e=0;e<d;e++)m=f+e,n=k+e,!0===c?(q.setX(v,n),v++,q.setX(v,n+1)):(q.setX(v,\n\tn+1),v++,q.setX(v,n)),v++,q.setX(v,m),v++,p+=3;l.addGroup(E,p,!0===c?1:2);E+=p}THREE.BufferGeometry.call(this);this.type=\"CylinderBufferGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};var l=this;a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;d=Math.floor(d)||8;e=Math.floor(e)||1;f=void 0!==f?f:!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var n=0;!1===f&&(0<a&&n++,0<b&&n++);var p=function(){var a=(d+1)*\n\t(e+1);!1===f&&(a+=(d+1)*n+d*n);return a}(),m=function(){var a=d*e*6;!1===f&&(a+=d*n*3);return a}(),q=new THREE.BufferAttribute(new (65535<m?Uint32Array:Uint16Array)(m),1),r=new THREE.BufferAttribute(new Float32Array(3*p),3),s=new THREE.BufferAttribute(new Float32Array(3*p),3),t=new THREE.BufferAttribute(new Float32Array(2*p),2),u=0,v=0,C=[],w=c/2,E=0;(function(){var f,k,m=new THREE.Vector3,n=new THREE.Vector3,p=0,F=(b-a)/c;for(k=0;k<=e;k++){var K=[],P=k/e,M=P*(b-a)+a;for(f=0;f<=d;f++){var H=f/d;n.x=\n\tM*Math.sin(H*h+g);n.y=-P*c+w;n.z=M*Math.cos(H*h+g);r.setXYZ(u,n.x,n.y,n.z);m.copy(n);if(0===a&&0===k||0===b&&k===e)m.x=Math.sin(H*h+g),m.z=Math.cos(H*h+g);m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*F).normalize();s.setXYZ(u,m.x,m.y,m.z);t.setXY(u,H,1-P);K.push(u);u++}C.push(K)}for(f=0;f<d;f++)for(k=0;k<e;k++)m=C[k+1][f],n=C[k+1][f+1],F=C[k][f+1],q.setX(v,C[k][f]),v++,q.setX(v,m),v++,q.setX(v,F),v++,q.setX(v,m),v++,q.setX(v,n),v++,q.setX(v,F),v++,p+=6;l.addGroup(E,p,0);E+=p})();!1===f&&(0<a&&k(!0),0<b&&k(!1));\n\tthis.setIndex(q);this.addAttribute(\"position\",r);this.addAttribute(\"normal\",s);this.addAttribute(\"uv\",t)};THREE.CylinderBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CylinderBufferGeometry.prototype.constructor=THREE.CylinderBufferGeometry;\n\tTHREE.CylinderGeometry=function(a,b,c,d,e,f,g,h){THREE.Geometry.call(this);this.type=\"CylinderGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new THREE.CylinderBufferGeometry(a,b,c,d,e,f,g,h));this.mergeVertices()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;\n\tTHREE.ConeBufferGeometry=function(a,b,c,d,e,f,g){THREE.CylinderBufferGeometry.call(this,0,a,b,c,d,e,f,g);this.type=\"ConeBufferGeometry\";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,thetaStart:f,thetaLength:g}};THREE.ConeBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.ConeBufferGeometry.prototype.constructor=THREE.ConeBufferGeometry;\n\tTHREE.ConeGeometry=function(a,b,c,d,e,f,g){THREE.CylinderGeometry.call(this,0,a,b,c,d,e,f,g);this.type=\"ConeGeometry\";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}};THREE.ConeGeometry.prototype=Object.create(THREE.CylinderGeometry.prototype);THREE.ConeGeometry.prototype.constructor=THREE.ConeGeometry;\n\tTHREE.EdgesGeometry=function(a,b){function c(a,b){return a-b}THREE.BufferGeometry.call(this);var d=Math.cos(THREE.Math.DEG2RAD*(void 0!==b?b:1)),e=[0,0],f={},g=[\"a\",\"b\",\"c\"],h;a instanceof THREE.BufferGeometry?(h=new THREE.Geometry,h.fromBufferGeometry(a)):h=a.clone();h.mergeVertices();h.computeFaceNormals();var k=h.vertices;h=h.faces;for(var l=0,n=h.length;l<n;l++)for(var p=h[l],m=0;3>m;m++){e[0]=p[g[m]];e[1]=p[g[(m+1)%3]];e.sort(c);var q=e.toString();void 0===f[q]?f[q]={vert1:e[0],vert2:e[1],face1:l,\n\tface2:void 0}:f[q].face2=l}e=[];for(q in f)if(g=f[q],void 0===g.face2||h[g.face1].normal.dot(h[g.face2].normal)<=d)l=k[g.vert1],e.push(l.x),e.push(l.y),e.push(l.z),l=k[g.vert2],e.push(l.x),e.push(l.y),e.push(l.z);this.addAttribute(\"position\",new THREE.BufferAttribute(new Float32Array(e),3))};THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry;\n\tTHREE.ExtrudeGeometry=function(a,b){\"undefined\"!==typeof a&&(THREE.Geometry.call(this),this.type=\"ExtrudeGeometry\",a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};\n\tTHREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.error(\"THREE.ExtrudeGeometry: vec does not exist\");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=1,d=a.x-b.x,e=a.y-b.y,f=c.x-a.x,g=c.y-a.y,h=d*d+e*e;if(Math.abs(d*g-e*f)>Number.EPSILON){var k=Math.sqrt(h),l=Math.sqrt(f*f+g*g),h=b.x-e/k;b=b.y+d/k;f=((c.x-g/l-h)*g-(c.y+f/l-b)*f)/(d*g-e*f);c=h+d*f-a.x;a=b+e*f-a.y;d=c*c+a*a;if(2>=d)return new THREE.Vector2(c,a);d=Math.sqrt(d/2)}else a=!1,d>Number.EPSILON?\n\tf>Number.EPSILON&&(a=!0):d<-Number.EPSILON?f<-Number.EPSILON&&(a=!0):Math.sign(e)===Math.sign(g)&&(a=!0),a?(c=-e,a=d,d=Math.sqrt(h)):(c=d,a=e,d=Math.sqrt(h/2));return new THREE.Vector2(c/d,a/d)}function e(a,b){var c,d;for(G=a.length;0<=--G;){c=G;d=G-1;0>d&&(d=a.length-1);for(var e=0,f=q+2*n,e=0;e<f;e++){var g=Q*e,h=Q*(e+1),k=b+c+g,g=b+d+g,l=b+d+h,h=b+c+h,k=k+B,g=g+B,l=l+B,h=h+B;I.faces.push(new THREE.Face3(k,g,h,null,null,1));I.faces.push(new THREE.Face3(g,l,h,null,null,1));k=u.generateSideWallUV(I,\n\tk,g,l,h);I.faceVertexUvs[0].push([k[0],k[1],k[3]]);I.faceVertexUvs[0].push([k[1],k[2],k[3]])}}}function f(a,b,c){I.vertices.push(new THREE.Vector3(a,b,c))}function g(a,b,c){a+=B;b+=B;c+=B;I.faces.push(new THREE.Face3(a,b,c,null,null,0));a=u.generateTopUV(I,a,b,c);I.faceVertexUvs[0].push(a)}var h=void 0!==b.amount?b.amount:100,k=void 0!==b.bevelThickness?b.bevelThickness:6,l=void 0!==b.bevelSize?b.bevelSize:k-2,n=void 0!==b.bevelSegments?b.bevelSegments:3,p=void 0!==b.bevelEnabled?b.bevelEnabled:!0,\n\tm=void 0!==b.curveSegments?b.curveSegments:12,q=void 0!==b.steps?b.steps:1,r=b.extrudePath,s,t=!1,u=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,v,C,w,E;r&&(s=r.getSpacedPoints(q),t=!0,p=!1,v=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(r,q,!1),C=new THREE.Vector3,w=new THREE.Vector3,E=new THREE.Vector3);p||(l=k=n=0);var z,y,A,I=this,B=this.vertices.length,r=a.extractPoints(m),m=r.shape,F=r.holes;if(r=!THREE.ShapeUtils.isClockWise(m)){m=m.reverse();\n\ty=0;for(A=F.length;y<A;y++)z=F[y],THREE.ShapeUtils.isClockWise(z)&&(F[y]=z.reverse());r=!1}var K=THREE.ShapeUtils.triangulateShape(m,F),P=m;y=0;for(A=F.length;y<A;y++)z=F[y],m=m.concat(z);var M,H,L,O,N,Q=m.length,J,D=K.length,r=[],G=0;L=P.length;M=L-1;for(H=G+1;G<L;G++,M++,H++)M===L&&(M=0),H===L&&(H=0),r[G]=d(P[G],P[M],P[H]);var aa=[],T,X=r.concat();y=0;for(A=F.length;y<A;y++){z=F[y];T=[];G=0;L=z.length;M=L-1;for(H=G+1;G<L;G++,M++,H++)M===L&&(M=0),H===L&&(H=0),T[G]=d(z[G],z[M],z[H]);aa.push(T);X=\n\tX.concat(T)}for(M=0;M<n;M++){L=M/n;O=k*(1-L);H=l*Math.sin(L*Math.PI/2);G=0;for(L=P.length;G<L;G++)N=c(P[G],r[G],H),f(N.x,N.y,-O);y=0;for(A=F.length;y<A;y++)for(z=F[y],T=aa[y],G=0,L=z.length;G<L;G++)N=c(z[G],T[G],H),f(N.x,N.y,-O)}H=l;for(G=0;G<Q;G++)N=p?c(m[G],X[G],H):m[G],t?(w.copy(v.normals[0]).multiplyScalar(N.x),C.copy(v.binormals[0]).multiplyScalar(N.y),E.copy(s[0]).add(w).add(C),f(E.x,E.y,E.z)):f(N.x,N.y,0);for(L=1;L<=q;L++)for(G=0;G<Q;G++)N=p?c(m[G],X[G],H):m[G],t?(w.copy(v.normals[L]).multiplyScalar(N.x),\n\tC.copy(v.binormals[L]).multiplyScalar(N.y),E.copy(s[L]).add(w).add(C),f(E.x,E.y,E.z)):f(N.x,N.y,h/q*L);for(M=n-1;0<=M;M--){L=M/n;O=k*(1-L);H=l*Math.sin(L*Math.PI/2);G=0;for(L=P.length;G<L;G++)N=c(P[G],r[G],H),f(N.x,N.y,h+O);y=0;for(A=F.length;y<A;y++)for(z=F[y],T=aa[y],G=0,L=z.length;G<L;G++)N=c(z[G],T[G],H),t?f(N.x,N.y+s[q-1].y,s[q-1].x+O):f(N.x,N.y,h+O)}(function(){if(p){var a;a=0*Q;for(G=0;G<D;G++)J=K[G],g(J[2]+a,J[1]+a,J[0]+a);a=q+2*n;a*=Q;for(G=0;G<D;G++)J=K[G],g(J[0]+a,J[1]+a,J[2]+a)}else{for(G=\n\t0;G<D;G++)J=K[G],g(J[2],J[1],J[0]);for(G=0;G<D;G++)J=K[G],g(J[0]+Q*q,J[1]+Q*q,J[2]+Q*q)}})();(function(){var a=0;e(P,a);a+=P.length;y=0;for(A=F.length;y<A;y++)z=F[y],e(z,a),a+=z.length})()};\n\tTHREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d){a=a.vertices;b=a[b];c=a[c];d=a[d];return[new THREE.Vector2(b.x,b.y),new THREE.Vector2(c.x,c.y),new THREE.Vector2(d.x,d.y)]},generateSideWallUV:function(a,b,c,d,e){a=a.vertices;b=a[b];c=a[c];d=a[d];e=a[e];return.01>Math.abs(b.y-c.y)?[new THREE.Vector2(b.x,1-b.z),new THREE.Vector2(c.x,1-c.z),new THREE.Vector2(d.x,1-d.z),new THREE.Vector2(e.x,1-e.z)]:[new THREE.Vector2(b.y,1-b.z),new THREE.Vector2(c.y,1-c.z),new THREE.Vector2(d.y,\n\t1-d.z),new THREE.Vector2(e.y,1-e.z)]}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type=\"ShapeGeometry\";!1===Array.isArray(a)&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};\n\tTHREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var k=e.shape,l=e.holes;if(!THREE.ShapeUtils.isClockWise(k))for(k=k.reverse(),e=0,f=l.length;e<f;e++)g=l[e],THREE.ShapeUtils.isClockWise(g)&&(l[e]=g.reverse());var n=THREE.ShapeUtils.triangulateShape(k,l);e=0;for(f=l.length;e<f;e++)g=l[e],k=k.concat(g);\n\tl=k.length;f=n.length;for(e=0;e<l;e++)g=k[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)l=n[e],k=l[0]+h,g=l[1]+h,l=l[2]+h,this.faces.push(new THREE.Face3(k,g,l,null,null,c)),this.faceVertexUvs[0].push(d.generateTopUV(this,k,g,l))};\n\tTHREE.LatheBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"LatheBufferGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=THREE.Math.clamp(d,0,2*Math.PI);for(var e=(b+1)*a.length,f=b*a.length*6,g=new THREE.BufferAttribute(new (65535<f?Uint32Array:Uint16Array)(f),1),h=new THREE.BufferAttribute(new Float32Array(3*e),3),k=new THREE.BufferAttribute(new Float32Array(2*e),2),l=0,n=0,p=1/b,m=new THREE.Vector3,q=new THREE.Vector2,\n\te=0;e<=b;e++)for(var f=c+e*p*d,r=Math.sin(f),s=Math.cos(f),f=0;f<=a.length-1;f++)m.x=a[f].x*r,m.y=a[f].y,m.z=a[f].x*s,h.setXYZ(l,m.x,m.y,m.z),q.x=e/b,q.y=f/(a.length-1),k.setXY(l,q.x,q.y),l++;for(e=0;e<b;e++)for(f=0;f<a.length-1;f++)c=f+e*a.length,l=c+a.length,p=c+a.length+1,m=c+1,g.setX(n,c),n++,g.setX(n,l),n++,g.setX(n,m),n++,g.setX(n,l),n++,g.setX(n,p),n++,g.setX(n,m),n++;this.setIndex(g);this.addAttribute(\"position\",h);this.addAttribute(\"uv\",k);this.computeVertexNormals();if(d===2*Math.PI)for(d=\n\tthis.attributes.normal.array,g=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,c=b*a.length*3,f=e=0;e<a.length;e++,f+=3)g.x=d[f+0],g.y=d[f+1],g.z=d[f+2],h.x=d[c+f+0],h.y=d[c+f+1],h.z=d[c+f+2],k.addVectors(g,h).normalize(),d[f+0]=d[c+f+0]=k.x,d[f+1]=d[c+f+1]=k.y,d[f+2]=d[c+f+2]=k.z};THREE.LatheBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.LatheBufferGeometry.prototype.constructor=THREE.LatheBufferGeometry;\n\tTHREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"LatheGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new THREE.LatheBufferGeometry(a,b,c,d));this.mergeVertices()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;\n\tTHREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"PlaneGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,c,d))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;\n\tTHREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"PlaneBufferGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2,f=b/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,k=a/c,l=b/d;b=new Float32Array(g*h*3);a=new Float32Array(g*h*3);for(var n=new Float32Array(g*h*2),p=0,m=0,q=0;q<h;q++)for(var r=q*l-f,s=0;s<g;s++)b[p]=s*k-e,b[p+1]=-r,a[p+2]=1,n[m]=s/c,n[m+1]=1-q/d,p+=3,m+=2;p=0;e=new (65535<b.length/3?Uint32Array:Uint16Array)(c*\n\td*6);for(q=0;q<d;q++)for(s=0;s<c;s++)f=s+g*(q+1),h=s+1+g*(q+1),k=s+1+g*q,e[p]=s+g*q,e[p+1]=f,e[p+2]=k,e[p+3]=f,e[p+4]=h,e[p+5]=k,p+=6;this.setIndex(new THREE.BufferAttribute(e,1));this.addAttribute(\"position\",new THREE.BufferAttribute(b,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(a,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(n,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;\n\tTHREE.RingBufferGeometry=function(a,b,c,d,e,f){THREE.BufferGeometry.call(this);this.type=\"RingBufferGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||20;b=b||50;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):1;var g=(c+1)*(d+1),h=c*d*6,h=new THREE.BufferAttribute(new (65535<h?Uint32Array:Uint16Array)(h),1),k=new THREE.BufferAttribute(new Float32Array(3*g),3),l=new THREE.BufferAttribute(new Float32Array(3*\n\tg),3),g=new THREE.BufferAttribute(new Float32Array(2*g),2),n=0,p=0,m,q=a,r=(b-a)/d,s=new THREE.Vector3,t=new THREE.Vector2,u;for(a=0;a<=d;a++){for(u=0;u<=c;u++)m=e+u/c*f,s.x=q*Math.cos(m),s.y=q*Math.sin(m),k.setXYZ(n,s.x,s.y,s.z),l.setXYZ(n,0,0,1),t.x=(s.x/b+1)/2,t.y=(s.y/b+1)/2,g.setXY(n,t.x,t.y),n++;q+=r}for(a=0;a<d;a++)for(b=a*(c+1),u=0;u<c;u++)e=m=u+b,f=m+c+1,n=m+c+2,m+=1,h.setX(p,e),p++,h.setX(p,f),p++,h.setX(p,n),p++,h.setX(p,e),p++,h.setX(p,n),p++,h.setX(p,m),p++;this.setIndex(h);this.addAttribute(\"position\",\n\tk);this.addAttribute(\"normal\",l);this.addAttribute(\"uv\",g)};THREE.RingBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.RingBufferGeometry.prototype.constructor=THREE.RingBufferGeometry;THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"RingGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new THREE.RingBufferGeometry(a,b,c,d,e,f))};\n\tTHREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.type=\"SphereGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new THREE.SphereBufferGeometry(a,b,c,d,e,f,g))};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);\n\tTHREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;\n\tTHREE.SphereBufferGeometry=function(a,b,c,d,e,f,g){THREE.BufferGeometry.call(this);this.type=\"SphereBufferGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;for(var h=f+g,k=(b+1)*(c+1),l=new THREE.BufferAttribute(new Float32Array(3*k),3),n=new THREE.BufferAttribute(new Float32Array(3*\n\tk),3),k=new THREE.BufferAttribute(new Float32Array(2*k),2),p=0,m=[],q=new THREE.Vector3,r=0;r<=c;r++){for(var s=[],t=r/c,u=0;u<=b;u++){var v=u/b,C=-a*Math.cos(d+v*e)*Math.sin(f+t*g),w=a*Math.cos(f+t*g),E=a*Math.sin(d+v*e)*Math.sin(f+t*g);q.set(C,w,E).normalize();l.setXYZ(p,C,w,E);n.setXYZ(p,q.x,q.y,q.z);k.setXY(p,v,1-t);s.push(p);p++}m.push(s)}d=[];for(r=0;r<c;r++)for(u=0;u<b;u++)e=m[r][u+1],g=m[r][u],p=m[r+1][u],q=m[r+1][u+1],(0!==r||0<f)&&d.push(e,g,q),(r!==c-1||h<Math.PI)&&d.push(g,p,q);this.setIndex(new (65535<\n\tl.count?THREE.Uint32Attribute:THREE.Uint16Attribute)(d,1));this.addAttribute(\"position\",l);this.addAttribute(\"normal\",n);this.addAttribute(\"uv\",k);this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry;\n\tTHREE.TextGeometry=function(a,b){b=b||{};var c=b.font;if(!1===c instanceof THREE.Font)return console.error(\"THREE.TextGeometry: font parameter is not an instance of THREE.Font.\"),new THREE.Geometry;c=c.generateShapes(a,b.size,b.curveSegments);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b);this.type=\"TextGeometry\"};\n\tTHREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;\n\tTHREE.TorusBufferGeometry=function(a,b,c,d,e){THREE.BufferGeometry.call(this);this.type=\"TorusBufferGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=Math.floor(c)||8;d=Math.floor(d)||6;e=e||2*Math.PI;var f=(c+1)*(d+1),g=c*d*6,g=new (65535<g?Uint32Array:Uint16Array)(g),h=new Float32Array(3*f),k=new Float32Array(3*f),f=new Float32Array(2*f),l=0,n=0,p=0,m=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3,s,t;for(s=0;s<=c;s++)for(t=0;t<=d;t++){var u=\n\tt/d*e,v=s/c*Math.PI*2;q.x=(a+b*Math.cos(v))*Math.cos(u);q.y=(a+b*Math.cos(v))*Math.sin(u);q.z=b*Math.sin(v);h[l]=q.x;h[l+1]=q.y;h[l+2]=q.z;m.x=a*Math.cos(u);m.y=a*Math.sin(u);r.subVectors(q,m).normalize();k[l]=r.x;k[l+1]=r.y;k[l+2]=r.z;f[n]=t/d;f[n+1]=s/c;l+=3;n+=2}for(s=1;s<=c;s++)for(t=1;t<=d;t++)a=(d+1)*(s-1)+t-1,b=(d+1)*(s-1)+t,e=(d+1)*s+t,g[p]=(d+1)*s+t-1,g[p+1]=a,g[p+2]=e,g[p+3]=a,g[p+4]=b,g[p+5]=e,p+=6;this.setIndex(new THREE.BufferAttribute(g,1));this.addAttribute(\"position\",new THREE.BufferAttribute(h,\n\t3));this.addAttribute(\"normal\",new THREE.BufferAttribute(k,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(f,2))};THREE.TorusBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.TorusBufferGeometry.prototype.constructor=THREE.TorusBufferGeometry;\n\tTHREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.type=\"TorusGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new THREE.TorusBufferGeometry(a,b,c,d,e))};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;\n\tTHREE.TorusKnotBufferGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a);a*=c/b;b=Math.cos(a);e.x=d*(2+b)*.5*f;e.y=d*(2+b)*g*.5;e.z=d*Math.sin(a)*.5}THREE.BufferGeometry.call(this);this.type=\"TorusKnotBufferGeometry\";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||100;b=b||40;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=(d+1)*(c+1),k=d*c*6,k=new THREE.BufferAttribute(new (65535<k?Uint32Array:Uint16Array)(k),1),l=new THREE.BufferAttribute(new Float32Array(3*\n\th),3),n=new THREE.BufferAttribute(new Float32Array(3*h),3),h=new THREE.BufferAttribute(new Float32Array(2*h),2),p,m,q=0,r=0,s=new THREE.Vector3,t=new THREE.Vector3,u=new THREE.Vector2,v=new THREE.Vector3,C=new THREE.Vector3,w=new THREE.Vector3,E=new THREE.Vector3,z=new THREE.Vector3;for(p=0;p<=c;++p)for(m=p/c*e*Math.PI*2,g(m,e,f,a,v),g(m+.01,e,f,a,C),E.subVectors(C,v),z.addVectors(C,v),w.crossVectors(E,z),z.crossVectors(w,E),w.normalize(),z.normalize(),m=0;m<=d;++m){var y=m/d*Math.PI*2,A=-b*Math.cos(y),\n\ty=b*Math.sin(y);s.x=v.x+(A*z.x+y*w.x);s.y=v.y+(A*z.y+y*w.y);s.z=v.z+(A*z.z+y*w.z);l.setXYZ(q,s.x,s.y,s.z);t.subVectors(s,v).normalize();n.setXYZ(q,t.x,t.y,t.z);u.x=p/c;u.y=m/d;h.setXY(q,u.x,u.y);q++}for(m=1;m<=c;m++)for(p=1;p<=d;p++)a=(d+1)*m+(p-1),b=(d+1)*m+p,e=(d+1)*(m-1)+p,k.setX(r,(d+1)*(m-1)+(p-1)),r++,k.setX(r,a),r++,k.setX(r,e),r++,k.setX(r,a),r++,k.setX(r,b),r++,k.setX(r,e),r++;this.setIndex(k);this.addAttribute(\"position\",l);this.addAttribute(\"normal\",n);this.addAttribute(\"uv\",h)};\n\tTHREE.TorusKnotBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.TorusKnotBufferGeometry.prototype.constructor=THREE.TorusKnotBufferGeometry;\n\tTHREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.type=\"TorusKnotGeometry\";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&&console.warn(\"THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.\");this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(a,b,c,d,e,f));this.mergeVertices()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);\n\tTHREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;\n\tTHREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"TubeGeometry\";this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e,taper:f};b=b||64;c=c||1;d=d||8;e=e||!1;f=f||THREE.TubeGeometry.NoTaper;var g=[],h,k,l=b+1,n,p,m,q,r,s=new THREE.Vector3,t,u,v;t=new THREE.TubeGeometry.FrenetFrames(a,b,e);u=t.normals;v=t.binormals;this.tangents=t.tangents;this.normals=u;this.binormals=v;for(t=0;t<l;t++)for(g[t]=[],n=t/(l-1),r=a.getPointAt(n),h=u[t],k=v[t],m=c*f(n),n=0;n<\n\td;n++)p=n/d*2*Math.PI,q=-m*Math.cos(p),p=m*Math.sin(p),s.copy(r),s.x+=q*h.x+p*k.x,s.y+=q*h.y+p*k.y,s.z+=q*h.z+p*k.z,g[t][n]=this.vertices.push(new THREE.Vector3(s.x,s.y,s.z))-1;for(t=0;t<b;t++)for(n=0;n<d;n++)f=e?(t+1)%b:t+1,l=(n+1)%d,a=g[t][n],c=g[f][n],f=g[f][l],l=g[t][l],s=new THREE.Vector2(t/b,n/d),u=new THREE.Vector2((t+1)/b,n/d),v=new THREE.Vector2((t+1)/b,(n+1)/d),h=new THREE.Vector2(t/b,(n+1)/d),this.faces.push(new THREE.Face3(a,c,l)),this.faceVertexUvs[0].push([s,u,h]),this.faces.push(new THREE.Face3(c,\n\tf,l)),this.faceVertexUvs[0].push([u.clone(),v,h.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(a){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};\n\tTHREE.TubeGeometry.FrenetFrames=function(a,b,c){var d=new THREE.Vector3,e=[],f=[],g=[],h=new THREE.Vector3,k=new THREE.Matrix4;b+=1;var l,n,p;this.tangents=e;this.normals=f;this.binormals=g;for(l=0;l<b;l++)n=l/(b-1),e[l]=a.getTangentAt(n),e[l].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;l=Math.abs(e[0].x);n=Math.abs(e[0].y);p=Math.abs(e[0].z);l<=a&&(a=l,d.set(1,0,0));n<=a&&(a=n,d.set(0,1,0));p<=a&&d.set(0,0,1);h.crossVectors(e[0],d).normalize();f[0].crossVectors(e[0],\n\th);g[0].crossVectors(e[0],f[0]);for(l=1;l<b;l++)f[l]=f[l-1].clone(),g[l]=g[l-1].clone(),h.crossVectors(e[l-1],e[l]),h.length()>Number.EPSILON&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[l-1].dot(e[l]),-1,1)),f[l].applyMatrix4(k.makeRotationAxis(h,d))),g[l].crossVectors(e[l],f[l]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),l=1;l<b;l++)f[l].applyMatrix4(k.makeRotationAxis(e[l],d*l)),g[l].crossVectors(e[l],f[l])};\n\tTHREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;b.uv=new THREE.Vector2(c,1-a);return b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);k.faces.push(d);t.copy(a).add(b).add(c).divideScalar(3);d=Math.atan2(t.z,-t.x);k.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function g(a,\n\tb){for(var c=Math.pow(2,b),d=e(k.vertices[a.a]),g=e(k.vertices[a.b]),h=e(k.vertices[a.c]),l=[],m=0;m<=c;m++){l[m]=[];for(var n=e(d.clone().lerp(h,m/c)),p=e(g.clone().lerp(h,m/c)),q=c-m,r=0;r<=q;r++)l[m][r]=0===r&&m===c?n:e(n.clone().lerp(p,r/q))}for(m=0;m<c;m++)for(r=0;r<2*(c-m)-1;r++)d=Math.floor(r/2),0===r%2?f(l[m][d+1],l[m+1][d],l[m][d]):f(l[m][d+1],l[m+1][d+1],l[m+1][d])}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,a.y));\n\treturn a.clone()}THREE.Geometry.call(this);this.type=\"PolyhedronGeometry\";this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;for(var k=this,l=0,n=a.length;l<n;l+=3)e(new THREE.Vector3(a[l],a[l+1],a[l+2]));a=this.vertices;for(var p=[],m=l=0,n=b.length;l<n;l+=3,m++){var q=a[b[l]],r=a[b[l+1]],s=a[b[l+2]];p[m]=new THREE.Face3(q.index,r.index,s.index,[q.clone(),r.clone(),s.clone()])}for(var t=new THREE.Vector3,l=0,n=p.length;l<n;l++)g(p[l],d);l=0;for(n=this.faceVertexUvs[0].length;l<\n\tn;l++)b=this.faceVertexUvs[0][l],d=b[0].x,a=b[1].x,p=b[2].x,m=Math.max(d,a,p),q=Math.min(d,a,p),.9<m&&.1>q&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>p&&(b[2].x+=1));l=0;for(n=this.vertices.length;l<n;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;\n\tTHREE.DodecahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2,d=1/c;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,\n\t12,14,1,14,5,1,5,9],a,b);this.type=\"DodecahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;\n\tTHREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type=\"IcosahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);\n\tTHREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type=\"OctahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;\n\tTHREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type=\"TetrahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;\n\tTHREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);this.type=\"ParametricGeometry\";this.parameters={func:a,slices:b,stacks:c};var d=this.vertices,e=this.faces,f=this.faceVertexUvs[0],g,h,k,l,n=b+1;for(g=0;g<=c;g++)for(l=g/c,h=0;h<=b;h++)k=h/b,k=a(k,l),d.push(k);var p,m,q,r;for(g=0;g<c;g++)for(h=0;h<b;h++)a=g*n+h,d=g*n+h+1,l=(g+1)*n+h+1,k=(g+1)*n+h,p=new THREE.Vector2(h/b,g/c),m=new THREE.Vector2((h+1)/b,g/c),q=new THREE.Vector2((h+1)/b,(g+1)/c),r=new THREE.Vector2(h/b,(g+1)/c),e.push(new THREE.Face3(a,\n\td,k)),f.push([p,m,r]),e.push(new THREE.Face3(d,l,k)),f.push([m.clone(),q,r.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;\n\tTHREE.WireframeGeometry=function(a){function b(a,b){return a-b}THREE.BufferGeometry.call(this);var c=[0,0],d={},e=[\"a\",\"b\",\"c\"];if(a instanceof THREE.Geometry){var f=a.vertices,g=a.faces,h=0,k=new Uint32Array(6*g.length);a=0;for(var l=g.length;a<l;a++)for(var n=g[a],p=0;3>p;p++){c[0]=n[e[p]];c[1]=n[e[(p+1)%3]];c.sort(b);var m=c.toString();void 0===d[m]&&(k[2*h]=c[0],k[2*h+1]=c[1],d[m]=!0,h++)}c=new Float32Array(6*h);a=0;for(l=h;a<l;a++)for(p=0;2>p;p++)d=f[k[2*a+p]],h=6*a+3*p,c[h+0]=d.x,c[h+1]=d.y,\n\tc[h+2]=d.z;this.addAttribute(\"position\",new THREE.BufferAttribute(c,3))}else if(a instanceof THREE.BufferGeometry){if(null!==a.index){l=a.index.array;f=a.attributes.position;e=a.groups;h=0;0===e.length&&a.addGroup(0,l.length);k=new Uint32Array(2*l.length);g=0;for(n=e.length;g<n;++g){a=e[g];p=a.start;m=a.count;a=p;for(var q=p+m;a<q;a+=3)for(p=0;3>p;p++)c[0]=l[a+p],c[1]=l[a+(p+1)%3],c.sort(b),m=c.toString(),void 0===d[m]&&(k[2*h]=c[0],k[2*h+1]=c[1],d[m]=!0,h++)}c=new Float32Array(6*h);a=0;for(l=h;a<\n\tl;a++)for(p=0;2>p;p++)h=6*a+3*p,d=k[2*a+p],c[h+0]=f.getX(d),c[h+1]=f.getY(d),c[h+2]=f.getZ(d)}else for(f=a.attributes.position.array,h=f.length/3,k=h/3,c=new Float32Array(6*h),a=0,l=k;a<l;a++)for(p=0;3>p;p++)h=18*a+6*p,k=9*a+3*p,c[h+0]=f[k],c[h+1]=f[k+1],c[h+2]=f[k+2],d=9*a+(p+1)%3*3,c[h+3]=f[d],c[h+4]=f[d+1],c[h+5]=f[d+2];this.addAttribute(\"position\",new THREE.BufferAttribute(c,3))}};THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);\n\tTHREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry;THREE.AxisHelper=function(a){a=a||1;var b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.BufferAttribute(b,3));a.addAttribute(\"color\",new THREE.BufferAttribute(c,3));b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,a,b)};THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype);\n\tTHREE.AxisHelper.prototype.constructor=THREE.AxisHelper;\n\tTHREE.ArrowHelper=function(){var a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.Float32Attribute([0,0,0,0,1,0],3));var b=new THREE.CylinderBufferGeometry(0,.5,1,5,1);b.translate(0,-.5,0);return function(c,d,e,f,g,h){THREE.Object3D.call(this);void 0===f&&(f=16776960);void 0===e&&(e=1);void 0===g&&(g=.2*e);void 0===h&&(h=.2*g);this.position.copy(d);this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:f}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new THREE.Mesh(b,\n\tnew THREE.MeshBasicMaterial({color:f}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(c);this.setLength(e,g,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;\n\tTHREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,Math.max(0,a-b),1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};\n\tTHREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.copy(a);this.cone.material.color.copy(a)};THREE.BoxHelper=function(a,b){void 0===b&&(b=16776960);var c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),d=new Float32Array(24),e=new THREE.BufferGeometry;e.setIndex(new THREE.BufferAttribute(c,1));e.addAttribute(\"position\",new THREE.BufferAttribute(d,3));THREE.LineSegments.call(this,e,new THREE.LineBasicMaterial({color:b}));void 0!==a&&this.update(a)};\n\tTHREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;\n\tTHREE.BoxHelper.prototype.update=function(){var a=new THREE.Box3;return function(b){b instanceof THREE.Box3?a.copy(b):a.setFromObject(b);if(!a.isEmpty()){b=a.min;var c=a.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x;e[1]=c.y;e[2]=c.z;e[3]=b.x;e[4]=c.y;e[5]=c.z;e[6]=b.x;e[7]=b.y;e[8]=c.z;e[9]=c.x;e[10]=b.y;e[11]=c.z;e[12]=c.x;e[13]=c.y;e[14]=b.z;e[15]=b.x;e[16]=c.y;e[17]=b.z;e[18]=b.x;e[19]=b.y;e[20]=b.z;e[21]=c.x;e[22]=b.y;e[23]=b.z;d.needsUpdate=!0;this.geometry.computeBoundingSphere()}}}();\n\tTHREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};\n\tTHREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b(\"n1\",\"n2\",16755200);b(\"n2\",\"n4\",16755200);b(\"n4\",\"n3\",16755200);b(\"n3\",\"n1\",16755200);b(\"f1\",\"f2\",16755200);b(\"f2\",\"f4\",16755200);b(\"f4\",\"f3\",16755200);b(\"f3\",\"f1\",16755200);b(\"n1\",\"f1\",16755200);\n\tb(\"n2\",\"f2\",16755200);b(\"n3\",\"f3\",16755200);b(\"n4\",\"f4\",16755200);b(\"p\",\"n1\",16711680);b(\"p\",\"n2\",16711680);b(\"p\",\"n3\",16711680);b(\"p\",\"n4\",16711680);b(\"u1\",\"u2\",43775);b(\"u2\",\"u3\",43775);b(\"u3\",\"u1\",43775);b(\"c\",\"t\",16777215);b(\"p\",\"c\",3355443);b(\"cn1\",\"cn2\",3355443);b(\"cn3\",\"cn4\",3355443);b(\"cf1\",\"cf2\",3355443);b(\"cf3\",\"cf4\",3355443);THREE.LineSegments.call(this,d,e);this.camera=a;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=\n\t!1;this.pointMap=f;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;\n\tTHREE.CameraHelper.prototype.update=function(){function a(a,g,h,k){d.set(g,h,k).unproject(e);a=c[a];if(void 0!==a)for(g=0,h=a.length;g<h;g++)b.vertices[a[g]].copy(d)}var b,c,d=new THREE.Vector3,e=new THREE.Camera;return function(){b=this.geometry;c=this.pointMap;e.projectionMatrix.copy(this.camera.projectionMatrix);a(\"c\",0,0,-1);a(\"t\",0,0,1);a(\"n1\",-1,-1,-1);a(\"n2\",1,-1,-1);a(\"n3\",-1,1,-1);a(\"n4\",1,1,-1);a(\"f1\",-1,-1,1);a(\"f2\",1,-1,1);a(\"f3\",-1,1,1);a(\"f4\",1,1,1);a(\"u1\",.7,1.1,-1);a(\"u2\",-.7,1.1,\n\t-1);a(\"u3\",0,2,-1);a(\"cf1\",-1,0,1);a(\"cf2\",1,0,1);a(\"cf3\",0,-1,1);a(\"cf4\",0,1,1);a(\"cn1\",-1,0,-1);a(\"cn2\",1,0,-1);a(\"cn3\",0,-1,-1);a(\"cn4\",0,1,-1);b.verticesNeedUpdate=!0}}();\n\tTHREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;void 0===b&&(b=1);var c=new THREE.BufferGeometry;c.addAttribute(\"position\",new THREE.Float32Attribute([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));var d=new THREE.LineBasicMaterial({fog:!1});this.add(new THREE.Line(c,d));c=new THREE.BufferGeometry;c.addAttribute(\"position\",new THREE.Float32Attribute([0,0,0,0,0,1],3));this.add(new THREE.Line(c,\n\td));this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;THREE.DirectionalLightHelper.prototype.dispose=function(){var a=this.children[0],b=this.children[1];a.geometry.dispose();a.material.dispose();b.geometry.dispose();b.material.dispose()};\n\tTHREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);var d=this.children[0],e=this.children[1];d.lookAt(c);d.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);e.lookAt(c);e.scale.z=c.length()}}();\n\tTHREE.EdgesHelper=function(a,b,c){b=void 0!==b?b:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(a.geometry,c),new THREE.LineBasicMaterial({color:b}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;\n\tTHREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=0;c=this.object.geometry;c instanceof THREE.Geometry?b=c.faces.length:console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(6*b,3);c.addAttribute(\"position\",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=\n\t!1;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;\n\tTHREE.FaceNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,f=this.object.geometry,g=f.vertices,f=f.faces,h=0,k=0,l=f.length;k<l;k++){var n=f[k],p=n.normal;a.copy(g[n.a]).add(g[n.b]).add(g[n.c]).divideScalar(3).applyMatrix4(d);b.copy(p).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);\n\te.setXYZ(h,a.x,a.y,a.z);h+=1;e.setXYZ(h,b.x,b.y,b.z);h+=1}e.needsUpdate=!0;return this}}();\n\tTHREE.GridHelper=function(a,b,c,d){c=new THREE.Color(void 0!==c?c:4473924);d=new THREE.Color(void 0!==d?d:8947848);for(var e=[],f=[],g=-a,h=0;g<=a;g+=b){e.push(-a,0,g,a,0,g);e.push(g,0,-a,g,0,a);var k=0===g?c:d;k.toArray(f,h);h+=3;k.toArray(f,h);h+=3;k.toArray(f,h);h+=3;k.toArray(f,h);h+=3}a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.Float32Attribute(e,3));a.addAttribute(\"color\",new THREE.Float32Attribute(f,3));e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,\n\ta,e)};THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(){console.error(\"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\")};\n\tTHREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.rotateX(-Math.PI/2);for(var d=0;8>d;d++)c.faces[d].color=this.colors[4>d?0:1];d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(c,d);this.add(this.lightSphere);this.update()};\n\tTHREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};\n\tTHREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();\n\tTHREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereBufferGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;\n\tTHREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};\n\tTHREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)this.bones[c].parent instanceof THREE.Bone&&(b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(0,0,1)),b.colors.push(new THREE.Color(0,1,0)));b.dynamic=!0;c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.LineSegments.call(this,b,c);this.root=a;this.matrix=a.matrixWorld;\n\tthis.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return b};\n\tTHREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),c=new THREE.Matrix4,d=0,e=0;e<this.bones.length;e++){var f=this.bones[e];f.parent instanceof THREE.Bone&&(c.multiplyMatrices(b,f.matrixWorld),a.vertices[d].setFromMatrixPosition(c),c.multiplyMatrices(b,f.parent.matrixWorld),a.vertices[d+1].setFromMatrixPosition(c),d+=2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};\n\tTHREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.BufferGeometry;for(var b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],c=0,d=1;32>c;c++,d++){var e=c/32*Math.PI*2,f=d/32*Math.PI*2;b.push(Math.cos(e),Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute(\"position\",new THREE.Float32Attribute(b,3));b=new THREE.LineBasicMaterial({fog:!1});this.cone=new THREE.LineSegments(a,\n\tb);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};\n\tTHREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E3,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();\n\tTHREE.VertexNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;c=this.object.geometry;c instanceof THREE.Geometry?b=3*c.faces.length:c instanceof THREE.BufferGeometry&&(b=c.attributes.normal.count);c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(6*b,3);c.addAttribute(\"position\",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()};\n\tTHREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;\n\tTHREE.VertexNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){var d=[\"a\",\"b\",\"c\"];this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld,f=this.geometry.attributes.position,g=this.object.geometry;if(g instanceof THREE.Geometry)for(var h=g.vertices,k=g.faces,l=g=0,n=k.length;l<n;l++)for(var p=k[l],m=0,q=p.vertexNormals.length;m<q;m++){var r=p.vertexNormals[m];a.copy(h[p[d[m]]]).applyMatrix4(e);\n\tb.copy(r).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);f.setXYZ(g,a.x,a.y,a.z);g+=1;f.setXYZ(g,b.x,b.y,b.z);g+=1}else if(g instanceof THREE.BufferGeometry)for(d=g.attributes.position,h=g.attributes.normal,m=g=0,q=d.count;m<q;m++)a.set(d.getX(m),d.getY(m),d.getZ(m)).applyMatrix4(e),b.set(h.getX(m),h.getY(m),h.getZ(m)),b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),f.setXYZ(g,a.x,a.y,a.z),g+=1,f.setXYZ(g,b.x,b.y,b.z),g+=1;f.needsUpdate=!0;return this}}();\n\tTHREE.WireframeHelper=function(a,b){var c=void 0!==b?b:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(a.geometry),new THREE.LineBasicMaterial({color:c}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(a){THREE.Object3D.call(this);this.material=a;this.render=function(a){}};\n\tTHREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation(\"__default\",0,c-1,c/1);this.setAnimationWeight(\"__default\",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;\n\tTHREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={start:b,end:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\\d+)/i,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var k=h[1];d[k]||(d[k]={start:Infinity,end:-Infinity});h=d[k];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=k)}}for(k in d)h=d[k],this.createAnimation(k,h.start,h.end,a);this.firstAnimation=c};\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn(\"THREE.MorphBlendMesh: animation[\"+a+\"] undefined in .playAnimation()\")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};\n\tTHREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.start+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&\n\t(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);d.currentFrame!==d.lastFrame?(this.morphTargetInfluences[d.currentFrame]=e*g,this.morphTargetInfluences[d.lastFrame]=(1-e)*g):this.morphTargetInfluences[d.currentFrame]=g}}};\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Tween.js - Licensed under the MIT license\n\t * https://github.com/tweenjs/tween.js\n\t * ----------------------------------------------\n\t *\n\t * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n\t * Thank you all, you're awesome!\n\t */\n\t\n\tvar TWEEN = TWEEN || (function () {\n\t\n\t\tvar _tweens = [];\n\t\n\t\treturn {\n\t\n\t\t\tgetAll: function () {\n\t\n\t\t\t\treturn _tweens;\n\t\n\t\t\t},\n\t\n\t\t\tremoveAll: function () {\n\t\n\t\t\t\t_tweens = [];\n\t\n\t\t\t},\n\t\n\t\t\tadd: function (tween) {\n\t\n\t\t\t\t_tweens.push(tween);\n\t\n\t\t\t},\n\t\n\t\t\tremove: function (tween) {\n\t\n\t\t\t\tvar i = _tweens.indexOf(tween);\n\t\n\t\t\t\tif (i !== -1) {\n\t\t\t\t\t_tweens.splice(i, 1);\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tupdate: function (time, preserve) {\n\t\n\t\t\t\tif (_tweens.length === 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\tvar i = 0;\n\t\n\t\t\t\ttime = time !== undefined ? time : TWEEN.now();\n\t\n\t\t\t\twhile (i < _tweens.length) {\n\t\n\t\t\t\t\tif (_tweens[i].update(time) || preserve) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_tweens.splice(i, 1);\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn true;\n\t\n\t\t\t}\n\t\t};\n\t\n\t})();\n\t\n\t\n\t// Include a performance.now polyfill\n\t(function () {\n\t\t// In node.js, use process.hrtime.\n\t\tif (this.window === undefined && this.process !== undefined) {\n\t\t\tTWEEN.now = function () {\n\t\t\t\tvar time = process.hrtime();\n\t\n\t\t\t\t// Convert [seconds, microseconds] to milliseconds.\n\t\t\t\treturn time[0] * 1000 + time[1] / 1000;\n\t\t\t};\n\t\t}\n\t\t// In a browser, use window.performance.now if it is available.\n\t\telse if (this.window !== undefined &&\n\t\t         window.performance !== undefined &&\n\t\t\t window.performance.now !== undefined) {\n\t\n\t\t\t// This must be bound, because directly assigning this function\n\t\t\t// leads to an invocation exception in Chrome.\n\t\t\tTWEEN.now = window.performance.now.bind(window.performance);\n\t\t}\n\t\t// Use Date.now if it is available.\n\t\telse if (Date.now !== undefined) {\n\t\t\tTWEEN.now = Date.now;\n\t\t}\n\t\t// Otherwise, use 'new Date().getTime()'.\n\t\telse {\n\t\t\tTWEEN.now = function () {\n\t\t\t\treturn new Date().getTime();\n\t\t\t};\n\t\t}\n\t})();\n\t\n\t\n\tTWEEN.Tween = function (object) {\n\t\n\t\tvar _object = object;\n\t\tvar _valuesStart = {};\n\t\tvar _valuesEnd = {};\n\t\tvar _valuesStartRepeat = {};\n\t\tvar _duration = 1000;\n\t\tvar _repeat = 0;\n\t\tvar _yoyo = false;\n\t\tvar _isPlaying = false;\n\t\tvar _reversed = false;\n\t\tvar _delayTime = 0;\n\t\tvar _startTime = null;\n\t\tvar _easingFunction = TWEEN.Easing.Linear.None;\n\t\tvar _interpolationFunction = TWEEN.Interpolation.Linear;\n\t\tvar _chainedTweens = [];\n\t\tvar _onStartCallback = null;\n\t\tvar _onStartCallbackFired = false;\n\t\tvar _onUpdateCallback = null;\n\t\tvar _onCompleteCallback = null;\n\t\tvar _onStopCallback = null;\n\t\n\t\t// Set all starting values present on the target object\n\t\tfor (var field in object) {\n\t\t\t_valuesStart[field] = parseFloat(object[field], 10);\n\t\t}\n\t\n\t\tthis.to = function (properties, duration) {\n\t\n\t\t\tif (duration !== undefined) {\n\t\t\t\t_duration = duration;\n\t\t\t}\n\t\n\t\t\t_valuesEnd = properties;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.start = function (time) {\n\t\n\t\t\tTWEEN.add(this);\n\t\n\t\t\t_isPlaying = true;\n\t\n\t\t\t_onStartCallbackFired = false;\n\t\n\t\t\t_startTime = time !== undefined ? time : TWEEN.now();\n\t\t\t_startTime += _delayTime;\n\t\n\t\t\tfor (var property in _valuesEnd) {\n\t\n\t\t\t\t// Check if an Array was provided as property value\n\t\t\t\tif (_valuesEnd[property] instanceof Array) {\n\t\n\t\t\t\t\tif (_valuesEnd[property].length === 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\t\t_valuesEnd[property] = [_object[property]].concat(_valuesEnd[property]);\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t\t// we should not set that property in the object\n\t\t\t\tif (_valuesStart[property] === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\t_valuesStart[property] = _object[property];\n\t\n\t\t\t\tif ((_valuesStart[property] instanceof Array) === false) {\n\t\t\t\t\t_valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t\t}\n\t\n\t\t\t\t_valuesStartRepeat[property] = _valuesStart[property] || 0;\n\t\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.stop = function () {\n\t\n\t\t\tif (!_isPlaying) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\tTWEEN.remove(this);\n\t\t\t_isPlaying = false;\n\t\n\t\t\tif (_onStopCallback !== null) {\n\t\t\t\t_onStopCallback.call(_object);\n\t\t\t}\n\t\n\t\t\tthis.stopChainedTweens();\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.stopChainedTweens = function () {\n\t\n\t\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t_chainedTweens[i].stop();\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tthis.delay = function (amount) {\n\t\n\t\t\t_delayTime = amount;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.repeat = function (times) {\n\t\n\t\t\t_repeat = times;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.yoyo = function (yoyo) {\n\t\n\t\t\t_yoyo = yoyo;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\n\t\tthis.easing = function (easing) {\n\t\n\t\t\t_easingFunction = easing;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.interpolation = function (interpolation) {\n\t\n\t\t\t_interpolationFunction = interpolation;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.chain = function () {\n\t\n\t\t\t_chainedTweens = arguments;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.onStart = function (callback) {\n\t\n\t\t\t_onStartCallback = callback;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.onUpdate = function (callback) {\n\t\n\t\t\t_onUpdateCallback = callback;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.onComplete = function (callback) {\n\t\n\t\t\t_onCompleteCallback = callback;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.onStop = function (callback) {\n\t\n\t\t\t_onStopCallback = callback;\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tthis.update = function (time) {\n\t\n\t\t\tvar property;\n\t\t\tvar elapsed;\n\t\t\tvar value;\n\t\n\t\t\tif (time < _startTime) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\tif (_onStartCallbackFired === false) {\n\t\n\t\t\t\tif (_onStartCallback !== null) {\n\t\t\t\t\t_onStartCallback.call(_object);\n\t\t\t\t}\n\t\n\t\t\t\t_onStartCallbackFired = true;\n\t\n\t\t\t}\n\t\n\t\t\telapsed = (time - _startTime) / _duration;\n\t\t\telapsed = elapsed > 1 ? 1 : elapsed;\n\t\n\t\t\tvalue = _easingFunction(elapsed);\n\t\n\t\t\tfor (property in _valuesEnd) {\n\t\n\t\t\t\t// Don't update properties that do not exist in the source object\n\t\t\t\tif (_valuesStart[property] === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tvar start = _valuesStart[property] || 0;\n\t\t\t\tvar end = _valuesEnd[property];\n\t\n\t\t\t\tif (end instanceof Array) {\n\t\n\t\t\t\t\t_object[property] = _interpolationFunction(end, value);\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\t\tif (typeof (end) === 'string') {\n\t\n\t\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\t\tend = start + parseFloat(end, 10);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tend = parseFloat(end, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Protect against non numeric properties.\n\t\t\t\t\tif (typeof (end) === 'number') {\n\t\t\t\t\t\t_object[property] = start + (end - start) * value;\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tif (_onUpdateCallback !== null) {\n\t\t\t\t_onUpdateCallback.call(_object, value);\n\t\t\t}\n\t\n\t\t\tif (elapsed === 1) {\n\t\n\t\t\t\tif (_repeat > 0) {\n\t\n\t\t\t\t\tif (isFinite(_repeat)) {\n\t\t\t\t\t\t_repeat--;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\t\tfor (property in _valuesStartRepeat) {\n\t\n\t\t\t\t\t\tif (typeof (_valuesEnd[property]) === 'string') {\n\t\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesStartRepeat[property] + parseFloat(_valuesEnd[property], 10);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (_yoyo) {\n\t\t\t\t\t\t\tvar tmp = _valuesStartRepeat[property];\n\t\n\t\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesEnd[property];\n\t\t\t\t\t\t\t_valuesEnd[property] = tmp;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t_valuesStart[property] = _valuesStartRepeat[property];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (_yoyo) {\n\t\t\t\t\t\t_reversed = !_reversed;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_startTime = time + _delayTime;\n\t\n\t\t\t\t\treturn true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tif (_onCompleteCallback !== null) {\n\t\t\t\t\t\t_onCompleteCallback.call(_object);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\t\t\t_chainedTweens[i].start(_startTime + _duration);\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\n\t\t};\n\t\n\t};\n\t\n\t\n\tTWEEN.Easing = {\n\t\n\t\tLinear: {\n\t\n\t\t\tNone: function (k) {\n\t\n\t\t\t\treturn k;\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tQuadratic: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\treturn k * k;\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\treturn k * (2 - k);\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\tif ((k *= 2) < 1) {\n\t\t\t\t\treturn 0.5 * k * k;\n\t\t\t\t}\n\t\n\t\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tCubic: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\treturn k * k * k;\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\treturn --k * k * k + 1;\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\tif ((k *= 2) < 1) {\n\t\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t\t}\n\t\n\t\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tQuartic: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\treturn k * k * k * k;\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\treturn 1 - (--k * k * k * k);\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\tif ((k *= 2) < 1) {\n\t\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t\t}\n\t\n\t\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tQuintic: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\treturn k * k * k * k * k;\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\treturn --k * k * k * k * k + 1;\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\tif ((k *= 2) < 1) {\n\t\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t\t}\n\t\n\t\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tSinusoidal: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\treturn Math.sin(k * Math.PI / 2);\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tExponential: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\tif (k === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\n\t\t\t\tif (k === 1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\n\t\t\t\tif ((k *= 2) < 1) {\n\t\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t\t}\n\t\n\t\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tCircular: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\treturn Math.sqrt(1 - (--k * k));\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\tif ((k *= 2) < 1) {\n\t\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t\t}\n\t\n\t\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tElastic: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\tif (k === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\n\t\t\t\tif (k === 1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\n\t\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\tif (k === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\n\t\t\t\tif (k === 1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\n\t\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\tif (k === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\n\t\t\t\tif (k === 1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\n\t\t\t\tk *= 2;\n\t\n\t\t\t\tif (k < 1) {\n\t\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t\t}\n\t\n\t\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tBack: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\tvar s = 1.70158;\n\t\n\t\t\t\treturn k * k * ((s + 1) * k - s);\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\tvar s = 1.70158;\n\t\n\t\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\tvar s = 1.70158 * 1.525;\n\t\n\t\t\t\tif ((k *= 2) < 1) {\n\t\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t\t}\n\t\n\t\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tBounce: {\n\t\n\t\t\tIn: function (k) {\n\t\n\t\t\t\treturn 1 - TWEEN.Easing.Bounce.Out(1 - k);\n\t\n\t\t\t},\n\t\n\t\t\tOut: function (k) {\n\t\n\t\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\t\treturn 7.5625 * k * k;\n\t\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t\t} else {\n\t\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tInOut: function (k) {\n\t\n\t\t\t\tif (k < 0.5) {\n\t\t\t\t\treturn TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n\t\t\t\t}\n\t\n\t\t\t\treturn TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\t\n\tTWEEN.Interpolation = {\n\t\n\t\tLinear: function (v, k) {\n\t\n\t\t\tvar m = v.length - 1;\n\t\t\tvar f = m * k;\n\t\t\tvar i = Math.floor(f);\n\t\t\tvar fn = TWEEN.Interpolation.Utils.Linear;\n\t\n\t\t\tif (k < 0) {\n\t\t\t\treturn fn(v[0], v[1], f);\n\t\t\t}\n\t\n\t\t\tif (k > 1) {\n\t\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t\t}\n\t\n\t\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\t\n\t\t},\n\t\n\t\tBezier: function (v, k) {\n\t\n\t\t\tvar b = 0;\n\t\t\tvar n = v.length - 1;\n\t\t\tvar pw = Math.pow;\n\t\t\tvar bn = TWEEN.Interpolation.Utils.Bernstein;\n\t\n\t\t\tfor (var i = 0; i <= n; i++) {\n\t\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t\t}\n\t\n\t\t\treturn b;\n\t\n\t\t},\n\t\n\t\tCatmullRom: function (v, k) {\n\t\n\t\t\tvar m = v.length - 1;\n\t\t\tvar f = m * k;\n\t\t\tvar i = Math.floor(f);\n\t\t\tvar fn = TWEEN.Interpolation.Utils.CatmullRom;\n\t\n\t\t\tif (v[0] === v[m]) {\n\t\n\t\t\t\tif (k < 0) {\n\t\t\t\t\ti = Math.floor(f = m * (1 + k));\n\t\t\t\t}\n\t\n\t\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\t\n\t\t\t} else {\n\t\n\t\t\t\tif (k < 0) {\n\t\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t\t}\n\t\n\t\t\t\tif (k > 1) {\n\t\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t\t}\n\t\n\t\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\t\n\t\t\t}\n\t\n\t\t},\n\t\n\t\tUtils: {\n\t\n\t\t\tLinear: function (p0, p1, t) {\n\t\n\t\t\t\treturn (p1 - p0) * t + p0;\n\t\n\t\t\t},\n\t\n\t\t\tBernstein: function (n, i) {\n\t\n\t\t\t\tvar fc = TWEEN.Interpolation.Utils.Factorial;\n\t\n\t\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\t\n\t\t\t},\n\t\n\t\t\tFactorial: (function () {\n\t\n\t\t\t\tvar a = [1];\n\t\n\t\t\t\treturn function (n) {\n\t\n\t\t\t\t\tvar s = 1;\n\t\n\t\t\t\t\tif (a[n]) {\n\t\t\t\t\t\treturn a[n];\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\t\ts *= i;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ta[n] = s;\n\t\t\t\t\treturn s;\n\t\n\t\t\t\t};\n\t\n\t\t\t})(),\n\t\n\t\t\tCatmullRom: function (p0, p1, p2, p3, t) {\n\t\n\t\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t * t2;\n\t\n\t\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (- 3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\t\n\t// UMD (Universal Module Definition)\n\t(function (root) {\n\t\n\t\tif (true) {\n\t\n\t\t\t// AMD\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn TWEEN;\n\t\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t\t} else if (typeof module !== 'undefined' && typeof exports === 'object') {\n\t\n\t\t\t// Node.js\n\t\t\tmodule.exports = TWEEN;\n\t\n\t\t} else if (root !== undefined) {\n\t\n\t\t\t// Global variable\n\t\t\troot.TWEEN = TWEEN;\n\t\n\t\t}\n\t\n\t})(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\t(function () {\n\t    try {\n\t        cachedSetTimeout = setTimeout;\n\t    } catch (e) {\n\t        cachedSetTimeout = function () {\n\t            throw new Error('setTimeout is not defined');\n\t        }\n\t    }\n\t    try {\n\t        cachedClearTimeout = clearTimeout;\n\t    } catch (e) {\n\t        cachedClearTimeout = function () {\n\t            throw new Error('clearTimeout is not defined');\n\t        }\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar THREE = __webpack_require__(18);\n\t\n\tmodule.exports = function(maps, mapObjects, $){ // $ is used for loading svg (creating ghost canvas)\n\t    //usedForLoad는 IMC.load()에서 사용하고 있는지 아닌지를 나타내는 boolean load에서 사용하는 중이라면 scaleFactor를 적용X\n\t    //image를 불러오는것이 asynchronous이기 때문에 maps와 mapObjects를 따로 필요하다.\n\t    //TODO spray를 추가했다가 바로즉시 삭제하려는 경우 에러가 날 수 있다.\n\t    return function(position, userOpts, currentFloor, usedForLoad){\n\t        var self = {};\n\t\n\t        //====================== options verification ====================\n\t        var defaultOpts = {\n\t            image: \"./brand-images/zara.png\",\n\t            size:null,\n\t            anchor:null,\n\t            floor:currentFloor\n\t        };\n\t        var optionCheckMap = {\n\t            image:[String,'string'],\n\t            size:[Array,'array'],\n\t            anchor:[Array,'array'],\n\t            floor:[String,'string']\n\t        };\n\t        var opts = defaultOpts;\n\t        if(userOpts){\n\t            for(var key in userOpts){\n\t                if(optionCheckMap[key]){\n\t                    if(userOpts[key].constructor != optionCheckMap[key][0]){\n\t                        console.error('옵션 값(key:'+key+')의 타입이 잘못돼었습니다.'+\n\t                            (typeof userOpts[key])+' => '+optionCheckMap[key][1]+'로 바꾸어주세요');\n\t                    }\n\t                }else{\n\t                    printErrType('OPTION');\n\t                    console.error('사용할 수 없는 옵션 키 값('+key+')이 포함되어 있습니다.');\n\t                }\n\t            }\n\t            $.extend(opts,userOpts);\n\t        }\n\t\n\t        //==================== create threeJS object ====================\n\t        if(opts.image.match(/.svg$/g)){\n\t            //svg\n\t            var $ghostCanvas = $(\"<canvas></canvas>\");\n\t            var ghostCanvas = $ghostCanvas[0];\n\t            var ctx = ghostCanvas.getContext('2d');\n\t            var img = new Image();\n\t            img.onload = function(){\n\t                ghostCanvas.width = img.width;\n\t                ghostCanvas.height = img.height;\n\t                ctx.drawImage(img, 0, 0);\n\t                new THREE.TextureLoader().load(ghostCanvas.toDataURL(), applyTexture);\n\t            };\n\t            img.src = opts.image;\n\t        }else{\n\t            //image\n\t            new THREE.TextureLoader().load(opts.image, applyTexture);\n\t        }\n\t        function applyTexture(texture){\n\t            texture.minFilter = THREE.LinearFilter;\n\t            var iw = texture.image.width;\n\t            var ih = texture.image.height;\n\t            var ir = ih/iw;\n\t\n\t            //adjustment of size, anchor, position\n\t            var scaleFactor = (usedForLoad)? 1 : maps[opts.floor].scaleFactor; //load에서 사용중이라면 scaleFactor가 이미 적용돼있다.\n\t            var size = [0,0];\n\t            if(opts.size){\n\t                if(opts.size[1]){\n\t                    size = [opts.size[0]/scaleFactor, opts.size[1]/scaleFactor];\n\t                }else{\n\t                    //세로 길이가 없다면 알아서 이미지 비율대로 맞춰준다.\n\t                    size = [opts.size[0]/scaleFactor, opts.size[0]*ir/scaleFactor];\n\t                }\n\t            }else{\n\t                size = [iw/scaleFactor, ih/scaleFactor];\n\t            }\n\t\n\t            var anchor = (opts.anchor)? [opts.anchor[0]/scaleFactor, opts.anchor[1]/scaleFactor]\n\t                :[size[0]/2, size[1]/2];\n\t            for(var i=0; i<position.length; i++){\n\t                position[i] = position[i]/scaleFactor + 0.05;\n\t            }\n\t            if(!position[2]) position[2] = 0.05;\n\t\n\t            //create spray object\n\t            var sprayGeom = new THREE.PlaneGeometry(size[0],size[1]);\n\t            var sprayMaterial = new THREE.MeshBasicMaterial({\n\t                map:texture,\n\t                transparent:true\n\t            });\n\t            var sprayMesh = new THREE.Mesh(sprayGeom, sprayMaterial);\n\t            sprayMesh.rotation.x = -Math.PI/2;\n\t            sprayMesh.position.x = position[0] + size[0]/2 - anchor[0];\n\t            sprayMesh.position.z = position[1] + size[1]/2 - anchor[1];\n\t            sprayMesh.position.y = position[2];\n\t\n\t            self.sprayMesh = sprayMesh;\n\t            mapObjects[opts.floor].getObjectByName('sprays').add(sprayMesh);\n\t        }\n\t\n\t        return self;\n\t\n\t        //==================== helpers ======================\n\t        function printErrType(type){\n\t            switch(type){\n\t                case 'OPTION':\n\t                    console.error('--- IndoorMap.setSpray() 옵션 에러 ---');\n\t                    break;\n\t                case 'LOAD':\n\t                    break;\n\t            }\n\t        }\n\t    };\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar THREE = __webpack_require__(18);\n\tmodule.exports = function(maps, mapObjects, TWEEN){\n\t    //required blockProps : id, height, color, parentFloor, points\n\t    //optional blockProps : spray\n\t    //created blockProps : blockMesh\n\t    return function(blockIdx, blockData, floorId, floorData){\n\t        var self = {};\n\t        //required props\n\t        self.id = (blockData.id)? blockData.id : floorId+'_'+blockIdx;\n\t        self.originalHeight = (blockData.height)?blockData.height:floorData.defaultBlockHeight;\n\t        self.height = self.originalHeight;\n\t        self.originalColor = (blockData.color)?parseInt(blockData.color):parseInt(floorData.defaultBlockColor);\n\t        self.color = self.originalColor;\n\t        self.originalOpacity = (blockData.opacity)?blockData.opacity:\n\t            (floorData.defaultOpacity)?floorData.defaultBlockOpacity:1;\n\t        self.opacity = self.originalOpacity;\n\t        self.parentFloor = floorData.floor;\n\t        self.parentObject = mapObjects[self.parentFloor].getObjectByName('blocks');\n\t        self.points = blockData.points;\n\t        //optional props\n\t        self.spray = null;\n\t        //creating props\n\t        self.boundary = {\n\t            minX:9999999999,minZ:9999999999,maxX:0,maxZ:0\n\t        };\n\t        self.blockMesh = createBlockMesh(blockData.points, self.originalHeight, self.originalColor, self.originalOpacity, blockData.data, true);\n\t        self.heightTween = new TWEEN.Tween();\n\t        self.colorTween = new TWEEN.Tween();\n\t        self.opacityTween = new TWEEN.Tween();\n\t\n\t        self.parentObject.add(self.blockMesh);\n\t\n\t        //methods for internal\n\t        self.setSpray = function(newSpray){\n\t            self.spray = newSpray;\n\t        };\n\t\n\t        //methods for consumer\n\t        self.setData = function(data){\n\t            blockData.data = data;\n\t            self.blockMesh.data = data;\n\t        };\n\t        self.setOpacity = function(opacity, duration){\n\t            self.opacityTween.stop();\n\t            if(!duration){\n\t                self.opacity = opacity;\n\t                rerenderBlock();\n\t            }else{\n\t                self.opacityTween = new TWEEN\n\t                    .Tween({opacity:self.opacity})\n\t                    .to({opacity:opacity}, duration)\n\t                    .onUpdate(function(){\n\t                        self.opacity = this.opacity;\n\t                        rerenderBlock();\n\t                    });\n\t                self.opacityTween.start();\n\t            }\n\t        };\n\t        self.restoreOpacity = function(duration){\n\t            if(!duration){\n\t                self.opacityTween.stop();\n\t                rerenderBlock();\n\t            }else{\n\t                self.opacityTween = new TWEEN\n\t                    .Tween({opacity:self.opacity})\n\t                    .to({opacity:self.originalOpacity}, duration)\n\t                    .onUpdate(function(){\n\t                        self.opacity = this.opacity;\n\t                        rerenderBlock();\n\t                    });\n\t                self.opacityTween.start();\n\t            }\n\t        };\n\t        self.setColor = function(color,duration){\n\t            color = parseInt(color);\n\t            self.colorTween.stop();\n\t            if(!duration){\n\t                self.color = color;\n\t                rerenderBlock();\n\t            }else{\n\t                self.colorTween = new TWEEN\n\t                    .Tween(sliceColorCode(self.color))\n\t                    .to(sliceColorCode(color),duration)\n\t                    .onUpdate(function(){\n\t                        self.color = mergeColorCode(this);\n\t                        rerenderBlock();\n\t                    });\n\t                self.colorTween.start();\n\t            }\n\t        };\n\t        self.restoreColor = function(duration){\n\t            self.colorTween.stop();\n\t            if(!duration){\n\t                self.color = self.originalColor;\n\t                rerenderBlock();\n\t            }else{\n\t                self.colorTween = new TWEEN\n\t                    .Tween(sliceColorCode(self.color))\n\t                    .to(sliceColorCode(self.originalColor),duration)\n\t                    .onUpdate(function(){\n\t                        self.color = mergeColorCode(this);\n\t                        rerenderBlock();\n\t                    });\n\t                self.colorTween.start();\n\t            }\n\t        };\n\t        self.setHeight = function(height,duration){\n\t            self.heightTween.stop();\n\t            if(!duration){\n\t                self.height = height/floorData.scaleFactor;\n\t                rerenderBlock();\n\t            }else{\n\t                self.heightTween = new TWEEN\n\t                    .Tween({ blockHeight: self.height })\n\t                    .to({ blockHeight: height/floorData.scaleFactor }, duration)\n\t                    .onUpdate(function(){\n\t                        self.height = this.blockHeight;\n\t                        rerenderBlock();\n\t                    });\n\t                self.heightTween.start();\n\t            }\n\t        };\n\t        self.restoreHeight = function(duration){\n\t            self.heightTween.stop();\n\t            if(!duration){\n\t                self.height = self.originalHeight;\n\t                rerenderBlock();\n\t            }else{\n\t                self.heightTween = new TWEEN\n\t                    .Tween({ blockHeight: self.height })\n\t                    .to({ blockHeight: self.originalHeight }, duration)\n\t                    .onUpdate(function(){\n\t                        self.height = this.blockHeight;\n\t                        rerenderBlock();\n\t                    });\n\t                self.heightTween.start();\n\t            }\n\t        };\n\t        self.on = function(eventName, handler){\n\t            switch(eventName){\n\t                case 'mouseover':\n\t                    setMouseOverHandler(handler);\n\t                    break;\n\t                case 'mouseout':\n\t                    setMouseOutHandler(handler);\n\t                    break;\n\t                case 'click':\n\t                    setClickHandler(handler);\n\t                    break;\n\t            }\n\t        };\n\t\n\t\n\t        function setMouseOverHandler(handler){\n\t            self.onMouseOver = function(){\n\t                handler.apply(self,[blockData.data]);\n\t            };\n\t        }\n\t        function setMouseOutHandler(handler){\n\t            self.onMouseOut = function(){\n\t                handler.apply(self,[blockData.data]);\n\t            };\n\t        }\n\t        function setClickHandler(handler){\n\t            self.onClick = function(){\n\t                handler.apply(self,[blockData.data]);\n\t            };\n\t        }\n\t\n\t        //---------- helpers ----------\n\t        function rerenderBlock(){\n\t            self.parentObject.remove(self.blockMesh);\n\t            self.blockMesh = createBlockMesh(blockData.points, self.height, self.color, self.opacity, blockData.data, false);\n\t            self.parentObject.add(self.blockMesh);\n\t            if(self.spray) self.spray.sprayMesh.position.y = self.height+0.05;\n\t        }\n\t        function createBlockMesh(points, height, color, opacity, data, shouldResetBoundary){\n\t            var blockShape = new THREE.Shape();\n\t            var extrudeSettings = {\n\t                amount:height,\n\t                bevelEnabled:false\n\t            };\n\t            //draw a block\n\t            var x0 = points[0][0];\n\t            var z0 = points[0][1];\n\t            if(shouldResetBoundary) resetBoundary(self.boundary,x0,z0);\n\t            blockShape.moveTo(x0,z0);\n\t            for(var k=1;k<points.length;k++){\n\t                var x = points[k][0];\n\t                var z = points[k][1];\n\t                if(shouldResetBoundary) resetBoundary(self.boundary,x,z);\n\t                blockShape.lineTo(x,z);\n\t            }\n\t            if(shouldResetBoundary){\n\t                resetBoundary(floorData.boundary,self.boundary.minX,self.boundary.minZ);\n\t                resetBoundary(floorData.boundary,self.boundary.maxX,self.boundary.maxZ);\n\t            }\n\t            blockShape.lineTo(x0,z0);\n\t\n\t            var blockGeom = new THREE.ExtrudeGeometry(blockShape,extrudeSettings);\n\t            if(opacity && opacity < 1){\n\t                var blockMaterial = new THREE.MeshLambertMaterial({\n\t                    color:color,\n\t                    transparent:true,\n\t                    opacity:opacity\n\t                });\n\t            }else{\n\t                var blockMaterial = new THREE.MeshLambertMaterial({\n\t                    color:color\n\t                });\n\t            }\n\t            var blockMesh = new THREE.Mesh(blockGeom, blockMaterial);\n\t            if(data) blockMesh.data = data;\n\t            blockMesh.blockObject = self;\n\t\n\t            blockMesh.rotation.x = Math.PI/2;\n\t            blockMesh.position.y = height;\n\t\n\t            return blockMesh;\n\t        }\n\t        function sliceColorCode(hexNum){\n\t            //separate to R, G, B\n\t            var result = {};\n\t            result.b = hexNum % 0x100;\n\t            result.g = ((hexNum % 0x10000) - result.b)/0x100;\n\t            result.r = (hexNum - (result.b + result.g))/0x10000;\n\t            return result;\n\t        }\n\t        function mergeColorCode(sliced){\n\t            var result = Math.round(sliced.r) * 0x10000 + Math.round(sliced.g) * 0x100 + Math.round(sliced.b);\n\t            if(result > 0xFFFFFF) result = 0xFFFFFF;\n\t            return result;\n\t        }\n\t        function resetBoundary(b,x,z){\n\t            b.minX=(x<b.minX)?x:b.minX;\n\t            b.minZ=(z<b.minZ)?z:b.minZ;\n\t            b.maxX=(x>b.maxX)?x:b.maxX;\n\t            b.maxZ=(z>b.maxZ)?z:b.maxZ;\n\t        }\n\t        return self;\n\t    }\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t *  implement scaleFactor (prevents z-buffer quirks), polygon offset (blockPadding)\n\t */\n\tvar Offset = __webpack_require__(24);\n\tmodule.exports = function(mapData,$){\n\t    var floors = mapData.floors;\n\t    for(var i=0; i<floors.length; i++){\n\t        var scaleFactor = 1;\n\t        var floor = floors[i];\n\t        var blocks = floor.blocks;\n\t        var floorBoundary = {\n\t            minX:9999999999,minZ:9999999999,maxX:0,maxZ:0\n\t        };\n\t        //boundary산출 및 중복 포인트 제거\n\t        for(var j=0; j<blocks.length; j++){\n\t            var block = blocks[j];\n\t            var points = block.points;\n\t            var indexesToBeRemoved = [];\n\t            for(var k=0; k<points.length; k++){\n\t                var point = points[k];\n\t                var nextPoint = (k==points.length-1)?points[0]:points[k+1];\n\t                if(point[0] == nextPoint[0] && point[1] == nextPoint[1]){\n\t                    indexesToBeRemoved.push(k);\n\t                }\n\t                resetBoundary(floorBoundary,point[0], point[1]);\n\t            }\n\t            while(indexesToBeRemoved.length != 0){\n\t                console.log('inWhile');\n\t                var idx = indexesToBeRemoved.pop();\n\t                points.splice(idx,1);\n\t            }\n\t        }\n\t\n\t        var maxBoundaryDist = Math.max(floorBoundary.maxX-floorBoundary.minX, floorBoundary.maxZ-floorBoundary.minZ);\n\t        if(maxBoundaryDist > 100){\n\t            //boundary의 최장변의 길이가 100이 되도록한다.\n\t            scaleFactor = maxBoundaryDist / 100;\n\t            floor.basePlateHeight /= scaleFactor;\n\t            floor.basePlateOffset /= scaleFactor;\n\t            floor.defaultBlockHeight /= scaleFactor;\n\t            if(floor.defaultBlockPadding) floor.defaultBlockPadding /= scaleFactor;\n\t            for(var j=0; j<blocks.length; j++){\n\t                var block = blocks[j];\n\t                if(block.height) block.height /= scaleFactor;\n\t                if(block.padding) block.padding /= scaleFactor;\n\t                if(block.sprayOffset) {\n\t                    block.sprayOffset[0]/=scaleFactor; block.sprayOffset[1]/=scaleFactor;\n\t                }\n\t                var points = block.points;\n\t                for(var k=0; k<points.length; k++){\n\t                    var point = points[k];\n\t                    point[0] /= scaleFactor;\n\t                    point[1] /= scaleFactor;\n\t                }\n\t            }\n\t        }\n\t        floor.scaleFactor = scaleFactor;\n\t\n\t        //set blockPadding\n\t        var toBeRemovedBlocks = [];\n\t        var toBeAddedBlocks = [];\n\t        for(var j=0; j<blocks.length; j++){\n\t            var block = blocks[j];\n\t            var padding = null;\n\t            if(floor.defaultBlockPadding) padding = floor.defaultBlockPadding;\n\t            if(block.padding) padding = block.padding;\n\t            var points = block.points;\n\t            if(padding){\n\t                var pointsClone = [];\n\t                //deep copy of Array\n\t                for(var k=0;k<points.length;k++){\n\t                    pointsClone.push([points[k][0],points[k][1]]);\n\t                }\n\t                pointsClone.push([pointsClone[0][0],pointsClone[0][1]]); //for Offset compatibility\n\t                //apply padding\n\t                var paddedPoints = null;\n\t                try{\n\t                    var offset = new Offset();\n\t                    paddedPoints = offset.data(pointsClone).padding(padding);\n\t                }catch(e){\n\t                    console.error('mapData에러 : blockPadding이 너무커서 사라지는 블록이 있습니다.\\n'\n\t                        +\"        위치 : Floor(floor='\"+floor.floor+\"').blocks[\"+j+\"]\");\n\t                }\n\t\n\t                if(paddedPoints){\n\t                    if(paddedPoints.length == 0){\n\t                        console.error('mapData에러 : blockPadding이 너무커서 사라지는 블록이 있습니다.\\n'\n\t                            +\"        위치 : Floor(floor='\"+floor.floor+\"').blocks[\"+j+\"]\");\n\t                        toBeRemovedBlocks.push(j);\n\t                    }else if(paddedPoints.length > 1){\n\t                        console.error('mapData에러 : blockPadding이 너무커서 '+paddedPoints.length+'개로 쪼개지는 블록이 있습니다.\\n'\n\t                            +\"        위치 : Floor(floor='\"+floor.floor+\"').blocks[\"+j+\"]\");\n\t                        toBeRemovedBlocks.push(j);\n\t                        for(var k=0; k<paddedPoints.length; k++){\n\t                            var toBeAddedBlock = $.extend({},block);\n\t                            toBeAddedBlock.points = paddedPoints[k];\n\t                            toBeAddedBlock.points.pop();\n\t                            toBeAddedBlocks.push(toBeAddedBlock);\n\t                        }\n\t                    }else{\n\t                        block.points = paddedPoints[0];\n\t                        block.points.pop();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        while(toBeRemovedBlocks.length!=0){\n\t            var idx = toBeRemovedBlocks.pop();\n\t            block.points.splice(idx,1);\n\t        }\n\t        while(toBeAddedBlocks.length!=0){\n\t            var toBeAddedBlock = toBeAddedBlocks.shift();\n\t            blocks.push(toBeAddedBlock);\n\t        }\n\t    }\n\t    //=================helpers==================\n\t    function resetBoundary(boundary,x,z){\n\t        boundary.minX=(x<boundary.minX)?x:boundary.minX;\n\t        boundary.minZ=(z<boundary.minZ)?z:boundary.minZ;\n\t        boundary.maxX=(x>boundary.maxX)?x:boundary.maxX;\n\t        boundary.maxZ=(z>boundary.maxZ)?z:boundary.maxZ;\n\t    }\n\t    return mapData;\n\t};\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Edge     = __webpack_require__(25);\n\tvar martinez = __webpack_require__(26);\n\tvar utils    = __webpack_require__(40);\n\t\n\t\n\tvar isArray     = utils.isArray;\n\tvar equals      = utils.equals;\n\tvar orientRings = utils.orientRings;\n\t\n\t\n\t/**\n\t * Offset builder\n\t *\n\t * @param {Array.<Object>=} vertices\n\t * @param {Number=}        arcSegments\n\t * @constructor\n\t */\n\tfunction Offset(vertices, arcSegments) {\n\t\n\t  /**\n\t   * @type {Array.<Object>}\n\t   */\n\t  this.vertices = null;\n\t\n\t  /**\n\t   * @type {Array.<Edge>}\n\t   */\n\t  this.edges = null;\n\t\n\t  /**\n\t   * @type {Boolean}\n\t   */\n\t  this._closed = false;\n\t\n\t\n\t  /**\n\t   * @type {Number}\n\t   */\n\t  this._distance = 0;\n\t\n\t  if (vertices) {\n\t    this.data(vertices);\n\t  }\n\t\n\t  /**\n\t   * Segments in edge bounding arches\n\t   * @type {Number}\n\t   */\n\t  this._arcSegments = arcSegments !== undefined ? arcSegments : 5;\n\t}\n\t\n\t/**\n\t * Change data set\n\t * @param  {Array.<Array>} vertices\n\t * @return {Offset}\n\t */\n\tOffset.prototype.data = function(vertices) {\n\t  this._edges = [];\n\t  if (!isArray (vertices)) {\n\t    throw new Error('Offset requires at least one coodinate to work with');\n\t  }\n\t\n\t  if (isArray(vertices) && typeof vertices[0] === 'number') {\n\t    this.vertices = vertices;\n\t  } else {\n\t    this.vertices = orientRings(vertices);\n\t    this._processContour(this.vertices, this._edges);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Recursively process contour to create normals\n\t * @param  {*} contour\n\t * @param  {Array} edges\n\t */\n\tOffset.prototype._processContour = function(contour, edges) {\n\t  var i, len;\n\t  if (isArray(contour[0]) && typeof contour[0][0] === 'number') {\n\t    len = contour.length;\n\t    if (equals(contour[0], contour[len - 1])) {\n\t      len -= 1; // otherwise we get division by zero in normals\n\t    }\n\t    for (i = 0; i < len; i++) {\n\t      edges.push(new Edge(contour[i], contour[(i + 1) % len]));\n\t    }\n\t  } else {\n\t    for (i = 0, len = contour.length; i < len; i++) {\n\t      edges.push([]);\n\t      this._processContour(contour[i], edges[edges.length - 1]);\n\t    }\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * @param  {Number} arcSegments\n\t * @return {Offset}\n\t */\n\tOffset.prototype.arcSegments = function(arcSegments) {\n\t  this._arcSegments = arcSegments;\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Validates if the first and last points repeat\n\t * TODO: check CCW\n\t *\n\t * @param  {Array.<Object>} vertices\n\t */\n\tOffset.prototype.validate = function(vertices) {\n\t  var len = vertices.length;\n\t  if (typeof vertices[0] === 'number') return [vertices];\n\t  if (vertices[0][0] === vertices[len - 1][0] &&\n\t    vertices[0][1] === vertices[len - 1][1]) {\n\t    if (len > 1) {\n\t      vertices = vertices.slice(0, len - 1);\n\t      this._closed = true;\n\t    }\n\t  }\n\t  return vertices;\n\t};\n\t\n\t\n\t/**\n\t * Creates arch between two edges\n\t *\n\t * @param  {Array.<Object>} vertices\n\t * @param  {Object}         center\n\t * @param  {Number}         radius\n\t * @param  {Object}         startVertex\n\t * @param  {Object}         endVertex\n\t * @param  {Number}         segments\n\t * @param  {Boolean}        outwards\n\t */\n\tOffset.prototype.createArc = function(vertices, center, radius, startVertex,\n\t    endVertex, segments, outwards) {\n\t\n\t  var PI2 = Math.PI * 2,\n\t      startAngle = Math.atan2(startVertex[1] - center[1], startVertex[0] - center[0]),\n\t      endAngle   = Math.atan2(endVertex[1] - center[1], endVertex[0] - center[0]);\n\t\n\t  // odd number please\n\t  if (segments % 2 === 0) {\n\t    segments -= 1;\n\t  }\n\t\n\t  if (startAngle < 0) {\n\t    startAngle += PI2;\n\t  }\n\t\n\t  if (endAngle < 0) {\n\t    endAngle += PI2;\n\t  }\n\t\n\t  var angle = ((startAngle > endAngle) ?\n\t               (startAngle - endAngle) :\n\t               (startAngle + PI2 - endAngle)),\n\t      segmentAngle = ((outwards) ? -angle : PI2 - angle) / segments;\n\t\n\t  vertices.push(startVertex);\n\t  for (var i = 1; i < segments; ++i) {\n\t    angle = startAngle + segmentAngle * i;\n\t    vertices.push([\n\t      center[0] + Math.cos(angle) * radius,\n\t      center[1] + Math.sin(angle) * radius\n\t    ]);\n\t  }\n\t  vertices.push(endVertex);\n\t  return vertices;\n\t};\n\t\n\t\n\t/**\n\t * @param  {Number}  dist\n\t * @param  {String=} units\n\t * @return {Offset}\n\t */\n\tOffset.prototype.distance = function(dist, units) {\n\t  this._distance = dist || 0;\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * @static\n\t * @param  {Number}  degrees\n\t * @param  {String=} units\n\t * @return {Number}\n\t */\n\tOffset.degreesToUnits = function(degrees, units) {\n\t  switch (units) {\n\t    case 'miles':\n\t      degrees = degrees / 69.047;\n\t    break;\n\t    case 'feet':\n\t      degrees = degrees / 364568.0;\n\t      break;\n\t    case 'kilometers':\n\t      degrees = degrees / 111.12;\n\t      break;\n\t    case 'meters':\n\t    case 'metres':\n\t      degrees = degrees / 111120.0;\n\t      break;\n\t    case 'degrees':\n\t    case 'pixels':\n\t    default:\n\t      break;\n\t  }\n\t  return degrees;\n\t};\n\t\n\t\n\t/**\n\t * @param  {Array.<Object>} vertices\n\t * @return {Array.<Object>}\n\t */\n\tOffset.prototype.ensureLastPoint = function(vertices) {\n\t  if (!equals(vertices[0], vertices[vertices.length - 1])) {\n\t    vertices.push([\n\t      vertices[0][0],\n\t      vertices[0][1]\n\t    ]);\n\t  }\n\t  return vertices;\n\t};\n\t\n\t\n\t/**\n\t * Decides by the sign if it's a padding or a margin\n\t *\n\t * @param  {Number} dist\n\t * @return {Array.<Object>}\n\t */\n\tOffset.prototype.offset = function(dist) {\n\t  this.distance(dist);\n\t  return this._distance === 0 ? this.vertices :\n\t      (this._distance > 0 ? this.margin(this._distance) :\n\t        this.padding(-this._distance));\n\t};\n\t\n\t\n\t/**\n\t * @param  {Array.<Array.<Number>>} vertices\n\t * @param  {Array.<Number>}         pt1\n\t * @param  {Array.<Number>}         pt2\n\t * @param  {Number}                 dist\n\t * @return {Array.<Array.<Number>>}\n\t */\n\tOffset.prototype._offsetSegment = function(v1, v2, e1, dist) {\n\t  var vertices = [];\n\t  var offsets = [\n\t    e1.offset(e1._inNormal[0] * dist, e1._inNormal[1] * dist),\n\t    e1.inverseOffset(e1._outNormal[0] * dist, e1._outNormal[1] * dist)\n\t  ];\n\t\n\t  for (var i = 0, len = 2; i < len; i++) {\n\t    var thisEdge = offsets[i],\n\t        prevEdge = offsets[(i + len - 1) % len];\n\t    this.createArc(\n\t              vertices,\n\t              i === 0 ? v1 : v2, // edges[i].current, // p1 or p2\n\t              dist,\n\t              prevEdge.next,\n\t              thisEdge.current,\n\t              this._arcSegments,\n\t              true\n\t            );\n\t  }\n\t\n\t  return vertices;\n\t};\n\t\n\t\n\t/**\n\t * @param  {Number} dist\n\t * @return {Array.<Number>}\n\t */\n\tOffset.prototype.margin = function(dist) {\n\t  this.distance(dist);\n\t\n\t  if (typeof this.vertices[0] === 'number') { // point\n\t    return this.offsetPoint(this._distance);\n\t  }\n\t\n\t  if (dist === 0) return this.vertices;\n\t\n\t  var union = this.offsetLines(this._distance);\n\t  //return union;\n\t  union = martinez.union(this.vertices, union);\n\t  return orientRings(union);\n\t};\n\t\n\t\n\t/**\n\t * @param  {Number} dist\n\t * @return {Array.<Number>}\n\t */\n\tOffset.prototype.padding = function(dist) {\n\t  this.distance(dist);\n\t\n\t  if (this._distance === 0) return this.ensureLastPoint(this.vertices);\n\t  if (this.vertices.length === 2 && typeof this.vertices[0] === 'number') {\n\t    return this.vertices;\n\t  }\n\t\n\t  var union = this.offsetLines(this._distance);\n\t  var diff = martinez.diff(this.vertices, union);\n\t  return orientRings(diff);\n\t};\n\t\n\t\n\t/**\n\t * Creates margin polygon\n\t * @param  {Number} dist\n\t * @return {Array.<Object>}\n\t */\n\tOffset.prototype.offsetLine = function(dist) {\n\t  if (dist === 0) return this.vertices;\n\t  return orientRings(this.offsetLines(dist));\n\t};\n\t\n\t\n\t/**\n\t * Just offsets lines, no fill\n\t * @param  {Number} dist\n\t * @return {Array.<Array.<Array.<Number>>>}\n\t */\n\tOffset.prototype.offsetLines = function(dist) {\n\t  if (dist < 0) throw new Error('Cannot apply negative margin to the line');\n\t  var union;\n\t  this.distance(dist);\n\t  if (isArray(this.vertices[0]) && typeof this.vertices[0][0] !== 'number') {\n\t    for (var i = 0, len = this._edges.length; i < len; i++) {\n\t      union = (i === 0) ?\n\t        this.offsetContour(this.vertices[i], this._edges[i]):\n\t        martinez.union(union, this.offsetContour(this.vertices[i], this._edges[i]));\n\t    }\n\t  } else {\n\t    union = (this.vertices.length === 1) ?\n\t      this.offsetPoint() :\n\t      this.offsetContour(this.vertices, this._edges);\n\t  }\n\t\n\t  return union;\n\t};\n\t\n\t\n\t/**\n\t * @param  {Array.<Array.<Number>>|Array.<Array.<...>>} curve\n\t * @param  {Array.<Edge>|Array.<Array.<...>>} edges\n\t * @return {Polygon}\n\t */\n\tOffset.prototype.offsetContour = function(curve, edges) {\n\t  var union, i, len;\n\t  if (isArray(curve[0]) && typeof curve[0][0] === 'number') {\n\t    // we have 1 less edge than vertices\n\t    for (i = 0, len = curve.length - 1; i < len; i++) {\n\t      var segment = this.ensureLastPoint(\n\t        this._offsetSegment(curve[i], curve[i + 1], edges[i], this._distance)\n\t      );\n\t      union = (i === 0) ?\n\t                [this.ensureLastPoint(segment)] :\n\t                martinez.union(union, this.ensureLastPoint(segment));\n\t    }\n\t  } else {\n\t    for (i = 0, len = edges.length; i < len; i++) {\n\t      union = (i === 0) ?\n\t        this.offsetContour(curve[i], edges[i]) :\n\t        martinez.union(union, this.offsetContour(curve[i], edges[i]));\n\t    }\n\t  }\n\t  return union;\n\t};\n\t\n\t\n\t/**\n\t * @param  {Number} distance\n\t * @return {Array.<Array.<Number>}\n\t */\n\tOffset.prototype.offsetPoint = function(distance) {\n\t  this.distance(distance);\n\t  var vertices = this._arcSegments * 2;\n\t  var points   = [];\n\t  var center   = this.vertices;\n\t  var radius   = this._distance;\n\t  var angle    = 0;\n\t\n\t  if (vertices % 2 === 0) vertices++;\n\t\n\t  for (var i = 0; i < vertices; i++) {\n\t    angle += (2 * Math.PI / vertices); // counter-clockwise\n\t    points.push([\n\t      center[0] + (radius * Math.cos(angle)),\n\t      center[1] + (radius * Math.sin(angle))\n\t    ]);\n\t  }\n\t\n\t  return orientRings([this.ensureLastPoint(points)]);\n\t};\n\t\n\t\n\tOffset.orientRings = orientRings;\n\t\n\tmodule.exports = Offset;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Offset edge of the polygon\n\t *\n\t * @param  {Object} current\n\t * @param  {Object} next\n\t * @constructor\n\t */\n\tfunction Edge(current, next) {\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t  this.current = current;\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t  this.next = next;\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t  this._inNormal  = this.inwardsNormal();\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t  this._outNormal = this.outwardsNormal();\n\t}\n\t\n\t/**\n\t * Creates outwards normal\n\t * @return {Object}\n\t */\n\tEdge.prototype.outwardsNormal = function() {\n\t  var inwards = this.inwardsNormal();\n\t  return [\n\t    -inwards[0],\n\t    -inwards[1]\n\t  ];\n\t};\n\t\n\t/**\n\t * Creates inwards normal\n\t * @return {Object}\n\t */\n\tEdge.prototype.inwardsNormal = function() {\n\t  var dx = this.next[0] - this.current[0],\n\t      dy = this.next[1] - this.current[1],\n\t      edgeLength = Math.sqrt(dx * dx + dy * dy);\n\t\n\t  if (edgeLength === 0) throw new Error('Vertices overlap');\n\t\n\t  return [\n\t    -dy / edgeLength,\n\t     dx / edgeLength\n\t  ];\n\t};\n\t\n\t/**\n\t * Offsets the edge by dx, dy\n\t * @param  {Number} dx\n\t * @param  {Number} dy\n\t * @return {Edge}\n\t */\n\tEdge.prototype.offset = function(dx, dy) {\n\t  return Edge.offsetEdge(this.current, this.next, dx, dy);\n\t};\n\t\n\t\n\t/**\n\t * @param  {Number} dx\n\t * @param  {Number} dy\n\t * @return {Edge}\n\t */\n\tEdge.prototype.inverseOffset = function(dx, dy) {\n\t  return Edge.offsetEdge(this.next, this.current, dx, dy);\n\t};\n\t\n\t\n\t/**\n\t * @static\n\t * @param  {Array.<Number>} current\n\t * @param  {Array.<Number>} next\n\t * @param  {Number}         dx\n\t * @param  {Number}         dy\n\t * @return {Edge}\n\t */\n\tEdge.offsetEdge = function(current, next, dx, dy) {\n\t  return new Edge([\n\t    current[0] + dx,\n\t    current[1] + dy\n\t  ], [\n\t    next[0] + dx,\n\t    next[1] + dy\n\t  ]);\n\t};\n\t\n\t\n\t/**\n\t *\n\t * @return {Edge}\n\t */\n\tEdge.prototype.inverse = function () {\n\t  return new Edge(this.next, this.current);\n\t};\n\t\n\t\n\tmodule.exports = Edge;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(27);\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar INTERSECTION    = 0;\n\tvar UNION           = 1;\n\tvar DIFFERENCE      = 2;\n\tvar XOR             = 3;\n\t\n\tvar EMPTY           = [];\n\t\n\tvar edgeType        = __webpack_require__(28);\n\t\n\tvar Queue           = __webpack_require__(29);\n\tvar Tree            = __webpack_require__(30).RBTree;\n\tvar SweepEvent      = __webpack_require__(34);\n\t\n\tvar compareEvents   = __webpack_require__(36);\n\tvar compareSegments = __webpack_require__(37);\n\tvar intersection    = __webpack_require__(39);\n\tvar equals          = __webpack_require__(38);\n\t\n\tvar max = Math.max;\n\tvar min = Math.min;\n\t\n\t// global.Tree = Tree;\n\t// global.compareSegments = compareSegments;\n\t// global.SweepEvent = SweepEvent;\n\t// global.signedArea = require('./signed_area');\n\t\n\t/**\n\t * @param  {<Array.<Number>} s1\n\t * @param  {<Array.<Number>} s2\n\t * @param  {Boolean}         isSubject\n\t * @param  {Queue}           eventQueue\n\t * @param  {Array.<Number>}  bbox\n\t */\n\tfunction processSegment(s1, s2, isSubject, depth, eventQueue, bbox) {\n\t  // Possible degenerate condition.\n\t  // if (equals(s1, s2)) return;\n\t\n\t  var e1 = new SweepEvent(s1, false, undefined, isSubject);\n\t  var e2 = new SweepEvent(s2, false, e1,        isSubject);\n\t  e1.otherEvent = e2;\n\t\n\t  e1.contourId = e2.contourId = depth;\n\t\n\t  if (compareEvents(e1, e2) > 0) {\n\t    e2.left = true;\n\t  } else {\n\t    e1.left = true;\n\t  }\n\t\n\t  bbox[0] = min(bbox[0], s1[0]);\n\t  bbox[1] = min(bbox[1], s1[1]);\n\t  bbox[2] = max(bbox[2], s1[0]);\n\t  bbox[3] = max(bbox[3], s1[1]);\n\t\n\t  // Pushing it so the queue is sorted from left to right,\n\t  // with object on the left having the highest priority.\n\t  eventQueue.push(e1);\n\t  eventQueue.push(e2);\n\t}\n\t\n\tvar contourId = 0;\n\t\n\tfunction processPolygon(polygon, isSubject, depth, queue, bbox) {\n\t  var i, len;\n\t  if (typeof polygon[0][0] === 'number') {\n\t    for (i = 0, len = polygon.length - 1; i < len; i++) {\n\t      processSegment(polygon[i], polygon[i + 1], isSubject, depth + 1, queue, bbox);\n\t    }\n\t  } else {\n\t    for (i = 0, len = polygon.length; i < len; i++) {\n\t      contourId++;\n\t      processPolygon(polygon[i], isSubject, contourId, queue, bbox);\n\t    }\n\t  }\n\t}\n\t\n\t\n\tfunction fillQueue(subject, clipping, sbbox, cbbox) {\n\t  var eventQueue = new Queue(null, compareEvents);\n\t  contourId = 0;\n\t\n\t  processPolygon(subject,  true,  0, eventQueue, sbbox);\n\t  processPolygon(clipping, false, 0, eventQueue, cbbox);\n\t\n\t  return eventQueue;\n\t}\n\t\n\t\n\tfunction computeFields(event, prev, sweepLine, operation) {\n\t  // compute inOut and otherInOut fields\n\t  if (prev === null) {\n\t    event.inOut      = false;\n\t    event.otherInOut = true;\n\t\n\t  // previous line segment in sweepline belongs to the same polygon\n\t  } else if (event.isSubject === prev.isSubject) {\n\t    event.inOut      = !prev.inOut;\n\t    event.otherInOut = prev.otherInOut;\n\t\n\t  // previous line segment in sweepline belongs to the clipping polygon\n\t  } else {\n\t    event.inOut      = !prev.otherInOut;\n\t    event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n\t  }\n\t\n\t  // compute prevInResult field\n\t  if (prev) {\n\t    event.prevInResult = (!inResult(prev, operation) || prev.isVertical()) ?\n\t       prev.prevInResult : prev;\n\t  }\n\t  // check if the line segment belongs to the Boolean operation\n\t  event.inResult = inResult(event, operation);\n\t}\n\t\n\t\n\tfunction inResult(event, operation) {\n\t  switch (event.type) {\n\t    case edgeType.NORMAL:\n\t      switch (operation) {\n\t        case INTERSECTION:\n\t          return !event.otherInOut;\n\t        case UNION:\n\t          return event.otherInOut;\n\t        case DIFFERENCE:\n\t          return (event.isSubject && event.otherInOut) ||\n\t                 (!event.isSubject && !event.otherInOut);\n\t        case XOR:\n\t          return true;\n\t      }\n\t    case edgeType.SAME_TRANSITION:\n\t      return operation === INTERSECTION || operation === UNION;\n\t    case edgeType.DIFFERENT_TRANSITION:\n\t      return operation === DIFFERENCE;\n\t    case edgeType.NON_CONTRIBUTING:\n\t      return false;\n\t  }\n\t  return false;\n\t}\n\t\n\t\n\t/**\n\t * @param  {SweepEvent} se1\n\t * @param  {SweepEvent} se2\n\t * @param  {Queue}      queue\n\t * @return {Number}\n\t */\n\tfunction possibleIntersection(se1, se2, queue) {\n\t  // that disallows self-intersecting polygons,\n\t  // did cost us half a day, so I'll leave it\n\t  // out of respect\n\t  // if (se1.isSubject === se2.isSubject) return;\n\t\n\t  var inter = intersection(\n\t    se1.point, se1.otherEvent.point,\n\t    se2.point, se2.otherEvent.point\n\t  );\n\t\n\t  var nintersections = inter ? inter.length : 0;\n\t  if (nintersections === 0) return 0; // no intersection\n\t\n\t  // the line segments intersect at an endpoint of both line segments\n\t  if ((nintersections === 1) &&\n\t      (equals(se1.point, se2.point) ||\n\t       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n\t    return 0;\n\t  }\n\t\n\t  if (nintersections === 2 && se1.isSubject === se2.isSubject){\n\t    if(se1.contourId === se2.contourId){\n\t    console.warn('Edges of the same polygon overlap',\n\t      se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n\t    }\n\t    //throw new Error('Edges of the same polygon overlap');\n\t    return 0;\n\t  }\n\t\n\t  // The line segments associated to se1 and se2 intersect\n\t  if (nintersections === 1) {\n\t\n\t    // if the intersection point is not an endpoint of se1\n\t    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n\t      divideSegment(se1, inter[0], queue);\n\t    }\n\t\n\t    // if the intersection point is not an endpoint of se2\n\t    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n\t      divideSegment(se2, inter[0], queue);\n\t    }\n\t    return 1;\n\t  }\n\t\n\t  // The line segments associated to se1 and se2 overlap\n\t  var events        = [];\n\t  var leftCoincide  = false;\n\t  var rightCoincide = false;\n\t\n\t  if (equals(se1.point, se2.point)) {\n\t    leftCoincide = true; // linked\n\t  } else if (compareEvents(se1, se2) === 1) {\n\t    events.push(se2, se1);\n\t  } else {\n\t    events.push(se1, se2);\n\t  }\n\t\n\t  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n\t    rightCoincide = true;\n\t  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n\t    events.push(se2.otherEvent, se1.otherEvent);\n\t  } else {\n\t    events.push(se1.otherEvent, se2.otherEvent);\n\t  }\n\t\n\t  if ((leftCoincide && rightCoincide) || leftCoincide) {\n\t    // both line segments are equal or share the left endpoint\n\t    se1.type = edgeType.NON_CONTRIBUTING;\n\t    se2.type = (se1.inOut === se2.inOut) ?\n\t      edgeType.SAME_TRANSITION :\n\t      edgeType.DIFFERENT_TRANSITION;\n\t\n\t    if (leftCoincide && !rightCoincide) {\n\t      // honestly no idea, but changing events selection from [2, 1]\n\t      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n\t      divideSegment(events[0].otherEvent, events[1].point, queue);\n\t    }\n\t    return 2;\n\t  }\n\t\n\t  // the line segments share the right endpoint\n\t  if (rightCoincide) {\n\t    divideSegment(events[0], events[1].point, queue);\n\t    return 3;\n\t  }\n\t\n\t  // no line segment includes totally the other one\n\t  if (events[0] !== events[3].otherEvent) {\n\t    divideSegment(events[0], events[1].point, queue);\n\t    divideSegment(events[1], events[2].point, queue);\n\t    return 3;\n\t  }\n\t\n\t  // one line segment includes the other one\n\t  divideSegment(events[0], events[1].point, queue);\n\t  divideSegment(events[3].otherEvent, events[2].point, queue);\n\t\n\t  return 3;\n\t}\n\t\n\t\n\t/**\n\t * @param  {SweepEvent} se\n\t * @param  {Array.<Number>} p\n\t * @param  {Queue} queue\n\t * @return {Queue}\n\t */\n\tfunction divideSegment(se, p, queue)  {\n\t  var r = new SweepEvent(p, false, se,            se.isSubject);\n\t  var l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\t\n\t  if (equals(se.point, se.otherEvent.point)) {\n\t    console.warn('what is that?', se);\n\t  }\n\t\n\t  r.contourId = l.contourId = se.contourId;\n\t\n\t  // avoid a rounding error. The left event would be processed after the right event\n\t  if (compareEvents(l, se.otherEvent) > 0) {\n\t    se.otherEvent.left = true;\n\t    l.left = false;\n\t  }\n\t\n\t  // avoid a rounding error. The left event would be processed after the right event\n\t  // if (compareEvents(se, r) > 0) {}\n\t\n\t  se.otherEvent.otherEvent = l;\n\t  se.otherEvent = r;\n\t\n\t  queue.push(l);\n\t  queue.push(r);\n\t\n\t  return queue;\n\t}\n\t\n\t\n\t/* eslint-disable no-unused-vars, no-debugger */\n\tfunction iteratorEquals(it1, it2) {\n\t  return it1._cursor === it2._cursor;\n\t}\n\t\n\t\n\tfunction _renderSweepLine(sweepLine, pos, event) {\n\t  var map = window.map;\n\t  if (!map) return;\n\t  if (window.sws) window.sws.forEach(function(p) {\n\t    map.removeLayer(p);\n\t  });\n\t  window.sws = [];\n\t  sweepLine.each(function(e) {\n\t    var poly = L.polyline([e.point.slice().reverse(), e.otherEvent.point.slice().reverse()], { color: 'green' }).addTo(map);\n\t    window.sws.push(poly);\n\t  });\n\t\n\t  if (window.vt) map.removeLayer(window.vt);\n\t  var v = pos.slice();\n\t  var b = map.getBounds();\n\t  window.vt = L.polyline([[b.getNorth(), v[0]], [b.getSouth(), v[0]]], {color: 'green', weight: 1}).addTo(map);\n\t\n\t  if (window.ps) map.removeLayer(window.ps);\n\t  window.ps = L.polyline([event.point.slice().reverse(), event.otherEvent.point.slice().reverse()], {color: 'black', weight: 9, opacity: 0.4}).addTo(map);\n\t  debugger;\n\t}\n\t/* eslint-enable no-unused-vars, no-debugger */\n\t\n\t\n\tfunction subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n\t  var sortedEvents = [];\n\t  var prev, next;\n\t\n\t  var sweepLine = new Tree(compareSegments);\n\t  var sortedEvents = [];\n\t\n\t  var rightbound = min(sbbox[2], cbbox[2]);\n\t\n\t  var prev, next;\n\t\n\t  while (eventQueue.length) {\n\t    var event = eventQueue.pop();\n\t    sortedEvents.push(event);\n\t\n\t    // optimization by bboxes for intersection and difference goes here\n\t    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n\t        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n\t      break;\n\t    }\n\t\n\t    if (event.left) {\n\t      sweepLine.insert(event);\n\t      // _renderSweepLine(sweepLine, event.point, event);\n\t\n\t      next = sweepLine.findIter(event);\n\t      prev = sweepLine.findIter(event);\n\t      event.iterator = sweepLine.findIter(event);\n\t\n\t      // Cannot get out of the tree what we just put there\n\t      if (!prev || !next) {\n\t        console.log('brute');\n\t        var iterators = findIterBrute(sweepLine);\n\t        prev = iterators[0];\n\t        next = iterators[1];\n\t      }\n\t\n\t      if (prev.data() !== sweepLine.min()) {\n\t        prev.prev();\n\t      } else {\n\t        prev = sweepLine.iterator(); //findIter(sweepLine.max());\n\t        prev.prev();\n\t        prev.next();\n\t      }\n\t      next.next();\n\t\n\t      computeFields(event, prev.data(), sweepLine, operation);\n\t\n\t      if (next.data()) {\n\t        if (possibleIntersection(event, next.data(), eventQueue) === 2) {\n\t          computeFields(event, prev.data(), sweepLine, operation);\n\t          computeFields(event, next.data(), sweepLine, operation);\n\t        }\n\t      }\n\t\n\t      if (prev.data()) {\n\t        if (possibleIntersection(prev.data(), event, eventQueue) === 2) {\n\t          var prevprev = sweepLine.findIter(prev.data());\n\t          if (prevprev.data() !== sweepLine.min()) {\n\t            prevprev.prev();\n\t          } else {\n\t            prevprev = sweepLine.findIter(sweepLine.max());\n\t            prevprev.next();\n\t          }\n\t          computeFields(prev.data(), prevprev.data(), sweepLine, operation);\n\t          computeFields(event, prev.data(), sweepLine, operation);\n\t        }\n\t      }\n\t    } else {\n\t      event = event.otherEvent;\n\t      next = sweepLine.findIter(event);\n\t      prev = sweepLine.findIter(event);\n\t\n\t      // _renderSweepLine(sweepLine, event.otherEvent.point, event);\n\t\n\t      if (!(prev && next)) continue;\n\t\n\t      if (prev.data() !== sweepLine.min()) {\n\t        prev.prev();\n\t      } else {\n\t        prev = sweepLine.iterator();\n\t        prev.prev(); // sweepLine.findIter(sweepLine.max());\n\t        prev.next();\n\t      }\n\t      next.next();\n\t      sweepLine.remove(event);\n\t\n\t      //_renderSweepLine(sweepLine, event.otherEvent.point, event);\n\t\n\t      if (next.data() && prev.data()) {\n\t        possibleIntersection(prev.data(), next.data(), eventQueue);\n\t      }\n\t    }\n\t  }\n\t  return sortedEvents;\n\t}\n\t\n\tfunction findIterBrute(sweepLine, q) {\n\t  var prev = sweepLine.iterator();\n\t  var next = sweepLine.iterator();\n\t  var it   = sweepLine.iterator(), data;\n\t  while((data = it.next()) !== null) {\n\t    prev.next();\n\t    next.next();\n\t    if (data === event) {\n\t      break;\n\t    }\n\t  }\n\t  return [prev, next];\n\t}\n\t\n\t\n\tfunction swap (arr, i, n) {\n\t  var temp = arr[i];\n\t  arr[i] = arr[n];\n\t  arr[n] = temp;\n\t}\n\t\n\t\n\tfunction changeOrientation(contour) {\n\t  return contour.reverse();\n\t}\n\t\n\t\n\tfunction isArray (arr) {\n\t  return Object.prototype.toString.call(arr) === '[object Array]';\n\t}\n\t\n\t\n\tfunction addHole(contour, idx) {\n\t  if (isArray(contour[0]) && !isArray(contour[0][0])) {\n\t    contour = [contour];\n\t  }\n\t  contour[idx] = [];\n\t  return contour;\n\t}\n\t\n\t\n\t/**\n\t * @param  {Array.<SweepEvent>} sortedEvents\n\t * @return {Array.<SweepEvent>}\n\t */\n\tfunction orderEvents(sortedEvents) {\n\t  var event, i, len;\n\t  var resultEvents = [];\n\t  for (i = 0, len = sortedEvents.length; i < len; i++) {\n\t    event = sortedEvents[i];\n\t    if ((event.left && event.inResult) ||\n\t      (!event.left && event.otherEvent.inResult)) {\n\t      resultEvents.push(event);\n\t    }\n\t  }\n\t\n\t  // Due to overlapping edges the resultEvents array can be not wholly sorted\n\t  var sorted = false;\n\t  while (!sorted) {\n\t    sorted = true;\n\t    for (i = 0, len = resultEvents.length; i < len; i++) {\n\t      if ((i + 1) < len &&\n\t        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n\t        swap(resultEvents, i, i + 1);\n\t        sorted = false;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (i = 0, len = resultEvents.length; i < len; i++) {\n\t    resultEvents[i].pos = i;\n\t  }\n\t\n\t  for (i = 0, len = resultEvents.length; i < len; i++) {\n\t    if (!resultEvents[i].left) {\n\t      var temp = resultEvents[i].pos;\n\t      resultEvents[i].pos = resultEvents[i].otherEvent.pos;\n\t      resultEvents[i].otherEvent.pos = temp;\n\t    }\n\t  }\n\t\n\t  return resultEvents;\n\t}\n\t\n\t\n\t/**\n\t * @param  {Array.<SweepEvent>} sortedEvents\n\t * @return {Array.<*>} polygons\n\t */\n\tfunction connectEdges(sortedEvents) {\n\t  var i, len;\n\t  var resultEvents = orderEvents(sortedEvents);\n\t\n\t\n\t  // \"false\"-filled array\n\t  var processed = Array(resultEvents.length);\n\t  var result = [];\n\t\n\t  var depth  = [];\n\t  var holeOf = [];\n\t  var isHole = {};\n\t\n\t  for (i = 0, len = resultEvents.length; i < len; i++) {\n\t    if (processed[i]) continue;\n\t\n\t    var contour = [];\n\t    result.push(contour);\n\t\n\t    var ringId = result.length - 1;\n\t    depth.push(0);\n\t    holeOf.push(-1);\n\t\n\t\n\t    if (resultEvents[i].prevInResult) {\n\t      var lowerContourId = resultEvents[i].prevInResult.contourId;\n\t      if (!resultEvents[i].prevInResult.resultInOut) {\n\t        addHole(result[lowerContourId], ringId);\n\t        holeOf[ringId] = lowerContourId;\n\t        depth[ringId]  = depth[lowerContourId] + 1;\n\t        isHole[ringId] = true;\n\t      } else if (isHole[lowerContourId]) {\n\t        addHole(result[holeOf[lowerContourId]], ringId);\n\t        holeOf[ringId] = holeOf[lowerContourId];\n\t        depth[ringId]  = depth[lowerContourId];\n\t        isHole[ringId] = true;\n\t      }\n\t    }\n\t\n\t    var pos = i;\n\t    var initial = resultEvents[i].point;\n\t    contour.push(initial);\n\t\n\t    while (pos >= i) {\n\t      processed[pos] = true;\n\t\n\t      if (resultEvents[pos].left) {\n\t        resultEvents[pos].resultInOut = false;\n\t        resultEvents[pos].contourId   = ringId;\n\t      } else {\n\t        resultEvents[pos].otherEvent.resultInOut = true;\n\t        resultEvents[pos].otherEvent.contourId   = ringId;\n\t      }\n\t\n\t      pos = resultEvents[pos].pos;\n\t      processed[pos] = true;\n\t\n\t      contour.push(resultEvents[pos].point);\n\t      pos = nextPos(pos, resultEvents, processed);\n\t    }\n\t\n\t    pos = pos === -1 ? i : pos;\n\t\n\t    processed[pos] = processed[resultEvents[pos].pos] = true;\n\t    resultEvents[pos].otherEvent.resultInOut = true;\n\t    resultEvents[pos].otherEvent.contourId   = ringId;\n\t\n\t\n\t    // depth is even\n\t    /* eslint-disable no-bitwise */\n\t    if (depth[ringId] & 1) {\n\t      changeOrientation(contour);\n\t    }\n\t    /* eslint-enable no-bitwise */\n\t  }\n\t\n\t  return result;\n\t}\n\t\n\t\n\t/**\n\t * @param  {Number} pos\n\t * @param  {Array.<SweepEvent>} resultEvents\n\t * @param  {Array.<Boolean>}    processed\n\t * @return {Number}\n\t */\n\tfunction nextPos(pos, resultEvents, processed) {\n\t  var newPos = pos + 1;\n\t  var length = resultEvents.length;\n\t  while (newPos < length &&\n\t         equals(resultEvents[newPos].point, resultEvents[pos].point)) {\n\t    if (!processed[newPos]) {\n\t      return newPos;\n\t    } else {\n\t      newPos = newPos + 1;\n\t    }\n\t  }\n\t\n\t  newPos = pos - 1;\n\t\n\t  while (processed[newPos]) {\n\t    newPos = newPos - 1;\n\t  }\n\t  return newPos;\n\t}\n\t\n\t\n\tfunction trivialOperation(subject, clipping, operation) {\n\t  var result = null;\n\t  if (subject.length * clipping.length === 0) {\n\t    if (operation === INTERSECTION) {\n\t      result = EMPTY;\n\t    } else if (operation === DIFFERENCE) {\n\t      result = subject;\n\t    } else if (operation === UNION || operation === XOR) {\n\t      result = (subject.length === 0) ? clipping : subject;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\t\n\tfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n\t  var result = null;\n\t  if (sbbox[0] > cbbox[2] ||\n\t      cbbox[0] > sbbox[2] ||\n\t      sbbox[1] > cbbox[3] ||\n\t      cbbox[1] > sbbox[3]) {\n\t    if (operation === INTERSECTION) {\n\t      result = EMPTY;\n\t    } else if (operation === DIFFERENCE) {\n\t      result = subject;\n\t    } else if (operation === UNION || operation === XOR) {\n\t      result = subject.concat(clipping);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\t\n\tfunction boolean(subject, clipping, operation) {\n\t  var trivial = trivialOperation(subject, clipping, operation);\n\t  if (trivial) {\n\t    return trivial === EMPTY ? null : trivial;\n\t  }\n\t  var sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\t  var cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\t\n\t  var eventQueue = fillQueue(subject, clipping, sbbox, cbbox);\n\t\n\t  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n\t  if (trivial) {\n\t    return trivial === EMPTY ? null : trivial;\n\t  }\n\t  var sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n\t  return connectEdges(sortedEvents);\n\t}\n\t\n\t\n\tmodule.exports = boolean;\n\t\n\t\n\tmodule.exports.union = function(subject, clipping) {\n\t  return boolean(subject, clipping, UNION);\n\t};\n\t\n\t\n\tmodule.exports.diff = function(subject, clipping) {\n\t  return boolean(subject, clipping, DIFFERENCE);\n\t};\n\t\n\t\n\tmodule.exports.xor = function(subject, clipping) {\n\t  return boolean(subject, clipping, XOR);\n\t};\n\t\n\t\n\tmodule.exports.intersection = function(subject, clipping) {\n\t  return boolean(subject, clipping, INTERSECTION);\n\t};\n\t\n\t\n\t/**\n\t * @enum {Number}\n\t */\n\tmodule.exports.operations = {\n\t  INTERSECTION: INTERSECTION,\n\t  DIFFERENCE:   DIFFERENCE,\n\t  UNION:        UNION,\n\t  XOR:          XOR\n\t};\n\t\n\t\n\t// for testing\n\tmodule.exports.fillQueue            = fillQueue;\n\tmodule.exports.computeFields        = computeFields;\n\tmodule.exports.subdivideSegments    = subdivideSegments;\n\tmodule.exports.divideSegment        = divideSegment;\n\tmodule.exports.possibleIntersection = possibleIntersection;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = { \n\t  NORMAL:               0, \n\t  NON_CONTRIBUTING:     1, \n\t  SAME_TRANSITION:      2, \n\t  DIFFERENT_TRANSITION: 3\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = TinyQueue;\n\t\n\tfunction TinyQueue(data, compare) {\n\t    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\t\n\t    this.data = data || [];\n\t    this.length = this.data.length;\n\t    this.compare = compare || defaultCompare;\n\t\n\t    if (data) for (var i = Math.floor(this.length / 2); i >= 0; i--) this._down(i);\n\t}\n\t\n\tfunction defaultCompare(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : 0;\n\t}\n\t\n\tTinyQueue.prototype = {\n\t\n\t    push: function (item) {\n\t        this.data.push(item);\n\t        this.length++;\n\t        this._up(this.length - 1);\n\t    },\n\t\n\t    pop: function () {\n\t        var top = this.data[0];\n\t        this.data[0] = this.data[this.length - 1];\n\t        this.length--;\n\t        this.data.pop();\n\t        this._down(0);\n\t        return top;\n\t    },\n\t\n\t    peek: function () {\n\t        return this.data[0];\n\t    },\n\t\n\t    _up: function (pos) {\n\t        var data = this.data,\n\t            compare = this.compare;\n\t\n\t        while (pos > 0) {\n\t            var parent = Math.floor((pos - 1) / 2);\n\t            if (compare(data[pos], data[parent]) < 0) {\n\t                swap(data, parent, pos);\n\t                pos = parent;\n\t\n\t            } else break;\n\t        }\n\t    },\n\t\n\t    _down: function (pos) {\n\t        var data = this.data,\n\t            compare = this.compare,\n\t            len = this.length;\n\t\n\t        while (true) {\n\t            var left = 2 * pos + 1,\n\t                right = left + 1,\n\t                min = pos;\n\t\n\t            if (left < len && compare(data[left], data[min]) < 0) min = left;\n\t            if (right < len && compare(data[right], data[min]) < 0) min = right;\n\t\n\t            if (min === pos) return;\n\t\n\t            swap(data, min, pos);\n\t            pos = min;\n\t        }\n\t    }\n\t};\n\t\n\tfunction swap(data, i, j) {\n\t    var tmp = data[i];\n\t    data[i] = data[j];\n\t    data[j] = tmp;\n\t}\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t    RBTree: __webpack_require__(31),\n\t    BinTree: __webpack_require__(33)\n\t};\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar TreeBase = __webpack_require__(32);\n\t\n\tfunction Node(data) {\n\t    this.data = data;\n\t    this.left = null;\n\t    this.right = null;\n\t    this.red = true;\n\t}\n\t\n\tNode.prototype.get_child = function(dir) {\n\t    return dir ? this.right : this.left;\n\t};\n\t\n\tNode.prototype.set_child = function(dir, val) {\n\t    if(dir) {\n\t        this.right = val;\n\t    }\n\t    else {\n\t        this.left = val;\n\t    }\n\t};\n\t\n\tfunction RBTree(comparator) {\n\t    this._root = null;\n\t    this._comparator = comparator;\n\t    this.size = 0;\n\t}\n\t\n\tRBTree.prototype = new TreeBase();\n\t\n\t// returns true if inserted, false if duplicate\n\tRBTree.prototype.insert = function(data) {\n\t    var ret = false;\n\t\n\t    if(this._root === null) {\n\t        // empty tree\n\t        this._root = new Node(data);\n\t        ret = true;\n\t        this.size++;\n\t    }\n\t    else {\n\t        var head = new Node(undefined); // fake tree root\n\t\n\t        var dir = 0;\n\t        var last = 0;\n\t\n\t        // setup\n\t        var gp = null; // grandparent\n\t        var ggp = head; // grand-grand-parent\n\t        var p = null; // parent\n\t        var node = this._root;\n\t        ggp.right = this._root;\n\t\n\t        // search down\n\t        while(true) {\n\t            if(node === null) {\n\t                // insert new node at the bottom\n\t                node = new Node(data);\n\t                p.set_child(dir, node);\n\t                ret = true;\n\t                this.size++;\n\t            }\n\t            else if(is_red(node.left) && is_red(node.right)) {\n\t                // color flip\n\t                node.red = true;\n\t                node.left.red = false;\n\t                node.right.red = false;\n\t            }\n\t\n\t            // fix red violation\n\t            if(is_red(node) && is_red(p)) {\n\t                var dir2 = ggp.right === gp;\n\t\n\t                if(node === p.get_child(last)) {\n\t                    ggp.set_child(dir2, single_rotate(gp, !last));\n\t                }\n\t                else {\n\t                    ggp.set_child(dir2, double_rotate(gp, !last));\n\t                }\n\t            }\n\t\n\t            var cmp = this._comparator(node.data, data);\n\t\n\t            // stop if found\n\t            if(cmp === 0) {\n\t                break;\n\t            }\n\t\n\t            last = dir;\n\t            dir = cmp < 0;\n\t\n\t            // update helpers\n\t            if(gp !== null) {\n\t                ggp = gp;\n\t            }\n\t            gp = p;\n\t            p = node;\n\t            node = node.get_child(dir);\n\t        }\n\t\n\t        // update root\n\t        this._root = head.right;\n\t    }\n\t\n\t    // make root black\n\t    this._root.red = false;\n\t\n\t    return ret;\n\t};\n\t\n\t// returns true if removed, false if not found\n\tRBTree.prototype.remove = function(data) {\n\t    if(this._root === null) {\n\t        return false;\n\t    }\n\t\n\t    var head = new Node(undefined); // fake tree root\n\t    var node = head;\n\t    node.right = this._root;\n\t    var p = null; // parent\n\t    var gp = null; // grand parent\n\t    var found = null; // found item\n\t    var dir = 1;\n\t\n\t    while(node.get_child(dir) !== null) {\n\t        var last = dir;\n\t\n\t        // update helpers\n\t        gp = p;\n\t        p = node;\n\t        node = node.get_child(dir);\n\t\n\t        var cmp = this._comparator(data, node.data);\n\t\n\t        dir = cmp > 0;\n\t\n\t        // save found node\n\t        if(cmp === 0) {\n\t            found = node;\n\t        }\n\t\n\t        // push the red node down\n\t        if(!is_red(node) && !is_red(node.get_child(dir))) {\n\t            if(is_red(node.get_child(!dir))) {\n\t                var sr = single_rotate(node, dir);\n\t                p.set_child(last, sr);\n\t                p = sr;\n\t            }\n\t            else if(!is_red(node.get_child(!dir))) {\n\t                var sibling = p.get_child(!last);\n\t                if(sibling !== null) {\n\t                    if(!is_red(sibling.get_child(!last)) && !is_red(sibling.get_child(last))) {\n\t                        // color flip\n\t                        p.red = false;\n\t                        sibling.red = true;\n\t                        node.red = true;\n\t                    }\n\t                    else {\n\t                        var dir2 = gp.right === p;\n\t\n\t                        if(is_red(sibling.get_child(last))) {\n\t                            gp.set_child(dir2, double_rotate(p, last));\n\t                        }\n\t                        else if(is_red(sibling.get_child(!last))) {\n\t                            gp.set_child(dir2, single_rotate(p, last));\n\t                        }\n\t\n\t                        // ensure correct coloring\n\t                        var gpc = gp.get_child(dir2);\n\t                        gpc.red = true;\n\t                        node.red = true;\n\t                        gpc.left.red = false;\n\t                        gpc.right.red = false;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    // replace and remove if found\n\t    if(found !== null) {\n\t        found.data = node.data;\n\t        p.set_child(p.right === node, node.get_child(node.left === null));\n\t        this.size--;\n\t    }\n\t\n\t    // update root and make it black\n\t    this._root = head.right;\n\t    if(this._root !== null) {\n\t        this._root.red = false;\n\t    }\n\t\n\t    return found !== null;\n\t};\n\t\n\tfunction is_red(node) {\n\t    return node !== null && node.red;\n\t}\n\t\n\tfunction single_rotate(root, dir) {\n\t    var save = root.get_child(!dir);\n\t\n\t    root.set_child(!dir, save.get_child(dir));\n\t    save.set_child(dir, root);\n\t\n\t    root.red = true;\n\t    save.red = false;\n\t\n\t    return save;\n\t}\n\t\n\tfunction double_rotate(root, dir) {\n\t    root.set_child(!dir, single_rotate(root.get_child(!dir), !dir));\n\t    return single_rotate(root, dir);\n\t}\n\t\n\tmodule.exports = RBTree;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t\n\tfunction TreeBase() {}\n\t\n\t// removes all nodes from the tree\n\tTreeBase.prototype.clear = function() {\n\t    this._root = null;\n\t    this.size = 0;\n\t};\n\t\n\t// returns node data if found, null otherwise\n\tTreeBase.prototype.find = function(data) {\n\t    var res = this._root;\n\t\n\t    while(res !== null) {\n\t        var c = this._comparator(data, res.data);\n\t        if(c === 0) {\n\t            return res.data;\n\t        }\n\t        else {\n\t            res = res.get_child(c > 0);\n\t        }\n\t    }\n\t\n\t    return null;\n\t};\n\t\n\t// returns iterator to node if found, null otherwise\n\tTreeBase.prototype.findIter = function(data) {\n\t    var res = this._root;\n\t    var iter = this.iterator();\n\t\n\t    while(res !== null) {\n\t        var c = this._comparator(data, res.data);\n\t        if(c === 0) {\n\t            iter._cursor = res;\n\t            return iter;\n\t        }\n\t        else {\n\t            iter._ancestors.push(res);\n\t            res = res.get_child(c > 0);\n\t        }\n\t    }\n\t\n\t    return null;\n\t};\n\t\n\t// Returns an iterator to the tree node at or immediately after the item\n\tTreeBase.prototype.lowerBound = function(item) {\n\t    var cur = this._root;\n\t    var iter = this.iterator();\n\t    var cmp = this._comparator;\n\t\n\t    while(cur !== null) {\n\t        var c = cmp(item, cur.data);\n\t        if(c === 0) {\n\t            iter._cursor = cur;\n\t            return iter;\n\t        }\n\t        iter._ancestors.push(cur);\n\t        cur = cur.get_child(c > 0);\n\t    }\n\t\n\t    for(var i=iter._ancestors.length - 1; i >= 0; --i) {\n\t        cur = iter._ancestors[i];\n\t        if(cmp(item, cur.data) < 0) {\n\t            iter._cursor = cur;\n\t            iter._ancestors.length = i;\n\t            return iter;\n\t        }\n\t    }\n\t\n\t    iter._ancestors.length = 0;\n\t    return iter;\n\t};\n\t\n\t// Returns an iterator to the tree node immediately after the item\n\tTreeBase.prototype.upperBound = function(item) {\n\t    var iter = this.lowerBound(item);\n\t    var cmp = this._comparator;\n\t\n\t    while(iter.data() !== null && cmp(iter.data(), item) === 0) {\n\t        iter.next();\n\t    }\n\t\n\t    return iter;\n\t};\n\t\n\t// returns null if tree is empty\n\tTreeBase.prototype.min = function() {\n\t    var res = this._root;\n\t    if(res === null) {\n\t        return null;\n\t    }\n\t\n\t    while(res.left !== null) {\n\t        res = res.left;\n\t    }\n\t\n\t    return res.data;\n\t};\n\t\n\t// returns null if tree is empty\n\tTreeBase.prototype.max = function() {\n\t    var res = this._root;\n\t    if(res === null) {\n\t        return null;\n\t    }\n\t\n\t    while(res.right !== null) {\n\t        res = res.right;\n\t    }\n\t\n\t    return res.data;\n\t};\n\t\n\t// returns a null iterator\n\t// call next() or prev() to point to an element\n\tTreeBase.prototype.iterator = function() {\n\t    return new Iterator(this);\n\t};\n\t\n\t// calls cb on each node's data, in order\n\tTreeBase.prototype.each = function(cb) {\n\t    var it=this.iterator(), data;\n\t    while((data = it.next()) !== null) {\n\t        cb(data);\n\t    }\n\t};\n\t\n\t// calls cb on each node's data, in reverse order\n\tTreeBase.prototype.reach = function(cb) {\n\t    var it=this.iterator(), data;\n\t    while((data = it.prev()) !== null) {\n\t        cb(data);\n\t    }\n\t};\n\t\n\t\n\tfunction Iterator(tree) {\n\t    this._tree = tree;\n\t    this._ancestors = [];\n\t    this._cursor = null;\n\t}\n\t\n\tIterator.prototype.data = function() {\n\t    return this._cursor !== null ? this._cursor.data : null;\n\t};\n\t\n\t// if null-iterator, returns first node\n\t// otherwise, returns next node\n\tIterator.prototype.next = function() {\n\t    if(this._cursor === null) {\n\t        var root = this._tree._root;\n\t        if(root !== null) {\n\t            this._minNode(root);\n\t        }\n\t    }\n\t    else {\n\t        if(this._cursor.right === null) {\n\t            // no greater node in subtree, go up to parent\n\t            // if coming from a right child, continue up the stack\n\t            var save;\n\t            do {\n\t                save = this._cursor;\n\t                if(this._ancestors.length) {\n\t                    this._cursor = this._ancestors.pop();\n\t                }\n\t                else {\n\t                    this._cursor = null;\n\t                    break;\n\t                }\n\t            } while(this._cursor.right === save);\n\t        }\n\t        else {\n\t            // get the next node from the subtree\n\t            this._ancestors.push(this._cursor);\n\t            this._minNode(this._cursor.right);\n\t        }\n\t    }\n\t    return this._cursor !== null ? this._cursor.data : null;\n\t};\n\t\n\t// if null-iterator, returns last node\n\t// otherwise, returns previous node\n\tIterator.prototype.prev = function() {\n\t    if(this._cursor === null) {\n\t        var root = this._tree._root;\n\t        if(root !== null) {\n\t            this._maxNode(root);\n\t        }\n\t    }\n\t    else {\n\t        if(this._cursor.left === null) {\n\t            var save;\n\t            do {\n\t                save = this._cursor;\n\t                if(this._ancestors.length) {\n\t                    this._cursor = this._ancestors.pop();\n\t                }\n\t                else {\n\t                    this._cursor = null;\n\t                    break;\n\t                }\n\t            } while(this._cursor.left === save);\n\t        }\n\t        else {\n\t            this._ancestors.push(this._cursor);\n\t            this._maxNode(this._cursor.left);\n\t        }\n\t    }\n\t    return this._cursor !== null ? this._cursor.data : null;\n\t};\n\t\n\tIterator.prototype._minNode = function(start) {\n\t    while(start.left !== null) {\n\t        this._ancestors.push(start);\n\t        start = start.left;\n\t    }\n\t    this._cursor = start;\n\t};\n\t\n\tIterator.prototype._maxNode = function(start) {\n\t    while(start.right !== null) {\n\t        this._ancestors.push(start);\n\t        start = start.right;\n\t    }\n\t    this._cursor = start;\n\t};\n\t\n\tmodule.exports = TreeBase;\n\t\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar TreeBase = __webpack_require__(32);\n\t\n\tfunction Node(data) {\n\t    this.data = data;\n\t    this.left = null;\n\t    this.right = null;\n\t}\n\t\n\tNode.prototype.get_child = function(dir) {\n\t    return dir ? this.right : this.left;\n\t};\n\t\n\tNode.prototype.set_child = function(dir, val) {\n\t    if(dir) {\n\t        this.right = val;\n\t    }\n\t    else {\n\t        this.left = val;\n\t    }\n\t};\n\t\n\tfunction BinTree(comparator) {\n\t    this._root = null;\n\t    this._comparator = comparator;\n\t    this.size = 0;\n\t}\n\t\n\tBinTree.prototype = new TreeBase();\n\t\n\t// returns true if inserted, false if duplicate\n\tBinTree.prototype.insert = function(data) {\n\t    if(this._root === null) {\n\t        // empty tree\n\t        this._root = new Node(data);\n\t        this.size++;\n\t        return true;\n\t    }\n\t\n\t    var dir = 0;\n\t\n\t    // setup\n\t    var p = null; // parent\n\t    var node = this._root;\n\t\n\t    // search down\n\t    while(true) {\n\t        if(node === null) {\n\t            // insert new node at the bottom\n\t            node = new Node(data);\n\t            p.set_child(dir, node);\n\t            ret = true;\n\t            this.size++;\n\t            return true;\n\t        }\n\t\n\t        // stop if found\n\t        if(this._comparator(node.data, data) === 0) {\n\t            return false;\n\t        }\n\t\n\t        dir = this._comparator(node.data, data) < 0;\n\t\n\t        // update helpers\n\t        p = node;\n\t        node = node.get_child(dir);\n\t    }\n\t};\n\t\n\t// returns true if removed, false if not found\n\tBinTree.prototype.remove = function(data) {\n\t    if(this._root === null) {\n\t        return false;\n\t    }\n\t\n\t    var head = new Node(undefined); // fake tree root\n\t    var node = head;\n\t    node.right = this._root;\n\t    var p = null; // parent\n\t    var found = null; // found item\n\t    var dir = 1;\n\t\n\t    while(node.get_child(dir) !== null) {\n\t        p = node;\n\t        node = node.get_child(dir);\n\t        var cmp = this._comparator(data, node.data);\n\t        dir = cmp > 0;\n\t\n\t        if(cmp === 0) {\n\t            found = node;\n\t        }\n\t    }\n\t\n\t    if(found !== null) {\n\t        found.data = node.data;\n\t        p.set_child(p.right === node, node.get_child(node.left === null));\n\t\n\t        this._root = head.right;\n\t        this.size--;\n\t        return true;\n\t    }\n\t    else {\n\t        return false;\n\t    }\n\t};\n\t\n\tmodule.exports = BinTree;\n\t\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar signedArea = __webpack_require__(35);\n\tvar EdgeType   = __webpack_require__(28);\n\t\n\t\n\t/**\n\t * Sweepline event\n\t *\n\t * @param {Array.<Number>}  point\n\t * @param {Boolean}         left\n\t * @param {SweepEvent=}     otherEvent\n\t * @param {Boolean}         isSubject\n\t * @param {Number}          edgeType\n\t */\n\tfunction SweepEvent(point, left, otherEvent, isSubject, edgeType) {\n\t\n\t  /**\n\t   * Is left endpoint?\n\t   * @type {Boolean}\n\t   */\n\t  this.left = left;\n\t\n\t  /**\n\t   * @type {Array.<Number>}\n\t   */\n\t  this.point = point;\n\t\n\t  /**\n\t   * Other edge reference\n\t   * @type {SweepEvent}\n\t   */\n\t  this.otherEvent = otherEvent;\n\t\n\t  /**\n\t   * Belongs to source or clipping polygon\n\t   * @type {Boolean}\n\t   */\n\t  this.isSubject = isSubject;\n\t\n\t  /**\n\t   * Edge contribution type\n\t   * @type {Number}\n\t   */\n\t  this.type = edgeType || EdgeType.NORMAL;\n\t\n\t\n\t  /**\n\t   * In-out transition for the sweepline crossing polygon\n\t   * @type {Boolean}\n\t   */\n\t  this.inOut = false;\n\t\n\t\n\t  /**\n\t   * @type {Boolean}\n\t   */\n\t  this.otherInOut = false;\n\t\n\t  /**\n\t   * Previous event in result?\n\t   * @type {SweepEvent}\n\t   */\n\t  this.prevInResult = null;\n\t\n\t  /**\n\t   * Does event belong to result?\n\t   * @type {Boolean}\n\t   */\n\t  this.inResult = false;\n\t\n\t\n\t  // connection step\n\t\n\t  /**\n\t   * @type {Boolean}\n\t   */\n\t  this.resultInOut = false;\n\t}\n\t\n\t\n\tSweepEvent.prototype = {\n\t\n\t  /**\n\t   * @param  {Array.<Number>}  p\n\t   * @return {Boolean}\n\t   */\n\t  isBelow: function(p) {\n\t    return this.left ?\n\t      signedArea (this.point, this.otherEvent.point, p) > 0 :\n\t      signedArea (this.otherEvent.point, this.point, p) > 0;\n\t  },\n\t\n\t\n\t  /**\n\t   * @param  {Array.<Number>}  p\n\t   * @return {Boolean}\n\t   */\n\t  isAbove: function(p) {\n\t    return !this.isBelow(p);\n\t  },\n\t\n\t\n\t  /**\n\t   * @return {Boolean}\n\t   */\n\t  isVertical: function() {\n\t    return this.point[0] === this.otherEvent.point[0];\n\t  }\n\t};\n\t\n\tmodule.exports = SweepEvent;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Signed area of the triangle (p0, p1, p2)\n\t * @param  {Array.<Number>} p0\n\t * @param  {Array.<Number>} p1\n\t * @param  {Array.<Number>} p2\n\t * @return {Number}\n\t */\n\tmodule.exports = function signedArea(p0, p1, p2) {\n\t  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar signedArea = __webpack_require__(35);\n\t// var equals = require('./equals');\n\t\n\t/**\n\t * @param  {SweepEvent} e1\n\t * @param  {SweepEvent} e2\n\t * @return {Number}\n\t */\n\tmodule.exports = function sweepEventsComp(e1, e2) {\n\t  var p1 = e1.point;\n\t  var p2 = e2.point;\n\t\n\t  // Different x-coordinate\n\t  if (p1[0] > p2[0]) return 1;\n\t  if (p1[0] < p2[0]) return -1;\n\t\n\t  // Different points, but same x-coordinate\n\t  // Event with lower y-coordinate is processed first\n\t  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\t\n\t  return specialCases(e1, e2, p1, p2);\n\t};\n\t\n\t\n\tfunction specialCases(e1, e2, p1, p2) {\n\t  // Same coordinates, but one is a left endpoint and the other is\n\t  // a right endpoint. The right endpoint is processed first\n\t  if (e1.left !== e2.left)\n\t    return e1.left ? 1 : -1;\n\t\n\t  // Same coordinates, both events\n\t  // are left endpoints or right endpoints.\n\t  // not collinear\n\t  if (signedArea (p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n\t    // the event associate to the bottom segment is processed first\n\t    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n\t  }\n\t\n\t  // uncomment this if you want to play with multipolygons\n\t  // if (e1.isSubject === e2.isSubject) {\n\t  //   if(equals(e1.point, e2.point) && e1.contourId === e2.contourId) {\n\t  //     return 0;\n\t  //   } else {\n\t  //     return e1.contourId > e2.contourId ? 1 : -1;\n\t  //   }\n\t  // }\n\t\n\t  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n\t}\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar signedArea    = __webpack_require__(35);\n\tvar compareEvents = __webpack_require__(36);\n\tvar equals        = __webpack_require__(38);\n\t\n\t\n\t/**\n\t * @param  {SweepEvent} le1\n\t * @param  {SweepEvent} le2\n\t * @return {Number}\n\t */\n\tmodule.exports = function compareSegments(le1, le2) {\n\t  if (le1 === le2) return 0;\n\t\n\t  // Segments are not collinear\n\t  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n\t    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\t\n\t    // If they share their left endpoint use the right endpoint to sort\n\t    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\t\n\t    // Different left endpoint: use the left endpoint to sort\n\t    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\t\n\t    // has the line segment associated to e1 been inserted\n\t    // into S after the line segment associated to e2 ?\n\t    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\t\n\t    // The line segment associated to e2 has been inserted\n\t    // into S after the line segment associated to e1\n\t    return le1.isBelow(le2.point) ? -1 : 1;\n\t  }\n\t\n\t  if (le1.isSubject === le2.isSubject) { // same polygon\n\t    if (equals(le1.point, le2.point)) {\n\t      if (equals(le1.otherEvent.point, le2.otherEvent.point)) {\n\t        return 0;\n\t      } else {\n\t        return le1.contourId > le2.contourId ? 1 : -1;\n\t      }\n\t    }\n\t  } else { // Segments are collinear, but belong to separate polygons\n\t    return le1.isSubject ? -1 : 1;\n\t  }\n\t\n\t  return compareEvents(le1, le2) === 1 ? 1 : -1;\n\t};\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function equals(p1, p2) {\n\t  return p1[0] === p2[0] && p1[1] === p2[1];\n\t};\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\tvar EPSILON = 1e-9;\n\t\n\t/**\n\t * Finds the magnitude of the cross product of two vectors (if we pretend\n\t * they're in three dimensions)\n\t *\n\t * @param {Object} a First vector\n\t * @param {Object} b Second vector\n\t * @private\n\t * @returns {Number} The magnitude of the cross product\n\t */\n\tfunction krossProduct(a, b) {\n\t  return a[0] * b[1] - a[1] * b[0];\n\t}\n\t\n\t/**\n\t * Finds the dot product of two vectors.\n\t *\n\t * @param {Object} a First vector\n\t * @param {Object} b Second vector\n\t * @private\n\t * @returns {Number} The dot product\n\t */\n\tfunction dotProduct(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1];\n\t}\n\t\n\t/**\n\t * Finds the intersection (if any) between two line segments a and b, given the\n\t * line segments' end points a1, a2 and b1, b2.\n\t *\n\t * This algorithm is based on Schneider and Eberly.\n\t * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n\t * Page 244.\n\t *\n\t * @param {Array.<Number>} a1 point of first line\n\t * @param {Array.<Number>} a2 point of first line\n\t * @param {Array.<Number>} b1 point of second line\n\t * @param {Array.<Number>} b2 point of second line\n\t * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n\t *                                         (meaning connected segments) as\n\t *                                         intersections\n\t * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n\t * intersection. If they overlap, the two end points of the overlapping segment.\n\t * Otherwise, null.\n\t */\n\tmodule.exports = function(a1, a2, b1, b2, noEndpointTouch) {\n\t  // The algorithm expects our lines in the form P + sd, where P is a point,\n\t  // s is on the interval [0, 1], and d is a vector.\n\t  // We are passed two points. P can be the first point of each pair. The\n\t  // vector, then, could be thought of as the distance (in x and y components)\n\t  // from the first point to the second point.\n\t  // So first, let's make our vectors:\n\t  var va = [a2[0] - a1[0], a2[1] - a1[1]];\n\t  var vb = [b2[0] - b1[0], b2[1] - b1[1]];\n\t  // We also define a function to convert back to regular point form:\n\t\n\t  /* eslint-disable arrow-body-style */\n\t\n\t  function toPoint(p, s, d) {\n\t    return [\n\t      p[0] + s * d[0],\n\t      p[1] + s * d[1]\n\t    ];\n\t  }\n\t\n\t  /* eslint-enable arrow-body-style */\n\t\n\t  // The rest is pretty much a straight port of the algorithm.\n\t  var e = [b1[0] - a1[0], b1[1] - a1[1]];\n\t  var kross = krossProduct(va, vb);\n\t  var sqrKross = kross * kross;\n\t  var sqrLenA = dotProduct(va, va);\n\t  var sqrLenB = dotProduct(vb, vb);\n\t\n\t  // Check for line intersection. This works because of the properties of the\n\t  // cross product -- specifically, two vectors are parallel if and only if the\n\t  // cross product is the 0 vector. The full calculation involves relative error\n\t  // to account for possible very small line segments. See Schneider & Eberly\n\t  // for details.\n\t  if (sqrKross > EPSILON * sqrLenA * sqrLenB) {\n\t    // If they're not parallel, then (because these are line segments) they\n\t    // still might not actually intersect. This code checks that the\n\t    // intersection point of the lines is actually on both line segments.\n\t    var s = krossProduct(e, vb) / kross;\n\t    if (s < 0 || s > 1) {\n\t      // not on line segment a\n\t      return null;\n\t    }\n\t    var t = krossProduct(e, va) / kross;\n\t    if (t < 0 || t > 1) {\n\t      // not on line segment b\n\t      return null;\n\t    }\n\t    return noEndpointTouch ? null : [toPoint(a1, s, va)];\n\t  }\n\t\n\t  // If we've reached this point, then the lines are either parallel or the\n\t  // same, but the segments could overlap partially or fully, or not at all.\n\t  // So we need to find the overlap, if any. To do that, we can use e, which is\n\t  // the (vector) difference between the two initial points. If this is parallel\n\t  // with the line itself, then the two lines are the same line, and there will\n\t  // be overlap.\n\t  var sqrLenE = dotProduct(e, e);\n\t  kross = krossProduct(e, va);\n\t  sqrKross = kross * kross;\n\t\n\t  if (sqrKross > EPSILON * sqrLenA * sqrLenE) {\n\t    // Lines are just parallel, not the same. No overlap.\n\t    return null;\n\t  }\n\t\n\t  var sa = dotProduct(va, e) / sqrLenA;\n\t  var sb = sa + dotProduct(va, vb) / sqrLenA;\n\t  var smin = Math.min(sa, sb);\n\t  var smax = Math.max(sa, sb);\n\t\n\t  // this is, essentially, the FindIntersection acting on floats from\n\t  // Schneider & Eberly, just inlined into this function.\n\t  if (smin <= 1 && smax >= 0) {\n\t\n\t    // overlap on an end point\n\t    if (smin === 1) {\n\t      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n\t    }\n\t\n\t    if (smax === 0) {\n\t      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n\t    }\n\t\n\t    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\t\n\t    // There's overlap on a segment -- two points of intersection. Return both.\n\t    return [\n\t      toPoint(a1, smin > 0 ? smin : 0, va),\n\t      toPoint(a1, smax < 1 ? smax : 1, va),\n\t    ];\n\t  }\n\t\n\t  return null;\n\t};\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @param  {*} arr\n\t * @return {Boolean}\n\t */\n\tvar isArray = module.exports.isArray = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) === '[object Array]';\n\t};\n\t\n\t\n\t/**\n\t * @param  {Array.<Number>} p1\n\t * @param  {Array.<Number>} p2\n\t * @return {Boolean}\n\t */\n\tmodule.exports.equals = function equals(p1, p2) {\n\t  return p1[0] === p2[0] && p1[1] === p2[1];\n\t};\n\t\n\t\n\t/**\n\t * @param  {*}       coordinates\n\t * @param  {Number=} depth\n\t * @return {*}\n\t */\n\tmodule.exports.orientRings = function orientRings(coordinates, depth, isHole) {\n\t  depth = depth || 0;\n\t  var i, len;\n\t  if (isArray(coordinates) && typeof coordinates[0][0] === 'number') {\n\t    var area = 0;\n\t    var ring = coordinates;\n\t\n\t    for (i = 0, len = ring.length; i < len; i++) {\n\t      var pt1 = ring[i];\n\t      var pt2 = ring[(i + 1) % len];\n\t      area += pt1[0] * pt2[1];\n\t      area -= pt2[0] * pt1[1];\n\t    }\n\t    if ((!isHole && area > 0) || (isHole && area < 0)) {\n\t      ring.reverse();\n\t    }\n\t  } else {\n\t    for (i = 0, len = coordinates.length; i < len; i++) {\n\t      orientRings(coordinates[i], depth + 1, i > 0);\n\t    }\n\t  }\n\t\n\t  return coordinates;\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function($,window){\n\t    return function(userOpts){\n\t        //====================== options verification ====================\n\t        var defaultOpts = {\n\t            image:\"./images/defaultPin.png\",\n\t            size:[30,30],\n\t            anchor:[15,30]\n\t        };\n\t        var optionCheckMap = {\n\t            image:[String,'string'],\n\t            size:[Array,'array'],\n\t            anchor:[Array,'array']\n\t        };\n\t        var opts = defaultOpts;\n\t        if(userOpts){\n\t            for(var key in userOpts){\n\t                if(optionCheckMap[key]){\n\t                    if(userOpts[key].constructor != optionCheckMap[key][0]){\n\t                        console.error('옵션 값(key:'+key+')의 타입이 잘못돼었습니다.'+\n\t                            (typeof userOpts[key])+' => '+optionCheckMap[key][1]+'로 바꾸어주세요');\n\t                    }\n\t                }else{\n\t                    printErrType('OPTION');\n\t                    console.error('사용할 수 없는 옵션 키 값('+key+')이 포함되어 있습니다.');\n\t                }\n\t            }\n\t            $.extend(opts,userOpts);\n\t        }\n\t\n\t        var self = {};\n\t        self.elem = $(\"<div></div>\").css({\n\t            \"position\":'absolute',\n\t            \"left\":-opts.anchor[0]+'px',\n\t            \"top\":-opts.anchor[1]+'px',\n\t            \"width\":opts.size[0]+'px',\n\t            \"height\":opts.size[1]+'px',\n\t            \"background-image\":\"url(\"+opts.image+\")\",\n\t            \"background-repeat\":\"no-repeat\",\n\t            \"background-size\":opts.size[0]+'px '+opts.size[1]+'px'\n\t        });\n\t        self.anchor = opts.anchor;\n\t        self.size = opts.size;\n\t        return self;\n\t\n\t        //==================== helpers ======================\n\t        function printErrType(type){\n\t            switch(type){\n\t                case 'OPTION':\n\t                    console.error('--- IndoorMap.icon() 옵션 에러 ---');\n\t                    break;\n\t                case 'LOAD':\n\t                    break;\n\t            }\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t\n\tmodule.exports = function($,window,defaultIcon){\n\t    return function(position,userOpts){\n\t        var self = {};\n\t        //====================== options verification ====================\n\t        var defaultOpts = {\n\t            type: \"both\",\n\t            priority: 1,\n\t            icon:defaultIcon,\n\t            //floor: currentFloor (IndoorMap_core에서 정해준다)\n\t            html:\"<div style='color:#ff0000;'>테스트 마커</div>\",\n\t            align:\"center bottom\",\n\t            padding: 5\n\t        };\n\t        var optionCheckMap = {\n\t            id:[String,'string'],\n\t            type:[String,'string'],\n\t            priority:[Number,'number'],\n\t            floor:[String,'string'],\n\t            icon:[Object,'object'],\n\t            html:[String,'string'],\n\t            align:[String,'string'],\n\t            padding:[Number,'number'],\n\t            className:[String,'string'],\n\t            mouseover:[Function,'function'],\n\t            mouseout:[Function,'function'],\n\t            click:[Function,'function']\n\t        };\n\t\n\t        var opts = defaultOpts;\n\t\n\t        //==================== validate userOpts ====================\n\t        if(userOpts){\n\t            for(var key in userOpts){\n\t                if(optionCheckMap[key]){\n\t                    if(userOpts[key].constructor != optionCheckMap[key][0]){\n\t                        console.error('옵션 값(key:'+key+')의 타입이 잘못돼었습니다.'+\n\t                            (typeof userOpts[key])+'=>'+optionCheckMap[key][1]+'로 바꾸어주세요');\n\t                    }\n\t                }else{\n\t                    printErrType('OPTION');\n\t                    console.error('사용할 수 없는 옵션 키 값('+key+')이 포함되어 있습니다.');\n\t                }\n\t            }\n\t        }\n\t        $.extend(opts, userOpts);\n\t\n\t        //==================== vars ====================\n\t        self.position = position;\n\t        self.hidden = false; //used for reclustering\n\t        self.priority = opts.priority;\n\t        self.forceToShow = false; //for disable reclustering\n\t\n\t        var elemPosition = [0,0];\n\t        var $htmlElem = null;\n\t        var $iconElem = null;\n\t\n\t        //==================== create marker elem ====================\n\t        var elem = $(\"<div></div>\");\n\t        self.elem = elem;\n\t        elem.css({\n\t            position:'absolute',\n\t            whiteSpace:'nowrap'\n\t        });\n\t        if(opts.id){\n\t            elem.attr('id',opts.id);\n\t        }\n\t        if(opts.className){\n\t            elem.addClass(opts.className);\n\t        }\n\t        if(opts.mouseover){\n\t            elem.on('mouseover',function(){\n\t                opts.mouseover.apply(self,[self]);\n\t            });\n\t        }\n\t        if(opts.mouseout){\n\t            elem.on('mouseout', function(){\n\t                opts.mouseout.apply(self,[self]);\n\t            });\n\t        }\n\t        if(opts.click){\n\t            elem.on('click', function(){\n\t                opts.click.apply(self,[self]);\n\t            });\n\t        }\n\t\n\t        //==================== append html|icon to marker elem ====================\n\t        switch(opts.type){\n\t            case 'both':\n\t                appendIcon(elem,opts.icon.elem.clone(),opts.icon.anchor);\n\t                appendHTML(elem,opts.html,opts.align);\n\t                break;\n\t            case 'icon':\n\t                appendIcon(elem,opts.icon.elem.clone(),opts.icon.anchor);\n\t                break;\n\t            case 'html':\n\t                appendHTML(elem,opts.html,opts.align);\n\t                break;\n\t        }\n\t        function appendIcon($marker,$icon){\n\t            $iconElem = $icon;\n\t            $icon.hide();\n\t            $marker.append($icon);\n\t            $icon.show();\n\t        }\n\t\n\t        function appendHTML($marker,htmlStr){\n\t            if(htmlStr.match(/<([A-Z][A-Z0-9]*)\\b[^>]*>(.*?)<\\1>/i)){\n\t                //html tag\n\t                $htmlElem = $(htmlStr);\n\t            }else{\n\t                //plain text\n\t                $htmlElem = $(\"<div>\"+htmlStr+\"</div>\");\n\t            }\n\t            $htmlElem.css({\n\t                position:'relative',\n\t                'user-select':'none',\n\t                '-moz-user-select':'none',\n\t                'webkit-user-select':'none',\n\t                '-ms-user-select':'none',\n\t                'cursor':'default'\n\t            });\n\t            $marker.append($htmlElem);\n\t        }\n\t\n\t        //==================== alignment & reset boundary ====================\n\t        var relativeBoundary = {\n\t            x1:0,\n\t            x2:0,\n\t            y1:0,\n\t            y2:0\n\t        };\n\t        function resetRelativeBoundary(){\n\t            relativeBoundary = {x1:0,x2:0,y1:0,y2:0}\n\t        }\n\t        function recalculateRelativeBoundary(x1,x2,y1,y2){\n\t            var rb = relativeBoundary;\n\t            if(x1 && x1<rb.x1) rb.x1 = x1;\n\t            if(x2 && x2>rb.x2) rb.x2 = x2;\n\t            if(y1 && y1<rb.y1) rb.y1 = y1;\n\t            if(y2 && y2>rb.y2) rb.y2 = y2;\n\t        }\n\t        var horizontalAlign = null;\n\t        var verticalAlign = null;\n\t        self.resetAlign = function(){\n\t            if($htmlElem){\n\t                var htmlElemW = $htmlElem.width();\n\t                var htmlElemH = $htmlElem.height();\n\t                var iconSize = (opts.icon)? opts.icon.size:[0,0];\n\t                var iconAnchor = (opts.icon)? opts.icon.anchor:[0,0];\n\t\n\t                if(!(horizontalAlign && verticalAlign)){\n\t                    horizontalAlign = 'center';\n\t                    verticalAlign = 'bottom';\n\t                    if(opts.align){\n\t                        var splittedAlign = opts.align.split(' ');\n\t                        horizontalAlign = splittedAlign[0];\n\t                        verticalAlign = splittedAlign[1];\n\t                    }\n\t                    resetRelativeBoundary();\n\t                    recalculateRelativeBoundary(-iconAnchor[0],iconSize[0]-iconAnchor[0],-iconAnchor[1],iconSize[1]-iconAnchor[1]);\n\t                    switch(horizontalAlign){\n\t                        case 'left':\n\t                            $htmlElem.css({left:-htmlElemW+'px'});\n\t                            recalculateRelativeBoundary(-htmlElemW,0);\n\t                            break;\n\t                        case 'center':\n\t                            $htmlElem.css({left:-htmlElemW/2+'px'});\n\t                            recalculateRelativeBoundary(-htmlElemW/2,htmlElemW/2);\n\t                            break;\n\t                        case 'right':\n\t                            $htmlElem.css({left:0});\n\t                            recalculateRelativeBoundary(0,htmlElemW);\n\t                            break;\n\t                    }\n\t                    switch(verticalAlign){\n\t                        case 'top':\n\t                            $htmlElem.css({top:-iconAnchor[1]-opts.padding-htmlElemH+'px'});\n\t                            recalculateRelativeBoundary(null,null,-iconAnchor[1]-opts.padding-htmlElemH,null);\n\t                            break;\n\t                        case 'middle':\n\t                            $htmlElem.css({top:-htmlElemH/2+'px'});\n\t                            recalculateRelativeBoundary(null,null,-htmlElemH/2,htmlElemH/2);\n\t                            break;\n\t                        case 'bottom':\n\t                            $htmlElem.css({top:iconSize[1]-iconAnchor[1]+opts.padding+'px'});\n\t                            recalculateRelativeBoundary(null,null,iconSize[1]-iconAnchor[1]+opts.padding,iconSize[1]-iconAnchor[1]+opts.padding+htmlElemH);\n\t                            break;\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        self.setClustering = function(enable){\n\t            if(enable){\n\t                self.forceToShow = false;\n\t            }else{\n\t                self.elem.show();\n\t                self.forceToShow = true;\n\t            }\n\t        };\n\t        self.getBoundary = function(){\n\t            return {\n\t                x1:elemPosition[0] + relativeBoundary.x1,\n\t                x2:elemPosition[0] + relativeBoundary.x2,\n\t                y1:elemPosition[1] + relativeBoundary.y1,\n\t                y2:elemPosition[1] + relativeBoundary.y2\n\t            };\n\t        };\n\t\n\t        self.$htmlElem = $htmlElem;\n\t        self.$iconElem = $iconElem;\n\t        \n\t        \n\t        \n\t        //==================== helpers ======================\n\t        function printErrType(type){\n\t            switch(type){\n\t                case 'OPTION':\n\t                    console.error('--- IndoorMap.setMarker() 옵션 에러 ---');\n\t                    break;\n\t                case 'LOAD':\n\t                    break;\n\t            }\n\t        }\n\t        self.repositionElem = function(point){\n\t            elemPosition[0] = point[0];\n\t            elemPosition[1] = point[1];\n\t            elem.css({\n\t                top:point[1]+'px',\n\t                left:point[0]+'px'\n\t            });\n\t        };\n\t\n\t        return self;\n\t    }\n\t};\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** sample/js/IndoorMap.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap de6a919c340bdd9e11f8\n **/","// console.log(require('./IndoorMap_core.js'));\nrequire('./requestAnimationFramePolyfill.js');\nrequire('./IndoorMapStyle.scss');\n(function($,window){\n    var Promise = require('promise');\n    window.IndoorMap = function($parent,userOpts,fallBack){\n        //check if webgl available\n        if(!require('detector-webgl')){\n            console.log('webGL을 사용할 수 있는 환경이 아닙니다.');\n            if(fallBack) return fallBack();\n        }\n\n        //for safety; confirm $parent is a jQuery Object\n        $parent = $($parent);\n        //default options\n        var defaultOpts = {\n            backgroundColor:0xefefef,\n            tiltAngle:60,\n            zoomValue:100,\n            zoomStep:40,\n            minZoom:50,\n            maxZoom:300,\n            zoomAnimation:100,\n            zoomOnMouseWheel:true,\n            pinchZoom:true,\n            twoFingerRotation:true,\n            zoomController:true,\n            zoomControllerCustomClass:null,\n            zoomControllerPosition:'topright',\n            autoFit:true,\n            floorController:true,\n            floorControllerCustomClass:null,\n            floorControllerPosition:'bottomright',\n            limitTranslation:true,\n            markerClustering:true,\n            markerClusteringAnimation:100,\n            onFloorChanged:null,\n            onBlockMouseOver:null,\n            onBlockMouseOut:null,\n            onBlockClick:null\n        };\n        var opts = defaultOpts;\n        //==================== option verification ====================\n        if(userOpts){\n            if(userOpts.backgroundColor && typeof userOpts.backgroundColor == 'string'){\n                userOpts.backgroundColor = parseInt(userOpts.backgroundColor, 16);\n            }\n\n            //option check map\n            var optionCheckMap = {\n                backgroundColor:'number',   //implemented\n                tiltAngle:'number',   //implemented\n                zoomValue:'number',     //implemented\n                zoomStep:'number',\n                minZoom:'number',       //implemented\n                maxZoom:'number',       //implemented\n                zoomAnimation:'number',//implemented\n                zoomOnMouseWheel:'boolean', //implemented\n                pinchZoom:'boolean',    //implemented\n                twoFingerRotation:'boolean',    //implemented\n                zoomController:'boolean',   //implemented\n                zoomControllerCustomClass:'string', //implemented\n                zoomControllerPosition:'string',    //implemented\n                autoFit:'boolean',                  //implemented\n                floorController:'boolean',  //implemented\n                floorControllerCustomClass:'string',    //implemented\n                floorControllerPosition:'string',   //implemented\n                limitTranslation:'boolean',\n                markerClustering:'boolean',\n                markerClusteringAnimation:'number',\n                onFloorChanged:'function',\n                onBlockMouseOver:'function',\n                onBlockMouseOut:'function',\n                onBlockClick:'function'\n            };\n            var positionCheckMap = {'topleft':true,'topright':true,'bottomleft':true,'bottomright':true};\n            for(var key in userOpts){\n                if(optionCheckMap[key]){\n                    if(typeof userOpts[key] != optionCheckMap[key]){\n                        printErrType('OPTION');\n                        console.error('옵션 값(key:'+key+')의 타입이 잘못되었습니다.'+\n                            (typeof userOpts[key])+'=>'+optionCheckMap[key]+'로 바꾸어주세요');\n                    }\n                }else{\n                    printErrType('OPTION');\n                    console.error('사용할 수 없는 옵션 키 값('+key+')이 포함되어 있습니다.');\n                }\n                switch (key) {\n                    case 'tiltAngle':\n                        if(!(0<=userOpts['tiltAngle'] && userOpts['tiltAngle']<=90)){\n                            printErrType('OPTION');\n                            console.error('tiltAngle 0이상 90이하의 값만 사용할 수 있습니다. 현재값:'+userOpts['tiltAngle']);\n                        }\n                        break;\n                    case 'floorControllerPosition':\n                    case 'zoomControllerPosition':\n                        if(!positionCheckMap[userOpts[key]]){\n                            console.log('positionCheckFailed');\n                            printErrType('OPTION');\n                            console.error(key+' 의 옵션값 ('+userOpts[key]+') 은 사용할 수 없습니다.');\n                        }\n                        break;\n                }\n            }\n            //merge defaultOpts + userOpts => opts\n            $.extend(opts,userOpts);\n        }\n        //positioning helper\n        var controllerOffset = 20;\n        var controllerPositionCss = {\n            'topleft':{\n                'position':'absolute',\n                'top':controllerOffset,\n                'left':controllerOffset\n            },\n            'topright':{\n                'position':'absolute',\n                'top':controllerOffset,\n                'right':controllerOffset\n            },\n            'bottomleft':{\n                'position':'absolute',\n                'bottom':controllerOffset,\n                'left':controllerOffset\n            },\n            'bottomright':{\n                'position':'absolute',\n                'bottom':controllerOffset,\n                'right':controllerOffset\n            }\n        };\n        //==================== inject container DIV ====================\n        var $container = $('<div></div>');\n        $container.css({'position':'relative', 'width':'100%', 'height':'100%',\n            'background-color':'#'+opts.backgroundColor.toString(16)});\n        $parent.append($container);\n        //==================== initialize IndoorMap_core ====================\n        var IMC = require('./IndoorMap_core.js')($,window,$container,opts);\n\n        //==================== initialize controller UI ====================\n        var $zoomController = null;\n        var $zoomInBtn = null;\n        var $zoomOutBtn = null;\n        if(opts.zoomController){\n            var $zoomBtn = $('<div class=\"IndoorMap-zoomBtn\"></div>').css({'display':'block'});\n            $zoomInBtn = $zoomBtn.clone().text('+').addClass('IndoorMap-zoomInBtn');\n            $zoomOutBtn = $zoomBtn.clone().text('−').addClass('IndoorMap-zoomOutBtn');\n            $zoomController = $('<div></div>').append($zoomInBtn).append($zoomOutBtn);\n            if(opts.zoomControllerCustomClass){\n                $zoomInBtn.addClass(opts.zoomControllerCustomClass);\n                $zoomOutBtn.addClass(opts.zoomControllerCustomClass);\n            }\n            $zoomController.css(controllerPositionCss[opts.zoomControllerPosition]);\n            $container.append($zoomController);\n        }\n        //==================== subClass =====================\n        var icon = require('./IndoorMap_icon.js')($,window);\n        var defaultIcon = icon();\n        var marker = require('./IndoorMap_marker.js')($,window,defaultIcon);\n        //==================== functions to be consumed ====================\n        function load(mapData){\n            var loadPromise = new Promise(function(resolve,reject){\n                if(mapData.constructor == String){\n                    $.getJSON(mapData)\n                        .done(function(data){\n                            loadPromise = loadMapData(data,function(){resolve()});\n                        })\n                        .fail(function(data){\n                            if(data.statusText == 'OK'){\n                                printErrType('LOAD');\n                                console.error('JSON파일 로딩은 성공하였으나 파싱하는데 에러가 발생했습니다.(invalid JSON)');\n                            }else{\n                                printErrType('LOAD');\n                                console.error(\"'\"+mapData+\"' 를 로드할 수 없습니다.\")\n                            }\n                        });\n                }else{\n                    loadMapData(data,resolve);\n                }\n            });\n            return chainObjFactory(loadPromise);\n        }\n\n        var $floorController = null;\n        function loadMapData(mapData,cb){\n            IMC.load(mapData);\n            //---------- append floorController ----------\n            if(opts.floorController){\n                if(opts.floorController){\n                    $floorController = $('<div></div>').css(controllerPositionCss[opts.floorControllerPosition]);\n                    if(opts.floorControllerCustomClass) $floorController.addClass(opts.floorControllerCustomClass);\n                    $container.append($floorController);\n                }\n                var $floorBtn = $('<div class=\"IndoorMap-floorBtn\"></div>');\n                for(var i=0;i<mapData.floors.length;i++){\n                    var targetFloor = mapData.floors[i];\n                    var $newFloorBtn = $floorBtn.clone().text(targetFloor.name);\n                    $floorController.append($newFloorBtn);\n                    $newFloorBtn.on('mousedown',\n                        (function(floor){\n                            return function(e){\n                                IMC.changeFloor(floor);\n                            }\n                        })(targetFloor.floor)\n                    );\n                }\n            }\n            //---------- set eventHandlers ----------\n            var dragging = false;\n            var tabPossibility = 0;  //사용자가 tab or click을 의도했을 확률\n            var INITIAL_TAB_POSSIBILITY = 5;\n            //button handlers\n            $zoomInBtn.on('mousedown',function(e){\n                IMC.stepZoom(null,opts.zoomStep,opts.zoomAnimation);\n            });\n            $zoomOutBtn.on('mousedown',function(e){\n                IMC.stepZoom(null,-opts.zoomStep,opts.zoomAnimation);\n            });\n            //mouse translate\n            IMC.markerLayer.on('mousedown',function(e){\n                if(IMC.isPointInMap(e.pageX,e.pageY)){\n                    tabPossibility = INITIAL_TAB_POSSIBILITY;\n                    dragging = true;\n                    var mapPoint = IMC.pagePoint2Map(e.pageX,e.pageY);\n                    // IMC.test(e.pageX,e.pageY); //TODO must remove this test line\n                    IMC.interaction.init([mapPoint]);\n                    e.preventDefault();\n                }\n            });\n            IMC.markerLayer.on('mousemove',function(e){\n                if(dragging){\n                    tabPossibility--;\n                    var mapPoint = IMC.pagePoint2Map(e.pageX,e.pageY);\n                    IMC.interaction.interact([mapPoint]);\n                    e.preventDefault();\n                }else{\n                    //block interactions\n                    IMC.interactionWithBlocks('mousemove',IMC.pagePoint2Map(e.pageX,e.pageY));\n                }\n            });\n            $(window).on('mouseup',function(e){\n                if(dragging) {\n                    dragging = false;\n                    if(tabPossibility>0) IMC.interactionWithBlocks('click',IMC.pagePoint2Map(e.pageX,e.pageY));\n                }\n            });\n            //mouse zoom (scroll)\n            if(opts.zoomOnMouseWheel){\n                IMC.markerLayer.on('mousewheel',function(e){\n                    var event = e.originalEvent;\n                    if(event.wheelDelta){\n                        IMC.stepZoom(IMC.pagePoint2Map(e.pageX,e.pageY),event.wheelDelta/10);\n                        e.preventDefault();\n                    }\n                });\n            }\n            //touch translate, zoom, pinch\n            var prevFingersNum = 0;\n            IMC.markerLayer.on('touchstart',function(e){\n                var event = e.originalEvent;\n                var mapPoints = IMC.pageTouches2Maps(event.touches);\n\n                //tabPossibility control\n                var currFingersNum = mapPoints.length;\n                if(prevFingersNum == 0) tabPossibility = INITIAL_TAB_POSSIBILITY;\n                if(currFingersNum > 1) tabPossibility = 0;\n                prevFingersNum = currFingersNum;\n\n                IMC.interaction.init(mapPoints);\n                if(mapPoints.length>1) tabPossibility = 0;\n                e.preventDefault();\n            });\n            IMC.markerLayer.on('touchmove',function(e){\n                var event = e.originalEvent;\n                var mapPoints = IMC.pageTouches2Maps(event.touches);\n\n                //tabPossibility control\n                tabPossibility--;\n\n                IMC.interaction.interact(mapPoints);\n                e.preventDefault();\n            });\n            IMC.markerLayer.on('touchend',function(e){\n                var event = e.originalEvent;\n                var mapPoints = IMC.pageTouches2Maps(event.touches);\n\n                //tabPossibility control\n                var currFingersNum = mapPoints.length;\n                console.log(tabPossibility);\n                if(tabPossibility>0) IMC.interactionWithBlocks('click',IMC.pagePoint2Map(e.pageX,e.pageY));\n                prevFingersNum = currFingersNum;\n\n                IMC.interaction.init(mapPoints);\n                e.preventDefault();\n            });\n            cb();\n        }\n\n        function setMarker(position,opts){\n            //apply scaleFactor\n            for(var i=0;i<position.length;i++){\n                position[i] /= IMC.getCurrentMap().scaleFactor;\n            }\n            var newMarker = marker(position,opts);\n            IMC.addMarker(newMarker,opts);\n            return newMarker;\n        }\n        function removeMarker(marker){\n            IMC.removeMarker(marker);\n        }\n        function removeMarkersOn(floor){\n            IMC.removeMarkersOn(floor);\n        }\n        function removeAllMarkers(){\n            IMC.removeAllMarkers();\n        }\n        function setSpray(position, opts){\n            IMC.setSpray(position, opts);\n        }\n        function removeSpraysOn(floor){\n            IMC.removeSpraysOn(floor);\n        }\n        function removeAllSprays(){\n            IMC.removeAllSprays();\n        }\n        function setPolyline(points,opts){\n            //polyline의 points는 performance를 위해 IMC안에서 scaleFactor를 적용한다.\n            return IMC.setPolyline(points,opts);\n        }\n        function removePolyline(polyline){\n            IMC.removePolyline(polyline);\n        }\n        function removePolylinesOn(floor){\n            IMC.removePolylinesOn(floor);\n        }\n        function removeAllPolylines(){\n            IMC.removeAllPolylines();\n        }\n        function getBlock(id,floor){\n            return IMC.getBlock(id,floor);\n        }\n        function getBlocksOn(floor){\n            return IMC.getBlocksOn(floor);\n        }\n        function getAllBlocks(){\n            return IMC.getAllBlocks();\n        }\n        function setView(_zoomLevel, _center, _animation){\n            return new Promise(function(resolve,reject){\n                var centerVector = null;\n                if(_center){\n                    centerVector = IMC.Point(_center[0],_center[1]);\n                    //apply scaleFactor\n                    centerVector.multiplyScalar(1/IMC.getCurrentMap().scaleFactor);\n                }\n                IMC.setView(_zoomLevel, centerVector, _animation, resolve);\n            });\n        }\n        function setTiltAngle(_tiltAngle, _animation){\n            return new Promise(function(resolve,reject){\n                IMC.setTiltAngle(_tiltAngle, _animation, resolve);\n            });\n        }\n        function rotate(rotationAngle, center, animation){\n            if(center){\n                for(var i=0;i<center.length;i++){\n                    center[i]/=IMC.getCurrentMap().scaleFactor;\n                }\n            }else{\n                center = [null,null];\n            }\n            return new Promise(function(resolve,reject){\n                IMC.externalRotate(rotationAngle,center,animation,resolve);\n            });\n        }\n        //==================== helpers ====================\n        function printErrType(type){\n            switch(type){\n                case 'OPTION':\n                    console.error('--- IndoorMap() 옵션 에러 ---');\n                    break;\n                case 'LOAD':\n                    console.error('--- .load() 에러 ---');\n                    break;\n            }\n        }\n        var self = {\n            load:load,\n            setView:setView,\n            setTiltAngle:setTiltAngle,\n            rotate:rotate,\n            icon:icon,\n            setPolyline:setPolyline,\n            removePolyline:removePolyline,\n            removeAllPolylines:removeAllPolylines,\n            removePolylinesOn:removePolylinesOn,\n            setSpray:setSpray,\n            removeSpraysOn:removeSpraysOn,\n            removeAllSprays:removeAllSprays,\n            setMarker:setMarker,\n            removeMarker:removeMarker,\n            removeMarkersOn:removeMarkersOn,\n            removeAllMarkers:removeAllMarkers,\n            getBlock:getBlock,\n            getBlocksOn:getBlocksOn,\n            getAllBlocks:getAllBlocks\n        };\n        function chainObjFactory(promise){\n            var chainingObj = {};\n            var chainableMethods = ['load','setView','setTiltAngle','rotate'];\n            for(var i=0;i<chainableMethods.length;i++){\n                chainingObj[chainableMethods[i]] = (function(methodName){\n                    return function(){\n                        var args = arguments;\n                        var chainingPromise = new Promise(function(resolve,reject){\n                            promise.then(function(){\n                                var nextPromise = self[methodName].apply(self,args);\n                                nextPromise.then(function(){\n                                    resolve();\n                                });\n                            });\n                        });\n                        return chainObjFactory(chainingPromise);\n                    };\n                })(chainableMethods[i]);\n            }\n            chainingObj.done = function(cb){\n                var chainingPromise = new Promise(function(resolve,reject){\n                    promise.then(function(){\n                        cb.apply(self,[resolve]);\n                    });\n                });\n                return chainObjFactory(chainingPromise);\n            };\n            chainingObj.delay = function(delayTime){\n                var chainingPromise = new Promise(function(resolve,reject){\n                    promise.then(function(){\n                        setTimeout(function(){resolve();},delayTime);\n                    });\n                });\n                return chainObjFactory(chainingPromise);\n            };\n            return chainingObj;\n        }\n        return self;\n    };\n})(jQuery,window);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IndoorMap.js\n ** module id = 0\n ** module chunks = 0 1\n **/","(function() {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n        window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\n            || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n                timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n}());\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/requestAnimationFramePolyfill.js\n ** module id = 1\n ** module chunks = 0 1\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./IndoorMapStyle.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./IndoorMapStyle.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./IndoorMapStyle.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IndoorMapStyle.scss\n ** module id = 2\n ** module chunks = 0 1\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".IndoorMap-zoomBtn{background-color:#fff;border:1px solid #dcdcdc;cursor:pointer;color:#666;font-family:Arial;font-size:28px;padding:0 8px;text-decoration:none;text-shadow:0 1px 0 #fff;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.IndoorMap-zoomInBtn{border-bottom:none;border-radius:3px 3px 0 0}.IndoorMap-zoomOutBtn{border-radius:0 0 3px 3px}.IndoorMap-zoomBtn:hover{background-color:#f6f6f6}.IndoorMap-zoomBtn:active{box-shadow:inset 0 0 11px -1px hsla(0,0%,67%,.32)}.IndoorMap-floorBtn{background-color:#fff;border:1px solid #dcdcdc;border-bottom:none;cursor:pointer;color:#666;font-family:Arial;font-size:14px;font-weight:700;padding:6px 8px;text-decoration:none;text-shadow:0 1px 0 #fff;text-align:center;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.IndoorMap-floorBtn:first-child{border-radius:3px 3px 0 0}.IndoorMap-floorBtn:last-child{border-radius:0 0 3px 3px;border-bottom:1px solid #dcdcdc}.IndoorMap-floorBtn:hover{background-color:#f6f6f6}.IndoorMap-floorBtn:active{box-shadow:inset 0 0 11px -1px hsla(0,0%,67%,.32)}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/sass-loader!./src/IndoorMapStyle.scss\n ** module id = 3\n ** module chunks = 0 1\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 4\n ** module chunks = 0 1\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 5\n ** module chunks = 0 1\n **/","'use strict';\n\nmodule.exports = require('./lib')\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/index.js\n ** module id = 6\n ** module chunks = 0 1\n **/","'use strict';\n\nmodule.exports = require('./core.js');\nrequire('./done.js');\nrequire('./finally.js');\nrequire('./es6-extensions.js');\nrequire('./node-extensions.js');\nrequire('./synchronous.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/index.js\n ** module id = 7\n ** module chunks = 0 1\n **/","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/core.js\n ** module id = 8\n ** module chunks = 0 1\n **/","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\nvar BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/asap/browser-raw.js\n ** module id = 9\n ** module chunks = 0 1\n **/","'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this;\n  self.then(null, function (err) {\n    setTimeout(function () {\n      throw err;\n    }, 0);\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/done.js\n ** module id = 10\n ** module chunks = 0 1\n **/","'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype['finally'] = function (f) {\n  return this.then(function (value) {\n    return Promise.resolve(f()).then(function () {\n      return value;\n    });\n  }, function (err) {\n    return Promise.resolve(f()).then(function () {\n      throw err;\n    });\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/finally.js\n ** module id = 11\n ** module chunks = 0 1\n **/","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/es6-extensions.js\n ** module id = 12\n ** module chunks = 0 1\n **/","'use strict';\n\n// This file contains then/promise specific extensions that are only useful\n// for node.js interop\n\nvar Promise = require('./core.js');\nvar asap = require('asap');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  if (\n    typeof argumentCount === 'number' && argumentCount !== Infinity\n  ) {\n    return denodeifyWithCount(fn, argumentCount);\n  } else {\n    return denodeifyWithoutCount(fn);\n  }\n}\n\nvar callbackFn = (\n  'function (err, res) {' +\n  'if (err) { rj(err); } else { rs(res); }' +\n  '}'\n);\nfunction denodeifyWithCount(fn, argumentCount) {\n  var args = [];\n  for (var i = 0; i < argumentCount; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'return new Promise(function (rs, rj) {',\n    'var res = fn.call(',\n    ['self'].concat(args).concat([callbackFn]).join(','),\n    ');',\n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n  return Function(['Promise', 'fn'], body)(Promise, fn);\n}\nfunction denodeifyWithoutCount(fn) {\n  var fnLength = Math.max(fn.length - 1, 3);\n  var args = [];\n  for (var i = 0; i < fnLength; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'var args;',\n    'var argLength = arguments.length;',\n    'if (arguments.length > ' + fnLength + ') {',\n    'args = new Array(arguments.length + 1);',\n    'for (var i = 0; i < arguments.length; i++) {',\n    'args[i] = arguments[i];',\n    '}',\n    '}',\n    'return new Promise(function (rs, rj) {',\n    'var cb = ' + callbackFn + ';',\n    'var res;',\n    'switch (argLength) {',\n    args.concat(['extra']).map(function (_, index) {\n      return (\n        'case ' + (index) + ':' +\n        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +\n        'break;'\n      );\n    }).join(''),\n    'default:',\n    'args[argLength] = cb;',\n    'res = fn.apply(self, args);',\n    '}',\n    \n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n\n  return Function(\n    ['Promise', 'fn'],\n    body\n  )(Promise, fn);\n}\n\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback =\n      typeof args[args.length - 1] === 'function' ? args.pop() : null;\n    var ctx = this;\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx);\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) {\n          reject(ex);\n        });\n      } else {\n        asap(function () {\n          callback.call(ctx, ex);\n        })\n      }\n    }\n  }\n}\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this;\n\n  this.then(function (value) {\n    asap(function () {\n      callback.call(ctx, null, value);\n    });\n  }, function (err) {\n    asap(function () {\n      callback.call(ctx, err);\n    });\n  });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/node-extensions.js\n ** module id = 13\n ** module chunks = 0 1\n **/","\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/asap/browser-asap.js\n ** module id = 14\n ** module chunks = 0 1\n **/","'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.enableSynchronous = function () {\n  Promise.prototype.isPending = function() {\n    return this.getState() == 0;\n  };\n\n  Promise.prototype.isFulfilled = function() {\n    return this.getState() == 1;\n  };\n\n  Promise.prototype.isRejected = function() {\n    return this.getState() == 2;\n  };\n\n  Promise.prototype.getValue = function () {\n    if (this._81 === 3) {\n      return this._65.getValue();\n    }\n\n    if (!this.isFulfilled()) {\n      throw new Error('Cannot get a value of an unfulfilled promise.');\n    }\n\n    return this._65;\n  };\n\n  Promise.prototype.getReason = function () {\n    if (this._81 === 3) {\n      return this._65.getReason();\n    }\n\n    if (!this.isRejected()) {\n      throw new Error('Cannot get a rejection reason of a non-rejected promise.');\n    }\n\n    return this._65;\n  };\n\n  Promise.prototype.getState = function () {\n    if (this._81 === 3) {\n      return this._65.getState();\n    }\n    if (this._81 === -1 || this._81 === -2) {\n      return 0;\n    }\n\n    return this._81;\n  };\n};\n\nPromise.disableSynchronous = function() {\n  Promise.prototype.isPending = undefined;\n  Promise.prototype.isFulfilled = undefined;\n  Promise.prototype.isRejected = undefined;\n  Promise.prototype.getValue = undefined;\n  Promise.prototype.getReason = undefined;\n  Promise.prototype.getState = undefined;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/synchronous.js\n ** module id = 15\n ** module chunks = 0 1\n **/","'use strict';\n\nmodule.exports = (function() {\n  var c = document.createElement('canvas');\n  try {\n    return !!window.WebGLRenderingContext\n      && (!!c.getContext('experimental-webgl') || !!c.getContext('webgl'));\n  } catch (e) {\n    return null;\n  }\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/detector-webgl/index.js\n ** module id = 16\n ** module chunks = 0 1\n **/","//dependencies\nvar THREE=require('./three.min.js');\nvar TWEEN=require('tween.js');\nvar Promise=require('promise');\n//---------- sub classes ----------\n//sprayFactory needs maps, mapObjects\nvar sprayFactory = require('./IndoorMap_spray.js');\nvar spray;\nvar blockFactory = require('./IndoorMap_block.js');\nvar block;\n\n\nmodule.exports = function($,window,$container,opts) {\n    //---------- animation queues ----------\n    var zoomTween = new TWEEN.Tween();\n    var translationTween = new TWEEN.Tween();\n    var rotationTween = new TWEEN.Tween();\n    var zoomTranTween = new TWEEN.Tween();\n    var tiltTween = new TWEEN.Tween();\n    function cancelTweens(){\n        zoomTween.stop();\n        translationTween.stop();\n        zoomTranTween.stop();\n        rotationTween.stop();\n        // tiltTween.stop();\n    }\n    //---------- renderer ----------\n    var renderer = new THREE.WebGLRenderer( );\n    renderer.setClearColor(opts.backgroundColor, 1);\n    //---------- canvas ----------\n    var $canvas = $(renderer.domElement);\n    $canvas.hide();\n    $container.append($canvas);\n    $canvas.addClass('IndoorMap-canvas');\n    var cOffset, cWidth, cHeight;\n    function fitCanvas(){\n        cWidth = $container.width();\n        cHeight = $container.height();\n        renderer.setSize(cWidth*2,cHeight*2);\n        $canvas.css('width',cWidth);\n        $canvas.css('height',cHeight);\n        cOffset = $canvas.offset();\n        camera.aspect = cWidth/cHeight;\n        needRepositionMarkers = true;\n        camera.updateProjectionMatrix();\n    }\n    //---------- markerLayer -----------\n    var $markerLayer = $('<div></div>').css({\n        'position':'absolute',\n        'top':'0',\n        'left':'0',\n        'width':'100%',\n        'height':'100%',\n        'overflow':'hidden'\n    });\n    $container.append($markerLayer);\n\n    //---------- scene -----------\n    var scene = new THREE.Scene();\n\n    //---------- camera ----------\n    var fov = 45;\n    var zoomValue = opts.zoomValue;\n    var camera = new THREE.PerspectiveCamera(fov,1600/1000,0.1,100000);\n    var tiltAngle = opts.tiltAngle*Math.PI/180;\n    var cameraDistance = 8000;\n    var lookAtVector = new THREE.Vector3(0,0,0);\n    var cameraViewVector = new THREE.Vector3(0,\n            -cameraDistance*Math.sin(tiltAngle),\n            -cameraDistance*Math.cos(tiltAngle));//camera->lookAt vector\n    camera.position.set(\n        lookAtVector.x-cameraViewVector.x,\n        lookAtVector.y-cameraViewVector.y,\n        lookAtVector.z-cameraViewVector.z\n    );\n    camera.lookAt(lookAtVector);\n\n    //lights\n    var aLight = new THREE.AmbientLight(0xffffff,0.5);\n    scene.add(aLight);\n    var dLight = new THREE.DirectionalLight(0xffffff,0.7);\n    dLight.position.set(1,1,-1);\n    scene.add(dLight);\n\n    //---------- load ----------\n    var maps = {};\n    var mapObjects = {};\n    var currentFloor = null;\n    var currentBlocksObject = null;\n    var defaultFloor = null;\n    var preProcessor = require('./IndoorMap_preprocessor.js');\n    //--------- sprayFactory creates spray class with maps, mapObjects ---------- delegation technique\n    spray = sprayFactory(maps,mapObjects,$);\n    block = blockFactory(maps,mapObjects,TWEEN);\n\n    function load(mapData){\n        //need correct canvas size to calculate camera aspect (r) in getInitialCameraDistance()\n        cWidth = $container.width();\n        cHeight = $container.height();\n        cOffset = $container.offset();\n        //-------------------------------------------------------------------------------------\n        mapData = preProcessor(mapData,$);  //$ is needed for $.extend dependncy\n        for(var i=0;i<mapData.floors.length;i++){\n            var floorData = mapData.floors[i];\n            floorData.polylines = [];\n            floorData.sprays = [];\n            floorData.blocksWithId = [];\n            floorData.markers = [];\n            floorData.markerContainer = $markerLayer.clone();\n            floorData.markerContainer.hide();\n            floorData.boundary = { minX:9999999999,minZ:9999999999,maxX:0,maxZ:0 };\n\n            $markerLayer.append(floorData.markerContainer);\n\n            maps[floorData.floor] = floorData;\n\n            mapObjects[floorData.floor] = new THREE.Object3D();\n\n            var blocksObject = new THREE.Object3D();\n            blocksObject.name = 'blocks';\n            mapObjects[floorData.floor].add(blocksObject);\n\n            var spraysObject = new THREE.Object3D();\n            spraysObject.name = 'sprays';\n            mapObjects[floorData.floor].add(spraysObject);\n\n            var polylinesObject = new THREE.Object3D();\n            polylinesObject.name = 'polylines';\n            mapObjects[floorData.floor].add(polylinesObject);\n\n            var blockDatas = floorData.blocks;\n\n            function resetBoundary(b,x,z){\n                b.minX=(x<b.minX)?x:b.minX;\n                b.minZ=(z<b.minZ)?z:b.minZ;\n                b.maxX=(x>b.maxX)?x:b.maxX;\n                b.maxZ=(z>b.maxZ)?z:b.maxZ;\n            }\n            //blocks\n            for(var j=0;j<blockDatas.length;j++){\n                var blockData = blockDatas[j];\n                var newBlock = block(j, blockData, floorData.floor, floorData);\n\n                //spray on block\n                var newSpray = null;\n                if(blockData.spray){\n                    var blockW = newBlock.boundary.maxX - newBlock.boundary.minX;\n                    var blockH = newBlock.boundary.maxZ - newBlock.boundary.minZ;\n                    var blockCenterX = newBlock.boundary.minX + blockW/2;\n                    var blockCenterZ = newBlock.boundary.minZ + blockH/2;\n                    var sprayX = (blockData.sprayOffset)? blockCenterX + blockData.sprayOffset[0] : blockCenterX;\n                    var sprayZ = (blockData.sprayOffset)? blockCenterZ + blockData.sprayOffset[1] : blockCenterZ;\n\n                    var sprayScale = 0.6;\n                    if(floorData.defaultSprayScale) sprayScale = floorData.defaultSprayScale;\n                    if(blockData.sprayScale) sprayScale = blockData.sprayScale;\n\n                    newSpray = spray([sprayX,sprayZ,newBlock.originalHeight],{\n                        image:blockData.spray,\n                        size:[blockW*sprayScale],\n                        floor:floorData.floor\n                    },currentFloor,true);\n\n                    newBlock.setSpray(newSpray);\n                    floorData.sprays.push(newSpray);\n                }\n\n                floorData.blocksWithId.push(newBlock);\n            }\n            floorData.initialCameraDistance = getInitialCameraDistance(floorData.boundary);\n            //basePlate\n            if(floorData.basePlate){\n                var boundary = floorData.boundary;\n                var basePlateWidth = boundary.maxX-boundary.minX\n                    +2*floorData.basePlateOffset;\n                var basePlateHeight = boundary.maxZ-boundary.minZ\n                    +2*floorData.basePlateOffset;\n                var basePlateGeom = new THREE.BoxGeometry(basePlateWidth,floorData.basePlateHeight,basePlateHeight);\n                var basePlateMaterial = new THREE.MeshLambertMaterial({color:parseInt(floorData.basePlateColor,16)});\n                var basePlate = new THREE.Mesh(basePlateGeom,basePlateMaterial);\n                basePlate.position.set(basePlateWidth/2+boundary.minX-floorData.basePlateOffset,\n                    -floorData.basePlateHeight/2,\n                    basePlateHeight/2+boundary.minZ-floorData.basePlateOffset);\n                mapObjects[floorData.floor].add(basePlate);\n            }\n        }\n        defaultFloor = mapData.defaultFloor;\n        changeFloor(defaultFloor);\n\n        resetCameraToInitialState();\n\n        render();\n        $canvas.show();\n        fitCanvas();\n        if(opts.autoFit) $(window).resize(function(e){fitCanvas()});\n    }\n    function getInitialCameraDistance(floorBoundary){\n        var w = floorBoundary.maxX-floorBoundary.minX; //floor width\n        var h = floorBoundary.maxZ-floorBoundary.minZ; //floor height\n        var r = cWidth/cHeight;\n        var theta = fov * Math.PI / 180;\n        return w/(2*r*Math.tan(theta/2))+h/2*Math.cos(tiltAngle);\n    }\n    //view를 floor중앙으로 설정 & zoomValue=100으로\n    function resetCameraToInitialState(){\n        var floorBoundary = maps[currentFloor].boundary;\n        var floorCenterVector = Point((floorBoundary.minX+floorBoundary.maxX)/2,\n            (floorBoundary.minZ+floorBoundary.maxZ)/2);\n        zoomValue = 100;\n        setView(zoomValue,floorCenterVector);\n    }\n    //==================== change Floor ====================\n    function changeFloor(newFloor){\n        if(currentFloor != newFloor){\n            if(currentFloor){\n                scene.remove(mapObjects[currentFloor]);\n                maps[currentFloor].markerContainer.hide();\n            }\n            currentFloor = newFloor;\n            currentBlocksObject = mapObjects[currentFloor].getObjectByName('blocks');\n            resetCameraToInitialState();\n            scene.add(mapObjects[currentFloor]);\n            maps[currentFloor].markerContainer.show();\n            if(opts.onFloorChanged) opts.onFloorChanged(currentFloor);\n            needRepositionMarkers = true;\n        }\n    }\n    //==================== transforms =====================\n    var needRepositionMarkers = false;\n    function resetDLight(_lookAtVector,_cameraViewVector){\n        var dLightVector = _cameraViewVector.clone().multiplyScalar(-1);\n        dLightVector.applyAxisAngle(yAxis,-Math.PI/6);\n        dLight.position.set(dLightVector.x, dLightVector.y, dLightVector.z);\n    }\n\n    function limitZoomValue(newZoomValue){\n        if(newZoomValue < opts.minZoom){\n            newZoomValue = opts.minZoom;\n        } else if (newZoomValue > opts.maxZoom){\n            newZoomValue = opts.maxZoom;\n        } else {\n            //do nothing\n        }\n        return newZoomValue;\n    }\n    function setView(newZoomValue,newLookAtVector,animation,cb){\n        if(!animation){\n            //animation disabled\n            if(newZoomValue){\n                //set camera distance\n                newZoomValue = limitZoomValue(newZoomValue);\n                zoomValue = newZoomValue;\n                cameraDistance = maps[currentFloor].initialCameraDistance / (zoomValue/100);\n                cameraViewVector.setLength(cameraDistance);\n                resetDLight(lookAtVector,cameraViewVector);\n                needRepositionMarkers = true;\n                camera.position.set(\n                    lookAtVector.x - cameraViewVector.x,\n                    lookAtVector.y - cameraViewVector.y,\n                    lookAtVector.z - cameraViewVector.z\n                );\n            }\n            if(newLookAtVector){\n                //set camera position & lookAt vector\n                lookAtVector = newLookAtVector;\n                limitTranslation(lookAtVector,currentFloor);\n                resetDLight(lookAtVector,cameraViewVector);\n                needRepositionMarkers = true;\n                camera.position.set(\n                    lookAtVector.x - cameraViewVector.x,\n                    lookAtVector.y - cameraViewVector.y,\n                    lookAtVector.z - cameraViewVector.z\n                );\n            }\n            if(cb) cb();\n        }else{\n            //animation enabled\n            cancelTweens();\n            if(newZoomValue && newLookAtVector){\n                //animate both\n                var newZoomValue = limitZoomValue(newZoomValue);\n                zoomTranTween = new TWEEN\n                    .Tween({\n                        zoomValue:zoomValue,\n                        x:lookAtVector.x, y:lookAtVector.y, z:lookAtVector.z\n                    })\n                    .to({\n                        zoomValue:newZoomValue,\n                        x:newLookAtVector.x, y:newLookAtVector.y, z:newLookAtVector.z\n                    },animation)\n                    .onUpdate(function(){\n                        setView(this.zoomValue, new THREE.Vector3(this.x, this.y, this.z));\n                        resetDLight(lookAtVector,cameraViewVector);\n                        needRepositionMarkers = true;\n                    });\n                if(cb) zoomTranTween.onComplete(cb);\n                if(cb) zoomTranTween.onStop(cb);\n                zoomTranTween.start();\n            }else if(newZoomValue){\n                //animate zoom\n                newZoomValue = limitZoomValue(newZoomValue);\n                zoomTween = new TWEEN.Tween({zoomValue:zoomValue})\n                    .to({zoomValue:newZoomValue},animation)\n                    .onUpdate(function(){\n                        setView(this.zoomValue);\n                        resetDLight(lookAtVector,cameraViewVector);\n                        needRepositionMarkers = true;\n                    });\n                if(cb) zoomTween.onComplete(cb);\n                if(cb) zoomTween.onStop(cb);\n                zoomTween.start();\n            }else if(newLookAtVector){\n                //animate translation\n                limitTranslation(newLookAtVector,currentFloor);\n                translationTween = new TWEEN.Tween({x:lookAtVector.x, y:lookAtVector.y, z:lookAtVector.z})\n                    .to({\n                        x:newLookAtVector.x,\n                        y:newLookAtVector.y,\n                        z:newLookAtVector.z\n                    },animation)\n                    .onUpdate(function(){\n                        setView(null,new THREE.Vector3(this.x, this.y, this.z));\n                        resetDLight(lookAtVector,cameraViewVector);\n                        needRepositionMarkers = true;\n                    });\n                if(cb) translationTween.onComplete(cb);\n                if(cb) translationTween.onStop(cb);\n                translationTween.start();\n            }\n        }\n    }\n    //setTiltAngle\n    function setTiltAngle(newTiltAngle, animation, cb){\n        cancelTweens();\n        var initialUnitVector = null;\n        var rotationVector = null;\n        var cameraViewVectorInv = cameraViewVector.clone().multiplyScalar(-1);\n        var cameraViewVectorLength = cameraViewVectorInv.length();\n\n        if(0<=newTiltAngle && newTiltAngle<=90){\n            if(newTiltAngle == 90) newTiltAngle = 89.98;\n            if(newTiltAngle == 0) newTiltAngle = 0.02;\n            if(tiltAngle==90){\n                initialUnitVector = new THREE.Vector3(0,0,1);\n                rotationVector = initialUnitVector.clone().applyAxisAngle(yAxis,-Math.PI/2);\n            }else{\n                initialUnitVector = new THREE.Vector3(cameraViewVectorInv.x, 0, cameraViewVectorInv.z).normalize();\n                rotationVector = initialUnitVector.clone().applyAxisAngle(yAxis,-Math.PI/2);\n            }\n            if(!animation){\n                cameraViewVectorInv = initialUnitVector\n                    .clone()\n                    .applyAxisAngle(rotationVector, newTiltAngle*Math.PI/180)\n                    .setLength(cameraViewVectorLength);\n                cameraViewVector = cameraViewVectorInv.multiplyScalar(-1);\n                camera.position.set(\n                    lookAtVector.x - cameraViewVector.x,\n                    lookAtVector.y - cameraViewVector.y,\n                    lookAtVector.z - cameraViewVector.z\n                );\n                camera.lookAt(lookAtVector);\n                resetDLight(lookAtVector,cameraViewVector);\n                needRepositionMarkers = true;\n            }else{\n                cameraViewVectorInv = initialUnitVector\n                    .clone()\n                    .applyAxisAngle(rotationVector, newTiltAngle*Math.PI/180)\n                    .setLength(cameraViewVectorLength);\n                var newCameraViewVector = cameraViewVectorInv.multiplyScalar(-1);\n                tiltTween = new TWEEN\n                    .Tween({\n                        x:cameraViewVector.x,\n                        y:cameraViewVector.y,\n                        z:cameraViewVector.z\n                    })\n                    .to({\n                        x:newCameraViewVector.x,\n                        y:newCameraViewVector.y,\n                        z:newCameraViewVector.z\n                    },animation)\n                    .onUpdate(function(){\n                        cameraViewVector.set(this.x,this.y,this.z);\n                        camera.position.set(\n                            lookAtVector.x - this.x,\n                            lookAtVector.y - this.y,\n                            lookAtVector.z - this.z\n                        );\n                        camera.lookAt(lookAtVector);\n                        resetDLight(lookAtVector,cameraViewVector);\n                        needRepositionMarkers = true;\n                    });\n                if(cb) tiltTween.onComplete(cb);\n                if(cb) tiltTween.onStop(cb);\n                tiltTween.start();\n            }\n        }else{\n            console.error('setTiltAngle()의 argument는 0이상 90이하의 값만 가질 수 있습니다.');\n        }\n    }\n\n    //translate\n    function translate(prev,curr){\n        var offset = prev.clone().sub(curr.clone()); //current -> previous\n        lookAtVector = lookAtVector.clone().add(offset);\n\n        limitTranslation(lookAtVector, currentFloor);\n\n        var cameraPositionVector = lookAtVector.clone().sub(cameraViewVector);\n        resetDLight(lookAtVector,cameraViewVector);\n        camera.position.x = cameraPositionVector.x;\n        camera.position.z = cameraPositionVector.z;\n        needRepositionMarkers = true;\n    }\n\n    //rotation\n    var yAxis = new THREE.Vector3(0,1,0);\n    function rotate(centerX, centerZ, rad){\n        if(!(centerX || centerZ)){\n            var centerVector = NDC2Intersection({x:0,y:0});\n            centerX = centerVector.x;\n            centerZ = centerVector.z;\n        }\n        var rotationCenter = new THREE.Vector3(centerX, 0, centerZ);\n        var offsetVector = lookAtVector.clone().sub(rotationCenter); //rotationCenter -> lookAt\n        var offsetVector_ = offsetVector.clone().applyAxisAngle(yAxis,-rad); //rotationCenter -> lookAt_\n        cameraViewVector.applyAxisAngle(yAxis,-rad);\n        lookAtVector.add(offsetVector.multiplyScalar(-1)).add(offsetVector_);\n        camera.position.x = lookAtVector.x - cameraViewVector.x;\n        camera.position.z = lookAtVector.z - cameraViewVector.z;\n        camera.lookAt(lookAtVector);\n        resetDLight(lookAtVector,cameraViewVector);\n        needRepositionMarkers = true;\n    }\n    function externalRotate(degree,center,animation,cb){\n        var rad = degree * Math.PI/180;\n        var centerX, centerZ;\n        if(center){\n            centerX = center[0]; centerZ = center[1];\n        }else{\n            centerX = null; centerZ = null;\n        }\n        if(animation && animation>0){\n            var prevRad = 0;\n            rotationTween = new TWEEN\n                .Tween({\n                    rad:0\n                })\n                .to({\n                    rad:rad\n                },animation)\n                .onUpdate(function(){\n                    var deltaRad = this.rad - prevRad;\n                    prevRad += deltaRad;\n                    rotate(centerX, centerZ, deltaRad);\n                });\n            if(cb) rotationTween.onComplete(cb);\n            if(cb) rotationTween.onStop(cb);\n            rotationTween.start();\n        }else{\n            rotate(centerX, centerZ, rad);\n            if(cb) cb();\n        }\n    }\n\n    //zoom\n    function zoom(centerX, centerZ, m){\n        var newZoomValue = m * zoomValue;\n        newZoomValue = limitZoomValue(newZoomValue);\n        m = newZoomValue/zoomValue;\n        zoomValue = newZoomValue;\n        var scaleCenterVector = new THREE.Vector3(centerX, 0, centerZ);\n        var offsetVector = lookAtVector.clone().sub(scaleCenterVector); //scaleCenterVector -> lookAtVector\n        lookAtVector.add(offsetVector.multiplyScalar(1/m-1));\n\n        limitTranslation(lookAtVector,currentFloor);\n\n        cameraViewVector.multiplyScalar(1/m);\n        resetDLight(lookAtVector,cameraViewVector);\n        camera.position.set(lookAtVector.x - cameraViewVector.x,lookAtVector.y - cameraViewVector.y, lookAtVector.z-cameraViewVector.z);\n        camera.lookAt(lookAtVector);\n        needRepositionMarkers = true;\n    }\n\n    //constraints translation\n    function limitTranslation(_lookAtVector, floor){\n        //constraints translation\n        if(opts.limitTranslation){\n            var floorBoundary = maps[floor].boundary;\n            if(_lookAtVector.x < floorBoundary.minX) _lookAtVector.x = floorBoundary.minX;\n            if(_lookAtVector.x > floorBoundary.maxX) _lookAtVector.x = floorBoundary.maxX;\n            if(_lookAtVector.z < floorBoundary.minZ) _lookAtVector.z = floorBoundary.minZ;\n            if(_lookAtVector.z > floorBoundary.maxZ) _lookAtVector.z = floorBoundary.maxZ;\n        }\n    }\n\n    //helper function for wheelZoom\n    function stepZoom(mapPoint, zoomStep, animation){\n        if(!mapPoint){\n            mapPoint = [cOffset.left+cWidth/2,cOffset.top+cHeight/2];\n        }\n        if(animation){\n            cancelTweens();\n            zoomTween = new TWEEN.Tween({zoomValue:zoomValue})\n                .to({zoomValue:zoomValue+zoomStep},animation)\n                .onUpdate(function(){\n                    setView(this.zoomValue);\n                }).start();\n        }else{\n            var newZoomValue = zoomValue + zoomStep;\n            var m = newZoomValue/zoomValue;\n            var zoomCenter = NDC2Intersection(map2NDC(mapPoint));\n            zoom(zoomCenter.x, zoomCenter.z, m);\n        }\n    }\n\n    //==================== interaction ====================\n    var interaction =(function(){\n        var prevPagePoints = [];\n\n        function init(points){\n            prevPagePoints = [];\n            for(var i=0;i<Math.min(2,points.length);i++){\n                prevPagePoints.push(points[i]);\n                // currPagePoints.push(NDC2Intersection(map2NDC(points[i])));\n            }\n        }\n        function interact(points){\n            if(prevPagePoints.length <= points.length){ // for safety\n                var currPagePoints = [];\n                for(var i=0;i<points.length;i++){\n                    currPagePoints.push(points[i]);\n                }\n                //calculate intersections\n                var prevIntersections = [];\n                var currIntersections = [];\n                for(var i=0;i<prevPagePoints.length;i++){\n                    prevIntersections.push(NDC2Intersection(map2NDC(prevPagePoints[i])));\n                    currIntersections.push(NDC2Intersection(map2NDC(currPagePoints[i])));\n                }\n                prevPagePoints = currPagePoints;\n                switch(prevPagePoints.length){\n                    case 1: //only translate\n                        translate(prevIntersections[0], currIntersections[0]);\n                        break;\n                    case 2: //translate & rotation & zoom\n                        //translate\n                        var prevCenter = prevIntersections[0].clone()\n                            .add(prevIntersections[1]).multiplyScalar(0.5);\n                        var currCenter = currIntersections[0].clone()\n                            .add(currIntersections[1]).multiplyScalar(0.5);\n\n                        translate(prevCenter, currCenter);\n\n                        var a = prevIntersections[1].clone().sub(prevIntersections[0]);\n                        var b = currIntersections[1].clone().sub(currIntersections[0]);\n                        var aLength = a.length();\n                        var bLength = b.length();\n\n                        if(aLength!=0 && bLength!=0){ //just for safety\n                            //rotation\n                            if(opts.twoFingerRotation){\n                                var na = a.clone().normalize();\n                                var nb = b.clone().normalize();\n                                var cosab = na.dot(nb);\n                                if(cosab>1) cosab = 1;\n                                else if(cosab<-1) cosab = -1;\n                                var theta;\n                                if(cosab == 1){\n                                    theta = 0;\n                                }else if(cosab == -1){\n                                    theta = Math.PI;\n                                }else{\n                                    theta = Math.acos(cosab);\n                                    var rotationAxis = na.cross(nb);\n                                    if(rotationAxis.y > 0){ //CCW\n                                        theta*=(+1); // for readibility\n                                    }else{\n                                        theta*=(-1);\n                                    }\n                                }\n                                rotate(prevCenter.x, prevCenter.z,theta);\n                            }\n\n                            //zoom\n                            if(opts.pinchZoom){\n                                zoom(prevCenter.x,prevCenter.z,bLength/aLength);\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n\n        return {\n            init:init,\n            interact:interact\n        }\n    })();\n    //==================== interactions with blocks ====================\n    var NULL_BLOCK = { blockObject:null };//smooth한 if문 처리를 위한 trick\n    var prevMouseOveredBlock = NULL_BLOCK;\n\n    function interactionWithBlocks(eventType,mapPoint){\n        raycaster.setFromCamera(map2NDC(mapPoint),camera);\n        var intersects = raycaster.intersectObject(currentBlocksObject,true);\n\n        switch(eventType){\n            case 'mousemove':\n                newMouseOveredBlock = NULL_BLOCK;\n                if(intersects.length>0){\n                    newMouseOveredBlock = intersects[0].object;\n                }\n                //onBlockMouseOut\n                if(prevMouseOveredBlock.blockObject && prevMouseOveredBlock.blockObject !== newMouseOveredBlock.blockObject){\n                    //prevMouseOveredBlock !== newMouseOveredBlock과 같이 직접 비교하지 못하는 이유는 색이나 높이 변경시 바뀌기 때문\n                    if(opts.onBlockMouseOut){\n                        opts.onBlockMouseOut.apply(prevMouseOveredBlock.blockObject,[prevMouseOveredBlock.data]);\n                    }\n                    if(prevMouseOveredBlock.blockObject.onMouseOut) {\n                        prevMouseOveredBlock.blockObject.onMouseOut();\n                    }\n                }\n                //onBlockMouseOver\n                if(newMouseOveredBlock.blockObject && newMouseOveredBlock.blockObject !== prevMouseOveredBlock.blockObject){\n                    if(opts.onBlockMouseOver){\n                        opts.onBlockMouseOver.apply(newMouseOveredBlock.blockObject,[newMouseOveredBlock.data]);\n                    }\n                    if(newMouseOveredBlock.blockObject.onMouseOver){\n                        newMouseOveredBlock.blockObject.onMouseOver();\n                    }\n                }\n                prevMouseOveredBlock = newMouseOveredBlock;\n                break;\n            case 'click':\n                if(intersects.length>0){\n                    var clickedBlock = intersects[0].object;\n                    if(opts.onBlockClick) {\n                        opts.onBlockClick.apply(clickedBlock.blockObject,[clickedBlock.data]);\n                    }\n                    if(clickedBlock.blockObject.onClick){\n                        clickedBlock.blockObject.onClick();\n                    }\n                }\n                break;\n        }\n    }\n    //==================== block manipulation ====================\n    function getBlock(id, floor){\n        floor = (floor)? floor : currentFloor;\n        var resultBlock = null;\n        for(var i=0; i<maps[floor].blocksWithId.length; i++){\n            if(maps[floor].blocksWithId[i].id == id){\n                resultBlock = maps[floor].blocksWithId[i];\n                break;\n            }\n        }\n        return resultBlock;\n    }\n    function getBlocksOn(floor){\n        floor = (floor)? floor : currentFloor;\n        return maps[floor].blocksWithId;\n    }\n    function getAllBlocks(){\n        var result = { };\n        for(var floor in maps){\n            result[floor] = maps[floor].blocksWithId;\n        }\n        return result;\n    }\n\n    //==================== calculate coordinates & converters ====================\n    var raycaster = new THREE.Raycaster;\n    //for calculating icon & marker position\n    function intersection2NDC(intersection){\n        var z = (intersection[2])?intersection[2]:0;\n        var intersectionVector = new THREE.Vector3(intersection[0],z,intersection[1]);\n        var NDCVector = intersectionVector.project(camera);\n        return [\n            (NDCVector.x + 1) / 2 * cWidth,\n            (-NDCVector.y+ 1) / 2 * cHeight\n        ]\n    }\n\n    //for calculating intersection points\n    var intersectionPlane = new THREE.Plane(new THREE.Vector3(0,1,0),0);\n    function isPointInMap(pageX,pageY){\n        return (cOffset.left <= pageX && pageX <= cOffset.left+cWidth)\n            && (cOffset.top <= pageY && pageY <= cOffset.top+cHeight);\n    }\n    function map2NDC(point){\n        return {\n            x:2*(point[0]/cWidth)-1,\n            y:1-2*(point[1]/cHeight)\n        };\n    }\n    function NDC2Intersection(point){\n        raycaster.setFromCamera(point,camera);\n        return raycaster.ray.intersectPlane(intersectionPlane);\n    }\n    //==================== markers ====================\n    function addMarker(marker,markerOpts){\n        marker.elem.css('visibility','hidden');\n        markerOpts = (markerOpts)?markerOpts:{};\n        var targetFloor = markerOpts.floor||currentFloor;\n        var targetMarkers = maps[targetFloor].markers;\n        if(targetMarkers.length == 0 || targetMarkers[targetMarkers.length-1].priority <= marker.priority){\n            targetMarkers.push(marker);\n        } else {\n            for(var i=0;i<targetMarkers.length;i++){ //for reclustering\n                var wasMarkerInserted = false;\n                if(marker.priority < targetMarkers[i].priority){\n                    targetMarkers.splice(i,0,marker);\n                    wasMarkerInserted = true;\n                    break;\n                }\n            }\n        }\n        maps[targetFloor].markerContainer.append(marker.elem);\n        marker.resetAlign();\n        marker.repositionElem(intersection2NDC(marker.position));\n        reclusteringMarkers();\n        setTimeout((function(markerElem){\n            return function(){\n                markerElem.css('visibility', 'visible'); // seperation from DOM rendering stream\n            }\n        })(marker.elem),100);\n    }\n    function repositionMarkers(){\n        var currentMarkers = maps[currentFloor].markers;\n        for(var i=0;i<currentMarkers.length;i++){\n            var targetMarker = currentMarkers[i];\n            targetMarker.repositionElem(intersection2NDC(targetMarker.position));\n        }\n        reclusteringMarkers();\n        needRepositionMarkers = false;\n    }\n    function reclusteringMarkers(){\n        if(opts.markerClustering){\n            var currentMarkers = maps[currentFloor].markers;\n            var overlapCount = new Array(currentMarkers.length); //부모와의 중첩 count\n            overlapCount.fill(0);\n            for(var i=0;i<currentMarkers.length;i++){\n                var tm /*target marker*/ = currentMarkers[i]; // higher priority than counter marker\n                if(overlapCount[i] > 0 && !tm.forceToShow){\n                    if(!tm.hidden){\n                        if(opts.markerClusteringAnimation == 0){\n                            tm.elem.hide();\n                        }else{\n                            tm.elem.fadeOut(opts.markerClusteringAnimation);\n                        }\n                        tm.hidden = true;\n                    }\n                    continue;\n                }else{\n                    if(tm.hidden){\n                        if(opts.markerClusteringAnimation == 0){\n                            tm.elem.show();\n                        }else{\n                            tm.elem.fadeIn(opts.markerClusteringAnimation);\n                        }\n                        tm.hidden = false;\n                    }\n                    //calculate overlapCount\n                    var tb /*target boundary*/ = tm.getBoundary();\n                    for(var j=i+1;j<currentMarkers.length;j++){\n                        var cm /*counter marker*/ = currentMarkers[j]; // lower priority than target marker\n                        var cb /*counter boundary*/ = cm.getBoundary();\n                        if(!(cb.x2 < tb.x1 || tb.x2 < cb.x1 || cb.y2 < tb.y1 || tb.y2 < cb.y1)){ //if overlapped\n                            overlapCount[j]++;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function removeMarker(marker){\n        for(var i in maps){\n            var markers = maps[i].markers;\n            for(var j=0;j<markers.length;j++){\n                if(markers[j] === marker){\n                    markers[j].elem.remove();\n                    markers.splice(j,1);\n                    return;\n                }\n            }\n        }\n    }\n    function removeMarkersOn(floor){\n        floor = (floor)?floor:currentFloor;\n        if(maps[floor]){\n            var markers = maps[floor].markers;\n            while(markers.length != 0){\n                var marker = markers.pop();\n                marker.elem.remove();\n            }\n        }else{\n            console.error(\"removeMarkersOn 에러 : '\"+floor+\"'를 찾을 수 없습니다.\")\n        }\n    }\n    function removeAllMarkers(){\n        for(var i in maps){\n            var markers = maps[i].markers;\n            while(markers.length != 0){\n                var marker = markers.pop();\n                marker.elem.remove();\n            }\n        }\n    }\n    //==================== sprays ====================\n    function setSpray(position, userOpts){\n        var floor = (userOpts.floor)? userOpts.floor : currentFloor;\n        var newSpray = spray(position, userOpts, currentFloor);\n        maps[floor].sprays.push(newSpray);\n        return newSpray;\n    }\n    function removeSpray(spray){\n        if(spray && spray.sprayMesh){\n            for(var i in mapObjects){\n                mapObjects[i].getObjectByName('sprays').remove(spray.sprayMesh);\n            }\n        }\n    }\n    function removeSpraysOn(floor){\n        floor = (floor)? floor : currentFloor;\n        var sprays = maps[floor].sprays;\n        for(var i=0;i<sprays.length;i++){\n            mapObjects[floor].getObjectByName('sprays').remove(sprays[i].sprayMesh);\n        }\n    }\n    function removeAllSprays(){\n        for(var i in mapObjects){\n            var sprays = maps[i].sprays;\n            for(var j=0; j<sprays.length;j++){\n                mapObjects[i].getObjectByName('sprays').remove(sprays[j].sprayMesh);\n            }\n        }\n    }\n    //==================== polylines ====================\n    function setPolyline(points,userOpts){\n        var defaultOpts = {\n            width:5,\n            color:0xff0000,\n            floor:currentFloor\n        };\n        var polylineOpts = defaultOpts;\n        if(userOpts){\n            $.extend(polylineOpts,userOpts);\n        }\n        if(typeof polylineOpts.color == 'string') polylineOpts.color = parseInt(polylineOpts.color);\n        var lineMaterial = new THREE.LineBasicMaterial({\n            color:polylineOpts.color,\n            linewidth:polylineOpts.width,\n            linecap:'round',\n            linejoin:'round'\n        });\n        var lineGeom = new THREE.Geometry();\n        var scaleFactor = maps[polylineOpts.floor].scaleFactor;\n        for(var i=0;i<points.length;i++){\n            var point = points[i];\n            var height = 0.05;\n            //동시에 scaleFactor도 적용함.\n            if(point[2] && point[2]>0) height = point[2]/scaleFactor+0.05;\n            lineGeom.vertices.push(new THREE.Vector3(point[0]/scaleFactor,height,point[1]/scaleFactor));\n        }\n        var lineMesh = new THREE.Line(lineGeom, lineMaterial);\n        mapObjects[polylineOpts.floor].getObjectByName('polylines').add(lineMesh);\n        maps[polylineOpts.floor].polylines.push(lineMesh);\n\n        return lineMesh;\n    }\n    function removePolyline(polyline){\n        for(var i in mapObjects){\n            mapObjects[i].getObjectByName('polylines').remove(polyline);\n        }\n    }\n    function removePolylinesOn(floor){\n        floor = (floor)? floor : currentFloor;\n        var polylines = maps[floor].polylines;\n        for(var i=0; i<polylines.length; i++){\n            mapObjects[floor].getObjectByName('polylines').remove(polylines[i]);\n        }\n    }\n    function removeAllPolylines(){\n        for(var i in mapObjects){\n            var polylines = maps[i].polylines;\n            for(var j=0; j<polylines.length; j++){\n                mapObjects[i].getObjectByName('polylines').remove(polylines[j]);\n            }\n        }\n    }\n    //==================== helpers ====================\n    function render(){\n        TWEEN.update(); //for animations\n        renderer.render(scene,camera);\n        if(needRepositionMarkers){\n            repositionMarkers();\n        }\n        requestAnimationFrame(render);\n    }\n    function Point(x,z){\n        return new THREE.Vector3(x,0,z);\n    }\n    function getCanvasDOM(){\n        return $canvas;\n    }\n    function pagePoint2Map(pageX,pageY){\n        return [pageX - cOffset.left, pageY - cOffset.top];\n    }\n    function pageTouches2Maps(pageTouches){\n        var mapPoints = [];\n        for(var i=0;i<pageTouches.length;i++){\n            mapPoints.push(pagePoint2Map(pageTouches[i].pageX, pageTouches[i].pageY));\n        }\n        return mapPoints;\n    }\n    function getMaps(){\n        return maps;\n    }\n    function getCurrentMap(){\n        return maps[currentFloor];\n    }\n\n    return {\n        load:load,\n        isPointInMap:isPointInMap,\n        interaction:interaction,\n        interactionWithBlocks:interactionWithBlocks,\n        setView:setView,\n        setTiltAngle:setTiltAngle,\n        translate:translate,\n        rotate:rotate,\n        externalRotate:externalRotate,\n        zoom:zoom,\n        stepZoom:stepZoom,\n        getCanvasDOM:getCanvasDOM,\n        markerLayer:$markerLayer,\n        pagePoint2Map:pagePoint2Map,\n        pageTouches2Maps:pageTouches2Maps,\n        changeFloor:changeFloor,\n        addMarker:addMarker,\n        setSpray:setSpray,\n        removeSpray:removeSpray,\n        removeSpraysOn:removeSpraysOn,\n        removeAllSprays:removeAllSprays,\n        setPolyline:setPolyline,\n        removePolyline:removePolyline,\n        removePolylinesOn:removePolylinesOn,\n        removeAllPolylines:removeAllPolylines,\n        removeMarker:removeMarker,\n        removeMarkersOn:removeMarkersOn,\n        removeAllMarkers:removeAllMarkers,\n        getBlock:getBlock,\n        getBlocksOn:getBlocksOn,\n        getAllBlocks:getAllBlocks,\n        Point:Point,\n        getMaps:getMaps,\n        getCurrentMap:getCurrentMap\n    };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IndoorMap_core.js\n ** module id = 17\n ** module chunks = 0 1\n **/","// threejs.org/license\n'use strict';var THREE={REVISION:\"78\"};\"function\"===typeof define&&define.amd?define(\"three\",THREE):\"undefined\"!==typeof exports&&\"undefined\"!==typeof module&&(module.exports=THREE);void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});void 0===Function.prototype.name&&Object.defineProperty(Function.prototype,\"name\",{get:function(){return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1]}});\nvoid 0===Object.assign&&function(){Object.assign=function(a){if(void 0===a||null===a)throw new TypeError(\"Cannot convert undefined or null to object\");for(var b=Object(a),c=1;c<arguments.length;c++){var d=arguments[c];if(void 0!==d&&null!==d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(b[e]=d[e])}return b}}();\nObject.assign(THREE,{MOUSE:{LEFT:0,MIDDLE:1,RIGHT:2},CullFaceNone:0,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,FrontFaceDirectionCW:0,FrontFaceDirectionCCW:1,BasicShadowMap:0,PCFShadowMap:1,PCFSoftShadowMap:2,FrontSide:0,BackSide:1,DoubleSide:2,FlatShading:1,SmoothShading:2,NoColors:0,FaceColors:1,VertexColors:2,NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5,AddEquation:100,SubtractEquation:101,ReverseSubtractEquation:102,MinEquation:103,\nMaxEquation:104,ZeroFactor:200,OneFactor:201,SrcColorFactor:202,OneMinusSrcColorFactor:203,SrcAlphaFactor:204,OneMinusSrcAlphaFactor:205,DstAlphaFactor:206,OneMinusDstAlphaFactor:207,DstColorFactor:208,OneMinusDstColorFactor:209,SrcAlphaSaturateFactor:210,NeverDepth:0,AlwaysDepth:1,LessDepth:2,LessEqualDepth:3,EqualDepth:4,GreaterEqualDepth:5,GreaterDepth:6,NotEqualDepth:7,MultiplyOperation:0,MixOperation:1,AddOperation:2,NoToneMapping:0,LinearToneMapping:1,ReinhardToneMapping:2,Uncharted2ToneMapping:3,\nCineonToneMapping:4,UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307,RepeatWrapping:1E3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002,NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008,UnsignedByteType:1009,\nByteType:1010,ShortType:1011,UnsignedShortType:1012,IntType:1013,UnsignedIntType:1014,FloatType:1015,HalfFloatType:1025,UnsignedShort4444Type:1016,UnsignedShort5551Type:1017,UnsignedShort565Type:1018,AlphaFormat:1019,RGBFormat:1020,RGBAFormat:1021,LuminanceFormat:1022,LuminanceAlphaFormat:1023,RGBEFormat:THREE.RGBAFormat,DepthFormat:1026,RGB_S3TC_DXT1_Format:2001,RGBA_S3TC_DXT1_Format:2002,RGBA_S3TC_DXT3_Format:2003,RGBA_S3TC_DXT5_Format:2004,RGB_PVRTC_4BPPV1_Format:2100,RGB_PVRTC_2BPPV1_Format:2101,\nRGBA_PVRTC_4BPPV1_Format:2102,RGBA_PVRTC_2BPPV1_Format:2103,RGB_ETC1_Format:2151,LoopOnce:2200,LoopRepeat:2201,LoopPingPong:2202,InterpolateDiscrete:2300,InterpolateLinear:2301,InterpolateSmooth:2302,ZeroCurvatureEnding:2400,ZeroSlopeEnding:2401,WrapAroundEnding:2402,TrianglesDrawMode:0,TriangleStripDrawMode:1,TriangleFanDrawMode:2,LinearEncoding:3E3,sRGBEncoding:3001,GammaEncoding:3007,RGBEEncoding:3002,LogLuvEncoding:3003,RGBM7Encoding:3004,RGBM16Encoding:3005,RGBDEncoding:3006,BasicDepthPacking:3200,\nRGBADepthPacking:3201});THREE.Color=function(a,b,c){return void 0===b&&void 0===c?this.set(a):this.setRGB(a,b,c)};\nTHREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):\"number\"===typeof a?this.setHex(a):\"string\"===typeof a&&this.setStyle(a);return this},setScalar:function(a){this.b=this.g=this.r=a},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){0>d&&(d+=1);1<d&&(d-=1);return d<1/6?a+6*(c-a)*\nd:.5>d?c:d<2/3?a+6*(c-a)*(2/3-d):a}return function(b,c,d){b=THREE.Math.euclideanModulo(b,1);c=THREE.Math.clamp(c,0,1);d=THREE.Math.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1/3),this.g=a(d,c,b),this.b=a(d,c,b-1/3));return this}}(),setStyle:function(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn(\"THREE.Color: Alpha component of \"+a+\" will be ignored.\")}var c;if(c=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(a)){var d=c[2];switch(c[1]){case \"rgb\":case \"rgba\":if(c=\n/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d))return this.r=Math.min(255,parseInt(c[1],10))/255,this.g=Math.min(255,parseInt(c[2],10))/255,this.b=Math.min(255,parseInt(c[3],10))/255,b(c[5]),this;if(c=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d))return this.r=Math.min(100,parseInt(c[1],10))/100,this.g=Math.min(100,parseInt(c[2],10))/100,this.b=Math.min(100,parseInt(c[3],10))/100,b(c[5]),this;break;case \"hsl\":case \"hsla\":if(c=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(d)){var d=\nparseFloat(c[1])/360,e=parseInt(c[2],10)/100,f=parseInt(c[3],10)/100;b(c[5]);return this.setHSL(d,e,f)}}}else if(c=/^\\#([A-Fa-f0-9]+)$/.exec(a)){c=c[1];d=c.length;if(3===d)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===d)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}a&&0<a.length&&\n(c=THREE.ColorKeywords[a],void 0!==c?this.setHex(c):console.warn(\"THREE.Color: Unknown color \"+a));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);var c=0<b?1/b:1;this.r=Math.pow(a.r,c);this.g=Math.pow(a.g,c);this.b=Math.pow(a.b,\nc);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=\n(f+e)/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k/(e+f):k/(2-e-f);switch(e){case b:g=(c-d)/k+(c<d?6:0);break;case c:g=(d-b)/k+2;break;case d:g=(b-c)/k+4}g/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=\na.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a,b){void 0===b&&(b=0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this},toArray:function(a,\nb){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a}};\nTHREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,\ndarkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,\ngrey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,\nlime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,\npalegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,\ntomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};\nTHREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},\ncopy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error(\"THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2),k=a.order;\"XYZ\"===k?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"YXZ\"===\nk?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"ZXY\"===k?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):\"ZYX\"===k?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):\"YZX\"===k?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):\"XZY\"===k&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,\nb){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],k=b[6],b=b[10],l=c+f+b;0<l?(c=.5/Math.sqrt(l+1),this._w=.25/c,this._x=(k-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=\n.25*c,this._z=(g+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+k)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;return this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){this._x*=\n-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},\nmultiply:function(a,b){return void 0!==b?(console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},premultiply:function(a){return this.multiplyQuaternions(a,this)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,k=b._z,l=b._w;this._x=c*l+f*g+d*k-e*h;this._y=d*l+f*h+e*g-c*k;this._z=e*l+f*k+c*h-d*g;this._w=f*l-c*g-d*h-e*k;this.onChangeCallback();\nreturn this},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.sqrt(1-g*g);if(.001>Math.abs(h))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var k=Math.atan2(h,g),g=Math.sin((1-b)*k)/h,h=Math.sin(b*\nk)/h;this._w=f*g+this._w*h;this._x=c*g+this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=\na;return this},onChangeCallback:function(){}};\nObject.assign(THREE.Quaternion,{slerp:function(a,b,c,d){return c.copy(a).slerp(b,d)},slerpFlat:function(a,b,c,d,e,f,g){var h=c[d+0],k=c[d+1],l=c[d+2];c=c[d+3];d=e[f+0];var n=e[f+1],p=e[f+2];e=e[f+3];if(c!==e||h!==d||k!==n||l!==p){f=1-g;var m=h*d+k*n+l*p+c*e,q=0<=m?1:-1,r=1-m*m;r>Number.EPSILON&&(r=Math.sqrt(r),m=Math.atan2(r,m*q),f=Math.sin(f*m)/r,g=Math.sin(g*m)/r);q*=g;h=h*f+d*q;k=k*f+n*q;l=l*f+p*q;c=c*f+e*q;f===1-g&&(g=1/Math.sqrt(h*h+k*k+l*l+c*c),h*=g,k*=g,l*=g,c*=g)}a[b]=h;a[b+1]=k;a[b+2]=l;\na[b+3]=c}});THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};\nTHREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(a){this.x=a},get height(){return this.y},set height(a){this.y=a},set:function(a,b){this.x=a;this.y=b;return this},setScalar:function(a){this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;\ncase 1:return this.y;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},\naddScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,\nthis.y*=a):this.y=this.x=0;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));return this},clampScalar:function(){var a,b;return function(c,d){void 0===\na&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.multiplyScalar(Math.max(a,Math.min(b,c))/c)},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);\nthis.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var a=Math.atan2(this.y,this.x);0>a&&(a+=2*Math.PI);return a},\ndistanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},\ntoArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];return this},rotateAround:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;this.x=e*c-f*d+a.x;this.y=e*d+f*c+a.y;return this}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};\nTHREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setScalar:function(a){this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;\ncase 2:return this.z;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,\nb){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},\nmultiply:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&\nconsole.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\");void 0===a&&(a=new THREE.Quaternion);return this.applyQuaternion(a.setFromEuler(b))}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);return this.applyQuaternion(a.setFromAxisAngle(b,c))}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},\napplyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=\na.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},project:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),\ntransformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;return this.normalize()},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=\nMath.max(this.z,a.z);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.multiplyScalar(Math.max(a,Math.min(b,c))/c)},floor:function(){this.x=Math.floor(this.x);this.y=\nMath.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=\n-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=\n(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},cross:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;\nthis.z=c*g-d*f;return this},projectOnVector:function(a){var b=a.dot(this)/a.lengthSq();return this.copy(a).multiplyScalar(b)},projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/Math.sqrt(this.lengthSq()*a.lengthSq());return Math.acos(THREE.Math.clamp(a,\n-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setFromSpherical:function(a){var b=Math.sin(a.phi)*a.radius;this.x=b*Math.sin(a.theta);this.y=Math.cos(a.phi)*a.radius;this.z=b*Math.cos(a.theta);return this},setFromMatrixPosition:function(a){return this.setFromMatrixColumn(a,3)},setFromMatrixScale:function(a){var b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,\n1).length();a=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){if(\"number\"===typeof a){console.warn(\"THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).\");var c=a;a=b;b=c}return this.fromArray(a.elements,4*b)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===\nb&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];return this}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\nTHREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setScalar:function(a){this.w=this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error(\"index is out of range: \"+\na);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);\nthis.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=\na.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){isFinite(a)?(this.x*=a,this.y*=a,this.z*=a,this.w*=a):this.w=this.z=this.y=this.x=0;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=\na[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],k=a[9];c=a[2];b=a[6];var l=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>\nMath.abs(k-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(k+b)&&.1>Math.abs(e+h+l-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;l=(l+1)/2;d=(d+g)/4;f=(f+c)/4;k=(k+b)/4;e>h&&e>l?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>l?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),b=d/c,d=k/c):.01>l?(c=b=.707106781,d=0):(d=Math.sqrt(l),b=f/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-k)/\na;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+l-1)/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));\nthis.w=Math.max(a.w,Math.min(b.w,this.w));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=\nMath.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*\na.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-\nthis.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+\nc;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];this.w=a.array[b+3];return this}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=\"XYZ YZX ZXY XZY YXZ ZYX\".split(\" \");THREE.Euler.DefaultOrder=\"XYZ\";\nTHREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,\nthis._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=THREE.Math.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],k=e[5],l=e[9],n=e[2],p=e[6],e=e[10];b=b||this._order;\"XYZ\"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-l,e),this._z=Math.atan2(-f,a)):(this._x=Math.atan2(p,k),this._z=0)):\"YXZ\"===b?(this._x=Math.asin(-d(l,-1,1)),.99999>Math.abs(l)?\n(this._y=Math.atan2(g,e),this._z=Math.atan2(h,k)):(this._y=Math.atan2(-n,a),this._z=0)):\"ZXY\"===b?(this._x=Math.asin(d(p,-1,1)),.99999>Math.abs(p)?(this._y=Math.atan2(-n,e),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(h,a))):\"ZYX\"===b?(this._y=Math.asin(-d(n,-1,1)),.99999>Math.abs(n)?(this._x=Math.atan2(p,e),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-f,k))):\"YZX\"===b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-n,a)):(this._x=\n0,this._y=Math.atan2(g,e))):\"XZY\"===b?(this._z=Math.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(p,k),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-l,e),this._y=0)):console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeRotationFromQuaternion(b);return this.setFromRotationMatrix(a,c,d)}}(),setFromVector3:function(a,\nb){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);return this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;\na[b+3]=this._order;return a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};\nTHREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},\nat:function(a,b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);\nthis.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};\nTHREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);\nreturn this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);\nthis.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>\nthis.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&\na.max.equals(this.max)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};\nTHREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromArray:function(a){for(var b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.length;h<k;h+=3){var l=a[h],n=a[h+1],p=a[h+2];l<b&&(b=l);n<c&&(c=n);p<d&&(d=p);l>e&&(e=l);n>f&&(f=n);p>g&&(g=p)}this.min.set(b,c,d);this.max.set(e,f,g)},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=\nnew THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);this.makeEmpty();b.traverse(function(b){var e=b.geometry;if(void 0!==e)if(e instanceof THREE.Geometry)for(var f=e.vertices,e=0,g=f.length;e<g;e++)a.copy(f[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else if(e instanceof THREE.BufferGeometry&&void 0!==\ne.attributes.position)for(f=e.attributes.position.array,e=0,g=f.length;e<g;e+=3)a.fromArray(f,e),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},\ncenter:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<\nthis.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<\nthis.min.z||a.min.z>this.max.z?!1:!0},intersectsSphere:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);this.clampPoint(b.center,a);return a.distanceToSquared(b.center)<=b.radius*b.radius}}(),intersectsPlane:function(a){var b,c;0<a.normal.x?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x);0<a.normal.y?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y);0<a.normal.z?(b+=a.normal.z*\nthis.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z);return b<=a.constant&&c>=a.constant},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),\nintersect:function(a){this.min.max(a.min);this.max.min(a.max);this.isEmpty()&&this.makeEmpty();return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){if(this.isEmpty())return this;a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);\na[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&\na.max.equals(this.max)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,k){var l=this.elements;l[0]=a;l[1]=d;l[2]=g;l[3]=b;l[4]=e;l[5]=h;l[6]=c;l[7]=f;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},setFromMatrix4:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]);\nreturn this},applyToVector3Array:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.fromArray(b,c),a.applyMatrix3(this),a.toArray(b,c);return b}}(),applyToBuffer:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix3(this),b.setXYZ(a.x,a.y,a.z);return b}}(),\nmultiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,b){a instanceof THREE.Matrix4&&console.error(\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\");var c=a.elements,d=this.elements,e=c[0],f=c[1],g=c[2],h=c[3],k=c[4],l=c[5],n=c[6],p=c[7],\nc=c[8],m=c*k-l*p,q=l*n-c*h,r=p*h-k*n,s=e*m+f*q+g*r;if(0===s){if(b)throw Error(\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\");return this.identity()}s=1/s;d[0]=m*s;d[1]=(g*p-c*f)*s;d[2]=(l*f-g*k)*s;d[3]=q*s;d[4]=(c*e-g*n)*s;d[5]=(g*h-l*e)*s;d[6]=r*s;d[7]=(f*n-p*e)*s;d[8]=(k*e-f*h)*s;return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=\nb[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead.\");return this.toArray(a,b)},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose()},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(a,b){void 0===\na&&(a=[]);void 0===b&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,k,l,n,p,m,q,r,s){var t=this.elements;t[0]=a;t[4]=b;t[8]=c;t[12]=d;t[1]=e;t[5]=f;t[9]=g;t[13]=h;t[2]=k;t[6]=l;t[10]=n;t[14]=p;t[3]=m;t[7]=q;t[11]=r;t[15]=s;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(a){this.elements.set(a.elements);return this},copyPosition:function(a){var b=this.elements;a=a.elements;\nb[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){a.setFromMatrixColumn(this,0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this},makeBasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);var c=this.elements,d=b.elements,e=1/a.setFromMatrixColumn(b,0).length(),f=1/a.setFromMatrixColumn(b,1).length();b=1/a.setFromMatrixColumn(b,\n2).length();c[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*b;c[9]=d[9]*b;c[10]=d[10]*b;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&console.error(\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if(\"XYZ\"===a.order){a=f*h;var k=f*e,l=c*h,n=c*e;b[0]=g*h;b[4]=\n-g*e;b[8]=d;b[1]=k+l*d;b[5]=a-n*d;b[9]=-c*g;b[2]=n-a*d;b[6]=l+k*d;b[10]=f*g}else\"YXZ\"===a.order?(a=g*h,k=g*e,l=d*h,n=d*e,b[0]=a+n*c,b[4]=l*c-k,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=k*c-l,b[6]=n+a*c,b[10]=f*g):\"ZXY\"===a.order?(a=g*h,k=g*e,l=d*h,n=d*e,b[0]=a-n*c,b[4]=-f*e,b[8]=l+k*c,b[1]=k+l*c,b[5]=f*h,b[9]=n-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):\"ZYX\"===a.order?(a=f*h,k=f*e,l=c*h,n=c*e,b[0]=g*h,b[4]=l*d-k,b[8]=a*d+n,b[1]=g*e,b[5]=n*d+a,b[9]=k*d-l,b[2]=-d,b[6]=c*g,b[10]=f*g):\"YZX\"===a.order?(a=f*g,k=f*\nd,l=c*g,n=c*d,b[0]=g*h,b[4]=n-a*e,b[8]=l*e+k,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=k*e+l,b[10]=a-n*e):\"XZY\"===a.order&&(a=f*g,k=f*d,l=c*g,n=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+n,b[5]=f*h,b[9]=k*e-l,b[2]=l*e-k,b[6]=c*h,b[10]=n*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,k=e+e;a=c*g;var l=c*h,c=c*k,n=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(n+e);b[4]=l-f;b[8]=c+h;b[1]=l+\nf;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+n);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a,b,c;return function(d,e,f){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3);var g=this.elements;c.subVectors(d,e).normalize();0===c.lengthSq()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.lengthSq()&&(c.z+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;\ng[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],k=c[12],l=c[1],n=c[5],p=c[9],m=c[13],q=c[2],r=c[6],s=c[10],t=c[14],u=c[3],v=c[7],C=c[11],c=c[15],\nw=d[0],E=d[4],z=d[8],y=d[12],A=d[1],I=d[5],B=d[9],F=d[13],K=d[2],P=d[6],M=d[10],H=d[14],L=d[3],O=d[7],N=d[11],d=d[15];e[0]=f*w+g*A+h*K+k*L;e[4]=f*E+g*I+h*P+k*O;e[8]=f*z+g*B+h*M+k*N;e[12]=f*y+g*F+h*H+k*d;e[1]=l*w+n*A+p*K+m*L;e[5]=l*E+n*I+p*P+m*O;e[9]=l*z+n*B+p*M+m*N;e[13]=l*y+n*F+p*H+m*d;e[2]=q*w+r*A+s*K+t*L;e[6]=q*E+r*I+s*P+t*O;e[10]=q*z+r*B+s*M+t*N;e[14]=q*y+r*F+s*H+t*d;e[3]=u*w+v*A+C*K+c*L;e[7]=u*E+v*I+C*P+c*O;e[11]=u*z+v*B+C*M+c*N;e[15]=u*y+v*F+C*H+c*d;return this},multiplyToArray:function(a,b,\nc){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},applyToVector3Array:function(){var a;return function(b,c,d){void 0===a&&\n(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.fromArray(b,c),a.applyMatrix4(this),a.toArray(b,c);return b}}(),applyToBuffer:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix4(this),b.setXYZ(a.x,a.y,a.z);return b}}(),determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=\na[5],h=a[9],k=a[13],l=a[2],n=a[6],p=a[10],m=a[14];return a[3]*(+e*h*n-d*k*n-e*g*p+c*k*p+d*g*m-c*h*m)+a[7]*(+b*h*m-b*k*p+e*f*p-d*f*m+d*k*l-e*h*l)+a[11]*(+b*k*n-b*g*m-e*f*n+c*f*m+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*n+b*g*p+d*f*n-c*f*p+c*h*l)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,b){console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead.\");\nreturn this.toArray(a,b)},getPosition:function(){var a;return function(){void 0===a&&(a=new THREE.Vector3);console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\");return a.setFromMatrixColumn(this,3)}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[1],g=d[2],h=d[3],k=d[4],l=d[5],n=d[6],p=d[7],m=d[8],q=d[9],r=d[10],s=d[11],t=d[12],\nu=d[13],v=d[14],d=d[15],C=q*v*p-u*r*p+u*n*s-l*v*s-q*n*d+l*r*d,w=t*r*p-m*v*p-t*n*s+k*v*s+m*n*d-k*r*d,E=m*u*p-t*q*p+t*l*s-k*u*s-m*l*d+k*q*d,z=t*q*n-m*u*n-t*l*r+k*u*r+m*l*v-k*q*v,y=e*C+f*w+g*E+h*z;if(0===y){if(b)throw Error(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");return this.identity()}y=1/y;c[0]=C*y;c[1]=(u*r*h-q*v*h-u*g*s+f*v*s+q*g*d-f*r*d)*y;c[2]=(l*v*h-u*n*h+u*g*p-f*v*p-l*g*d+f*n*d)*y;c[3]=\n(q*n*h-l*r*h-q*g*p+f*r*p+l*g*s-f*n*s)*y;c[4]=w*y;c[5]=(m*v*h-t*r*h+t*g*s-e*v*s-m*g*d+e*r*d)*y;c[6]=(t*n*h-k*v*h-t*g*p+e*v*p+k*g*d-e*n*d)*y;c[7]=(k*r*h-m*n*h+m*g*p-e*r*p-k*g*s+e*n*s)*y;c[8]=E*y;c[9]=(t*q*h-m*u*h-t*f*s+e*u*s+m*f*d-e*q*d)*y;c[10]=(k*u*h-t*l*h+t*f*p-e*u*p-k*f*d+e*l*d)*y;c[11]=(m*l*h-k*q*h-m*f*p+e*q*p+k*f*s-e*l*s)*y;c[12]=z*y;c[13]=(m*u*g-t*q*g+t*f*r-e*u*r-m*f*v+e*q*v)*y;c[14]=(t*l*g-k*u*g-t*f*n+e*u*n+k*f*v-e*l*v)*y;c[15]=(k*q*g-m*l*g+m*f*n-e*q*n-k*f*r+e*l*r)*y;return this},scale:function(a){var b=\nthis.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10]))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);\nreturn this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,k=e*f,l=e*g;this.set(k*f+c,k*g-d*h,k*h+d*g,0,k*g+d*h,l*g+c,l*h-d*f,0,k*h-d*g,l*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,\n0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a,b;return function(c,d,e){void 0===a&&(a=new THREE.Vector3,b=new THREE.Matrix4);var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,l=1/k;b.elements[0]*=c;b.elements[1]*=c;\nb.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.DEG2RAD*a*.5);var e=\n-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=1/(b-a),k=1/(c-d),l=1/(f-e);g[0]=2*h;g[4]=0;g[8]=0;g[12]=-((b+a)*h);g[1]=0;g[5]=2*k;g[9]=0;g[13]=-((c+d)*k);g[2]=0;g[6]=0;g[10]=-2*l;g[14]=-((f+e)*l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},equals:function(a){var b=this.elements;a=a.elements;for(var c=0;16>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a){this.elements.set(a);return this},toArray:function(a,b){void 0===a&&(a=[]);\nvoid 0===b&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};\nTHREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},lookAt:function(a){this.direction.copy(a).sub(this.origin).normalize();return this},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,\na));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceToSquared(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);\nreturn a.distanceToSquared(b)}}(),distanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5);b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),k=-this.direction.dot(b),l=c.dot(this.direction),n=-c.dot(b),p=c.lengthSq(),m=Math.abs(1-k*k),q;0<m?(d=k*n-l,e=k*l-n,q=h*m,0<=d?e>=-q?e<=q?(h=1/m,d*=h,e*=h,k=d*(d+k*e+2*l)+e*(k*d+e+2*n)+p):(e=h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*\nn)+p):(e=-h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*n)+p):e<=-q?(d=Math.max(0,-(-k*h+l)),e=0<d?-h:Math.min(Math.max(-h,-n),h),k=-d*d+e*(e+2*n)+p):e<=q?(d=0,e=Math.min(Math.max(-h,-n),h),k=e*(e+2*n)+p):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-n),h),k=-d*d+e*(e+2*n)+p)):(e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*n)+p);f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return k}}(),intersectSphere:function(){var a=new THREE.Vector3;return function(b,\nc){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;if(e>f)return null;f=Math.sqrt(f-e);e=d-f;d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),intersectsSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=\nthis.distanceToPlane(a);return null===c?null:this.at(c,b)},intersectsPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==\nd)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectsBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,k){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);\nif(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e/f,k)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}};\nTHREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};\nTHREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},\nempty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},intersectsBox:function(a){return a.intersectsSphere(this)},intersectsPlane:function(a){return Math.abs(this.center.dot(a.normal)-a.constant)<=this.radius},clampPoint:function(a,b){var c=\nthis.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&\na.radius===this.radius}};THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};\nTHREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],l=c[7],n=c[8],p=c[9],m=c[10],q=c[11],r=c[12],s=c[13],t=c[14],\nc=c[15];b[0].setComponents(f-a,l-g,q-n,c-r).normalize();b[1].setComponents(f+a,l+g,q+n,c+r).normalize();b[2].setComponents(f+d,l+h,q+p,c+s).normalize();b[3].setComponents(f-d,l-h,q-p,c-s).normalize();b[4].setComponents(f-e,l-k,q-m,c-t).normalize();b[5].setComponents(f+e,l+k,q+m,c+t).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere).applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),\nintersectsSprite:function(){var a=new THREE.Sphere;return function(b){a.center.set(0,0,0);a.radius=.7071067811865476;a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?\nc.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};\nTHREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,\nc);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,\nb){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0===f){if(0===this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),intersectsLine:function(a){var b=\nthis.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectsBox:function(a){return a.intersectsPlane(this)},intersectsSphere:function(a){return a.intersectsPlane(this)},coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Matrix3;return function(c,d){var e=this.coplanarPoint(a).applyMatrix4(c),f=d||b.getNormalMatrix(c),f=this.normal.applyMatrix3(f).normalize();\nthis.constant=-e.dot(f);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}};THREE.Spherical=function(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this};\nTHREE.Spherical.prototype={constructor:THREE.Spherical,set:function(a,b,c){this.radius=a;this.phi=b;this.theta=c;return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.radius.copy(a.radius);this.phi.copy(a.phi);this.theta.copy(a.theta);return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=\nMath.acos(THREE.Math.clamp(a.y/this.radius,-1,1)));return this}};\nTHREE.Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var a=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8===e||13===e||18===e||23===e?b[e]=\"-\":14===e?b[e]=\"4\":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19===e?d&3|8:d]);return b.join(\"\")}}(),clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,\nd,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){console.warn(\"THREE.Math.random16() has been deprecated. Use Math.random() instead.\");return Math.random()},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*\n(.5-Math.random())},degToRad:function(a){return a*THREE.Math.DEG2RAD},radToDeg:function(a){return a*THREE.Math.RAD2DEG},isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},nearestPowerOfTwo:function(a){return Math.pow(2,Math.round(Math.log(a)/Math.LN2))},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};\nTHREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,k,l,n,p,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+\n2;l=this.points[c[0]];n=this.points[c[1]];p=this.points[c[2]];m=this.points[c[3]];h=g*g;k=g*h;d.x=b(l.x,n.x,p.x,m.x,g,h,k);d.y=b(l.y,n.y,p.y,m.y,g,h,k);d.z=b(l.z,n.z,p.z,m.z,g,h,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],k=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=\na/c,d=this.getPoint(b),g.copy(d),k+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!==e&&(h[b]=k,e=b);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],k=new THREE.Vector3,m=this.getLength();h.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];g=Math.ceil(a*c/m.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),\nh.push(k.copy(d).clone());h.push(k.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();\nTHREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new THREE.Vector3;if(0===l)return h.set(-2,-1,-1);l=1/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}();\nTHREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();\nTHREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,\nthis.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},\nclosestPointToPoint:function(){var a,b,c,d;return function(e,f){void 0===a&&(a=new THREE.Plane,b=[new THREE.Line3,new THREE.Line3,new THREE.Line3],c=new THREE.Vector3,d=new THREE.Vector3);var g=f||new THREE.Vector3,h=Infinity;a.setFromCoplanarPoints(this.a,this.b,this.c);a.projectPoint(e,c);if(!0===this.containsPoint(c))g.copy(c);else{b[0].set(this.a,this.b);b[1].set(this.b,this.c);b[2].set(this.c,this.a);for(var k=0;k<b.length;k++){b[k].closestPointToPoint(c,!0,d);var l=c.distanceToSquared(d);l<\nh&&(h=l,g.copy(d))}}return g}}(),equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}};THREE.Interpolant=function(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c};\nTHREE.Interpolant.prototype={constructor:THREE.Interpolant,evaluate:function(a){var b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];a:{b:{c:{d:if(!(a<d)){for(var f=c+2;;){if(void 0===d){if(a<e)break d;this._cachedIndex=c=b.length;return this.afterEnd_(c-1,a,e)}if(c===f)break;e=d;d=b[++c];if(a<d)break b}d=b.length;break c}if(a>=e)break a;else{f=b[1];a<f&&(c=2,e=f);for(f=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=\nc;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,d=this.valueSize;a*=d;for(var e=0;e!==d;++e)b[e]=\nc[a+e];return b},interpolate_:function(a,b,c,d){throw Error(\"call to abstract method\");},intervalChanged_:function(a,b,c){}};Object.assign(THREE.Interpolant.prototype,{beforeStart_:THREE.Interpolant.prototype.copySampleValue_,afterEnd_:THREE.Interpolant.prototype.copySampleValue_});THREE.CubicInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0};\nTHREE.CubicInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.CubicInterpolant,DefaultSettings_:{endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case THREE.ZeroSlopeEnding:e=a;g=2*b-c;break;case THREE.WrapAroundEnding:e=d.length-2;g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case THREE.ZeroSlopeEnding:f=\na;h=2*c-b;break;case THREE.WrapAroundEnding:f=1;h=c+d[1]-d[0];break;default:f=a-1,h=b}a=.5*(c-b);d=this.valueSize;this._weightPrev=a/(b-g);this._weightNext=a/(h-c);this._offsetPrev=e*d;this._offsetNext=f*d},interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g,k=this._offsetPrev,l=this._offsetNext,n=this._weightPrev,p=this._weightNext,m=(c-b)/(d-b);c=m*m;d=c*m;b=-n*d+2*n*c-n*m;n=(1+n)*d+(-1.5-2*n)*c+(-.5+n)*m+1;m=(-1-p)*d+(1.5+p)*c+.5*m;p=p*d-p*\nc;for(c=0;c!==g;++c)e[c]=b*f[k+c]+n*f[h+c]+m*f[a+c]+p*f[l+c];return e}});THREE.DiscreteInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)};THREE.DiscreteInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.DiscreteInterpolant,interpolate_:function(a,b,c,d){return this.copySampleValue_(a-1)}});THREE.LinearInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)};\nTHREE.LinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.LinearInterpolant,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g;b=(c-b)/(d-b);c=1-b;for(d=0;d!==g;++d)e[d]=f[h+d]*c+f[a+d]*b;return e}});THREE.QuaternionLinearInterpolant=function(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)};\nTHREE.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.QuaternionLinearInterpolant,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;b=(c-b)/(d-b);for(c=a+g;a!==c;a+=4)THREE.Quaternion.slerpFlat(e,0,f,a-g,f,a,b);return e}});THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};\nTHREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=(performance||Date).now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=(performance||Date).now(),a=(b-this.oldTime)/1E3;this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};\nObject.assign(THREE.EventDispatcher.prototype,{addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==\nthis._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=0,e=b.length,d=0;d<e;d++)c[d]=b[d];for(d=0;d<e;d++)c[d].call(this,a)}}}});THREE.Layers=function(){this.mask=1};THREE.Layers.prototype={constructor:THREE.Layers,set:function(a){this.mask=1<<a},enable:function(a){this.mask|=1<<a},toggle:function(a){this.mask^=1<<a},disable:function(a){this.mask&=~(1<<a)},test:function(a){return 0!==(this.mask&a.mask)}};\n(function(a){function b(a,b){return a.distance-b.distance}function c(a,b,f,g){if(!1!==a.visible&&(a.raycast(b,f),!0===g)){a=a.children;g=0;for(var h=a.length;g<h;g++)c(a[g],b,f,!0)}}a.Raycaster=function(b,c,f,g){this.ray=new a.Ray(b,c);this.near=f||0;this.far=g||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\");return this.Points}}})};\na.Raycaster.prototype={constructor:a.Raycaster,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){c instanceof a.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(c.matrixWorld),this.ray.direction.set(b.x,b.y,.5).unproject(c).sub(this.ray.origin).normalize()):c instanceof a.OrthographicCamera?(this.ray.origin.set(b.x,b.y,(c.near+c.far)/(c.near-c.far)).unproject(c),this.ray.direction.set(0,0,-1).transformDirection(c.matrixWorld)):console.error(\"THREE.Raycaster: Unsupported camera type.\")},\nintersectObject:function(a,e){var f=[];c(a,this,f,e);f.sort(b);return f},intersectObjects:function(a,e){var f=[];if(!1===Array.isArray(a))return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),f;for(var g=0,h=a.length;g<h;g++)c(a[g],this,f,e);f.sort(b);return f}}})(THREE);\nTHREE.Object3D=function(){Object.defineProperty(this,\"id\",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Object3D\";this.parent=null;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,\nvalue:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}});this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new THREE.Layers;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}};\nTHREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.DefaultMatrixAutoUpdate=!0;\nObject.assign(THREE.Object3D.prototype,THREE.EventDispatcher.prototype,{applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=\nnew THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);\nthis.position.add(a.multiplyScalar(c));return this}}(),translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),\nlookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",a),this;a instanceof THREE.Object3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:\"added\"}),this.children.push(a)):console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",\na);return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=null,a.dispatchEvent({type:\"removed\"}),this.children.splice(b,1))},getObjectById:function(a){return this.getObjectByProperty(\"id\",a)},getObjectByName:function(a){return this.getObjectByProperty(\"name\",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,\nb);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new THREE.Vector3;this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){c=c||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,\nthis.rotation.order,!1)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;return function(c){c=c||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==\nthis.visible){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,\nthis.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=void 0===a||\"\"===a,d={};c&&(a={geometries:{},materials:{},textures:{},images:{}},d.metadata={version:4.4,type:\"Object\",generator:\"Object3D.toJSON\"});var e={};e.uuid=this.uuid;e.type=this.type;\"\"!==this.name&&(e.name=this.name);\"{}\"!==JSON.stringify(this.userData)&&\n(e.userData=this.userData);!0===this.castShadow&&(e.castShadow=!0);!0===this.receiveShadow&&(e.receiveShadow=!0);!1===this.visible&&(e.visible=!1);e.matrix=this.matrix.toArray();void 0!==this.geometry&&(void 0===a.geometries[this.geometry.uuid]&&(a.geometries[this.geometry.uuid]=this.geometry.toJSON(a)),e.geometry=this.geometry.uuid);void 0!==this.material&&(void 0===a.materials[this.material.uuid]&&(a.materials[this.material.uuid]=this.material.toJSON(a)),e.material=this.material.uuid);if(0<this.children.length){e.children=\n[];for(var f=0;f<this.children.length;f++)e.children.push(this.children[f].toJSON(a).object)}if(c){var c=b(a.geometries),f=b(a.materials),g=b(a.textures);a=b(a.images);0<c.length&&(d.geometries=c);0<f.length&&(d.materials=f);0<g.length&&(d.textures=g);0<a.length&&(d.images=a)}d.object=e;return d},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){void 0===b&&(b=!0);this.name=a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);\nthis.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));if(!0===b)for(var c=0;c<a.children.length;c++)this.add(a.children[c].clone());return this}});THREE.Object3DIdCount=0;\nTHREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=Array.isArray(d)?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0};\nTHREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();b=0;for(c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}};\nTHREE.BufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.array=a;this.itemSize=b;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0;this.normalized=!0===c};\nTHREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(a){!0===a&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);\nreturn this},copyColorsArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\",d),f=new THREE.Color);b[c++]=f.r;b[c++]=f.g;b[c++]=f.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];b[c++]=f.a;b[c++]=f.b;b[c++]=f.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",\nd),f=new THREE.Vector2);b[c++]=f.x;b[c++]=f.y}return this},copyVector3sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",d),f=new THREE.Vector3);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z}return this},copyVector4sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",d),f=new THREE.Vector4);\nb[c++]=f.x;b[c++]=f.y;b[c++]=f.z;b[c++]=f.w}return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,b){this.array[a*this.itemSize]=b;return this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*\nthis.itemSize+3]},setW:function(a,b){this.array[a*this.itemSize+3]=b;return this},setXY:function(a,b,c){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},clone:function(){return(new this.constructor).copy(this)}};\nTHREE.Int8Attribute=function(a,b){return new THREE.BufferAttribute(new Int8Array(a),b)};THREE.Uint8Attribute=function(a,b){return new THREE.BufferAttribute(new Uint8Array(a),b)};THREE.Uint8ClampedAttribute=function(a,b){return new THREE.BufferAttribute(new Uint8ClampedArray(a),b)};THREE.Int16Attribute=function(a,b){return new THREE.BufferAttribute(new Int16Array(a),b)};THREE.Uint16Attribute=function(a,b){return new THREE.BufferAttribute(new Uint16Array(a),b)};\nTHREE.Int32Attribute=function(a,b){return new THREE.BufferAttribute(new Int32Array(a),b)};THREE.Uint32Attribute=function(a,b){return new THREE.BufferAttribute(new Uint32Array(a),b)};THREE.Float32Attribute=function(a,b){return new THREE.BufferAttribute(new Float32Array(a),b)};THREE.Float64Attribute=function(a,b){return new THREE.BufferAttribute(new Float64Array(a),b)};\nTHREE.DynamicBufferAttribute=function(a,b){console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.\");return(new THREE.BufferAttribute(a,b)).setDynamic(!0)};THREE.InstancedBufferAttribute=function(a,b,c){THREE.BufferAttribute.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute;\nTHREE.InstancedBufferAttribute.prototype.copy=function(a){THREE.BufferAttribute.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBuffer=function(a,b){this.uuid=THREE.Math.generateUUID();this.array=a;this.stride=b;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0};\nTHREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(a){!0===a&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.stride=a.stride;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(var d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,\nb){void 0===b&&(b=0);this.array.set(a,b);return this},clone:function(){return(new this.constructor).copy(this)}};THREE.InstancedInterleavedBuffer=function(a,b,c){THREE.InterleavedBuffer.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype);THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer;\nTHREE.InstancedInterleavedBuffer.prototype.copy=function(a){THREE.InterleavedBuffer.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.data=a;this.itemSize=b;this.offset=c};\nTHREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");return this.array.length},get count(){return this.data.count},setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+2]=b;return this},\nsetW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;return this},setXYZ:function(a,\nb,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this}};\nTHREE.Geometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Geometry\";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=\nthis.verticesNeedUpdate=!1};\nObject.assign(THREE.Geometry.prototype,THREE.EventDispatcher.prototype,{applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();\nthis.normalsNeedUpdate=this.verticesNeedUpdate=!0;return this},rotateX:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,\nc,d){void 0===a&&(a=new THREE.Matrix4);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(a){function b(a,b,d,e){var f=void 0!==g?[n[a].clone(),n[b].clone(),n[d].clone()]:[],q=void 0!==h?[c.colors[a].clone(),\nc.colors[b].clone(),c.colors[d].clone()]:[];e=new THREE.Face3(a,b,d,f,q,e);c.faces.push(e);void 0!==k&&c.faceVertexUvs[0].push([p[a].clone(),p[b].clone(),p[d].clone()]);void 0!==l&&c.faceVertexUvs[1].push([m[a].clone(),m[b].clone(),m[d].clone()])}var c=this,d=null!==a.index?a.index.array:void 0,e=a.attributes,f=e.position.array,g=void 0!==e.normal?e.normal.array:void 0,h=void 0!==e.color?e.color.array:void 0,k=void 0!==e.uv?e.uv.array:void 0,l=void 0!==e.uv2?e.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=\n[]);for(var n=[],p=[],m=[],q=e=0;e<f.length;e+=3,q+=2)c.vertices.push(new THREE.Vector3(f[e],f[e+1],f[e+2])),void 0!==g&&n.push(new THREE.Vector3(g[e],g[e+1],g[e+2])),void 0!==h&&c.colors.push(new THREE.Color(h[e],h[e+1],h[e+2])),void 0!==k&&p.push(new THREE.Vector2(k[q],k[q+1])),void 0!==l&&m.push(new THREE.Vector2(l[q],l[q+1]));if(void 0!==d)if(f=a.groups,0<f.length)for(e=0;e<f.length;e++)for(var r=f[e],s=r.start,t=r.count,q=s,s=s+t;q<s;q+=3)b(d[q],d[q+1],d[q+2],r.materialIndex);else for(e=0;e<\nd.length;e+=3)b(d[e],d[e+1],d[e+2]);else for(e=0;e<f.length/3;e+=3)b(e,e+1,e+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,b=this.boundingSphere.radius,b=0===b?1:1/\nb,c=new THREE.Matrix4;c.set(b,0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){void 0===a&&(a=!0);var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<\nc;b++)d[b]=new THREE.Vector3;if(a){var e,f,g,h=new THREE.Vector3,k=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),k.subVectors(e,f),h.cross(k),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=\nthis.faces[a],e=c.vertexNormals,3===e.length?(e[0].copy(d[c.a]),e[1].copy(d[c.b]),e[2].copy(d[c.c])):(e[0]=d[c.a].clone(),e[1]=d[c.b].clone(),e[2]=d[c.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<\nb;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var g=this.morphNormals[a].vertexNormals,h,k;c=0;for(d=this.faces.length;c<d;c++)h=new THREE.Vector3,k={a:new THREE.Vector3,\nb:new THREE.Vector3,c:new THREE.Vector3},e.push(h),g.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){console.warn(\"THREE.Geometry: .computeTangents() has been removed.\")},\ncomputeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(!1===a instanceof THREE.Geometry)console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",\na);else{var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===c&&(c=0);void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var n=0,p=g.length;n<p;n++){var m=g[n].clone();void 0!==b&&m.applyMatrix4(b);f.push(m)}n=0;for(p=k.length;n<p;n++){var g=k[n],q,r=g.vertexNormals,s=g.vertexColors,m=new THREE.Face3(g.a+e,g.b+e,g.c+e);m.normal.copy(g.normal);void 0!==d&&m.normal.applyMatrix3(d).normalize();b=0;for(f=r.length;b<\nf;b++)q=r[b].clone(),void 0!==d&&q.applyMatrix3(d).normalize(),m.vertexNormals.push(q);m.color.copy(g.color);b=0;for(f=s.length;b<f;b++)q=s[b],m.vertexColors.push(q.clone());m.materialIndex=g.materialIndex+c;h.push(m)}n=0;for(p=a.length;n<p;n++)if(c=a[n],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());l.push(d)}}},mergeMesh:function(a){!1===a instanceof THREE.Mesh?console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",a):(a.matrixAutoUpdate&&a.updateMatrix(),\nthis.merge(a.geometry,a.matrix))},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+\"_\"+Math.round(d.y*e)+\"_\"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(g=this.faces.length;f<g;f++)for(e=this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]===e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,\n1),c=0,g=this.faceVertexUvs.length;c<g;c++)this.faceVertexUvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return f},sortFacesByMaterialIndex:function(){for(var a=this.faces,b=a.length,c=0;c<b;c++)a[c]._id=c;a.sort(function(a,b){return a.materialIndex-b.materialIndex});var d=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f,g;d&&d.length===b&&(f=[]);e&&e.length===b&&(g=[]);for(c=0;c<b;c++){var h=a[c]._id;f&&f.push(d[h]);g&&g.push(e[h])}f&&(this.faceVertexUvs[0]=f);g&&(this.faceVertexUvs[1]=\ng)},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==l[b])return l[b];l[b]=k.length/3;k.push(a.x,a.y,a.z);return l[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==p[b])return p[b];p[b]=n.length;n.push(a.getHex());return p[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==q[b])return q[b];q[b]=m.length/2;m.push(a.x,a.y);return q[b]}var e={metadata:{version:4.4,type:\"Geometry\",\ngenerator:\"Geometry.toJSON\"}};e.uuid=this.uuid;e.type=this.type;\"\"!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},n=[],p={},m=[],q={};for(g=0;g<this.faces.length;g++){var r=this.faces[g],s=void 0!==this.faceVertexUvs[0][g],t=0<r.normal.length(),u=0<r.vertexNormals.length,v=1!==r.color.r||1!==r.color.g||1!==r.color.b,\nC=0<r.vertexColors.length,w=0,w=a(w,0,0),w=a(w,1,!0),w=a(w,2,!1),w=a(w,3,s),w=a(w,4,t),w=a(w,5,u),w=a(w,6,v),w=a(w,7,C);h.push(w);h.push(r.a,r.b,r.c);h.push(r.materialIndex);s&&(s=this.faceVertexUvs[0][g],h.push(d(s[0]),d(s[1]),d(s[2])));t&&h.push(b(r.normal));u&&(t=r.vertexNormals,h.push(b(t[0]),b(t[1]),b(t[2])));v&&h.push(c(r.color));C&&(r=r.vertexColors,h.push(c(r[0]),c(r[1]),c(r[2])))}e.data={};e.data.vertices=f;e.data.normals=k;0<n.length&&(e.data.colors=n);0<m.length&&(e.data.uvs=[m]);e.data.faces=\nh;return e},clone:function(){return(new THREE.Geometry).copy(this)},copy:function(a){this.vertices=[];this.faces=[];this.faceVertexUvs=[[]];for(var b=a.vertices,c=0,d=b.length;c<d;c++)this.vertices.push(b[c].clone());b=a.faces;c=0;for(d=b.length;c<d;c++)this.faces.push(b[c].clone());c=0;for(d=a.faceVertexUvs.length;c<d;c++){b=a.faceVertexUvs[c];void 0===this.faceVertexUvs[c]&&(this.faceVertexUvs[c]=[]);for(var e=0,f=b.length;e<f;e++){for(var g=b[e],h=[],k=0,l=g.length;k<l;k++)h.push(g[k].clone());\nthis.faceVertexUvs[c].push(h)}}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}});THREE.GeometryIdCount=0;\nTHREE.DirectGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"DirectGeometry\";this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1};\nObject.assign(THREE.DirectGeometry.prototype,THREE.EventDispatcher.prototype,{computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn(\"THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.\")},computeVertexNormals:function(){console.warn(\"THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.\")},computeGroups:function(a){var b,\nc=[],d;a=a.faces;for(var e=0;e<a.length;e++){var f=a[e];f.materialIndex!==d&&(d=f.materialIndex,void 0!==b&&(b.count=3*e-b.start,c.push(b)),b={start:3*e,materialIndex:d})}void 0!==b&&(b.count=3*e-b.start,c.push(b));this.groups=c},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,e=d[0]&&0<d[0].length,f=d[1]&&0<d[1].length,g=a.morphTargets,h=g.length,k;if(0<h){k=[];for(var l=0;l<h;l++)k[l]=[];this.morphTargets.position=k}var n=a.morphNormals,p=n.length,m;if(0<p){m=[];for(l=0;l<\np;l++)m[l]=[];this.morphTargets.normal=m}for(var q=a.skinIndices,r=a.skinWeights,s=q.length===c.length,t=r.length===c.length,l=0;l<b.length;l++){var u=b[l];this.vertices.push(c[u.a],c[u.b],c[u.c]);var v=u.vertexNormals;3===v.length?this.normals.push(v[0],v[1],v[2]):(v=u.normal,this.normals.push(v,v,v));v=u.vertexColors;3===v.length?this.colors.push(v[0],v[1],v[2]):(v=u.color,this.colors.push(v,v,v));!0===e&&(v=d[0][l],void 0!==v?this.uvs.push(v[0],v[1],v[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \",\nl),this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)));!0===f&&(v=d[1][l],void 0!==v?this.uvs2.push(v[0],v[1],v[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \",l),this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)));for(v=0;v<h;v++){var C=g[v].vertices;k[v].push(C[u.a],C[u.b],C[u.c])}for(v=0;v<p;v++)C=n[v].vertexNormals[l],m[v].push(C.a,C.b,C.c);s&&this.skinIndices.push(q[u.a],q[u.b],q[u.c]);t&&this.skinWeights.push(r[u.a],r[u.b],\nr[u.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}});\nTHREE.BufferGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"BufferGeometry\";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}};\nObject.assign(THREE.BufferGeometry.prototype,THREE.EventDispatcher.prototype,{getIndex:function(){return this.index},setIndex:function(a){this.index=a},addAttribute:function(a,b,c){if(!1===b instanceof THREE.BufferAttribute&&!1===b instanceof THREE.InterleavedBufferAttribute)console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.addAttribute(a,new THREE.BufferAttribute(b,c));else if(\"index\"===a)console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"),\nthis.setIndex(b);else return this.attributes[a]=b,this},getAttribute:function(a){return this.attributes[a]},removeAttribute:function(a){delete this.attributes[a];return this},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=b},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);b=this.attributes.normal;\nvoid 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this},rotateX:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;\nreturn function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),\ncenter:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a instanceof THREE.Points||a instanceof THREE.Line){a=new THREE.Float32Attribute(3*b.vertices.length,3);var c=new THREE.Float32Attribute(3*b.colors.length,3);this.addAttribute(\"position\",a.copyVector3sArray(b.vertices));this.addAttribute(\"color\",c.copyColorsArray(b.colors));b.lineDistances&&b.lineDistances.length===b.vertices.length&&\n(a=new THREE.Float32Attribute(b.lineDistances.length,1),this.addAttribute(\"lineDistance\",a.copyArray(b.lineDistances)));null!==b.boundingSphere&&(this.boundingSphere=b.boundingSphere.clone());null!==b.boundingBox&&(this.boundingBox=b.boundingBox.clone())}else a instanceof THREE.Mesh&&b instanceof THREE.Geometry&&this.fromGeometry(b);return this},updateFromObject:function(a){var b=a.geometry;if(a instanceof THREE.Mesh){var c=b.__directGeometry;if(void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=\nb.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.groupsNeedUpdate=!1;b=c}!0===b.verticesNeedUpdate&&(c=this.attributes.position,void 0!==c&&(c.copyVector3sArray(b.vertices),c.needsUpdate=!0),b.verticesNeedUpdate=!1);!0===b.normalsNeedUpdate&&(c=this.attributes.normal,void 0!==c&&(c.copyVector3sArray(b.normals),\nc.needsUpdate=!0),b.normalsNeedUpdate=!1);!0===b.colorsNeedUpdate&&(c=this.attributes.color,void 0!==c&&(c.copyColorsArray(b.colors),c.needsUpdate=!0),b.colorsNeedUpdate=!1);b.uvsNeedUpdate&&(c=this.attributes.uv,void 0!==c&&(c.copyVector2sArray(b.uvs),c.needsUpdate=!0),b.uvsNeedUpdate=!1);b.lineDistancesNeedUpdate&&(c=this.attributes.lineDistance,void 0!==c&&(c.copyArray(b.lineDistances),c.needsUpdate=!0),b.lineDistancesNeedUpdate=!1);b.groupsNeedUpdate&&(b.computeGroups(a.geometry),this.groups=\nb.groups,b.groupsNeedUpdate=!1);return this},fromGeometry:function(a){a.__directGeometry=(new THREE.DirectGeometry).fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){var b=new Float32Array(3*a.vertices.length);this.addAttribute(\"position\",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.vertices));0<a.normals.length&&(b=new Float32Array(3*a.normals.length),this.addAttribute(\"normal\",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.normals)));\n0<a.colors.length&&(b=new Float32Array(3*a.colors.length),this.addAttribute(\"color\",(new THREE.BufferAttribute(b,3)).copyColorsArray(a.colors)));0<a.uvs.length&&(b=new Float32Array(2*a.uvs.length),this.addAttribute(\"uv\",(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs)));0<a.uvs2.length&&(b=new Float32Array(2*a.uvs2.length),this.addAttribute(\"uv2\",(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs2)));0<a.indices.length&&(b=new (65535<a.vertices.length?Uint32Array:Uint16Array)(3*a.indices.length),\nthis.setIndex((new THREE.BufferAttribute(b,1)).copyIndicesArray(a.indices)));this.groups=a.groups;for(var c in a.morphTargets){for(var b=[],d=a.morphTargets[c],e=0,f=d.length;e<f;e++){var g=d[e],h=new THREE.Float32Attribute(3*g.length,3);b.push(h.copyVector3sArray(g))}this.morphAttributes[c]=b}0<a.skinIndices.length&&(c=new THREE.Float32Attribute(4*a.skinIndices.length,4),this.addAttribute(\"skinIndex\",c.copyVector4sArray(a.skinIndices)));0<a.skinWeights.length&&(c=new THREE.Float32Attribute(4*a.skinWeights.length,\n4),this.addAttribute(\"skinWeight\",c.copyVector4sArray(a.skinWeights)));null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;void 0!==a?this.boundingBox.setFromArray(a):this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&\nconsole.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position;if(c){var c=c.array,d=this.boundingSphere.center;a.setFromArray(c);a.center(d);for(var e=0,f=0,g=c.length;f<g;f+=3)b.fromArray(c,f),e=Math.max(e,d.distanceToSquared(b));\nthis.boundingSphere.radius=Math.sqrt(e);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index,b=this.attributes,c=this.groups;if(b.position){var d=b.position.array;if(void 0===b.normal)this.addAttribute(\"normal\",new THREE.BufferAttribute(new Float32Array(d.length),3));else for(var e=b.normal.array,\nf=0,g=e.length;f<g;f++)e[f]=0;var e=b.normal.array,h,k,l,n=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3;if(a){a=a.array;0===c.length&&this.addGroup(0,a.length);for(var s=0,t=c.length;s<t;++s)for(f=c[s],g=f.start,h=f.count,f=g,g+=h;f<g;f+=3)h=3*a[f+0],k=3*a[f+1],l=3*a[f+2],n.fromArray(d,h),p.fromArray(d,k),m.fromArray(d,l),q.subVectors(m,p),r.subVectors(n,p),q.cross(r),e[h]+=q.x,e[h+1]+=q.y,e[h+2]+=q.z,e[k]+=q.x,e[k+1]+=q.y,e[k+2]+=q.z,e[l]+=q.x,\ne[l+1]+=q.y,e[l+2]+=q.z}else for(f=0,g=d.length;f<g;f+=9)n.fromArray(d,f),p.fromArray(d,f+3),m.fromArray(d,f+6),q.subVectors(m,p),r.subVectors(n,p),q.cross(r),e[f]=q.x,e[f+1]=q.y,e[f+2]=q.z,e[f+3]=q.x,e[f+4]=q.y,e[f+5]=q.z,e[f+6]=q.x,e[f+7]=q.y,e[f+8]=q.z;this.normalizeNormals();b.normal.needsUpdate=!0}},merge:function(a,b){if(!1===a instanceof THREE.BufferGeometry)console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",a);else{void 0===b&&(b=0);var c=this.attributes,\nd;for(d in c)if(void 0!==a.attributes[d])for(var e=c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},toNonIndexed:function(){if(null===this.index)return console.warn(\"THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.\"),this;var a=new THREE.BufferGeometry,\nb=this.index.array,c=this.attributes,d;for(d in c){for(var e=c[d],f=e.array,e=e.itemSize,g=new f.constructor(b.length*e),h=0,k=0,l=0,n=b.length;l<n;l++)for(var h=b[l]*e,p=0;p<e;p++)g[k++]=f[h++];a.addAttribute(d,new THREE.BufferAttribute(g,e))}return a},toJSON:function(){var a={metadata:{version:4.4,type:\"BufferGeometry\",generator:\"BufferGeometry.toJSON\"}};a.uuid=this.uuid;a.type=this.type;\"\"!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters,c;for(c in b)void 0!==\nb[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};var d=this.index;null!==d&&(b=Array.prototype.slice.call(d.array),a.data.index={type:d.array.constructor.name,array:b});d=this.attributes;for(c in d){var e=d[c],b=Array.prototype.slice.call(e.array);a.data.attributes[c]={itemSize:e.itemSize,type:e.array.constructor.name,array:b,normalized:e.normalized}}c=this.groups;0<c.length&&(a.data.groups=JSON.parse(JSON.stringify(c)));c=this.boundingSphere;null!==c&&(a.data.boundingSphere={center:c.center.toArray(),\nradius:c.radius});return a},clone:function(){return(new THREE.BufferGeometry).copy(this)},copy:function(a){var b=a.index;null!==b&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count,d.materialIndex)}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}});THREE.BufferGeometry.MaxIndex=65535;\nTHREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this);this.type=\"InstancedBufferGeometry\";this.maxInstancedCount=void 0};THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry;THREE.InstancedBufferGeometry.prototype.addGroup=function(a,b,c){this.groups.push({start:a,count:b,instances:c})};\nTHREE.InstancedBufferGeometry.prototype.copy=function(a){var b=a.index;null!==b&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count,d.instances)}return this};THREE.Uniform=function(a,b){\"string\"===typeof a&&(console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"),a=b);this.value=a;this.dynamic=!1};\nTHREE.Uniform.prototype={constructor:THREE.Uniform,onUpdate:function(a){this.dynamic=!0;this.onUpdateCallback=a;return this}};THREE.AnimationAction=function(){throw Error(\"THREE.AnimationAction: Use mixer.clipAction for construction.\");};\nTHREE.AnimationAction._new=function(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;b=a.length;c=Array(b);for(var d={endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},e=0;e!==b;++e){var f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=THREE.LoopRepeat;this._loopCount=\n-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0};\nTHREE.AnimationAction._new.prototype={constructor:THREE.AnimationAction._new,play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},\nstartAt:function(a){this._startTime=a;return this},setLoop:function(a,b){this.loop=a;this.repetitions=b;return this},setEffectiveWeight:function(a){this.weight=a;this._effectiveWeight=this.enabled?a:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(a){return this._scheduleFading(a,0,1)},fadeOut:function(a){return this._scheduleFading(a,1,0)},crossFadeFrom:function(a,b,c){a.fadeOut(b);this.fadeIn(b);if(c){c=this._clip.duration;var d=a._clip.duration,\ne=c/d;a.warp(1,d/c,b);this.warp(e,1,b)}return this},crossFadeTo:function(a,b,c){return a.crossFadeFrom(this,b,c)},stopFading:function(){var a=this._weightInterpolant;null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},setEffectiveTimeScale:function(a){this.timeScale=a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(a){this.timeScale=this._clip.duration/\na;return this.stopWarping()},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()},halt:function(a){return this.warp(this._effectiveTimeScale,0,a)},warp:function(a,b,c){var d=this._mixer,e=d.time,f=this._timeScaleInterpolant,g=this.timeScale;null===f&&(this._timeScaleInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;d[1]=e+c;f[0]=a/g;f[1]=b/g;return this},stopWarping:function(){var a=this._timeScaleInterpolant;null!==a&&\n(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(a,b,c,d){var e=this._startTime;if(null!==e){b=(a-e)*c;if(0>b||0===c)return;this._startTime=null;b*=c}b*=this._updateTimeScale(a);c=this._updateTime(b);a=this._updateWeight(a);if(0<a){b=this._interpolants;for(var e=this._propertyBindings,f=0,g=b.length;f!==\ng;++f)b[f].evaluate(c),e[f].accumulate(d,a)}},_updateWeight:function(a){var b=0;if(this.enabled){var b=this.weight,c=this._weightInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b},_updateTimeScale:function(a){var b=0;if(!this.paused){var b=this.timeScale,c=this._timeScaleInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:\nthis.timeScale=b)}}return this._effectiveTimeScale=b},_updateTime:function(a){var b=this.time+a;if(0===a)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount;if(d===THREE.LoopOnce)a:{if(-1===e&&(this.loopCount=0,this._setEndings(!0,!0,!1)),b>=c)b=c;else if(0>b)b=0;else break a;this.clampWhenFinished?this.paused=!0:this.enabled=!1;this._mixer.dispatchEvent({type:\"finished\",action:this,direction:0>a?-1:1})}else{d=d===THREE.LoopPingPong;-1===e&&(0<=a?(e=0,this._setEndings(!0,0===this.repetitions,\nd)):this._setEndings(0===this.repetitions,!0,d));if(b>=c||0>b){var f=Math.floor(b/c),b=b-c*f,e=e+Math.abs(f),g=this.repetitions-e;0>g?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,b=0<a?c:0,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:0<a?1:-1})):(0===g?(a=0>a,this._setEndings(a,!a,d)):this._setEndings(!1,!1,d),this._loopCount=e,this._mixer.dispatchEvent({type:\"loop\",action:this,loopDelta:f}))}if(d&&1===(e&1))return this.time=b,c-b}return this.time=b},_setEndings:function(a,\nb,c){var d=this._interpolantSettings;c?(d.endingStart=THREE.ZeroSlopeEnding,d.endingEnd=THREE.ZeroSlopeEnding):(d.endingStart=a?this.zeroSlopeAtStart?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding,d.endingEnd=b?this.zeroSlopeAtEnd?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding)},_scheduleFading:function(a,b,c){var d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(this._weightInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;\nf=f.sampleValues;d[0]=e;f[0]=b;d[1]=e+a;f[1]=c;return this}};THREE.AnimationClip=function(a,b,c){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.uuid=THREE.Math.generateUUID();0>this.duration&&this.resetDuration();this.trim();this.optimize()};\nTHREE.AnimationClip.prototype={constructor:THREE.AnimationClip,resetDuration:function(){for(var a=0,b=0,c=this.tracks.length;b!==c;++b)var d=this.tracks[b],a=Math.max(a,d.times[d.times.length-1]);this.duration=a},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}};\nObject.assign(THREE.AnimationClip,{parse:function(a){for(var b=[],c=a.tracks,d=1/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(THREE.KeyframeTrack.parse(c[e]).scale(d));return new THREE.AnimationClip(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(THREE.KeyframeTrack.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%\ne,g,(g+1)%e);k.push(0,1,0);var l=THREE.AnimationUtils.getKeyframeOrder(h),h=THREE.AnimationUtils.sortedArray(h,1,l),k=THREE.AnimationUtils.sortedArray(k,1,l);d||0!==h[0]||(h.push(e),k.push(k[0]));f.push((new THREE.NumberKeyframeTrack(\".morphTargetInfluences[\"+b[g].name+\"]\",h,k)).scale(1/c))}return new THREE.AnimationClip(a,-1,f)},findByName:function(a,b){var c=a;Array.isArray(a)||(c=a.geometry&&a.geometry.animations||a.animations);for(var d=0;d<c.length;d++)if(c[d].name===b)return c[d];return null},\nCreateClipsFromMorphTargetSequences:function(a,b,c){for(var d={},e=/^([\\w-]*?)([\\d]+)$/,f=0,g=a.length;f<g;f++){var h=a[f],k=h.name.match(e);if(k&&1<k.length){var l=k[1];(k=d[l])||(d[l]=k=[]);k.push(h)}}a=[];for(l in d)a.push(THREE.AnimationClip.CreateFromMorphTargetSequence(l,d[l],b,c));return a},parseAnimation:function(a,b,c){if(!a)return console.error(\"  no animation in JSONLoader data\"),null;c=function(a,b,c,d,e){if(0!==c.length){var f=[],g=[];THREE.AnimationUtils.flattenJSON(c,f,g,d);0!==f.length&&\ne.push(new a(b,f,g))}};var d=[],e=a.name||\"default\",f=a.length||-1,g=a.fps||30;a=a.hierarchy||[];for(var h=0;h<a.length;h++){var k=a[h].keys;if(k&&0!==k.length)if(k[0].morphTargets){for(var f={},l=0;l<k.length;l++)if(k[l].morphTargets)for(var n=0;n<k[l].morphTargets.length;n++)f[k[l].morphTargets[n]]=-1;for(var p in f){for(var m=[],q=[],n=0;n!==k[l].morphTargets.length;++n){var r=k[l];m.push(r.time);q.push(r.morphTarget===p?1:0)}d.push(new THREE.NumberKeyframeTrack(\".morphTargetInfluence[\"+p+\"]\",\nm,q))}f=f.length*(g||1)}else l=\".bones[\"+b[h].name+\"]\",c(THREE.VectorKeyframeTrack,l+\".position\",k,\"pos\",d),c(THREE.QuaternionKeyframeTrack,l+\".quaternion\",k,\"rot\",d),c(THREE.VectorKeyframeTrack,l+\".scale\",k,\"scl\",d)}return 0===d.length?null:new THREE.AnimationClip(e,f,d)}});THREE.AnimationMixer=function(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1};\nObject.assign(THREE.AnimationMixer.prototype,THREE.EventDispatcher.prototype,{clipAction:function(a,b){var c=b||this._root,d=c.uuid,e=\"string\"===typeof a?THREE.AnimationClip.findByName(c,a):a,c=null!==e?e.uuid:a,f=this._actionsByClip[c],g=null;if(void 0!==f){g=f.actionByRoot[d];if(void 0!==g)return g;g=f.knownActions[0];null===e&&(e=g._clip)}if(null===e)return null;e=new THREE.AnimationMixer._Action(this,e,b);this._bindAction(e,g);this._addInactiveAction(e,c,d);return e},existingAction:function(a,\nb){var c=b||this._root,d=c.uuid,c=\"string\"===typeof a?THREE.AnimationClip.findByName(c,a):a,c=this._actionsByClip[c?c.uuid:a];return void 0!==c?c.actionByRoot[d]||null:null},stopAllAction:function(){for(var a=this._actions,b=this._nActiveActions,c=this._bindings,d=this._nActiveBindings,e=this._nActiveBindings=this._nActiveActions=0;e!==b;++e)a[e].reset();for(e=0;e!==d;++e)c[e].useCount=0;return this},update:function(a){a*=this.timeScale;for(var b=this._actions,c=this._nActiveActions,d=this.time+=\na,e=Math.sign(a),f=this._accuIndex^=1,g=0;g!==c;++g){var h=b[g];h.enabled&&h._update(d,a,e,f)}a=this._bindings;b=this._nActiveBindings;for(g=0;g!==b;++g)a[g].apply(f);return this},getRoot:function(){return this._root},uncacheClip:function(a){var b=this._actions;a=a.uuid;var c=this._actionsByClip,d=c[a];if(void 0!==d){for(var d=d.knownActions,e=0,f=d.length;e!==f;++e){var g=d[e];this._deactivateAction(g);var h=g._cacheIndex,k=b[b.length-1];g._cacheIndex=null;g._byClipCacheIndex=null;k._cacheIndex=\nh;b[h]=k;b.pop();this._removeInactiveBindingsForAction(g)}delete c[a]}},uncacheRoot:function(a){a=a.uuid;var b=this._actionsByClip,c;for(c in b){var d=b[c].actionByRoot[a];void 0!==d&&(this._deactivateAction(d),this._removeInactiveAction(d))}c=this._bindingsByRootAndName[a];if(void 0!==c)for(var e in c)a=c[e],a.restoreOriginalState(),this._removeInactiveBinding(a)},uncacheAction:function(a,b){var c=this.existingAction(a,b);null!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}});\nTHREE.AnimationMixer._Action=THREE.AnimationAction._new;\nObject.assign(THREE.AnimationMixer.prototype,{_bindAction:function(a,b){var c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,k=this._bindingsByRootAndName,l=k[h];void 0===l&&(l={},k[h]=l);for(k=0;k!==e;++k){var n=d[k],p=n.name,m=l[p];if(void 0===m){m=f[k];if(void 0!==m){null===m._cacheIndex&&(++m.referenceCount,this._addInactiveBinding(m,h,p));continue}m=new THREE.PropertyMixer(THREE.PropertyBinding.create(c,p,b&&b._propertyBindings[k].binding.parsedPath),\nn.ValueTypeName,n.getValueSize());++m.referenceCount;this._addInactiveBinding(m,h,p)}f[k]=m;g[k].resultBuffer=m.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){var b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]);this._addInactiveAction(a,c,b)}b=a._propertyBindings;c=0;for(d=b.length;c!==d;++c){var e=b[c];0===e.useCount++&&(this._lendBinding(e),e.saveOriginalState())}this._lendAction(a)}},\n_deactivateAction:function(a){if(this._isActiveAction(a)){for(var b=a._propertyBindings,c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},\nget inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){a=a._cacheIndex;return null!==a&&a<this._nActiveActions},_addInactiveAction:function(a,b,c){var d=this._actions,e=this._actionsByClip,f=e[b];void 0===f?(f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f):(b=\nf.knownActions,a._byClipCacheIndex=b.length,b.push(a));a._cacheIndex=d.length;d.push(a);f.actionByRoot[c]=a},_removeInactiveAction:function(a){var b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d;b[d]=c;b.pop();a._cacheIndex=null;var c=a._clip.uuid,d=this._actionsByClip,e=d[c],f=e.knownActions,g=f[f.length-1],h=a._byClipCacheIndex;g._byClipCacheIndex=h;f[h]=g;f.pop();a._byClipCacheIndex=null;delete e.actionByRoot[(b._localRoot||this._root).uuid];0===f.length&&delete d[c];this._removeInactiveBindingsForAction(a)},\n_removeInactiveBindingsForAction:function(a){a=a._propertyBindings;for(var b=0,c=a.length;b!==c;++b){var d=a[b];0===--d.referenceCount&&this._removeInactiveBinding(d)}},_lendAction:function(a){var b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackAction:function(a){var b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_addInactiveBinding:function(a,b,c){var d=this._bindingsByRootAndName,\ne=d[b],f=this._bindings;void 0===e&&(e={},d[b]=e);e[c]=a;a._cacheIndex=f.length;f.push(a)},_removeInactiveBinding:function(a){var b=this._bindings,c=a.binding,d=c.rootNode.uuid,c=c.path,e=this._bindingsByRootAndName,f=e[d],g=b[b.length-1];a=a._cacheIndex;g._cacheIndex=a;b[a]=g;b.pop();delete f[c];a:{for(var h in f)break a;delete e[d]}},_lendBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackBinding:function(a){var b=\nthis._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_lendControlInterpolant:function(){var a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];void 0===c&&(c=new THREE.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),c.__cacheIndex=b,a[b]=c);return c},_takeBackControlInterpolant:function(a){var b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,\ne=b[d];a.__cacheIndex=d;b[d]=a;e.__cacheIndex=c;b[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1)});\nTHREE.AnimationObjectGroup=function(a){this.uuid=THREE.Math.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var b={};this._indicesByUUID=b;for(var c=0,d=arguments.length;c!==d;++c)b[arguments[c].uuid]=c;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}};\nTHREE.AnimationObjectGroup.prototype={constructor:THREE.AnimationObjectGroup,add:function(a){for(var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._paths,g=this._parsedPaths,h=this._bindings,k=h.length,l=0,n=arguments.length;l!==n;++l){var p=arguments[l],m=p.uuid,q=e[m];if(void 0===q){q=c++;e[m]=q;b.push(p);for(var m=0,r=k;m!==r;++m)h[m].push(new THREE.PropertyBinding(p,f[m],g[m]))}else if(q<d){var s=b[q],t=--d,r=b[t];e[r.uuid]=q;b[q]=r;e[m]=t;b[t]=p;m=0;for(r=k;m!==\nr;++m){var u=h[m],v=u[q];u[q]=u[t];void 0===v&&(v=new THREE.PropertyBinding(p,f[m],g[m]));u[t]=v}}else b[q]!==s&&console.error(\"Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...\")}this.nCachedObjects_=d},remove:function(a){for(var b=this._objects,c=this.nCachedObjects_,d=this._indicesByUUID,e=this._bindings,f=e.length,g=0,h=arguments.length;g!==h;++g){var k=arguments[g],l=k.uuid,n=d[l];if(void 0!==n&&n>=c){var p=c++,m=b[p];d[m.uuid]=\nn;b[n]=m;d[l]=p;b[p]=k;k=0;for(l=f;k!==l;++k){var m=e[k],q=m[n];m[n]=m[p];m[p]=q}}}this.nCachedObjects_=c},uncache:function(a){for(var b=this._objects,c=b.length,d=this.nCachedObjects_,e=this._indicesByUUID,f=this._bindings,g=f.length,h=0,k=arguments.length;h!==k;++h){var l=arguments[h].uuid,n=e[l];if(void 0!==n)if(delete e[l],n<d){var l=--d,p=b[l],m=--c,q=b[m];e[p.uuid]=n;b[n]=p;e[q.uuid]=l;b[l]=q;b.pop();p=0;for(q=g;p!==q;++p){var r=f[p],s=r[m];r[n]=r[l];r[l]=s;r.pop()}}else for(m=--c,q=b[m],e[q.uuid]=\nn,b[n]=q,b.pop(),p=0,q=g;p!==q;++p)r=f[p],r[n]=r[m],r.pop()}this.nCachedObjects_=d},subscribe_:function(a,b){var c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];var f=this._paths,g=this._parsedPaths,h=this._objects,k=this.nCachedObjects_,l=Array(h.length),d=e.length;c[a]=d;f.push(a);g.push(b);e.push(l);c=k;for(d=h.length;c!==d;++c)l[c]=new THREE.PropertyBinding(h[c],a,b);return l},unsubscribe_:function(a){var b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){var d=\nthis._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=f[g];b[a[g]]=c;f[c]=h;f.pop();e[c]=e[g];e.pop();d[c]=d[g];d.pop()}}};\nTHREE.AnimationUtils={arraySlice:function(a,b,c){return THREE.AnimationUtils.isTypedArray(a)?new a.constructor(a.subarray(b,c)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:\"number\"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var b=a.length,c=Array(b),d=0;d!==b;++d)c[d]=d;c.sort(function(b,c){return a[b]-a[c]});return c},sortedArray:function(a,\nb,c){for(var d=a.length,e=new a.constructor(d),f=0,g=0;g!==d;++f)for(var h=c[f]*b,k=0;k!==b;++k)e[g++]=a[h+k];return e},flattenJSON:function(a,b,c,d){for(var e=1,f=a[0];void 0!==f&&void 0===f[d];)f=a[e++];if(void 0!==f){var g=f[d];if(void 0!==g)if(Array.isArray(g)){do g=f[d],void 0!==g&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f)}else if(void 0!==g.toArray){do g=f[d],void 0!==g&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==f)}else{do g=f[d],void 0!==g&&(b.push(f.time),\nc.push(g)),f=a[e++];while(void 0!==f)}}}};THREE.KeyframeTrack=function(a,b,c,d){if(void 0===a)throw Error(\"track name is undefined\");if(void 0===b||0===b.length)throw Error(\"no keyframes in track named \"+a);this.name=a;this.times=THREE.AnimationUtils.convertArray(b,this.TimeBufferType);this.values=THREE.AnimationUtils.convertArray(c,this.ValueBufferType);this.setInterpolation(d||this.DefaultInterpolation);this.validate();this.optimize()};\nTHREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(a){return new THREE.DiscreteInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new THREE.LinearInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new THREE.CubicInterpolant(this.times,\nthis.values,this.getValueSize(),a)},setInterpolation:function(a){var b;switch(a){case THREE.InterpolateDiscrete:b=this.InterpolantFactoryMethodDiscrete;break;case THREE.InterpolateLinear:b=this.InterpolantFactoryMethodLinear;break;case THREE.InterpolateSmooth:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){b=\"unsupported interpolation for \"+this.ValueTypeName+\" keyframe track named \"+this.name;if(void 0===this.createInterpolant)if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);\nelse throw Error(b);console.warn(b)}else this.createInterpolant=b},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return THREE.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return THREE.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return THREE.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(a){if(0!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]+=a;return this},\nscale:function(a){if(1!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]*=a;return this},trim:function(a,b){for(var c=this.times,d=c.length,e=0,f=d-1;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;++f;if(0!==e||f!==d)e>=f&&(f=Math.max(f,1),e=f-1),d=this.getValueSize(),this.times=THREE.AnimationUtils.arraySlice(c,e,f),this.values=THREE.AnimationUtils.arraySlice(this.values,e*d,f*d);return this},validate:function(){var a=!0,b=this.getValueSize();0!==b-Math.floor(b)&&(console.error(\"invalid value size in track\",\nthis),a=!1);var c=this.times,b=this.values,d=c.length;0===d&&(console.error(\"track is empty\",this),a=!1);for(var e=null,f=0;f!==d;f++){var g=c[f];if(\"number\"===typeof g&&isNaN(g)){console.error(\"time is not a valid number\",this,f,g);a=!1;break}if(null!==e&&e>g){console.error(\"out of order keys\",this,f,g,e);a=!1;break}e=g}if(void 0!==b&&THREE.AnimationUtils.isTypedArray(b))for(f=0,c=b.length;f!==c;++f)if(d=b[f],isNaN(d)){console.error(\"value is not a valid number\",this,f,d);a=!1;break}return a},optimize:function(){for(var a=\nthis.times,b=this.values,c=this.getValueSize(),d=1,e=1,f=a.length-1;e<=f;++e){var g=!1,h=a[e];if(h!==a[e+1]&&(1!==e||h!==h[0]))for(var k=e*c,l=k-c,n=k+c,h=0;h!==c;++h){var p=b[k+h];if(p!==b[l+h]||p!==b[n+h]){g=!0;break}}if(g){if(e!==d)for(a[d]=a[e],g=e*c,k=d*c,h=0;h!==c;++h)b[k+h]=b[g+h];++d}}d!==a.length&&(this.times=THREE.AnimationUtils.arraySlice(a,0,d),this.values=THREE.AnimationUtils.arraySlice(b,0,d*c));return this}};\nObject.assign(THREE.KeyframeTrack,{parse:function(a){if(void 0===a.type)throw Error(\"track type undefined, can not parse\");var b=THREE.KeyframeTrack._getTrackTypeForValueTypeName(a.type);if(void 0===a.times){var c=[],d=[];THREE.AnimationUtils.flattenJSON(a.keys,c,d,\"value\");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)},toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=b.toJSON(a);else{var b={name:a.name,times:THREE.AnimationUtils.convertArray(a.times,\nArray),values:THREE.AnimationUtils.convertArray(a.values,Array)},c=a.getInterpolation();c!==a.DefaultInterpolation&&(b.interpolation=c)}b.type=a.ValueTypeName;return b},_getTrackTypeForValueTypeName:function(a){switch(a.toLowerCase()){case \"scalar\":case \"double\":case \"float\":case \"number\":case \"integer\":return THREE.NumberKeyframeTrack;case \"vector\":case \"vector2\":case \"vector3\":case \"vector4\":return THREE.VectorKeyframeTrack;case \"color\":return THREE.ColorKeyframeTrack;case \"quaternion\":return THREE.QuaternionKeyframeTrack;\ncase \"bool\":case \"boolean\":return THREE.BooleanKeyframeTrack;case \"string\":return THREE.StringKeyframeTrack}throw Error(\"Unsupported typeName: \"+a);}});THREE.PropertyBinding=function(a,b,c){this.path=b;this.parsedPath=c||THREE.PropertyBinding.parseTrackName(b);this.node=THREE.PropertyBinding.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a};\nTHREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,getValue:function(a,b){this.bind();this.getValue(a,b)},setValue:function(a,b){this.bind();this.setValue(a,b)},bind:function(){var a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;a||(this.node=a=THREE.PropertyBinding.findNode(this.rootNode,b.nodeName)||this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(a){if(c){var f=b.objectIndex;switch(c){case \"materials\":if(!a.material){console.error(\"  can not bind to material as node does not have a material\",\nthis);return}if(!a.material.materials){console.error(\"  can not bind to material.materials as node.material does not have a materials array\",this);return}a=a.material.materials;break;case \"bones\":if(!a.skeleton){console.error(\"  can not bind to bones as node does not have a skeleton\",this);return}a=a.skeleton.bones;for(c=0;c<a.length;c++)if(a[c].name===f){f=c;break}break;default:if(void 0===a[c]){console.error(\"  can not bind to objectName of node, undefined\",this);return}a=a[c]}if(void 0!==f){if(void 0===\na[f]){console.error(\"  trying to bind to objectIndex of objectName, but is undefined:\",this,a);return}a=a[f]}}f=a[d];if(void 0===f)console.error(\"  trying to update property for track: \"+b.nodeName+\".\"+d+\" but it wasn't found.\",a);else{b=this.Versioning.None;void 0!==a.needsUpdate?(b=this.Versioning.NeedsUpdate,this.targetObject=a):void 0!==a.matrixWorldNeedsUpdate&&(b=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=a);c=this.BindingType.Direct;if(void 0!==e){if(\"morphTargetInfluences\"===\nd){if(!a.geometry){console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry\",this);return}if(!a.geometry.morphTargets){console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets\",this);return}for(c=0;c<this.node.geometry.morphTargets.length;c++)if(a.geometry.morphTargets[c].name===e){e=c;break}}c=this.BindingType.ArrayElement;this.resolvedProperty=f;this.propertyIndex=e}else void 0!==f.fromArray&&void 0!==f.toArray?\n(c=this.BindingType.HasFromToArray,this.resolvedProperty=f):void 0!==f.length?(c=this.BindingType.EntireArray,this.resolvedProperty=f):this.propertyName=d;this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][b]}}else console.error(\"  trying to update node for track: \"+this.path+\" but it wasn't found.\")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}};\nObject.assign(THREE.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:THREE.PropertyBinding.prototype.getValue,_setValue_unbound:THREE.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=\nc[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.node[this.propertyName]=a[b]},function(a,b){this.node[this.propertyName]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.node[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++]},function(a,b){for(var c=this.resolvedProperty,\nd=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty[this.propertyIndex]=a[b]},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty.fromArray(a,\nb)},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.matrixWorldNeedsUpdate=!0}]]});THREE.PropertyBinding.Composite=function(a,b,c){c=c||THREE.PropertyBinding.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,c)};\nTHREE.PropertyBinding.Composite.prototype={constructor:THREE.PropertyBinding.Composite,getValue:function(a,b){this.bind();var c=this._bindings[this._targetGroup.nCachedObjects_];void 0!==c&&c.getValue(a,b)},setValue:function(a,b){for(var c=this._bindings,d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)},bind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()},unbind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,\nc=a.length;b!==c;++b)a[b].unbind()}};THREE.PropertyBinding.create=function(a,b,c){return a instanceof THREE.AnimationObjectGroup?new THREE.PropertyBinding.Composite(a,b,c):new THREE.PropertyBinding(a,b,c)};\nTHREE.PropertyBinding.parseTrackName=function(a){var b=/^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/,c=b.exec(a);if(!c)throw Error(\"cannot parse trackName at all: \"+a);c.index===b.lastIndex&&b.lastIndex++;b={nodeName:c[3],objectName:c[5],objectIndex:c[7],propertyName:c[9],propertyIndex:c[11]};if(null===b.propertyName||0===b.propertyName.length)throw Error(\"can not parse propertyName from trackName: \"+a);return b};\nTHREE.PropertyBinding.findNode=function(a,b){if(!b||\"\"===b||\"root\"===b||\".\"===b||-1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){var c=function(a){for(var c=0;c<a.bones.length;c++){var d=a.bones[c];if(d.name===b)return d}return null}(a.skeleton);if(c)return c}if(a.children){var d=function(a){for(var c=0;c<a.length;c++){var g=a[c];if(g.name===b||g.uuid===b||(g=d(g.children)))return g}return null};if(c=d(a.children))return c}return null};\nTHREE.PropertyMixer=function(a,b,c){this.binding=a;this.valueSize=c;a=Float64Array;switch(b){case \"quaternion\":b=this._slerp;break;case \"string\":case \"bool\":a=Array;b=this._select;break;default:b=this._lerp}this.buffer=new a(4*c);this._mixBufferRegion=b;this.referenceCount=this.useCount=this.cumulativeWeight=0};\nTHREE.PropertyMixer.prototype={constructor:THREE.PropertyMixer,accumulate:function(a,b){var c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(0===f){for(f=0;f!==d;++f)c[e+f]=c[f];f=b}else f+=b,this._mixBufferRegion(c,e,0,b/f,d);this.cumulativeWeight=f},apply:function(a){var b=this.valueSize,c=this.buffer;a=a*b+b;var d=this.cumulativeWeight,e=this.binding;this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,3*b,1-d,b);for(var d=b,f=b+b;d!==f;++d)if(c[d]!==c[d+b]){e.setValue(c,a);\nbreak}},saveOriginalState:function(){var a=this.buffer,b=this.valueSize,c=3*b;this.binding.getValue(a,c);for(var d=b;d!==c;++d)a[d]=a[c+d%b];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(a,b,c,d,e){if(.5<=d)for(d=0;d!==e;++d)a[b+d]=a[c+d]},_slerp:function(a,b,c,d,e){THREE.Quaternion.slerpFlat(a,b,a,b,a,c,d)},_lerp:function(a,b,c,d,e){for(var f=1-d,g=0;g!==e;++g){var h=b+g;a[h]=a[h]*f+a[c+g]*d}}};\nTHREE.BooleanKeyframeTrack=function(a,b,c){THREE.KeyframeTrack.call(this,a,b,c)};THREE.BooleanKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.BooleanKeyframeTrack,ValueTypeName:\"bool\",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});THREE.ColorKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\nTHREE.ColorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.ColorKeyframeTrack,ValueTypeName:\"color\"});THREE.NumberKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};THREE.NumberKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.NumberKeyframeTrack,ValueTypeName:\"number\"});THREE.QuaternionKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\nTHREE.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.QuaternionKeyframeTrack,ValueTypeName:\"quaternion\",DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodLinear:function(a){return new THREE.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0});THREE.StringKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\nTHREE.StringKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.StringKeyframeTrack,ValueTypeName:\"string\",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});THREE.VectorKeyframeTrack=function(a,b,c,d){THREE.KeyframeTrack.call(this,a,b,c,d)};\nTHREE.VectorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.VectorKeyframeTrack,ValueTypeName:\"vector\"});\nTHREE.Audio=function(a){THREE.Object3D.call(this);this.type=\"Audio\";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType=\"empty\";this.filters=[]};\nTHREE.Audio.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Audio,getOutput:function(){return this.gain},setNodeSource:function(a){this.hasPlaybackControl=!1;this.sourceType=\"audioNode\";this.source=a;this.connect();return this},setBuffer:function(a){this.source.buffer=a;this.sourceType=\"buffer\";this.autoplay&&this.play();return this},play:function(){if(!0===this.isPlaying)console.warn(\"THREE.Audio: Audio is already playing.\");else if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");\nelse{var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.start(0,this.startTime);a.playbackRate.value=this.playbackRate;this.isPlaying=!0;this.source=a;return this.connect()}},pause:function(){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");else return this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this},stop:function(){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");\nelse return this.source.stop(),this.startTime=0,this.isPlaying=!1,this},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-\n1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(a){a||(a=[]);!0===this.isPlaying?(this.disconnect(),this.filters=a,this.connect()):this.filters=a;return this},getFilter:function(){return this.getFilters()[0]},setFilter:function(a){return this.setFilters(a?[a]:[])},setPlaybackRate:function(a){if(!1===this.hasPlaybackControl)console.warn(\"THREE.Audio: this Audio has no playback control.\");\nelse return this.playbackRate=a,!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn(\"THREE.Audio: this Audio has no playback control.\"),!1):this.source.loop},setLoop:function(a){!1===this.hasPlaybackControl?console.warn(\"THREE.Audio: this Audio has no playback control.\"):this.source.loop=a},getVolume:function(){return this.gain.gain.value},\nsetVolume:function(a){this.gain.gain.value=a;return this}});THREE.AudioAnalyser=function(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser)};\nObject.assign(THREE.AudioAnalyser.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){for(var a=0,b=this.getFrequencyData(),c=0;c<b.length;c++)a+=b[c];return a/b.length}});Object.defineProperty(THREE,\"AudioContext\",{get:function(){var a;return function(){void 0===a&&(a=new (window.AudioContext||window.webkitAudioContext));return a}}()});\nTHREE.PositionalAudio=function(a){THREE.Audio.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)};\nTHREE.PositionalAudio.prototype=Object.assign(Object.create(THREE.Audio.prototype),{constructor:THREE.PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(a){this.panner.refDistance=a},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(a){this.panner.rolloffFactor=a},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(a){this.panner.distanceModel=\na},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(a){this.panner.maxDistance=a},updateMatrixWorld:function(){var a=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}}()});\nTHREE.AudioListener=function(){THREE.Object3D.call(this);this.type=\"AudioListener\";this.context=THREE.AudioContext;this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null};\nTHREE.AudioListener.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.AudioListener,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(a){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):\nthis.gain.disconnect(this.context.destination);this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(a){this.gain.gain.value=a},updateMatrixWorld:function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3;return function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e);e=this.context.listener;var f=this.up;this.matrixWorld.decompose(a,\nb,c);d.set(0,0,-1).applyQuaternion(b);e.setPosition(a.x,a.y,a.z);e.setOrientation(d.x,d.y,d.z,f.x,f.y,f.z)}}()});THREE.Camera=function(){THREE.Object3D.call(this);this.type=\"Camera\";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;\nTHREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)};\nTHREE.Camera.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);return this};\nTHREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);this.type=\"CubeCamera\";var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));\nthis.add(g);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var k=new THREE.PerspectiveCamera(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,-1));this.add(k);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){null===this.parent&&this.updateMatrixWorld();var c=this.renderTarget,m=c.texture.generateMipmaps;c.texture.generateMipmaps=\n!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=m;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;\nTHREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.type=\"OrthographicCamera\";this.zoom=1;this.view=null;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};\nTHREE.OrthographicCamera.prototype=Object.assign(Object.create(THREE.Camera.prototype),{constructor:THREE.OrthographicCamera,copy:function(a){THREE.Camera.prototype.copy.call(this,a);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;this.view=null===a.view?null:Object.assign({},a.view);return this},setViewOffset:function(a,b,c,d,e,f){this.view={fullWidth:a,fullHeight:b,offsetX:c,offsetY:d,width:e,height:f};this.updateProjectionMatrix()},\nclearViewOffset:function(){this.view=null;this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2,e=c-a,c=c+a,a=d+b,b=d-b;if(null!==this.view)var c=this.zoom/(this.view.width/this.view.fullWidth),b=this.zoom/(this.view.height/this.view.fullHeight),f=(this.right-this.left)/this.view.width,d=(this.top-this.bottom)/this.view.height,e=e+this.view.offsetX/c*f,\nc=e+this.view.width/c*f,a=a-this.view.offsetY/b*d,b=a-this.view.height/b*d;this.projectionMatrix.makeOrthographic(e,c,a,b,this.near,this.far)},toJSON:function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;null!==this.view&&(a.object.view=Object.assign({},this.view));return a}});\nTHREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.type=\"PerspectiveCamera\";this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()};\nTHREE.PerspectiveCamera.prototype=Object.assign(Object.create(THREE.Camera.prototype),{constructor:THREE.PerspectiveCamera,copy:function(a){THREE.Camera.prototype.copy.call(this,a);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;this.view=null===a.view?null:Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this},setFocalLength:function(a){a=.5*this.getFilmHeight()/a;this.fov=2*THREE.Math.RAD2DEG*Math.atan(a);\nthis.updateProjectionMatrix()},getFocalLength:function(){var a=Math.tan(.5*THREE.Math.DEG2RAD*this.fov);return.5*this.getFilmHeight()/a},getEffectiveFOV:function(){return 2*THREE.Math.RAD2DEG*Math.atan(Math.tan(.5*THREE.Math.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(a,b,c,d,e,f){this.aspect=a/b;this.view={fullWidth:a,fullHeight:b,offsetX:c,offsetY:d,\nwidth:e,height:f};this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null;this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=this.near,b=a*Math.tan(.5*THREE.Math.DEG2RAD*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==f)var g=f.fullWidth,h=f.fullHeight,e=e+f.offsetX*d/g,b=b-f.offsetY*c/h,d=f.width/g*d,c=f.height/h*c;f=this.filmOffset;0!==f&&(e+=a*f/this.getFilmWidth());this.projectionMatrix.makeFrustum(e,e+d,b-c,b,a,this.far)},toJSON:function(a){a=\nTHREE.Object3D.prototype.toJSON.call(this,a);a.object.fov=this.fov;a.object.zoom=this.zoom;a.object.near=this.near;a.object.far=this.far;a.object.focus=this.focus;a.object.aspect=this.aspect;null!==this.view&&(a.object.view=Object.assign({},this.view));a.object.filmGauge=this.filmGauge;a.object.filmOffset=this.filmOffset;return a}});\nTHREE.StereoCamera=function(){this.type=\"StereoCamera\";this.aspect=1;this.cameraL=new THREE.PerspectiveCamera;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new THREE.PerspectiveCamera;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1};\nObject.assign(THREE.StereoCamera.prototype,{update:function(){var a,b,c,d,e,f=new THREE.Matrix4,g=new THREE.Matrix4;return function(h){if(a!==h.focus||b!==h.fov||c!==h.aspect*this.aspect||d!==h.near||e!==h.far){a=h.focus;b=h.fov;c=h.aspect*this.aspect;d=h.near;e=h.far;var k=h.projectionMatrix.clone(),l=.032*d/a,n=d*Math.tan(THREE.Math.DEG2RAD*b*.5),p,m;g.elements[12]=-.032;f.elements[12]=.032;p=-n*c+l;m=n*c+l;k.elements[0]=2*d/(m-p);k.elements[8]=(m+p)/(m-p);this.cameraL.projectionMatrix.copy(k);\np=-n*c-l;m=n*c-l;k.elements[0]=2*d/(m-p);k.elements[8]=(m+p)/(m-p);this.cameraR.projectionMatrix.copy(k)}this.cameraL.matrixWorld.copy(h.matrixWorld).multiply(g);this.cameraR.matrixWorld.copy(h.matrixWorld).multiply(f)}}()});THREE.Light=function(a,b){THREE.Object3D.call(this);this.type=\"Light\";this.color=new THREE.Color(a);this.intensity=void 0!==b?b:1;this.receiveShadow=void 0};\nTHREE.Light.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Light,copy:function(a){THREE.Object3D.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this},toJSON:function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.color=this.color.getHex();a.object.intensity=this.intensity;void 0!==this.groundColor&&(a.object.groundColor=this.groundColor.getHex());void 0!==this.distance&&(a.object.distance=this.distance);void 0!==\nthis.angle&&(a.object.angle=this.angle);void 0!==this.decay&&(a.object.decay=this.decay);void 0!==this.penumbra&&(a.object.penumbra=this.penumbra);return a}});THREE.LightShadow=function(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new THREE.Vector2(512,512);this.map=null;this.matrix=new THREE.Matrix4};Object.assign(THREE.LightShadow.prototype,{copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this},clone:function(){return(new this.constructor).copy(this)}});\nTHREE.AmbientLight=function(a,b){THREE.Light.call(this,a,b);this.type=\"AmbientLight\";this.castShadow=void 0};THREE.AmbientLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.AmbientLight});THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a,b);this.type=\"DirectionalLight\";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.shadow=new THREE.DirectionalLightShadow};\nTHREE.DirectionalLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.DirectionalLight,copy:function(a){THREE.Light.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});THREE.DirectionalLightShadow=function(a){THREE.LightShadow.call(this,new THREE.OrthographicCamera(-5,5,5,-5,.5,500))};THREE.DirectionalLightShadow.prototype=Object.assign(Object.create(THREE.LightShadow.prototype),{constructor:THREE.DirectionalLightShadow});\nTHREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a,c);this.type=\"HemisphereLight\";this.castShadow=void 0;this.position.set(0,1,0);this.updateMatrix();this.groundColor=new THREE.Color(b)};THREE.HemisphereLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.HemisphereLight,copy:function(a){THREE.Light.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this}});\nTHREE.PointLight=function(a,b,c,d){THREE.Light.call(this,a,b);this.type=\"PointLight\";Object.defineProperty(this,\"power\",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=a/(4*Math.PI)}});this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,.5,500))};\nTHREE.PointLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.PointLight,copy:function(a){THREE.Light.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this}});\nTHREE.SpotLight=function(a,b,c,d,e,f){THREE.Light.call(this,a,b);this.type=\"SpotLight\";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;Object.defineProperty(this,\"power\",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}});this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.penumbra=void 0!==e?e:0;this.decay=void 0!==f?f:1;this.shadow=new THREE.SpotLightShadow};\nTHREE.SpotLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.SpotLight,copy:function(a){THREE.Light.prototype.copy.call(this,a);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});THREE.SpotLightShadow=function(){THREE.LightShadow.call(this,new THREE.PerspectiveCamera(50,1,.5,500))};\nTHREE.SpotLightShadow.prototype=Object.assign(Object.create(THREE.LightShadow.prototype),{constructor:THREE.SpotLightShadow,update:function(a){var b=2*THREE.Math.RAD2DEG*a.angle,c=this.mapSize.width/this.mapSize.height;a=a.distance||500;var d=this.camera;if(b!==d.fov||c!==d.aspect||a!==d.far)d.fov=b,d.aspect=c,d.far=a,d.updateProjectionMatrix()}});THREE.AudioLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nObject.assign(THREE.AudioLoader.prototype,{load:function(a,b,c,d){var e=new THREE.XHRLoader(this.manager);e.setResponseType(\"arraybuffer\");e.load(a,function(a){THREE.AudioContext.decodeAudioData(a,function(a){b(a)})},c,d)}});THREE.Cache={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};\nTHREE.Loader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};\nTHREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,extractUrlBase:function(a){a=a.split(\"/\");if(1===a.length)return\"./\";a.pop();return a.join(\"/\")+\"/\"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a,b,c;return function(d,e,f){function g(a,c,d,g,k){a=e+a;var l=THREE.Loader.Handlers.get(a);null!==l?a=l.load(a):(b.setCrossOrigin(f),a=b.load(a));void 0!==c&&(a.repeat.fromArray(c),1!==c[0]&&(a.wrapS=\nTHREE.RepeatWrapping),1!==c[1]&&(a.wrapT=THREE.RepeatWrapping));void 0!==d&&a.offset.fromArray(d);void 0!==g&&(\"repeat\"===g[0]&&(a.wrapS=THREE.RepeatWrapping),\"mirror\"===g[0]&&(a.wrapS=THREE.MirroredRepeatWrapping),\"repeat\"===g[1]&&(a.wrapT=THREE.RepeatWrapping),\"mirror\"===g[1]&&(a.wrapT=THREE.MirroredRepeatWrapping));void 0!==k&&(a.anisotropy=k);c=THREE.Math.generateUUID();h[c]=a;return c}void 0===a&&(a=new THREE.Color);void 0===b&&(b=new THREE.TextureLoader);void 0===c&&(c=new THREE.MaterialLoader);\nvar h={},k={uuid:THREE.Math.generateUUID(),type:\"MeshLambertMaterial\"},l;for(l in d){var n=d[l];switch(l){case \"DbgColor\":case \"DbgIndex\":case \"opticalDensity\":case \"illumination\":break;case \"DbgName\":k.name=n;break;case \"blending\":k.blending=THREE[n];break;case \"colorAmbient\":case \"mapAmbient\":console.warn(\"THREE.Loader.createMaterial:\",l,\"is no longer supported.\");break;case \"colorDiffuse\":k.color=a.fromArray(n).getHex();break;case \"colorSpecular\":k.specular=a.fromArray(n).getHex();break;case \"colorEmissive\":k.emissive=\na.fromArray(n).getHex();break;case \"specularCoef\":k.shininess=n;break;case \"shading\":\"basic\"===n.toLowerCase()&&(k.type=\"MeshBasicMaterial\");\"phong\"===n.toLowerCase()&&(k.type=\"MeshPhongMaterial\");\"standard\"===n.toLowerCase()&&(k.type=\"MeshStandardMaterial\");break;case \"mapDiffuse\":k.map=g(n,d.mapDiffuseRepeat,d.mapDiffuseOffset,d.mapDiffuseWrap,d.mapDiffuseAnisotropy);break;case \"mapDiffuseRepeat\":case \"mapDiffuseOffset\":case \"mapDiffuseWrap\":case \"mapDiffuseAnisotropy\":break;case \"mapEmissive\":k.emissiveMap=\ng(n,d.mapEmissiveRepeat,d.mapEmissiveOffset,d.mapEmissiveWrap,d.mapEmissiveAnisotropy);break;case \"mapEmissiveRepeat\":case \"mapEmissiveOffset\":case \"mapEmissiveWrap\":case \"mapEmissiveAnisotropy\":break;case \"mapLight\":k.lightMap=g(n,d.mapLightRepeat,d.mapLightOffset,d.mapLightWrap,d.mapLightAnisotropy);break;case \"mapLightRepeat\":case \"mapLightOffset\":case \"mapLightWrap\":case \"mapLightAnisotropy\":break;case \"mapAO\":k.aoMap=g(n,d.mapAORepeat,d.mapAOOffset,d.mapAOWrap,d.mapAOAnisotropy);break;case \"mapAORepeat\":case \"mapAOOffset\":case \"mapAOWrap\":case \"mapAOAnisotropy\":break;\ncase \"mapBump\":k.bumpMap=g(n,d.mapBumpRepeat,d.mapBumpOffset,d.mapBumpWrap,d.mapBumpAnisotropy);break;case \"mapBumpScale\":k.bumpScale=n;break;case \"mapBumpRepeat\":case \"mapBumpOffset\":case \"mapBumpWrap\":case \"mapBumpAnisotropy\":break;case \"mapNormal\":k.normalMap=g(n,d.mapNormalRepeat,d.mapNormalOffset,d.mapNormalWrap,d.mapNormalAnisotropy);break;case \"mapNormalFactor\":k.normalScale=[n,n];break;case \"mapNormalRepeat\":case \"mapNormalOffset\":case \"mapNormalWrap\":case \"mapNormalAnisotropy\":break;case \"mapSpecular\":k.specularMap=\ng(n,d.mapSpecularRepeat,d.mapSpecularOffset,d.mapSpecularWrap,d.mapSpecularAnisotropy);break;case \"mapSpecularRepeat\":case \"mapSpecularOffset\":case \"mapSpecularWrap\":case \"mapSpecularAnisotropy\":break;case \"mapMetalness\":k.metalnessMap=g(n,d.mapMetalnessRepeat,d.mapMetalnessOffset,d.mapMetalnessWrap,d.mapMetalnessAnisotropy);break;case \"mapMetalnessRepeat\":case \"mapMetalnessOffset\":case \"mapMetalnessWrap\":case \"mapMetalnessAnisotropy\":break;case \"mapRoughness\":k.roughnessMap=g(n,d.mapRoughnessRepeat,\nd.mapRoughnessOffset,d.mapRoughnessWrap,d.mapRoughnessAnisotropy);break;case \"mapRoughnessRepeat\":case \"mapRoughnessOffset\":case \"mapRoughnessWrap\":case \"mapRoughnessAnisotropy\":break;case \"mapAlpha\":k.alphaMap=g(n,d.mapAlphaRepeat,d.mapAlphaOffset,d.mapAlphaWrap,d.mapAlphaAnisotropy);break;case \"mapAlphaRepeat\":case \"mapAlphaOffset\":case \"mapAlphaWrap\":case \"mapAlphaAnisotropy\":break;case \"flipSided\":k.side=THREE.BackSide;break;case \"doubleSided\":k.side=THREE.DoubleSide;break;case \"transparency\":console.warn(\"THREE.Loader.createMaterial: transparency has been renamed to opacity\");\nk.opacity=n;break;case \"depthTest\":case \"depthWrite\":case \"colorWrite\":case \"opacity\":case \"reflectivity\":case \"transparent\":case \"visible\":case \"wireframe\":k[l]=n;break;case \"vertexColors\":!0===n&&(k.vertexColors=THREE.VertexColors);\"face\"===n&&(k.vertexColors=THREE.FaceColors);break;default:console.error(\"THREE.Loader.createMaterial: Unsupported\",l,n)}}\"MeshBasicMaterial\"===k.type&&delete k.emissive;\"MeshPhongMaterial\"!==k.type&&delete k.specular;1>k.opacity&&(k.transparent=!0);c.setTextures(h);\nreturn c.parse(k)}}()};THREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c+=2){var e=b[c+1];if(b[c].test(a))return e}return null}};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nObject.assign(THREE.XHRLoader.prototype,{load:function(a,b,c,d){void 0!==this.path&&(a=this.path+a);var e=this,f=THREE.Cache.get(a);if(void 0!==f)return b&&setTimeout(function(){b(f)},0),f;var g=new XMLHttpRequest;g.overrideMimeType(\"text/plain\");g.open(\"GET\",a,!0);g.addEventListener(\"load\",function(c){var f=c.target.response;THREE.Cache.add(a,f);200===this.status?(b&&b(f),e.manager.itemEnd(a)):0===this.status?(console.warn(\"THREE.XHRLoader: HTTP Status 0 received.\"),b&&b(f),e.manager.itemEnd(a)):\n(d&&d(c),e.manager.itemError(a))},!1);void 0!==c&&g.addEventListener(\"progress\",function(a){c(a)},!1);g.addEventListener(\"error\",function(b){d&&d(b);e.manager.itemError(a)},!1);void 0!==this.responseType&&(g.responseType=this.responseType);void 0!==this.withCredentials&&(g.withCredentials=this.withCredentials);g.send(null);e.manager.itemStart(a);return g},setPath:function(a){this.path=a;return this},setResponseType:function(a){this.responseType=a;return this},setWithCredentials:function(a){this.withCredentials=\na;return this}});THREE.FontLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};Object.assign(THREE.FontLoader.prototype,{load:function(a,b,c,d){var e=this;(new THREE.XHRLoader(this.manager)).load(a,function(a){var c;try{c=JSON.parse(a)}catch(d){console.warn(\"THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.\"),c=JSON.parse(a.substring(65,a.length-2))}a=e.parse(c);b&&b(a)},c,d)},parse:function(a){return new THREE.Font(a)}});\nTHREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nObject.assign(THREE.ImageLoader.prototype,{load:function(a,b,c,d){var e=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"img\");e.onload=function(){URL.revokeObjectURL(e.src);b&&b(e)};if(0===a.indexOf(\"data:\"))e.src=a;else{var f=new THREE.XHRLoader(this.manager);f.setPath(this.path);f.setResponseType(\"blob\");f.load(a,function(a){e.src=URL.createObjectURL(a)},c,d)}return e},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});\nTHREE.JSONLoader=function(a){\"boolean\"===typeof a&&(console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"),a=void 0);this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.withCredentials=!1};\nObject.assign(THREE.JSONLoader.prototype,{load:function(a,b,c,d){var e=this,f=this.texturePath&&\"string\"===typeof this.texturePath?this.texturePath:THREE.Loader.prototype.extractUrlBase(a),g=new THREE.XHRLoader(this.manager);g.setWithCredentials(this.withCredentials);g.load(a,function(c){c=JSON.parse(c);var d=c.metadata;if(void 0!==d&&(d=d.type,void 0!==d)){if(\"object\"===d.toLowerCase()){console.error(\"THREE.JSONLoader: \"+a+\" should be loaded with THREE.ObjectLoader instead.\");return}if(\"scene\"===\nd.toLowerCase()){console.error(\"THREE.JSONLoader: \"+a+\" should be loaded with THREE.SceneLoader instead.\");return}}c=e.parse(c,f);b(c.geometry,c.materials)},c,d)},setTexturePath:function(a){this.texturePath=a},parse:function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/a.scale:1;(function(b){var d,g,h,k,l,n,p,m,q,r,s,t,u,v=a.faces;n=a.vertices;var C=a.normals,w=a.colors,E=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&E++;for(d=0;d<E;d++)c.faceVertexUvs[d]=[]}k=0;for(l=n.length;k<\nl;)d=new THREE.Vector3,d.x=n[k++]*b,d.y=n[k++]*b,d.z=n[k++]*b,c.vertices.push(d);k=0;for(l=v.length;k<l;)if(b=v[k++],q=b&1,h=b&2,d=b&8,p=b&16,r=b&32,n=b&64,b&=128,q){q=new THREE.Face3;q.a=v[k];q.b=v[k+1];q.c=v[k+3];s=new THREE.Face3;s.a=v[k+1];s.b=v[k+2];s.c=v[k+3];k+=4;h&&(h=v[k++],q.materialIndex=h,s.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<E;d++)for(t=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4>g;g++)m=v[k++],u=t[2*m],m=t[2*m+1],u=new THREE.Vector2(u,m),2!==g&&c.faceVertexUvs[d][h].push(u),\n0!==g&&c.faceVertexUvs[d][h+1].push(u);p&&(p=3*v[k++],q.normal.set(C[p++],C[p++],C[p]),s.normal.copy(q.normal));if(r)for(d=0;4>d;d++)p=3*v[k++],r=new THREE.Vector3(C[p++],C[p++],C[p]),2!==d&&q.vertexNormals.push(r),0!==d&&s.vertexNormals.push(r);n&&(n=v[k++],n=w[n],q.color.setHex(n),s.color.setHex(n));if(b)for(d=0;4>d;d++)n=v[k++],n=w[n],2!==d&&q.vertexColors.push(new THREE.Color(n)),0!==d&&s.vertexColors.push(new THREE.Color(n));c.faces.push(q);c.faces.push(s)}else{q=new THREE.Face3;q.a=v[k++];q.b=\nv[k++];q.c=v[k++];h&&(h=v[k++],q.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<E;d++)for(t=a.uvs[d],c.faceVertexUvs[d][h]=[],g=0;3>g;g++)m=v[k++],u=t[2*m],m=t[2*m+1],u=new THREE.Vector2(u,m),c.faceVertexUvs[d][h].push(u);p&&(p=3*v[k++],q.normal.set(C[p++],C[p++],C[p]));if(r)for(d=0;3>d;d++)p=3*v[k++],r=new THREE.Vector3(C[p++],C[p++],C[p]),q.vertexNormals.push(r);n&&(n=v[k++],q.color.setHex(w[n]));if(b)for(d=0;3>d;d++)n=v[k++],q.vertexColors.push(new THREE.Color(w[n]));c.faces.push(q)}})(d);(function(){var b=\nvoid 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,g=a.skinWeights.length;d<g;d+=b)c.skinWeights.push(new THREE.Vector4(a.skinWeights[d],1<b?a.skinWeights[d+1]:0,2<b?a.skinWeights[d+2]:0,3<b?a.skinWeights[d+3]:0));if(a.skinIndices)for(d=0,g=a.skinIndices.length;d<g;d+=b)c.skinIndices.push(new THREE.Vector4(a.skinIndices[d],1<b?a.skinIndices[d+1]:0,2<b?a.skinIndices[d+2]:0,3<b?a.skinIndices[d+3]:0));c.bones=a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==\nc.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&console.warn(\"When skinning, number of vertices (\"+c.vertices.length+\"), skinIndices (\"+c.skinIndices.length+\"), and skinWeights (\"+c.skinWeights.length+\") should match.\")})();(function(b){if(void 0!==a.morphTargets)for(var d=0,g=a.morphTargets.length;d<g;d++){c.morphTargets[d]={};c.morphTargets[d].name=a.morphTargets[d].name;c.morphTargets[d].vertices=[];for(var h=c.morphTargets[d].vertices,k=a.morphTargets[d].vertices,l=0,n=k.length;l<\nn;l+=3){var p=new THREE.Vector3;p.x=k[l]*b;p.y=k[l+1]*b;p.z=k[l+2]*b;h.push(p)}}if(void 0!==a.morphColors&&0<a.morphColors.length)for(console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.'),b=c.faces,h=a.morphColors[0].colors,d=0,g=b.length;d<g;d++)b[d].color.fromArray(h,3*d)})(d);(function(){var b=[],d=[];void 0!==a.animation&&d.push(a.animation);void 0!==a.animations&&(a.animations.length?d=d.concat(a.animations):d.push(a.animations));for(var g=0;g<d.length;g++){var h=\nTHREE.AnimationClip.parseAnimation(d[g],c.bones);h&&b.push(h)}c.morphTargets&&(d=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(c.morphTargets,10),b=b.concat(d));0<b.length&&(c.animations=b)})();c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:c};d=THREE.Loader.prototype.initMaterials(a.materials,b,this.crossOrigin);return{geometry:c,materials:d}}});\nTHREE.LoadingManager=function(a,b,c){var d=this,e=!1,f=0,g=0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(!1===e&&void 0!==d.onStart)d.onStart(a,f,g);e=!0};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,f,g);if(f===g&&(e=!1,void 0!==d.onLoad))d.onLoad()};this.itemError=function(a){if(void 0!==d.onError)d.onError(a)}};THREE.DefaultLoadingManager=new THREE.LoadingManager;\nTHREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nObject.assign(THREE.BufferGeometryLoader.prototype,{load:function(a,b,c,d){var e=this;(new THREE.XHRLoader(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},parse:function(a){var b=new THREE.BufferGeometry,c=a.data.index,d={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};void 0!==c&&(c=new d[c.type](c.array),b.setIndex(new THREE.BufferAttribute(c,\n1)));var e=a.data.attributes,f;for(f in e){var g=e[f],c=new d[g.type](g.array);b.addAttribute(f,new THREE.BufferAttribute(c,g.itemSize,g.normalized))}d=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==d)for(f=0,c=d.length;f!==c;++f)e=d[f],b.addGroup(e.start,e.count,e.materialIndex);a=a.data.boundingSphere;void 0!==a&&(d=new THREE.Vector3,void 0!==a.center&&d.fromArray(a.center),b.boundingSphere=new THREE.Sphere(d,a.radius));return b}});\nTHREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.textures={}};\nObject.assign(THREE.MaterialLoader.prototype,{load:function(a,b,c,d){var e=this;(new THREE.XHRLoader(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setTextures:function(a){this.textures=a},getTexture:function(a){var b=this.textures;void 0===b[a]&&console.warn(\"THREE.MaterialLoader: Undefined texture\",a);return b[a]},parse:function(a){var b=new THREE[a.type];void 0!==a.uuid&&(b.uuid=a.uuid);void 0!==a.name&&(b.name=a.name);void 0!==a.color&&b.color.setHex(a.color);void 0!==a.roughness&&\n(b.roughness=a.roughness);void 0!==a.metalness&&(b.metalness=a.metalness);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&(b.shininess=a.shininess);void 0!==a.uniforms&&(b.uniforms=a.uniforms);void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.shading&&(b.shading=a.shading);void 0!==a.blending&&\n(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.alphaTest&&(b.alphaTest=a.alphaTest);void 0!==a.depthTest&&(b.depthTest=a.depthTest);void 0!==a.depthWrite&&(b.depthWrite=a.depthWrite);void 0!==a.colorWrite&&(b.colorWrite=a.colorWrite);void 0!==a.wireframe&&(b.wireframe=a.wireframe);void 0!==a.wireframeLinewidth&&(b.wireframeLinewidth=a.wireframeLinewidth);void 0!==a.size&&(b.size=a.size);\nvoid 0!==a.sizeAttenuation&&(b.sizeAttenuation=a.sizeAttenuation);void 0!==a.map&&(b.map=this.getTexture(a.map));void 0!==a.alphaMap&&(b.alphaMap=this.getTexture(a.alphaMap),b.transparent=!0);void 0!==a.bumpMap&&(b.bumpMap=this.getTexture(a.bumpMap));void 0!==a.bumpScale&&(b.bumpScale=a.bumpScale);void 0!==a.normalMap&&(b.normalMap=this.getTexture(a.normalMap));if(void 0!==a.normalScale){var c=a.normalScale;!1===Array.isArray(c)&&(c=[c,c]);b.normalScale=(new THREE.Vector2).fromArray(c)}void 0!==a.displacementMap&&\n(b.displacementMap=this.getTexture(a.displacementMap));void 0!==a.displacementScale&&(b.displacementScale=a.displacementScale);void 0!==a.displacementBias&&(b.displacementBias=a.displacementBias);void 0!==a.roughnessMap&&(b.roughnessMap=this.getTexture(a.roughnessMap));void 0!==a.metalnessMap&&(b.metalnessMap=this.getTexture(a.metalnessMap));void 0!==a.emissiveMap&&(b.emissiveMap=this.getTexture(a.emissiveMap));void 0!==a.emissiveIntensity&&(b.emissiveIntensity=a.emissiveIntensity);void 0!==a.specularMap&&\n(b.specularMap=this.getTexture(a.specularMap));void 0!==a.envMap&&(b.envMap=this.getTexture(a.envMap),b.combine=THREE.MultiplyOperation);void 0!==a.reflectivity&&(b.reflectivity=a.reflectivity);void 0!==a.lightMap&&(b.lightMap=this.getTexture(a.lightMap));void 0!==a.lightMapIntensity&&(b.lightMapIntensity=a.lightMapIntensity);void 0!==a.aoMap&&(b.aoMap=this.getTexture(a.aoMap));void 0!==a.aoMapIntensity&&(b.aoMapIntensity=a.aoMapIntensity);if(void 0!==a.materials)for(var c=0,d=a.materials.length;c<\nd;c++)b.materials.push(this.parse(a.materials[c]));return b}});THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.texturePath=\"\"};\nObject.assign(THREE.ObjectLoader.prototype,{load:function(a,b,c,d){\"\"===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf(\"/\")+1));var e=this;(new THREE.XHRLoader(e.manager)).load(a,function(a){e.parse(JSON.parse(a),b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==b&&b(e)}),d=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,\nd),e=this.parseObject(a.object,c,d);a.animations&&(e.animations=this.parseAnimations(a.animations));void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,f=a.length;e<f;e++){var g,h=a[e];switch(h.type){case \"PlaneGeometry\":case \"PlaneBufferGeometry\":g=new THREE[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case \"BoxGeometry\":case \"BoxBufferGeometry\":case \"CubeGeometry\":g=\nnew THREE[h.type](h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case \"CircleGeometry\":case \"CircleBufferGeometry\":g=new THREE[h.type](h.radius,h.segments,h.thetaStart,h.thetaLength);break;case \"CylinderGeometry\":case \"CylinderBufferGeometry\":g=new THREE[h.type](h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case \"ConeGeometry\":case \"ConeBufferGeometry\":g=new THREE[h.type](h.radius,h.height,h.radialSegments,\nh.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case \"SphereGeometry\":case \"SphereBufferGeometry\":g=new THREE[h.type](h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case \"DodecahedronGeometry\":case \"IcosahedronGeometry\":case \"OctahedronGeometry\":case \"TetrahedronGeometry\":g=new THREE[h.type](h.radius,h.detail);break;case \"RingGeometry\":case \"RingBufferGeometry\":g=new THREE[h.type](h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,\nh.thetaStart,h.thetaLength);break;case \"TorusGeometry\":case \"TorusBufferGeometry\":g=new THREE[h.type](h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case \"TorusKnotGeometry\":case \"TorusKnotBufferGeometry\":g=new THREE[h.type](h.radius,h.tube,h.tubularSegments,h.radialSegments,h.p,h.q);break;case \"LatheGeometry\":case \"LatheBufferGeometry\":g=new THREE[h.type](h.points,h.segments,h.phiStart,h.phiLength);break;case \"BufferGeometry\":g=d.parse(h);break;case \"Geometry\":g=c.parse(h.data,this.texturePath).geometry;\nbreak;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+h.type+'\"');continue}g.uuid=h.uuid;void 0!==h.name&&(g.name=h.name);b[h.uuid]=g}return b},parseMaterials:function(a,b){var c={};if(void 0!==a){var d=new THREE.MaterialLoader;d.setTextures(b);for(var e=0,f=a.length;e<f;e++){var g=d.parse(a[e]);c[g.uuid]=g}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=THREE.AnimationClip.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);\nreturn g.load(a,function(){d.manager.itemEnd(a)})}var d=this,e={};if(void 0!==a&&0<a.length){var f=new THREE.LoadingManager(b),g=new THREE.ImageLoader(f);g.setCrossOrigin(this.crossOrigin);for(var f=0,h=a.length;f<h;f++){var k=a[f],l=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(k.url)?k.url:d.texturePath+k.url;e[k.uuid]=c(l)}}return e},parseTextures:function(a,b){function c(a){if(\"number\"===typeof a)return a;console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",a);return THREE[a]}\nvar d={};if(void 0!==a)for(var e=0,f=a.length;e<f;e++){var g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No \"image\" specified for',g.uuid);void 0===b[g.image]&&console.warn(\"THREE.ObjectLoader: Undefined image\",g.image);var h=new THREE.Texture(b[g.image]);h.needsUpdate=!0;h.uuid=g.uuid;void 0!==g.name&&(h.name=g.name);void 0!==g.mapping&&(h.mapping=c(g.mapping));void 0!==g.offset&&(h.offset=new THREE.Vector2(g.offset[0],g.offset[1]));void 0!==g.repeat&&(h.repeat=new THREE.Vector2(g.repeat[0],\ng.repeat[1]));void 0!==g.minFilter&&(h.minFilter=c(g.minFilter));void 0!==g.magFilter&&(h.magFilter=c(g.magFilter));void 0!==g.anisotropy&&(h.anisotropy=g.anisotropy);Array.isArray(g.wrap)&&(h.wrapS=c(g.wrap[0]),h.wrapT=c(g.wrap[1]));d[g.uuid]=h}return d},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){function e(a){void 0===c[a]&&console.warn(\"THREE.ObjectLoader: Undefined geometry\",a);return c[a]}function f(a){if(void 0!==a)return void 0===d[a]&&console.warn(\"THREE.ObjectLoader: Undefined material\",\na),d[a]}var g;switch(b.type){case \"Scene\":g=new THREE.Scene;break;case \"PerspectiveCamera\":g=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);void 0!==b.focus&&(g.focus=b.focus);void 0!==b.zoom&&(g.zoom=b.zoom);void 0!==b.filmGauge&&(g.filmGauge=b.filmGauge);void 0!==b.filmOffset&&(g.filmOffset=b.filmOffset);void 0!==b.view&&(g.view=Object.assign({},b.view));break;case \"OrthographicCamera\":g=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case \"AmbientLight\":g=\nnew THREE.AmbientLight(b.color,b.intensity);break;case \"DirectionalLight\":g=new THREE.DirectionalLight(b.color,b.intensity);break;case \"PointLight\":g=new THREE.PointLight(b.color,b.intensity,b.distance,b.decay);break;case \"SpotLight\":g=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.penumbra,b.decay);break;case \"HemisphereLight\":g=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case \"Mesh\":g=e(b.geometry);var h=f(b.material);g=g.bones&&0<g.bones.length?new THREE.SkinnedMesh(g,\nh):new THREE.Mesh(g,h);break;case \"LOD\":g=new THREE.LOD;break;case \"Line\":g=new THREE.Line(e(b.geometry),f(b.material),b.mode);break;case \"PointCloud\":case \"Points\":g=new THREE.Points(e(b.geometry),f(b.material));break;case \"Sprite\":g=new THREE.Sprite(f(b.material));break;case \"Group\":g=new THREE.Group;break;default:g=new THREE.Object3D}g.uuid=b.uuid;void 0!==b.name&&(g.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(g.position,g.quaternion,g.scale)):(void 0!==b.position&&g.position.fromArray(b.position),\nvoid 0!==b.rotation&&g.rotation.fromArray(b.rotation),void 0!==b.scale&&g.scale.fromArray(b.scale));void 0!==b.castShadow&&(g.castShadow=b.castShadow);void 0!==b.receiveShadow&&(g.receiveShadow=b.receiveShadow);void 0!==b.visible&&(g.visible=b.visible);void 0!==b.userData&&(g.userData=b.userData);if(void 0!==b.children)for(var k in b.children)g.add(this.parseObject(b.children[k],c,d));if(\"LOD\"===b.type)for(b=b.levels,h=0;h<b.length;h++){var l=b[h];k=g.getObjectByProperty(\"uuid\",l.object);void 0!==\nk&&g.addLevel(k,l.distance)}return g}}()});THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};Object.assign(THREE.TextureLoader.prototype,{load:function(a,b,c,d){var e=new THREE.Texture,f=new THREE.ImageLoader(this.manager);f.setCrossOrigin(this.crossOrigin);f.setPath(this.path);f.load(a,function(a){e.image=a;e.needsUpdate=!0;void 0!==b&&b(e)},c,d);return e},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});\nTHREE.CubeTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nObject.assign(THREE.CubeTextureLoader.prototype,{load:function(a,b,c,d){function e(c){g.load(a[c],function(a){f.images[c]=a;h++;6===h&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}var f=new THREE.CubeTexture,g=new THREE.ImageLoader(this.manager);g.setCrossOrigin(this.crossOrigin);g.setPath(this.path);var h=0;for(c=0;c<a.length;++c)e(c);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});\nTHREE.DataTextureLoader=THREE.BinaryTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this._parser=null};\nObject.assign(THREE.BinaryTextureLoader.prototype,{load:function(a,b,c,d){var e=this,f=new THREE.DataTexture,g=new THREE.XHRLoader(this.manager);g.setResponseType(\"arraybuffer\");g.load(a,function(a){if(a=e._parser(a))void 0!==a.image?f.image=a.image:void 0!==a.data&&(f.image.width=a.width,f.image.height=a.height,f.image.data=a.data),f.wrapS=void 0!==a.wrapS?a.wrapS:THREE.ClampToEdgeWrapping,f.wrapT=void 0!==a.wrapT?a.wrapT:THREE.ClampToEdgeWrapping,f.magFilter=void 0!==a.magFilter?a.magFilter:THREE.LinearFilter,\nf.minFilter=void 0!==a.minFilter?a.minFilter:THREE.LinearMipMapLinearFilter,f.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps),1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.needsUpdate=!0,b&&b(f,a)},c,d);return f}});THREE.CompressedTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this._parser=null};\nObject.assign(THREE.CompressedTextureLoader.prototype,{load:function(a,b,c,d){function e(e){k.load(a[e],function(a){a=f._parser(a,!0);g[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};l+=1;6===l&&(1===a.mipmapCount&&(h.minFilter=THREE.LinearFilter),h.format=a.format,h.needsUpdate=!0,b&&b(h))},c,d)}var f=this,g=[],h=new THREE.CompressedTexture;h.image=g;var k=new THREE.XHRLoader(this.manager);k.setPath(this.path);k.setResponseType(\"arraybuffer\");if(Array.isArray(a))for(var l=0,\nn=0,p=a.length;n<p;++n)e(n);else k.load(a,function(a){a=f._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length/a.mipmapCount,d=0;d<c;d++){g[d]={mipmaps:[]};for(var e=0;e<a.mipmapCount;e++)g[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+e]),g[d].format=a.format,g[d].width=a.width,g[d].height=a.height}else h.image.width=a.width,h.image.height=a.height,h.mipmaps=a.mipmaps;1===a.mipmapCount&&(h.minFilter=THREE.LinearFilter);h.format=a.format;h.needsUpdate=!0;b&&b(h)},c,d);return h},setPath:function(a){this.path=\na;return this}});\nTHREE.Material=function(){Object.defineProperty(this,\"id\",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Material\";this.lights=this.fog=!0;this.blending=THREE.NormalBlending;this.side=THREE.FrontSide;this.shading=THREE.SmoothShading;this.vertexColors=THREE.NoColors;this.opacity=1;this.transparent=!1;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendEquationAlpha=this.blendDstAlpha=\nthis.blendSrcAlpha=null;this.depthFunc=THREE.LessEqualDepth;this.depthWrite=this.depthTest=!0;this.clippingPlanes=null;this.clipShadows=!1;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.premultipliedAlpha=!1;this.overdraw=0;this._needsUpdate=this.visible=!0};\nTHREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn(\"THREE.Material: '\"+b+\"' parameter is undefined.\");else{var d=this[b];void 0===d?console.warn(\"THREE.\"+this.type+\": '\"+b+\"' is not a property of this material.\"):d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):\nthis[b]=\"overdraw\"===b?Number(c):c}}},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=void 0===a;c&&(a={textures:{},images:{}});var d={metadata:{version:4.4,type:\"Material\",generator:\"Material.toJSON\"}};d.uuid=this.uuid;d.type=this.type;\"\"!==this.name&&(d.name=this.name);this.color instanceof THREE.Color&&(d.color=this.color.getHex());void 0!==this.roughness&&(d.roughness=this.roughness);void 0!==this.metalness&&(d.metalness=this.metalness);\nthis.emissive instanceof THREE.Color&&(d.emissive=this.emissive.getHex());this.specular instanceof THREE.Color&&(d.specular=this.specular.getHex());void 0!==this.shininess&&(d.shininess=this.shininess);this.map instanceof THREE.Texture&&(d.map=this.map.toJSON(a).uuid);this.alphaMap instanceof THREE.Texture&&(d.alphaMap=this.alphaMap.toJSON(a).uuid);this.lightMap instanceof THREE.Texture&&(d.lightMap=this.lightMap.toJSON(a).uuid);this.bumpMap instanceof THREE.Texture&&(d.bumpMap=this.bumpMap.toJSON(a).uuid,\nd.bumpScale=this.bumpScale);this.normalMap instanceof THREE.Texture&&(d.normalMap=this.normalMap.toJSON(a).uuid,d.normalScale=this.normalScale.toArray());this.displacementMap instanceof THREE.Texture&&(d.displacementMap=this.displacementMap.toJSON(a).uuid,d.displacementScale=this.displacementScale,d.displacementBias=this.displacementBias);this.roughnessMap instanceof THREE.Texture&&(d.roughnessMap=this.roughnessMap.toJSON(a).uuid);this.metalnessMap instanceof THREE.Texture&&(d.metalnessMap=this.metalnessMap.toJSON(a).uuid);\nthis.emissiveMap instanceof THREE.Texture&&(d.emissiveMap=this.emissiveMap.toJSON(a).uuid);this.specularMap instanceof THREE.Texture&&(d.specularMap=this.specularMap.toJSON(a).uuid);this.envMap instanceof THREE.Texture&&(d.envMap=this.envMap.toJSON(a).uuid,d.reflectivity=this.reflectivity);void 0!==this.size&&(d.size=this.size);void 0!==this.sizeAttenuation&&(d.sizeAttenuation=this.sizeAttenuation);this.blending!==THREE.NormalBlending&&(d.blending=this.blending);this.shading!==THREE.SmoothShading&&\n(d.shading=this.shading);this.side!==THREE.FrontSide&&(d.side=this.side);this.vertexColors!==THREE.NoColors&&(d.vertexColors=this.vertexColors);1>this.opacity&&(d.opacity=this.opacity);!0===this.transparent&&(d.transparent=this.transparent);0<this.alphaTest&&(d.alphaTest=this.alphaTest);!0===this.premultipliedAlpha&&(d.premultipliedAlpha=this.premultipliedAlpha);!0===this.wireframe&&(d.wireframe=this.wireframe);1<this.wireframeLinewidth&&(d.wireframeLinewidth=this.wireframeLinewidth);c&&(c=b(a.textures),\na=b(a.images),0<c.length&&(d.textures=c),0<a.length&&(d.images=a));return d},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.fog=a.fog;this.lights=a.lights;this.blending=a.blending;this.side=a.side;this.shading=a.shading;this.vertexColors=a.vertexColors;this.opacity=a.opacity;this.transparent=a.transparent;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;\nthis.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.colorWrite=a.colorWrite;this.precision=a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.alphaTest=a.alphaTest;this.premultipliedAlpha=a.premultipliedAlpha;this.overdraw=a.overdraw;this.visible=a.visible;this.clipShadows=a.clipShadows;a=a.clippingPlanes;var b=null;if(null!==\na)for(var c=a.length,b=Array(c),d=0;d!==c;++d)b[d]=a[d].clone();this.clippingPlanes=b;return this},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};Object.assign(THREE.Material.prototype,THREE.EventDispatcher.prototype);THREE.MaterialIdCount=0;\nTHREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type=\"LineBasicMaterial\";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap=\"round\";this.lights=!1;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;\nTHREE.LineBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;return this};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type=\"LineDashedMaterial\";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.lights=!1;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);\nTHREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;THREE.LineDashedMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;return this};\nTHREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type=\"MeshBasicMaterial\";this.color=new THREE.Color(16777215);this.aoMap=this.map=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.lights=this.morphTargets=this.skinning=!1;this.setValues(a)};\nTHREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;\nTHREE.MeshBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;\nthis.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type=\"MeshDepthMaterial\";this.depthPacking=THREE.BasicDepthPacking;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);\nTHREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;THREE.MeshDepthMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};\nTHREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type=\"MeshLambertMaterial\";this.color=new THREE.Color(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\n\"round\";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;\nTHREE.MeshLambertMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=\na.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type=\"MeshNormalMaterial\";this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=this.lights=this.fog=!1;this.setValues(a)};\nTHREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};\nTHREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type=\"MeshPhongMaterial\";this.color=new THREE.Color(16777215);this.specular=new THREE.Color(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=\n0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;\nTHREE.MeshPhongMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);\nthis.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;\nthis.morphNormals=a.morphNormals;return this};\nTHREE.MeshStandardMaterial=function(a){THREE.Material.call(this);this.defines={STANDARD:\"\"};this.type=\"MeshStandardMaterial\";this.color=new THREE.Color(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=\n1;this.displacementBias=0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshStandardMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshStandardMaterial.prototype.constructor=THREE.MeshStandardMaterial;\nTHREE.MeshStandardMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.defines={STANDARD:\"\"};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=\na.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.roughnessMap=a.roughnessMap;this.metalnessMap=a.metalnessMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.envMapIntensity=a.envMapIntensity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;\nthis.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshPhysicalMaterial=function(a){THREE.MeshStandardMaterial.call(this);this.defines={PHYSICAL:\"\"};this.type=\"MeshPhysicalMaterial\";this.reflectivity=.5;this.clearCoatRoughness=this.clearCoat=0;this.setValues(a)};THREE.MeshPhysicalMaterial.prototype=Object.create(THREE.MeshStandardMaterial.prototype);THREE.MeshPhysicalMaterial.prototype.constructor=THREE.MeshPhysicalMaterial;\nTHREE.MeshPhysicalMaterial.prototype.copy=function(a){THREE.MeshStandardMaterial.prototype.copy.call(this,a);this.defines={PHYSICAL:\"\"};this.reflectivity=a.reflectivity;this.clearCoat=a.clearCoat;this.clearCoatRoughness=a.clearCoatRoughness;return this};THREE.MultiMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type=\"MultiMaterial\";this.materials=a instanceof Array?a:[];this.visible=!0};\nTHREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(a){for(var b={metadata:{version:4.2,type:\"material\",generator:\"MaterialExporter\"},uuid:this.uuid,type:this.type,materials:[]},c=this.materials,d=0,e=c.length;d<e;d++){var f=c[d].toJSON(a);delete f.metadata;b.materials.push(f)}b.visible=this.visible;return b},clone:function(){for(var a=new this.constructor,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());a.visible=this.visible;return a}};\nTHREE.PointsMaterial=function(a){THREE.Material.call(this);this.type=\"PointsMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.lights=!1;this.setValues(a)};THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial;\nTHREE.PointsMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;return this};\nTHREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type=\"ShaderMaterial\";this.defines={};this.uniforms={};this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,\ndrawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"),this.setValues(a))};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;\nTHREE.ShaderMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.defines=a.defines;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.lights=a.lights;this.clipping=a.clipping;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.extensions=a.extensions;return this};\nTHREE.ShaderMaterial.prototype.toJSON=function(a){a=THREE.Material.prototype.toJSON.call(this,a);a.uniforms=this.uniforms;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type=\"RawShaderMaterial\"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;\nTHREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type=\"SpriteMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.lights=this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;THREE.SpriteMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;return this};\nTHREE.ShadowMaterial=function(){THREE.ShaderMaterial.call(this,{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.lights,{opacity:{value:1}}]),vertexShader:THREE.ShaderChunk.shadow_vert,fragmentShader:THREE.ShaderChunk.shadow_frag});this.transparent=this.lights=!0;Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(a){this.uniforms.opacity.value=a}}})};THREE.ShadowMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);\nTHREE.ShadowMaterial.prototype.constructor=THREE.ShadowMaterial;\nTHREE.Texture=function(a,b,c,d,e,f,g,h,k,l){Object.defineProperty(this,\"id\",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.sourceFile=this.name=\"\";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;\nthis.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==l?l:THREE.LinearEncoding;this.version=0;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;\nTHREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(a){!0===a&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=\na.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;this.encoding=a.encoding;return this},toJSON:function(a){if(void 0!==a.textures[this.uuid])return a.textures[this.uuid];var b={metadata:{version:4.4,type:\"Texture\",generator:\"Texture.toJSON\"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};\nif(void 0!==this.image){var c=this.image;void 0===c.uuid&&(c.uuid=THREE.Math.generateUUID());if(void 0===a.images[c.uuid]){var d=a.images,e=c.uuid,f=c.uuid,g;void 0!==c.toDataURL?g=c:(g=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),g.width=c.width,g.height=c.height,g.getContext(\"2d\").drawImage(c,0,0,c.width,c.height));g=2048<g.width||2048<g.height?g.toDataURL(\"image/jpeg\",.6):g.toDataURL(\"image/png\");d[e]={uuid:f,url:g}}b.image=c.uuid}return a.textures[this.uuid]=b},dispose:function(){this.dispatchEvent({type:\"dispose\"})},\ntransformUv:function(a){if(this.mapping===THREE.UVMapping){a.multiply(this.repeat);a.add(this.offset);if(0>a.x||1<a.x)switch(this.wrapS){case THREE.RepeatWrapping:a.x-=Math.floor(a.x);break;case THREE.ClampToEdgeWrapping:a.x=0>a.x?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x-=Math.floor(a.x)}if(0>a.y||1<a.y)switch(this.wrapT){case THREE.RepeatWrapping:a.y-=Math.floor(a.y);break;case THREE.ClampToEdgeWrapping:a.y=0>a.y?0:1;break;case THREE.MirroredRepeatWrapping:1===\nMath.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y-=Math.floor(a.y)}this.flipY&&(a.y=1-a.y)}}};Object.assign(THREE.Texture.prototype,THREE.EventDispatcher.prototype);THREE.TextureIdCount=0;\nTHREE.DepthTexture=function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,null,d,e,f,g,h,THREE.DepthFormat,c,k);this.image={width:a,height:b};this.type=void 0!==c?c:THREE.UnsignedShortType;this.magFilter=void 0!==g?g:THREE.NearestFilter;this.minFilter=void 0!==h?h:THREE.NearestFilter;this.generateMipmaps=this.flipY=!1};THREE.DepthTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DepthTexture.prototype.constructor=THREE.DepthTexture;\nTHREE.CanvasTexture=function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.needsUpdate=!0};THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture;THREE.CubeTexture=function(a,b,c,d,e,f,g,h,k,l){a=void 0!==a?a:[];b=void 0!==b?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,a,b,c,d,e,f,g,h,k,l);this.flipY=!1};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);\nTHREE.CubeTexture.prototype.constructor=THREE.CubeTexture;Object.defineProperty(THREE.CubeTexture.prototype,\"images\",{get:function(){return this.image},set:function(a){this.image=a}});THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,k,l,n,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,n,p);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;\nTHREE.DataTexture=function(a,b,c,d,e,f,g,h,k,l,n,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,n,p);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:THREE.NearestFilter;this.minFilter=void 0!==l?l:THREE.NearestFilter;this.generateMipmaps=this.flipY=!1};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;\nTHREE.VideoTexture=function(a,b,c,d,e,f,g,h,k){function l(){requestAnimationFrame(l);a.readyState>=a.HAVE_CURRENT_DATA&&(n.needsUpdate=!0)}THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var n=this;l()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type=\"Group\"};THREE.Group.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Group});\nTHREE.Points=function(a,b){THREE.Object3D.call(this);this.type=\"Points\";this.geometry=void 0!==a?a:new THREE.BufferGeometry;this.material=void 0!==b?b:new THREE.PointsMaterial({color:16777215*Math.random()})};\nTHREE.Points.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Points,raycast:function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){function f(a,c){var f=b.distanceSqToPoint(a);if(f<n){var h=b.closestPointToPoint(a);h.applyMatrix4(k);var m=d.ray.origin.distanceTo(h);m<d.near||m>d.far||e.push({distance:m,distanceToRay:Math.sqrt(f),point:h.clone(),index:c,face:null,object:g})}}var g=this,h=this.geometry,k=this.matrixWorld,l=d.params.Points.threshold;\nnull===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(k);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(k);b.copy(d.ray).applyMatrix4(a);var l=l/((this.scale.x+this.scale.y+this.scale.z)/3),n=l*l,l=new THREE.Vector3;if(h instanceof THREE.BufferGeometry){var p=h.index,h=h.attributes.position.array;if(null!==p)for(var m=p.array,p=0,q=m.length;p<q;p++){var r=m[p];l.fromArray(h,3*r);f(l,r)}else for(p=0,m=h.length/3;p<m;p++)l.fromArray(h,3*p),f(l,p)}else for(l=h.vertices,\np=0,m=l.length;p<m;p++)f(l[p],p)}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});THREE.Line=function(a,b,c){if(1===c)return console.warn(\"THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.\"),new THREE.LineSegments(a,b);THREE.Object3D.call(this);this.type=\"Line\";this.geometry=void 0!==a?a:new THREE.BufferGeometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()})};\nTHREE.Line.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Line,raycast:function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry,h=this.matrixWorld;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(h);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(h);b.copy(d.ray).applyMatrix4(a);var k=new THREE.Vector3,l=new THREE.Vector3,h=new THREE.Vector3,n=\nnew THREE.Vector3,p=this instanceof THREE.LineSegments?2:1;if(g instanceof THREE.BufferGeometry){var m=g.index,q=g.attributes.position.array;if(null!==m)for(var m=m.array,g=0,r=m.length-1;g<r;g+=p){var s=m[g+1];k.fromArray(q,3*m[g]);l.fromArray(q,3*s);s=b.distanceSqToSegment(k,l,n,h);s>f||(n.applyMatrix4(this.matrixWorld),s=d.ray.origin.distanceTo(n),s<d.near||s>d.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else for(g=0,r=\nq.length/3-1;g<r;g+=p)k.fromArray(q,3*g),l.fromArray(q,3*g+3),s=b.distanceSqToSegment(k,l,n,h),s>f||(n.applyMatrix4(this.matrixWorld),s=d.ray.origin.distanceTo(n),s<d.near||s>d.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g instanceof THREE.Geometry)for(k=g.vertices,l=k.length,g=0;g<l-1;g+=p)s=b.distanceSqToSegment(k[g],k[g+1],n,h),s>f||(n.applyMatrix4(this.matrixWorld),s=d.ray.origin.distanceTo(n),s<d.near||s>d.far||\ne.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});THREE.LineSegments=function(a,b){THREE.Line.call(this,a,b);this.type=\"LineSegments\"};THREE.LineSegments.prototype=Object.assign(Object.create(THREE.Line.prototype),{constructor:THREE.LineSegments});\nTHREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type=\"Mesh\";this.geometry=void 0!==a?a:new THREE.BufferGeometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.drawMode=THREE.TrianglesDrawMode;this.updateMorphTargets()};\nTHREE.Mesh.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Mesh,setDrawMode:function(a){this.drawMode=a},copy:function(a){THREE.Object3D.prototype.copy.call(this,a);this.drawMode=a.drawMode;return this},updateMorphTargets:function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),\nthis.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}},getMorphTargetIndexByName:function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.warn(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+a+\" does not exist. Returning 0.\");return 0},raycast:function(){function a(a,b,c,d,e,g,f){THREE.Triangle.barycoordFromPoint(a,b,c,d,s);e.multiplyScalar(s.x);g.multiplyScalar(s.y);f.multiplyScalar(s.z);e.add(g).add(f);return e.clone()}function b(a,b,c,\nd,e,g,f){var h=a.material;if(null===(h.side===THREE.BackSide?c.intersectTriangle(g,e,d,!0,f):c.intersectTriangle(d,e,g,h.side!==THREE.DoubleSide,f)))return null;u.copy(f);u.applyMatrix4(a.matrixWorld);c=b.ray.origin.distanceTo(u);return c<b.near||c>b.far?null:{distance:c,point:u.clone(),object:a}}function c(c,d,e,f,l,p,n,s){g.fromArray(f,3*p);h.fromArray(f,3*n);k.fromArray(f,3*s);if(c=b(c,d,e,g,h,k,t))l&&(m.fromArray(l,2*p),q.fromArray(l,2*n),r.fromArray(l,2*s),c.uv=a(t,g,h,k,m,q,r)),c.face=new THREE.Face3(p,\nn,s,THREE.Triangle.normal(g,h,k)),c.faceIndex=p;return c}var d=new THREE.Matrix4,e=new THREE.Ray,f=new THREE.Sphere,g=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector2,q=new THREE.Vector2,r=new THREE.Vector2,s=new THREE.Vector3,t=new THREE.Vector3,u=new THREE.Vector3;return function(v,s){var w=this.geometry,u=this.material,z=this.matrixWorld;if(void 0!==u&&(null===w.boundingSphere&&w.computeBoundingSphere(),f.copy(w.boundingSphere),\nf.applyMatrix4(z),!1!==v.ray.intersectsSphere(f)&&(d.getInverse(z),e.copy(v.ray).applyMatrix4(d),null===w.boundingBox||!1!==e.intersectsBox(w.boundingBox)))){var y,A;if(w instanceof THREE.BufferGeometry){var I,B,u=w.index,z=w.attributes,w=z.position.array;void 0!==z.uv&&(y=z.uv.array);if(null!==u)for(var z=u.array,F=0,K=z.length;F<K;F+=3){if(u=z[F],I=z[F+1],B=z[F+2],A=c(this,v,e,w,y,u,I,B))A.faceIndex=Math.floor(F/3),s.push(A)}else for(F=0,K=w.length;F<K;F+=9)if(u=F/3,I=u+1,B=u+2,A=c(this,v,e,w,y,\nu,I,B))A.index=u,s.push(A)}else if(w instanceof THREE.Geometry){var P,M,z=u instanceof THREE.MultiMaterial,F=!0===z?u.materials:null,K=w.vertices;I=w.faces;B=w.faceVertexUvs[0];0<B.length&&(y=B);for(var H=0,L=I.length;H<L;H++){var O=I[H];A=!0===z?F[O.materialIndex]:u;if(void 0!==A){B=K[O.a];P=K[O.b];M=K[O.c];if(!0===A.morphTargets){A=w.morphTargets;var N=this.morphTargetInfluences;g.set(0,0,0);h.set(0,0,0);k.set(0,0,0);for(var Q=0,J=A.length;Q<J;Q++){var D=N[Q];if(0!==D){var G=A[Q].vertices;g.addScaledVector(l.subVectors(G[O.a],\nB),D);h.addScaledVector(n.subVectors(G[O.b],P),D);k.addScaledVector(p.subVectors(G[O.c],M),D)}}g.add(B);h.add(P);k.add(M);B=g;P=h;M=k}if(A=b(this,v,e,B,P,M,t))y&&(N=y[H],m.copy(N[0]),q.copy(N[1]),r.copy(N[2]),A.uv=a(t,B,P,M,m,q,r)),A.face=O,A.faceIndex=H,s.push(A)}}}}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});THREE.Bone=function(a){THREE.Object3D.call(this);this.type=\"Bone\";this.skin=a};\nTHREE.Bone.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Bone,copy:function(a){THREE.Object3D.prototype.copy.call(this,a);this.skin=a.skin;return this}});\nTHREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(a=Math.sqrt(4*this.bones.length),a=THREE.Math.nextPowerOfTwo(Math.ceil(a)),this.boneTextureHeight=this.boneTextureWidth=a=Math.max(a,4),this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)):\nthis.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn(\"THREE.Skeleton bonInverses is the wrong length.\"),this.boneInverses=[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)};\nObject.assign(THREE.Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}},pose:function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent instanceof THREE.Bone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):\na.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)},update:function(){var a=new THREE.Matrix4;return function(){for(var b=0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.toArray(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),clone:function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)}});\nTHREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.type=\"SkinnedMesh\";this.bindMode=\"attached\";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e=0,f=this.geometry.bones.length;e<f;++e)d=this.geometry.bones[e],b=new THREE.Bone(this),a.push(b),b.name=d.name,b.position.fromArray(d.pos),b.quaternion.fromArray(d.rotq),void 0!==d.scl&&b.scale.fromArray(d.scl);e=0;for(f=this.geometry.bones.length;e<f;++e)d=\nthis.geometry.bones[e],-1!==d.parent&&null!==d.parent&&void 0!==a[d.parent]?a[d.parent].add(a[e]):this.add(a[e])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,c),this.matrixWorld)};\nTHREE.SkinnedMesh.prototype=Object.assign(Object.create(THREE.Mesh.prototype),{constructor:THREE.SkinnedMesh,bind:function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinWeights.length;a++){var b=this.geometry.skinWeights[a],c=\n1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0)}else if(this.geometry instanceof THREE.BufferGeometry)for(var b=new THREE.Vector4,d=this.geometry.attributes.skinWeight,a=0;a<d.count;a++)b.x=d.getX(a),b.y=d.getY(a),b.z=d.getZ(a),b.w=d.getW(a),c=1/b.lengthManhattan(),Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0),d.setXYZW(a,b.x,b.y,b.z,b.w)},updateMatrixWorld:function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\n\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn(\"THREE.SkinnedMesh unrecognized bindMode: \"+this.bindMode)},clone:function(){return(new this.constructor(this.geometry,this.material,this.skeleton.useVertexTexture)).copy(this)}});THREE.LOD=function(){THREE.Object3D.call(this);this.type=\"LOD\";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})};\nTHREE.LOD.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.LOD,copy:function(a){THREE.Object3D.prototype.copy.call(this,a,!1);a=a.levels;for(var b=0,c=a.length;b<c;b++){var d=a[b];this.addLevel(d.object.clone(),d.distance)}return this},addLevel:function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=this.levels,d=0;d<c.length&&!(b<c[d].distance);d++);c.splice(d,0,{distance:b,object:a});this.add(a)},getObjectForDistance:function(a){for(var b=this.levels,c=1,d=b.length;c<\nd&&!(a<b[c].distance);c++);return b[c-1].object},raycast:function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}(),update:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){var d=this.levels;if(1<d.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);d[0].object.visible=!0;for(var e=1,f=d.length;e<f;e++)if(c>=\nd[e].distance)d[e-1].object.visible=!1,d[e].object.visible=!0;else break;for(;e<f;e++)d[e].object.visible=!1}}}(),toJSON:function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.levels=[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a}});THREE.Sprite=function(a){THREE.Object3D.call(this);this.type=\"Sprite\";this.material=void 0!==a?a:new THREE.SpriteMaterial};\nTHREE.Sprite.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Sprite,raycast:function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceSqToPoint(a);d>this.scale.x*this.scale.y/4||c.push({distance:Math.sqrt(d),point:this.position,face:null,object:this})}}(),clone:function(){return(new this.constructor(this.material)).copy(this)}});\nTHREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};\nTHREE.LensFlare.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.LensFlare,copy:function(a){THREE.Object3D.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this},add:function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);\nc=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d})},updateLensFlares:function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)}});\nTHREE.Scene=function(){THREE.Object3D.call(this);this.type=\"Scene\";this.overrideMaterial=this.fog=this.background=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;\nTHREE.Scene.prototype.copy=function(a,b){THREE.Object3D.prototype.copy.call(this,a,b);null!==a.background&&(this.background=a.background.clone());null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone());this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this};THREE.Fog=function(a,b,c){this.name=\"\";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};\nTHREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name=\"\";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";THREE.ShaderChunk.alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\nTHREE.ShaderChunk.alphatest_fragment=\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";THREE.ShaderChunk.aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";THREE.ShaderChunk.begin_vertex=\"\\nvec3 transformed = vec3( position );\\n\";THREE.ShaderChunk.beginnormal_vertex=\"\\nvec3 objectNormal = vec3( normal );\\n\";THREE.ShaderChunk.bsdfs=\"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\nTHREE.ShaderChunk.bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n#endif\\n\";THREE.ShaderChunk.clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\nTHREE.ShaderChunk.clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";THREE.ShaderChunk.clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";THREE.ShaderChunk.color_fragment=\"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";THREE.ShaderChunk.color_pars_fragment=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\nTHREE.ShaderChunk.color_pars_vertex=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";THREE.ShaderChunk.color_vertex=\"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";THREE.ShaderChunk.common=\"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\nTHREE.ShaderChunk.cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\nTHREE.ShaderChunk.defaultnormal_vertex=\"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";THREE.ShaderChunk.displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";THREE.ShaderChunk.displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\nTHREE.ShaderChunk.emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";THREE.ShaderChunk.emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";THREE.ShaderChunk.encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\nTHREE.ShaderChunk.encodings_fragment=\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";THREE.ShaderChunk.envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_pars_fragment=\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\nTHREE.ShaderChunk.fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";THREE.ShaderChunk.lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";THREE.ShaderChunk.lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\nTHREE.ShaderChunk.lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.lights_pars=\"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\\t\\t\\tdirectLight.color = pointLight.color;\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\t#include <normal_flip>\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\t#include <normal_flip>\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";THREE.ShaderChunk.lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\nTHREE.ShaderChunk.lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\nTHREE.ShaderChunk.lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\nTHREE.ShaderChunk.lights_template=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\t\\t\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\nTHREE.ShaderChunk.logdepthbuf_fragment=\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";THREE.ShaderChunk.logdepthbuf_pars_fragment=\"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\nTHREE.ShaderChunk.logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";THREE.ShaderChunk.map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\nTHREE.ShaderChunk.map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";THREE.ShaderChunk.map_particle_fragment=\"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";THREE.ShaderChunk.map_particle_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";THREE.ShaderChunk.metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\nTHREE.ShaderChunk.metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";THREE.ShaderChunk.morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\nTHREE.ShaderChunk.morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";THREE.ShaderChunk.morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.normal_flip=\"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";THREE.ShaderChunk.normal_fragment=\"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\nTHREE.ShaderChunk.normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\nTHREE.ShaderChunk.premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";THREE.ShaderChunk.project_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";THREE.ShaderChunk.roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\nTHREE.ShaderChunk.roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";THREE.ShaderChunk.shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\nTHREE.ShaderChunk.skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";THREE.ShaderChunk.skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\nTHREE.ShaderChunk.skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";THREE.ShaderChunk.skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\nTHREE.ShaderChunk.specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";THREE.ShaderChunk.specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";THREE.ShaderChunk.tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\nTHREE.ShaderChunk.tonemapping_pars_fragment=\"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\nTHREE.ShaderChunk.uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";THREE.ShaderChunk.uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";THREE.ShaderChunk.uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";THREE.ShaderChunk.uv_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\nTHREE.ShaderChunk.uv_pars_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";THREE.ShaderChunk.uv_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\nTHREE.ShaderChunk.worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\";\nTHREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix3||e instanceof THREE.Matrix4||e instanceof THREE.Texture?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}};\nTHREE.UniformsLib={common:{diffuse:{value:new THREE.Color(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new THREE.Vector4(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},\nnormalScale:{value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},fog:{fogDensity:{value:2.5E-4},fogNear:{value:1},fogFar:{value:2E3},fogColor:{value:new THREE.Color(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},\ndirectionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},\nskyColor:{},groundColor:{}}}},points:{diffuse:{value:new THREE.Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new THREE.Vector4(0,0,1,1)}}};THREE.ShaderChunk.cube_frag=\"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\nTHREE.ShaderChunk.cube_vert=\"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";THREE.ShaderChunk.depth_frag=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\nTHREE.ShaderChunk.depth_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\nTHREE.ShaderChunk.distanceRGBA_frag=\"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";THREE.ShaderChunk.distanceRGBA_vert=\"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\nTHREE.ShaderChunk.equirect_frag=\"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\nTHREE.ShaderChunk.equirect_vert=\"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";THREE.ShaderChunk.linedashed_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.linedashed_vert=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\nTHREE.ShaderChunk.meshbasic_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.meshbasic_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n}\\n\";\nTHREE.ShaderChunk.meshlambert_frag=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.meshlambert_vert=\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nTHREE.ShaderChunk.meshphong_frag=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.meshphong_vert=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nTHREE.ShaderChunk.meshphysical_frag=\"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.meshphysical_vert=\"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nTHREE.ShaderChunk.normal_frag=\"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";THREE.ShaderChunk.normal_vert=\"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvNormal = normalize( normalMatrix * normal );\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\nTHREE.ShaderChunk.points_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nTHREE.ShaderChunk.points_vert=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nTHREE.ShaderChunk.shadow_frag=\"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";THREE.ShaderChunk.shadow_vert=\"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\nTHREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.meshbasic_vert,fragmentShader:THREE.ShaderChunk.meshbasic_frag},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)}}]),vertexShader:THREE.ShaderChunk.meshlambert_vert,\nfragmentShader:THREE.ShaderChunk.meshlambert_frag},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)},specular:{value:new THREE.Color(1118481)},shininess:{value:30}}]),vertexShader:THREE.ShaderChunk.meshphong_vert,fragmentShader:THREE.ShaderChunk.meshphong_frag},\nstandard:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.roughnessmap,THREE.UniformsLib.metalnessmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)},roughness:{value:.5},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,\nfragmentShader:THREE.ShaderChunk.meshphysical_frag},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.points_vert,fragmentShader:THREE.ShaderChunk.points_frag},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:THREE.ShaderChunk.linedashed_vert,fragmentShader:THREE.ShaderChunk.linedashed_frag},depth:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,\nTHREE.UniformsLib.displacementmap]),vertexShader:THREE.ShaderChunk.depth_vert,fragmentShader:THREE.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{value:1}},vertexShader:THREE.ShaderChunk.normal_vert,fragmentShader:THREE.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1}},vertexShader:THREE.ShaderChunk.cube_vert,fragmentShader:THREE.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:THREE.ShaderChunk.equirect_vert,fragmentShader:THREE.ShaderChunk.equirect_frag},\ndistanceRGBA:{uniforms:{lightPos:{value:new THREE.Vector3}},vertexShader:THREE.ShaderChunk.distanceRGBA_vert,fragmentShader:THREE.ShaderChunk.distanceRGBA_frag}};THREE.ShaderLib.physical={uniforms:THREE.UniformsUtils.merge([THREE.ShaderLib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,fragmentShader:THREE.ShaderChunk.meshphysical_frag};\nTHREE.WebGLRenderer=function(a){function b(a,b,c,d){!0===A&&(a*=d,b*=d,c*=d);R.clearColor(a,b,c,d)}function c(){R.init();R.scissor(X.copy(ua).multiplyScalar($));R.viewport(ba.copy(ma).multiplyScalar($));b(V.r,V.g,V.b,Y)}function d(){T=Q=null;aa=\"\";G=-1;R.reset()}function e(a){a.preventDefault();d();c();Z.clear()}function f(a){a=a.target;a.removeEventListener(\"dispose\",f);g(a);Z.delete(a)}function g(a){var b=Z.get(a).program;a.program=void 0;void 0!==b&&na.releaseProgram(b)}function h(a,b){return Math.abs(b[0])-\nMath.abs(a[0])}function k(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function l(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function n(a,b,c,d,e){var f;c.transparent?(d=P,f=++M):(d=F,f=++K);f=d[f];void 0!==f?(f.id=a.id,f.object=a,f.geometry=b,f.material=c,f.z=W.z,f.group=e):(f=\n{id:a.id,object:a,geometry:b,material:c,z:W.z,group:e},d.push(f))}function p(a){if(!wa.intersectsSphere(a))return!1;var b=ca.numPlanes;if(0===b)return!0;var c=N.clippingPlanes,d=a.center;a=-a.radius;var e=0;do if(c[e].distanceToPoint(d)<a)return!1;while(++e!==b);return!0}function m(a,b){if(!1!==a.visible){if(a.layers.test(b.layers))if(a instanceof THREE.Light)B.push(a);else if(a instanceof THREE.Sprite){var c;(c=!1===a.frustumCulled)||(ha.center.set(0,0,0),ha.radius=.7071067811865476,ha.applyMatrix4(a.matrixWorld),\nc=!0===p(ha));c&&L.push(a)}else if(a instanceof THREE.LensFlare)O.push(a);else if(a instanceof THREE.ImmediateRenderObject)!0===N.sortObjects&&(W.setFromMatrixPosition(a.matrixWorld),W.applyProjection(pa)),n(a,null,a.material,W.z,null);else if(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Points)if(a instanceof THREE.SkinnedMesh&&a.skeleton.update(),(c=!1===a.frustumCulled)||(c=a.geometry,null===c.boundingSphere&&c.computeBoundingSphere(),ha.copy(c.boundingSphere).applyMatrix4(a.matrixWorld),\nc=!0===p(ha)),c){var d=a.material;if(!0===d.visible)if(!0===N.sortObjects&&(W.setFromMatrixPosition(a.matrixWorld),W.applyProjection(pa)),c=ea.update(a),d instanceof THREE.MultiMaterial)for(var e=c.groups,f=d.materials,d=0,g=e.length;d<g;d++){var h=e[d],k=f[h.materialIndex];!0===k.visible&&n(a,c,k,W.z,h)}else n(a,c,d,W.z,null)}c=a.children;d=0;for(g=c.length;d<g;d++)m(c[d],b)}}function q(a,b,c,d){for(var e=0,f=a.length;e<f;e++){var g=a[e],h=g.object,k=g.geometry,m=void 0===d?g.material:d,g=g.group;\nh.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,h.matrixWorld);h.normalMatrix.getNormalMatrix(h.modelViewMatrix);if(h instanceof THREE.ImmediateRenderObject){r(m);var l=s(b,c,m,h);aa=\"\";h.render(function(a){N.renderBufferImmediate(a,l,m)})}else N.renderBufferDirect(b,c,k,m,h,g)}}function r(a){a.side!==THREE.DoubleSide?R.enable(x.CULL_FACE):R.disable(x.CULL_FACE);R.setFlipSided(a.side===THREE.BackSide);!0===a.transparent?R.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,\na.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha):R.setBlending(THREE.NoBlending);R.setDepthFunc(a.depthFunc);R.setDepthTest(a.depthTest);R.setDepthWrite(a.depthWrite);R.setColorWrite(a.colorWrite);R.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}function s(a,b,c,d){ia=0;var e=Z.get(c);qa&&((va||a!==T)&&ca.setState(c.clippingPlanes,c.clipShadows,a,e,a===T&&c.id===G),void 0!==e.numClippingPlanes&&e.numClippingPlanes!==ca.numPlanes&&(c.needsUpdate=!0));void 0===e.program&&\n(c.needsUpdate=!0);void 0!==e.lightsHash&&e.lightsHash!==S.hash&&(c.needsUpdate=!0);if(c.needsUpdate){a:{var h=Z.get(c),k=na.getParameters(c,S,b,ca.numPlanes,d),m=na.getProgramCode(c,k),l=h.program,p=!0;if(void 0===l)c.addEventListener(\"dispose\",f);else if(l.code!==m)g(c);else if(void 0!==k.shaderID)break a;else p=!1;p&&(k.shaderID?(l=THREE.ShaderLib[k.shaderID],h.__webglShader={name:c.type,uniforms:THREE.UniformsUtils.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}):\nh.__webglShader={name:c.type,uniforms:c.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader},c.__webglShader=h.__webglShader,l=na.acquireProgram(c,k,m),h.program=l,c.program=l);k=l.getAttributes();if(c.morphTargets)for(m=c.numSupportedMorphTargets=0;m<N.maxMorphTargets;m++)0<=k[\"morphTarget\"+m]&&c.numSupportedMorphTargets++;if(c.morphNormals)for(m=c.numSupportedMorphNormals=0;m<N.maxMorphNormals;m++)0<=k[\"morphNormal\"+m]&&c.numSupportedMorphNormals++;k=h.__webglShader.uniforms;(c instanceof\nTHREE.ShaderMaterial||c instanceof THREE.RawShaderMaterial)&&!0!==c.clipping||(h.numClippingPlanes=ca.numPlanes,k.clippingPlanes=ca.uniform);c.lights&&(h.lightsHash=S.hash,k.ambientLightColor.value=S.ambient,k.directionalLights.value=S.directional,k.spotLights.value=S.spot,k.pointLights.value=S.point,k.hemisphereLights.value=S.hemi,k.directionalShadowMap.value=S.directionalShadowMap,k.directionalShadowMatrix.value=S.directionalShadowMatrix,k.spotShadowMap.value=S.spotShadowMap,k.spotShadowMatrix.value=\nS.spotShadowMatrix,k.pointShadowMap.value=S.pointShadowMap,k.pointShadowMatrix.value=S.pointShadowMatrix);m=h.program.getUniforms();m=THREE.WebGLUniforms.seqWithValue(m.seq,k);h.uniformsList=m;h.dynamicUniforms=THREE.WebGLUniforms.splitDynamic(m,k)}c.needsUpdate=!1}var n=!1,p=l=!1,h=e.program,m=h.getUniforms(),k=e.__webglShader.uniforms;h.id!==Q&&(x.useProgram(h.program),Q=h.id,p=l=n=!0);c.id!==G&&(G=c.id,l=!0);if(n||a!==T){m.set(x,a,\"projectionMatrix\");da.logarithmicDepthBuffer&&m.setValue(x,\"logDepthBufFC\",\n2/(Math.log(a.far+1)/Math.LN2));a!==T&&(T=a,p=l=!0);if(c instanceof THREE.ShaderMaterial||c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshStandardMaterial||c.envMap)n=m.map.cameraPosition,void 0!==n&&n.setValue(x,W.setFromMatrixPosition(a.matrixWorld));(c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshBasicMaterial||c instanceof THREE.MeshStandardMaterial||c instanceof THREE.ShaderMaterial||c.skinning)&&m.setValue(x,\"viewMatrix\",a.matrixWorldInverse);\nm.set(x,N,\"toneMappingExposure\");m.set(x,N,\"toneMappingWhitePoint\")}c.skinning&&(m.setOptional(x,d,\"bindMatrix\"),m.setOptional(x,d,\"bindMatrixInverse\"),n=d.skeleton)&&(da.floatVertexTextures&&n.useVertexTexture?(m.set(x,n,\"boneTexture\"),m.set(x,n,\"boneTextureWidth\"),m.set(x,n,\"boneTextureHeight\")):m.setOptional(x,n,\"boneMatrices\"));if(l){c.lights&&(l=p,k.ambientLightColor.needsUpdate=l,k.directionalLights.needsUpdate=l,k.pointLights.needsUpdate=l,k.spotLights.needsUpdate=l,k.hemisphereLights.needsUpdate=\nl);b&&c.fog&&(k.fogColor.value=b.color,b instanceof THREE.Fog?(k.fogNear.value=b.near,k.fogFar.value=b.far):b instanceof THREE.FogExp2&&(k.fogDensity.value=b.density));if(c instanceof THREE.MeshBasicMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshPhongMaterial||c instanceof THREE.MeshStandardMaterial||c instanceof THREE.MeshDepthMaterial){k.opacity.value=c.opacity;k.diffuse.value=c.color;c.emissive&&k.emissive.value.copy(c.emissive).multiplyScalar(c.emissiveIntensity);k.map.value=\nc.map;k.specularMap.value=c.specularMap;k.alphaMap.value=c.alphaMap;c.aoMap&&(k.aoMap.value=c.aoMap,k.aoMapIntensity.value=c.aoMapIntensity);var q;c.map?q=c.map:c.specularMap?q=c.specularMap:c.displacementMap?q=c.displacementMap:c.normalMap?q=c.normalMap:c.bumpMap?q=c.bumpMap:c.roughnessMap?q=c.roughnessMap:c.metalnessMap?q=c.metalnessMap:c.alphaMap?q=c.alphaMap:c.emissiveMap&&(q=c.emissiveMap);void 0!==q&&(q instanceof THREE.WebGLRenderTarget&&(q=q.texture),b=q.offset,q=q.repeat,k.offsetRepeat.value.set(b.x,\nb.y,q.x,q.y));k.envMap.value=c.envMap;k.flipEnvMap.value=c.envMap instanceof THREE.CubeTexture?-1:1;k.reflectivity.value=c.reflectivity;k.refractionRatio.value=c.refractionRatio}c instanceof THREE.LineBasicMaterial?(k.diffuse.value=c.color,k.opacity.value=c.opacity):c instanceof THREE.LineDashedMaterial?(k.diffuse.value=c.color,k.opacity.value=c.opacity,k.dashSize.value=c.dashSize,k.totalSize.value=c.dashSize+c.gapSize,k.scale.value=c.scale):c instanceof THREE.PointsMaterial?(k.diffuse.value=c.color,\nk.opacity.value=c.opacity,k.size.value=c.size*$,k.scale.value=.5*v.clientHeight,k.map.value=c.map,null!==c.map&&(q=c.map.offset,c=c.map.repeat,k.offsetRepeat.value.set(q.x,q.y,c.x,c.y))):c instanceof THREE.MeshLambertMaterial?(c.lightMap&&(k.lightMap.value=c.lightMap,k.lightMapIntensity.value=c.lightMapIntensity),c.emissiveMap&&(k.emissiveMap.value=c.emissiveMap)):c instanceof THREE.MeshPhongMaterial?(k.specular.value=c.specular,k.shininess.value=Math.max(c.shininess,1E-4),c.lightMap&&(k.lightMap.value=\nc.lightMap,k.lightMapIntensity.value=c.lightMapIntensity),c.emissiveMap&&(k.emissiveMap.value=c.emissiveMap),c.bumpMap&&(k.bumpMap.value=c.bumpMap,k.bumpScale.value=c.bumpScale),c.normalMap&&(k.normalMap.value=c.normalMap,k.normalScale.value.copy(c.normalScale)),c.displacementMap&&(k.displacementMap.value=c.displacementMap,k.displacementScale.value=c.displacementScale,k.displacementBias.value=c.displacementBias)):c instanceof THREE.MeshPhysicalMaterial?(k.clearCoat.value=c.clearCoat,k.clearCoatRoughness.value=\nc.clearCoatRoughness,t(k,c)):c instanceof THREE.MeshStandardMaterial?t(k,c):c instanceof THREE.MeshDepthMaterial?c.displacementMap&&(k.displacementMap.value=c.displacementMap,k.displacementScale.value=c.displacementScale,k.displacementBias.value=c.displacementBias):c instanceof THREE.MeshNormalMaterial&&(k.opacity.value=c.opacity);THREE.WebGLUniforms.upload(x,e.uniformsList,k,N)}m.set(x,d,\"modelViewMatrix\");m.set(x,d,\"normalMatrix\");m.setValue(x,\"modelMatrix\",d.matrixWorld);e=e.dynamicUniforms;null!==\ne&&(THREE.WebGLUniforms.evalDynamic(e,k,d,a),THREE.WebGLUniforms.upload(x,e,k,N));return h}function t(a,b){a.roughness.value=b.roughness;a.metalness.value=b.metalness;b.roughnessMap&&(a.roughnessMap.value=b.roughnessMap);b.metalnessMap&&(a.metalnessMap.value=b.metalnessMap);b.lightMap&&(a.lightMap.value=b.lightMap,a.lightMapIntensity.value=b.lightMapIntensity);b.emissiveMap&&(a.emissiveMap.value=b.emissiveMap);b.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale);b.normalMap&&(a.normalMap.value=\nb.normalMap,a.normalScale.value.copy(b.normalScale));b.displacementMap&&(a.displacementMap.value=b.displacementMap,a.displacementScale.value=b.displacementScale,a.displacementBias.value=b.displacementBias);b.envMap&&(a.envMapIntensity.value=b.envMapIntensity)}function u(a){var b;if(a===THREE.RepeatWrapping)return x.REPEAT;if(a===THREE.ClampToEdgeWrapping)return x.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return x.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return x.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return x.NEAREST_MIPMAP_NEAREST;\nif(a===THREE.NearestMipMapLinearFilter)return x.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return x.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return x.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return x.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return x.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return x.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return x.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return x.UNSIGNED_SHORT_5_6_5;\nif(a===THREE.ByteType)return x.BYTE;if(a===THREE.ShortType)return x.SHORT;if(a===THREE.UnsignedShortType)return x.UNSIGNED_SHORT;if(a===THREE.IntType)return x.INT;if(a===THREE.UnsignedIntType)return x.UNSIGNED_INT;if(a===THREE.FloatType)return x.FLOAT;b=U.get(\"OES_texture_half_float\");if(null!==b&&a===THREE.HalfFloatType)return b.HALF_FLOAT_OES;if(a===THREE.AlphaFormat)return x.ALPHA;if(a===THREE.RGBFormat)return x.RGB;if(a===THREE.RGBAFormat)return x.RGBA;if(a===THREE.LuminanceFormat)return x.LUMINANCE;\nif(a===THREE.LuminanceAlphaFormat)return x.LUMINANCE_ALPHA;if(a===THREE.DepthFormat)return x.DEPTH_COMPONENT;if(a===THREE.AddEquation)return x.FUNC_ADD;if(a===THREE.SubtractEquation)return x.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return x.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return x.ZERO;if(a===THREE.OneFactor)return x.ONE;if(a===THREE.SrcColorFactor)return x.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return x.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return x.SRC_ALPHA;\nif(a===THREE.OneMinusSrcAlphaFactor)return x.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return x.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return x.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return x.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return x.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return x.SRC_ALPHA_SATURATE;b=U.get(\"WEBGL_compressed_texture_s3tc\");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;\nif(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=U.get(\"WEBGL_compressed_texture_pvrtc\");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=\nU.get(\"WEBGL_compressed_texture_etc1\");if(null!==b&&a===THREE.RGB_ETC1_Format)return b.COMPRESSED_RGB_ETC1_WEBGL;b=U.get(\"EXT_blend_minmax\");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}console.log(\"THREE.WebGLRenderer\",THREE.REVISION);a=a||{};var v=void 0!==a.canvas?a.canvas:document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),C=void 0!==a.context?a.context:null,w=void 0!==a.alpha?a.alpha:!1,E=void 0!==a.depth?a.depth:!0,z=\nvoid 0!==a.stencil?a.stencil:!0,y=void 0!==a.antialias?a.antialias:!1,A=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,I=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,B=[],F=[],K=-1,P=[],M=-1,H=new Float32Array(8),L=[],O=[];this.domElement=v;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;this.gammaFactor=2;this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=\n!1;this.toneMapping=THREE.LinearToneMapping;this.toneMappingWhitePoint=this.toneMappingExposure=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var N=this,Q=null,J=null,D=null,G=-1,aa=\"\",T=null,X=new THREE.Vector4,ja=null,ba=new THREE.Vector4,ia=0,V=new THREE.Color(0),Y=0,ra=v.width,sa=v.height,$=1,ua=new THREE.Vector4(0,0,ra,sa),xa=!1,ma=new THREE.Vector4(0,0,ra,sa),wa=new THREE.Frustum,ca=new THREE.WebGLClipping,qa=!1,va=!1,ha=new THREE.Sphere,pa=new THREE.Matrix4,W=new THREE.Vector3,S={hash:\"\",\nambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},fa={calls:0,vertices:0,faces:0,points:0};this.info={render:fa,memory:{geometries:0,textures:0},programs:null};var x;try{w={alpha:w,depth:E,stencil:z,antialias:y,premultipliedAlpha:A,preserveDrawingBuffer:I};x=C||v.getContext(\"webgl\",w)||v.getContext(\"experimental-webgl\",w);if(null===x){if(null!==v.getContext(\"webgl\"))throw\"Error creating WebGL context with your selected attributes.\";\nthrow\"Error creating WebGL context.\";}void 0===x.getShaderPrecisionFormat&&(x.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});v.addEventListener(\"webglcontextlost\",e,!1)}catch(za){console.error(\"THREE.WebGLRenderer: \"+za)}var U=new THREE.WebGLExtensions(x);U.get(\"WEBGL_depth_texture\");U.get(\"OES_texture_float\");U.get(\"OES_texture_float_linear\");U.get(\"OES_texture_half_float\");U.get(\"OES_texture_half_float_linear\");U.get(\"OES_standard_derivatives\");U.get(\"ANGLE_instanced_arrays\");\nU.get(\"OES_element_index_uint\")&&(THREE.BufferGeometry.MaxIndex=4294967296);var da=new THREE.WebGLCapabilities(x,U,a),R=new THREE.WebGLState(x,U,u),Z=new THREE.WebGLProperties,ka=new THREE.WebGLTextures(x,U,R,Z,da,u,this.info),ea=new THREE.WebGLObjects(x,Z,this.info),na=new THREE.WebGLPrograms(this,da),ta=new THREE.WebGLLights;this.info.programs=na.programs;var Aa=new THREE.WebGLBufferRenderer(x,U,fa),Ba=new THREE.WebGLIndexedBufferRenderer(x,U,fa),Ca=new THREE.OrthographicCamera(-1,1,1,-1,0,1),la=\nnew THREE.PerspectiveCamera,oa=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.MeshBasicMaterial({depthTest:!1,depthWrite:!1}));a=THREE.ShaderLib.cube;var ga=new THREE.Mesh(new THREE.BoxBufferGeometry(5,5,5),new THREE.ShaderMaterial({uniforms:a.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,depthTest:!1,depthWrite:!1,side:THREE.BackSide}));ea.update(oa);ea.update(ga);c();this.context=x;this.capabilities=da;this.extensions=U;this.properties=Z;this.state=R;var ya=new THREE.WebGLShadowMap(this,\nS,ea);this.shadowMap=ya;var Da=new THREE.SpritePlugin(this,L),Ea=new THREE.LensFlarePlugin(this,O);this.getContext=function(){return x};this.getContextAttributes=function(){return x.getContextAttributes()};this.forceContextLoss=function(){U.get(\"WEBGL_lose_context\").loseContext()};this.getMaxAnisotropy=function(){return da.getMaxAnisotropy()};this.getPrecision=function(){return da.precision};this.getPixelRatio=function(){return $};this.setPixelRatio=function(a){void 0!==a&&($=a,this.setSize(ma.z,\nma.w,!1))};this.getSize=function(){return{width:ra,height:sa}};this.setSize=function(a,b,c){ra=a;sa=b;v.width=a*$;v.height=b*$;!1!==c&&(v.style.width=a+\"px\",v.style.height=b+\"px\");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){R.viewport(ma.set(a,b,c,d))};this.setScissor=function(a,b,c,d){R.scissor(ua.set(a,b,c,d))};this.setScissorTest=function(a){R.setScissorTest(xa=a)};this.getClearColor=function(){return V};this.setClearColor=function(a,c){V.set(a);Y=void 0!==c?c:1;b(V.r,V.g,V.b,\nY)};this.getClearAlpha=function(){return Y};this.setClearAlpha=function(a){Y=a;b(V.r,V.g,V.b,Y)};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=x.COLOR_BUFFER_BIT;if(void 0===b||b)d|=x.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=x.STENCIL_BUFFER_BIT;x.clear(d)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.resetGLState=\nd;this.dispose=function(){P=[];M=-1;F=[];K=-1;v.removeEventListener(\"webglcontextlost\",e,!1)};this.renderBufferImmediate=function(a,b,c){R.initAttributes();var d=Z.get(a);a.hasPositions&&!d.position&&(d.position=x.createBuffer());a.hasNormals&&!d.normal&&(d.normal=x.createBuffer());a.hasUvs&&!d.uv&&(d.uv=x.createBuffer());a.hasColors&&!d.color&&(d.color=x.createBuffer());b=b.getAttributes();a.hasPositions&&(x.bindBuffer(x.ARRAY_BUFFER,d.position),x.bufferData(x.ARRAY_BUFFER,a.positionArray,x.DYNAMIC_DRAW),\nR.enableAttribute(b.position),x.vertexAttribPointer(b.position,3,x.FLOAT,!1,0,0));if(a.hasNormals){x.bindBuffer(x.ARRAY_BUFFER,d.normal);if(\"MeshPhongMaterial\"!==c.type&&\"MeshStandardMaterial\"!==c.type&&\"MeshPhysicalMaterial\"!==c.type&&c.shading===THREE.FlatShading)for(var e=0,f=3*a.count;e<f;e+=9){var g=a.normalArray,h=(g[e+0]+g[e+3]+g[e+6])/3,k=(g[e+1]+g[e+4]+g[e+7])/3,m=(g[e+2]+g[e+5]+g[e+8])/3;g[e+0]=h;g[e+1]=k;g[e+2]=m;g[e+3]=h;g[e+4]=k;g[e+5]=m;g[e+6]=h;g[e+7]=k;g[e+8]=m}x.bufferData(x.ARRAY_BUFFER,\na.normalArray,x.DYNAMIC_DRAW);R.enableAttribute(b.normal);x.vertexAttribPointer(b.normal,3,x.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(x.bindBuffer(x.ARRAY_BUFFER,d.uv),x.bufferData(x.ARRAY_BUFFER,a.uvArray,x.DYNAMIC_DRAW),R.enableAttribute(b.uv),x.vertexAttribPointer(b.uv,2,x.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(x.bindBuffer(x.ARRAY_BUFFER,d.color),x.bufferData(x.ARRAY_BUFFER,a.colorArray,x.DYNAMIC_DRAW),R.enableAttribute(b.color),x.vertexAttribPointer(b.color,3,x.FLOAT,!1,0,0));R.disableUnusedAttributes();\nx.drawArrays(x.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,g){r(d);var f=s(a,b,d,e),k=!1;a=c.id+\"_\"+f.id+\"_\"+d.wireframe;a!==aa&&(aa=a,k=!0);b=e.morphTargetInfluences;if(void 0!==b){a=[];for(var m=0,k=b.length;m<k;m++){var l=b[m];a.push([l,m])}a.sort(h);8<a.length&&(a.length=8);for(var n=c.morphAttributes,m=0,k=a.length;m<k;m++)l=a[m],H[m]=l[0],0!==l[0]?(b=l[1],!0===d.morphTargets&&n.position&&c.addAttribute(\"morphTarget\"+m,n.position[b]),!0===d.morphNormals&&n.normal&&\nc.addAttribute(\"morphNormal\"+m,n.normal[b])):(!0===d.morphTargets&&c.removeAttribute(\"morphTarget\"+m),!0===d.morphNormals&&c.removeAttribute(\"morphNormal\"+m));f.getUniforms().setValue(x,\"morphTargetInfluences\",H);k=!0}b=c.index;m=c.attributes.position;!0===d.wireframe&&(b=ea.getWireframeAttribute(c));null!==b?(a=Ba,a.setIndex(b)):a=Aa;if(k){a:{var k=void 0,p;if(c instanceof THREE.InstancedBufferGeometry&&(p=U.get(\"ANGLE_instanced_arrays\"),null===p)){console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\nbreak a}void 0===k&&(k=0);R.initAttributes();var l=c.attributes,f=f.getAttributes(),n=d.defaultAttributeValues,q;for(q in f){var v=f[q];if(0<=v){var u=l[q];if(void 0!==u){var w=x.FLOAT,C=u.array,t=u.normalized;C instanceof Float32Array?w=x.FLOAT:C instanceof Float64Array?console.warn(\"Unsupported data buffer format: Float64Array\"):C instanceof Uint16Array?w=x.UNSIGNED_SHORT:C instanceof Int16Array?w=x.SHORT:C instanceof Uint32Array?w=x.UNSIGNED_INT:C instanceof Int32Array?w=x.INT:C instanceof Int8Array?\nw=x.BYTE:C instanceof Uint8Array&&(w=x.UNSIGNED_BYTE);var C=u.itemSize,y=ea.getAttributeBuffer(u);if(u instanceof THREE.InterleavedBufferAttribute){var z=u.data,A=z.stride,u=u.offset;z instanceof THREE.InstancedInterleavedBuffer?(R.enableAttributeAndDivisor(v,z.meshPerAttribute,p),void 0===c.maxInstancedCount&&(c.maxInstancedCount=z.meshPerAttribute*z.count)):R.enableAttribute(v);x.bindBuffer(x.ARRAY_BUFFER,y);x.vertexAttribPointer(v,C,w,t,A*z.array.BYTES_PER_ELEMENT,(k*A+u)*z.array.BYTES_PER_ELEMENT)}else u instanceof\nTHREE.InstancedBufferAttribute?(R.enableAttributeAndDivisor(v,u.meshPerAttribute,p),void 0===c.maxInstancedCount&&(c.maxInstancedCount=u.meshPerAttribute*u.count)):R.enableAttribute(v),x.bindBuffer(x.ARRAY_BUFFER,y),x.vertexAttribPointer(v,C,w,t,0,k*C*u.array.BYTES_PER_ELEMENT)}else if(void 0!==n&&(w=n[q],void 0!==w))switch(w.length){case 2:x.vertexAttrib2fv(v,w);break;case 3:x.vertexAttrib3fv(v,w);break;case 4:x.vertexAttrib4fv(v,w);break;default:x.vertexAttrib1fv(v,w)}}}R.disableUnusedAttributes()}null!==\nb&&x.bindBuffer(x.ELEMENT_ARRAY_BUFFER,ea.getAttributeBuffer(b))}p=Infinity;null!==b?p=b.count:void 0!==m&&(p=m.count);q=c.drawRange.start;b=c.drawRange.count;m=null!==g?g.start:0;k=null!==g?g.count:Infinity;g=Math.max(0,q,m);p=Math.min(0+p,q+b,m+k)-1;p=Math.max(0,p-g+1);if(e instanceof THREE.Mesh)if(!0===d.wireframe)R.setLineWidth(d.wireframeLinewidth*(null===J?$:1)),a.setMode(x.LINES);else switch(e.drawMode){case THREE.TrianglesDrawMode:a.setMode(x.TRIANGLES);break;case THREE.TriangleStripDrawMode:a.setMode(x.TRIANGLE_STRIP);\nbreak;case THREE.TriangleFanDrawMode:a.setMode(x.TRIANGLE_FAN)}else e instanceof THREE.Line?(d=d.linewidth,void 0===d&&(d=1),R.setLineWidth(d*(null===J?$:1)),e instanceof THREE.LineSegments?a.setMode(x.LINES):a.setMode(x.LINE_STRIP)):e instanceof THREE.Points&&a.setMode(x.POINTS);c instanceof THREE.InstancedBufferGeometry?0<c.maxInstancedCount&&a.renderInstances(c,g,p):a.render(g,p)};this.render=function(a,c,d,e){if(!1===c instanceof THREE.Camera)console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");\nelse{var g=a.fog;aa=\"\";G=-1;T=null;!0===a.autoUpdate&&a.updateMatrixWorld();null===c.parent&&c.updateMatrixWorld();c.matrixWorldInverse.getInverse(c.matrixWorld);pa.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse);wa.setFromMatrix(pa);B.length=0;M=K=-1;L.length=0;O.length=0;va=this.localClippingEnabled;qa=ca.init(this.clippingPlanes,va,c);m(a,c);F.length=K+1;P.length=M+1;!0===N.sortObjects&&(F.sort(k),P.sort(l));qa&&ca.beginShadows();for(var f=B,h=0,p=0,n=f.length;p<n;p++){var v=f[p];v.castShadow&&\n(S.shadows[h++]=v)}S.shadows.length=h;ya.render(a,c);for(var f=B,r=v=0,s=0,u,w,C,t,H=c.matrixWorldInverse,y=0,z=0,J=0,A=0,h=0,p=f.length;h<p;h++)if(n=f[h],u=n.color,w=n.intensity,C=n.distance,t=n.shadow&&n.shadow.map?n.shadow.map.texture:null,n instanceof THREE.AmbientLight)v+=u.r*w,r+=u.g*w,s+=u.b*w;else if(n instanceof THREE.DirectionalLight){var D=ta.get(n);D.color.copy(n.color).multiplyScalar(n.intensity);D.direction.setFromMatrixPosition(n.matrixWorld);W.setFromMatrixPosition(n.target.matrixWorld);\nD.direction.sub(W);D.direction.transformDirection(H);if(D.shadow=n.castShadow)D.shadowBias=n.shadow.bias,D.shadowRadius=n.shadow.radius,D.shadowMapSize=n.shadow.mapSize;S.directionalShadowMap[y]=t;S.directionalShadowMatrix[y]=n.shadow.matrix;S.directional[y++]=D}else if(n instanceof THREE.SpotLight){D=ta.get(n);D.position.setFromMatrixPosition(n.matrixWorld);D.position.applyMatrix4(H);D.color.copy(u).multiplyScalar(w);D.distance=C;D.direction.setFromMatrixPosition(n.matrixWorld);W.setFromMatrixPosition(n.target.matrixWorld);\nD.direction.sub(W);D.direction.transformDirection(H);D.coneCos=Math.cos(n.angle);D.penumbraCos=Math.cos(n.angle*(1-n.penumbra));D.decay=0===n.distance?0:n.decay;if(D.shadow=n.castShadow)D.shadowBias=n.shadow.bias,D.shadowRadius=n.shadow.radius,D.shadowMapSize=n.shadow.mapSize;S.spotShadowMap[J]=t;S.spotShadowMatrix[J]=n.shadow.matrix;S.spot[J++]=D}else if(n instanceof THREE.PointLight){D=ta.get(n);D.position.setFromMatrixPosition(n.matrixWorld);D.position.applyMatrix4(H);D.color.copy(n.color).multiplyScalar(n.intensity);\nD.distance=n.distance;D.decay=0===n.distance?0:n.decay;if(D.shadow=n.castShadow)D.shadowBias=n.shadow.bias,D.shadowRadius=n.shadow.radius,D.shadowMapSize=n.shadow.mapSize;S.pointShadowMap[z]=t;void 0===S.pointShadowMatrix[z]&&(S.pointShadowMatrix[z]=new THREE.Matrix4);W.setFromMatrixPosition(n.matrixWorld).negate();S.pointShadowMatrix[z].identity().setPosition(W);S.point[z++]=D}else n instanceof THREE.HemisphereLight&&(D=ta.get(n),D.direction.setFromMatrixPosition(n.matrixWorld),D.direction.transformDirection(H),\nD.direction.normalize(),D.skyColor.copy(n.color).multiplyScalar(w),D.groundColor.copy(n.groundColor).multiplyScalar(w),S.hemi[A++]=D);S.ambient[0]=v;S.ambient[1]=r;S.ambient[2]=s;S.directional.length=y;S.spot.length=J;S.point.length=z;S.hemi.length=A;S.hash=y+\",\"+z+\",\"+J+\",\"+A+\",\"+S.shadows.length;qa&&ca.endShadows();fa.calls=0;fa.vertices=0;fa.faces=0;fa.points=0;void 0===d&&(d=null);this.setRenderTarget(d);f=a.background;null===f?b(V.r,V.g,V.b,Y):f instanceof THREE.Color&&b(f.r,f.g,f.b,1);(this.autoClear||\ne)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);f instanceof THREE.CubeTexture?(la.projectionMatrix.copy(c.projectionMatrix),la.matrixWorld.extractRotation(c.matrixWorld),la.matrixWorldInverse.getInverse(la.matrixWorld),ga.material.uniforms.tCube.value=f,ga.modelViewMatrix.multiplyMatrices(la.matrixWorldInverse,ga.matrixWorld),N.renderBufferDirect(la,null,ga.geometry,ga.material,ga,null)):f instanceof THREE.Texture&&(oa.material.map=f,N.renderBufferDirect(Ca,null,oa.geometry,\noa.material,oa,null));a.overrideMaterial?(e=a.overrideMaterial,q(F,c,g,e),q(P,c,g,e)):(R.setBlending(THREE.NoBlending),q(F,c,g),q(P,c,g));Da.render(a,c);Ea.render(a,c,ba);d&&ka.updateRenderTargetMipmap(d);R.setDepthTest(!0);R.setDepthWrite(!0);R.setColorWrite(!0)}};this.setFaceCulling=function(a,b){R.setCullFace(a);R.setFlipSided(b===THREE.FrontFaceDirectionCW)};this.allocTextureUnit=function(){var a=ia;a>=da.maxTextures&&console.warn(\"WebGLRenderer: trying to use \"+a+\" texture units while this GPU supports only \"+\nda.maxTextures);ia+=1;return a};this.setTexture2D=function(){var a=!1;return function(b,c){b instanceof THREE.WebGLRenderTarget&&(a||(console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\"),a=!0),b=b.texture);ka.setTexture2D(b,c)}}();this.setTexture=function(){var a=!1;return function(b,c){a||(console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\"),a=!0);ka.setTexture2D(b,c)}}();this.setTextureCube=\nfunction(){var a=!1;return function(b,c){b instanceof THREE.WebGLRenderTargetCube&&(a||(console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"),a=!0),b=b.texture);b instanceof THREE.CubeTexture||Array.isArray(b.image)&&6===b.image.length?ka.setTextureCube(b,c):ka.setTextureCubeDynamic(b,c)}}();this.getCurrentRenderTarget=function(){return J};this.setRenderTarget=function(a){(J=a)&&void 0===Z.get(a).__webglFramebuffer&&ka.setupRenderTarget(a);\nvar b=a instanceof THREE.WebGLRenderTargetCube,c;a?(c=Z.get(a),c=b?c.__webglFramebuffer[a.activeCubeFace]:c.__webglFramebuffer,X.copy(a.scissor),ja=a.scissorTest,ba.copy(a.viewport)):(c=null,X.copy(ua).multiplyScalar($),ja=xa,ba.copy(ma).multiplyScalar($));D!==c&&(x.bindFramebuffer(x.FRAMEBUFFER,c),D=c);R.scissor(X);R.setScissorTest(ja);R.viewport(ba);b&&(b=Z.get(a.texture),x.framebufferTexture2D(x.FRAMEBUFFER,x.COLOR_ATTACHMENT0,x.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,b.__webglTexture,a.activeMipMapLevel))};\nthis.readRenderTargetPixels=function(a,b,c,d,e,f){if(!1===a instanceof THREE.WebGLRenderTarget)console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");else{var g=Z.get(a).__webglFramebuffer;if(g){var h=!1;g!==D&&(x.bindFramebuffer(x.FRAMEBUFFER,g),h=!0);try{var k=a.texture;k.format!==THREE.RGBAFormat&&u(k.format)!==x.getParameter(x.IMPLEMENTATION_COLOR_READ_FORMAT)?console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\"):\nk.type===THREE.UnsignedByteType||u(k.type)===x.getParameter(x.IMPLEMENTATION_COLOR_READ_TYPE)||k.type===THREE.FloatType&&U.get(\"WEBGL_color_buffer_float\")||k.type===THREE.HalfFloatType&&U.get(\"EXT_color_buffer_half_float\")?x.checkFramebufferStatus(x.FRAMEBUFFER)===x.FRAMEBUFFER_COMPLETE?0<=b&&b<=a.width-d&&0<=c&&c<=a.height-e&&x.readPixels(b,c,d,e,u(k.format),u(k.type),f):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\"):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\")}finally{h&&\nx.bindFramebuffer(x.FRAMEBUFFER,D)}}}}};\nTHREE.WebGLRenderTarget=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.width=a;this.height=b;this.scissor=new THREE.Vector4(0,0,a,b);this.scissorTest=!1;this.viewport=new THREE.Vector4(0,0,a,b);c=c||{};void 0===c.minFilter&&(c.minFilter=THREE.LinearFilter);this.texture=new THREE.Texture(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:\n!0;this.depthTexture=null};\nObject.assign(THREE.WebGLRenderTarget.prototype,THREE.EventDispatcher.prototype,{setSize:function(a,b){if(this.width!==a||this.height!==b)this.width=a,this.height=b,this.dispose();this.viewport.set(0,0,a,b);this.scissor.set(0,0,a,b)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.width=a.width;this.height=a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.depthTexture=a.depthTexture;\nreturn this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}});THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeMipMapLevel=this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;\nTHREE.WebGLBufferRenderer=function(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,f){a.drawArrays(d,b,f);c.calls++;c.vertices+=f;d===a.TRIANGLES&&(c.faces+=f/3)};this.renderInstances=function(e){var f=b.get(\"ANGLE_instanced_arrays\");if(null===f)console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");else{var g=e.attributes.position,h=0,h=g instanceof THREE.InterleavedBufferAttribute?g.data.count:\ng.count;f.drawArraysInstancedANGLE(d,0,h,e.maxInstancedCount);c.calls++;c.vertices+=h*e.maxInstancedCount;d===a.TRIANGLES&&(c.faces+=e.maxInstancedCount*h/3)}}};\nTHREE.WebGLClipping=function(){function a(){l.value!==d&&(l.value=d,l.needsUpdate=0<e);c.numPlanes=e}function b(a,b,d,e){var f=null!==a?a.length:0,g=null;if(0!==f){g=l.value;if(!0!==e||null===g){e=d+4*f;b=b.matrixWorldInverse;k.getNormalMatrix(b);if(null===g||g.length<e)g=new Float32Array(e);for(e=0;e!==f;++e,d+=4)h.copy(a[e]).applyMatrix4(b,k),h.normal.toArray(g,d),g[d+3]=h.constant}l.value=g;l.needsUpdate=!0}c.numPlanes=f;return g}var c=this,d=null,e=0,f=!1,g=!1,h=new THREE.Plane,k=new THREE.Matrix3,\nl={value:null,needsUpdate:!1};this.uniform=l;this.numPlanes=0;this.init=function(a,c,g){var h=0!==a.length||c||0!==e||f;f=c;d=b(a,g,0);e=a.length;return h};this.beginShadows=function(){g=!0;b(null)};this.endShadows=function(){g=!1;a()};this.setState=function(c,h,k,q,r){if(!f||null===c||0===c.length||g&&!h)g?b(null):a();else{h=g?0:e;var s=4*h,t=q.clippingState||null;l.value=t;t=b(c,k,s,r);for(c=0;c!==s;++c)t[c]=d[c];q.clippingState=t;this.numPlanes+=h}}};\nTHREE.WebGLIndexedBufferRenderer=function(a,b,c){var d,e,f;this.setMode=function(a){d=a};this.setIndex=function(c){c.array instanceof Uint32Array&&b.get(\"OES_element_index_uint\")?(e=a.UNSIGNED_INT,f=4):(e=a.UNSIGNED_SHORT,f=2)};this.render=function(b,h){a.drawElements(d,h,e,b*f);c.calls++;c.vertices+=h;d===a.TRIANGLES&&(c.faces+=h/3)};this.renderInstances=function(g,h,k){var l=b.get(\"ANGLE_instanced_arrays\");null===l?console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\"):\n(l.drawElementsInstancedANGLE(d,k,e,h*f,g.maxInstancedCount),c.calls++,c.vertices+=k*g.maxInstancedCount,d===a.TRIANGLES&&(c.faces+=g.maxInstancedCount*k/3))}};\nTHREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case \"WEBGL_depth_texture\":d=a.getExtension(\"WEBGL_depth_texture\")||a.getExtension(\"MOZ_WEBGL_depth_texture\")||a.getExtension(\"WEBKIT_WEBGL_depth_texture\");break;case \"EXT_texture_filter_anisotropic\":d=a.getExtension(\"EXT_texture_filter_anisotropic\")||a.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||a.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case \"WEBGL_compressed_texture_s3tc\":d=\na.getExtension(\"WEBGL_compressed_texture_s3tc\")||a.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");break;case \"WEBGL_compressed_texture_pvrtc\":d=a.getExtension(\"WEBGL_compressed_texture_pvrtc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;case \"WEBGL_compressed_texture_etc1\":d=a.getExtension(\"WEBGL_compressed_texture_etc1\");break;default:d=a.getExtension(c)}null===d&&console.warn(\"THREE.WebGLRenderer: \"+c+\" extension not supported.\");\nreturn b[c]=d}};\nTHREE.WebGLCapabilities=function(a,b,c){function d(b){if(\"highp\"===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return\"highp\";b=\"mediump\"}return\"mediump\"===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision?\"mediump\":\"lowp\"}var e;this.getMaxAnisotropy=function(){if(void 0!==e)return e;var c=b.get(\"EXT_texture_filter_anisotropic\");\nreturn e=null!==c?a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0};this.getMaxPrecision=d;this.precision=void 0!==c.precision?c.precision:\"highp\";this.logarithmicDepthBuffer=void 0!==c.logarithmicDepthBuffer?c.logarithmicDepthBuffer:!1;this.maxTextures=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS);this.maxVertexTextures=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.maxTextureSize=a.getParameter(a.MAX_TEXTURE_SIZE);this.maxCubemapSize=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxAttributes=\na.getParameter(a.MAX_VERTEX_ATTRIBS);this.maxVertexUniforms=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS);this.maxVaryings=a.getParameter(a.MAX_VARYING_VECTORS);this.maxFragmentUniforms=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS);this.vertexTextures=0<this.maxVertexTextures;this.floatFragmentTextures=!!b.get(\"OES_texture_float\");this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;c=d(this.precision);c!==this.precision&&(console.warn(\"THREE.WebGLRenderer:\",this.precision,\"not supported, using\",\nc,\"instead.\"),this.precision=c);this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!b.get(\"EXT_frag_depth\"))};\nTHREE.WebGLGeometries=function(a,b,c){function d(a){var h=a.target;a=f[h.id];null!==a.index&&e(a.index);var k=a.attributes,l;for(l in k)e(k[l]);h.removeEventListener(\"dispose\",d);delete f[h.id];l=b.get(h);l.wireframe&&e(l.wireframe);b.delete(h);h=b.get(a);h.wireframe&&e(h.wireframe);b.delete(a);c.memory.geometries--}function e(c){var d;d=c instanceof THREE.InterleavedBufferAttribute?b.get(c.data).__webglBuffer:b.get(c).__webglBuffer;void 0!==d&&(a.deleteBuffer(d),c instanceof THREE.InterleavedBufferAttribute?\nb.delete(c.data):b.delete(c))}var f={};this.get=function(a){var b=a.geometry;if(void 0!==f[b.id])return f[b.id];b.addEventListener(\"dispose\",d);var e;b instanceof THREE.BufferGeometry?e=b:b instanceof THREE.Geometry&&(void 0===b._bufferGeometry&&(b._bufferGeometry=(new THREE.BufferGeometry).setFromObject(a)),e=b._bufferGeometry);f[b.id]=e;c.memory.geometries++;return e}};\nTHREE.WebGLLights=function(){var a={};this.get=function(b){if(void 0!==a[b.id])return a[b.id];var c;switch(b.type){case \"DirectionalLight\":c={direction:new THREE.Vector3,color:new THREE.Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case \"SpotLight\":c={position:new THREE.Vector3,direction:new THREE.Vector3,color:new THREE.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case \"PointLight\":c=\n{position:new THREE.Vector3,color:new THREE.Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case \"HemisphereLight\":c={direction:new THREE.Vector3,skyColor:new THREE.Color,groundColor:new THREE.Color}}return a[b.id]=c}};\nTHREE.WebGLObjects=function(a,b,c){function d(c,d){var e=c instanceof THREE.InterleavedBufferAttribute?c.data:c,f=b.get(e);void 0===f.__webglBuffer?(f.__webglBuffer=a.createBuffer(),a.bindBuffer(d,f.__webglBuffer),a.bufferData(d,e.array,e.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW),f.version=e.version):f.version!==e.version&&(a.bindBuffer(d,f.__webglBuffer),!1===e.dynamic||-1===e.updateRange.count?a.bufferSubData(d,0,e.array):0===e.updateRange.count?console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\"):\n(a.bufferSubData(d,e.updateRange.offset*e.array.BYTES_PER_ELEMENT,e.array.subarray(e.updateRange.offset,e.updateRange.offset+e.updateRange.count)),e.updateRange.count=0),f.version=e.version)}function e(a,b,c){if(b>c){var d=b;b=c;c=d}d=a[b];return void 0===d?(a[b]=[c],!0):-1===d.indexOf(c)?(d.push(c),!0):!1}var f=new THREE.WebGLGeometries(a,b,c);this.getAttributeBuffer=function(a){return a instanceof THREE.InterleavedBufferAttribute?b.get(a.data).__webglBuffer:b.get(a).__webglBuffer};this.getWireframeAttribute=\nfunction(c){var f=b.get(c);if(void 0!==f.wireframe)return f.wireframe;var k=[],l=c.index,n=c.attributes;c=n.position;if(null!==l)for(var n={},l=l.array,p=0,m=l.length;p<m;p+=3){var q=l[p+0],r=l[p+1],s=l[p+2];e(n,q,r)&&k.push(q,r);e(n,r,s)&&k.push(r,s);e(n,s,q)&&k.push(s,q)}else for(l=n.position.array,p=0,m=l.length/3-1;p<m;p+=3)q=p+0,r=p+1,s=p+2,k.push(q,r,r,s,s,q);k=new THREE.BufferAttribute(new (65535<c.count?Uint32Array:Uint16Array)(k),1);d(k,a.ELEMENT_ARRAY_BUFFER);return f.wireframe=k};this.update=\nfunction(b){var c=f.get(b);b.geometry instanceof THREE.Geometry&&c.updateFromObject(b);b=c.index;var e=c.attributes;null!==b&&d(b,a.ELEMENT_ARRAY_BUFFER);for(var l in e)d(e[l],a.ARRAY_BUFFER);b=c.morphAttributes;for(l in b)for(var e=b[l],n=0,p=e.length;n<p;n++)d(e[n],a.ARRAY_BUFFER);return c}};\nTHREE.WebGLProgram=function(){function a(a){switch(a){case THREE.LinearEncoding:return[\"Linear\",\"( value )\"];case THREE.sRGBEncoding:return[\"sRGB\",\"( value )\"];case THREE.RGBEEncoding:return[\"RGBE\",\"( value )\"];case THREE.RGBM7Encoding:return[\"RGBM\",\"( value, 7.0 )\"];case THREE.RGBM16Encoding:return[\"RGBM\",\"( value, 16.0 )\"];case THREE.RGBDEncoding:return[\"RGBD\",\"( value, 256.0 )\"];case THREE.GammaEncoding:return[\"Gamma\",\"( value, float( GAMMA_FACTOR ) )\"];default:throw Error(\"unsupported encoding: \"+\na);}}function b(b,c){var d=a(c);return\"vec4 \"+b+\"( vec4 value ) { return \"+d[0]+\"ToLinear\"+d[1]+\"; }\"}function c(b,c){var d=a(c);return\"vec4 \"+b+\"( vec4 value ) { return LinearTo\"+d[0]+d[1]+\"; }\"}function d(a,b){var c;switch(b){case THREE.LinearToneMapping:c=\"Linear\";break;case THREE.ReinhardToneMapping:c=\"Reinhard\";break;case THREE.Uncharted2ToneMapping:c=\"Uncharted2\";break;case THREE.CineonToneMapping:c=\"OptimizedCineon\";break;default:throw Error(\"unsupported toneMapping: \"+b);}return\"vec3 \"+a+\n\"( vec3 color ) { return \"+c+\"ToneMapping( color ); }\"}function e(a,b,c){a=a||{};return[a.derivatives||b.envMapCubeUV||b.bumpMap||b.normalMap||b.flatShading?\"#extension GL_OES_standard_derivatives : enable\":\"\",(a.fragDepth||b.logarithmicDepthBuffer)&&c.get(\"EXT_frag_depth\")?\"#extension GL_EXT_frag_depth : enable\":\"\",a.drawBuffers&&c.get(\"WEBGL_draw_buffers\")?\"#extension GL_EXT_draw_buffers : require\":\"\",(a.shaderTextureLOD||b.envMap)&&c.get(\"EXT_shader_texture_lod\")?\"#extension GL_EXT_shader_texture_lod : enable\":\n\"\"].filter(g).join(\"\\n\")}function f(a){var b=[],c;for(c in a){var d=a[c];!1!==d&&b.push(\"#define \"+c+\" \"+d)}return b.join(\"\\n\")}function g(a){return\"\"!==a}function h(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights)}function k(a){return a.replace(/#include +<([\\w\\d.]+)>/g,function(a,b){var c=THREE.ShaderChunk[b];if(void 0===c)throw Error(\"Can not resolve #include <\"+\nb+\">\");return k(c)})}function l(a){return a.replace(/for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g,function(a,b,c,d){a=\"\";for(b=parseInt(b);b<parseInt(c);b++)a+=d.replace(/\\[ i \\]/g,\"[ \"+b+\" ]\");return a})}var n=0;return function(a,m,q,r){var s=a.context,t=q.extensions,u=q.defines,v=q.__webglShader.vertexShader,C=q.__webglShader.fragmentShader,w=\"SHADOWMAP_TYPE_BASIC\";r.shadowMapType===THREE.PCFShadowMap?w=\"SHADOWMAP_TYPE_PCF\":r.shadowMapType===THREE.PCFSoftShadowMap&&(w=\"SHADOWMAP_TYPE_PCF_SOFT\");\nvar E=\"ENVMAP_TYPE_CUBE\",z=\"ENVMAP_MODE_REFLECTION\",y=\"ENVMAP_BLENDING_MULTIPLY\";if(r.envMap){switch(q.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:E=\"ENVMAP_TYPE_CUBE\";break;case THREE.CubeUVReflectionMapping:case THREE.CubeUVRefractionMapping:E=\"ENVMAP_TYPE_CUBE_UV\";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:E=\"ENVMAP_TYPE_EQUIREC\";break;case THREE.SphericalReflectionMapping:E=\"ENVMAP_TYPE_SPHERE\"}switch(q.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:z=\n\"ENVMAP_MODE_REFRACTION\"}switch(q.combine){case THREE.MultiplyOperation:y=\"ENVMAP_BLENDING_MULTIPLY\";break;case THREE.MixOperation:y=\"ENVMAP_BLENDING_MIX\";break;case THREE.AddOperation:y=\"ENVMAP_BLENDING_ADD\"}}var A=0<a.gammaFactor?a.gammaFactor:1,t=e(t,r,a.extensions),I=f(u),B=s.createProgram();q instanceof THREE.RawShaderMaterial?(u=[I].filter(g).join(\"\\n\"),w=[I].filter(g).join(\"\\n\")):(u=[\"precision \"+r.precision+\" float;\",\"precision \"+r.precision+\" int;\",\"#define SHADER_NAME \"+q.__webglShader.name,\nI,r.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",\"#define GAMMA_FACTOR \"+A,\"#define MAX_BONES \"+r.maxBones,r.map?\"#define USE_MAP\":\"\",r.envMap?\"#define USE_ENVMAP\":\"\",r.envMap?\"#define \"+z:\"\",r.lightMap?\"#define USE_LIGHTMAP\":\"\",r.aoMap?\"#define USE_AOMAP\":\"\",r.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",r.bumpMap?\"#define USE_BUMPMAP\":\"\",r.normalMap?\"#define USE_NORMALMAP\":\"\",r.displacementMap&&r.supportsVertexTextures?\"#define USE_DISPLACEMENTMAP\":\"\",r.specularMap?\"#define USE_SPECULARMAP\":\n\"\",r.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",r.metalnessMap?\"#define USE_METALNESSMAP\":\"\",r.alphaMap?\"#define USE_ALPHAMAP\":\"\",r.vertexColors?\"#define USE_COLOR\":\"\",r.flatShading?\"#define FLAT_SHADED\":\"\",r.skinning?\"#define USE_SKINNING\":\"\",r.useVertexTexture?\"#define BONE_TEXTURE\":\"\",r.morphTargets?\"#define USE_MORPHTARGETS\":\"\",r.morphNormals&&!1===r.flatShading?\"#define USE_MORPHNORMALS\":\"\",r.doubleSided?\"#define DOUBLE_SIDED\":\"\",r.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+\nr.numClippingPlanes,r.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",r.shadowMapEnabled?\"#define \"+w:\"\",r.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",r.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",r.logarithmicDepthBuffer&&a.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"#ifdef USE_COLOR\",\"\\tattribute vec3 color;\",\"#endif\",\"#ifdef USE_MORPHTARGETS\",\"\\tattribute vec3 morphTarget0;\",\"\\tattribute vec3 morphTarget1;\",\"\\tattribute vec3 morphTarget2;\",\"\\tattribute vec3 morphTarget3;\",\"\\t#ifdef USE_MORPHNORMALS\",\"\\t\\tattribute vec3 morphNormal0;\",\"\\t\\tattribute vec3 morphNormal1;\",\"\\t\\tattribute vec3 morphNormal2;\",\"\\t\\tattribute vec3 morphNormal3;\",\"\\t#else\",\"\\t\\tattribute vec3 morphTarget4;\",\"\\t\\tattribute vec3 morphTarget5;\",\n\"\\t\\tattribute vec3 morphTarget6;\",\"\\t\\tattribute vec3 morphTarget7;\",\"\\t#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"\\tattribute vec4 skinIndex;\",\"\\tattribute vec4 skinWeight;\",\"#endif\",\"\\n\"].filter(g).join(\"\\n\"),w=[t,\"precision \"+r.precision+\" float;\",\"precision \"+r.precision+\" int;\",\"#define SHADER_NAME \"+q.__webglShader.name,I,r.alphaTest?\"#define ALPHATEST \"+r.alphaTest:\"\",\"#define GAMMA_FACTOR \"+A,r.useFog&&r.fog?\"#define USE_FOG\":\"\",r.useFog&&r.fogExp?\"#define FOG_EXP2\":\"\",r.map?\"#define USE_MAP\":\n\"\",r.envMap?\"#define USE_ENVMAP\":\"\",r.envMap?\"#define \"+E:\"\",r.envMap?\"#define \"+z:\"\",r.envMap?\"#define \"+y:\"\",r.lightMap?\"#define USE_LIGHTMAP\":\"\",r.aoMap?\"#define USE_AOMAP\":\"\",r.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",r.bumpMap?\"#define USE_BUMPMAP\":\"\",r.normalMap?\"#define USE_NORMALMAP\":\"\",r.specularMap?\"#define USE_SPECULARMAP\":\"\",r.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",r.metalnessMap?\"#define USE_METALNESSMAP\":\"\",r.alphaMap?\"#define USE_ALPHAMAP\":\"\",r.vertexColors?\"#define USE_COLOR\":\n\"\",r.flatShading?\"#define FLAT_SHADED\":\"\",r.doubleSided?\"#define DOUBLE_SIDED\":\"\",r.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+r.numClippingPlanes,r.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",r.shadowMapEnabled?\"#define \"+w:\"\",r.premultipliedAlpha?\"#define PREMULTIPLIED_ALPHA\":\"\",r.physicallyCorrectLights?\"#define PHYSICALLY_CORRECT_LIGHTS\":\"\",r.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",r.logarithmicDepthBuffer&&a.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\n\"\",r.envMap&&a.extensions.get(\"EXT_shader_texture_lod\")?\"#define TEXTURE_LOD_EXT\":\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",r.toneMapping!==THREE.NoToneMapping?\"#define TONE_MAPPING\":\"\",r.toneMapping!==THREE.NoToneMapping?THREE.ShaderChunk.tonemapping_pars_fragment:\"\",r.toneMapping!==THREE.NoToneMapping?d(\"toneMapping\",r.toneMapping):\"\",r.outputEncoding||r.mapEncoding||r.envMapEncoding||r.emissiveMapEncoding?THREE.ShaderChunk.encodings_pars_fragment:\"\",r.mapEncoding?b(\"mapTexelToLinear\",\nr.mapEncoding):\"\",r.envMapEncoding?b(\"envMapTexelToLinear\",r.envMapEncoding):\"\",r.emissiveMapEncoding?b(\"emissiveMapTexelToLinear\",r.emissiveMapEncoding):\"\",r.outputEncoding?c(\"linearToOutputTexel\",r.outputEncoding):\"\",r.depthPacking?\"#define DEPTH_PACKING \"+q.depthPacking:\"\",\"\\n\"].filter(g).join(\"\\n\"));v=k(v,r);v=h(v,r);C=k(C,r);C=h(C,r);!1===q instanceof THREE.ShaderMaterial&&(v=l(v),C=l(C));C=w+C;v=THREE.WebGLShader(s,s.VERTEX_SHADER,u+v);C=THREE.WebGLShader(s,s.FRAGMENT_SHADER,C);s.attachShader(B,\nv);s.attachShader(B,C);void 0!==q.index0AttributeName?s.bindAttribLocation(B,0,q.index0AttributeName):!0===r.morphTargets&&s.bindAttribLocation(B,0,\"position\");s.linkProgram(B);r=s.getProgramInfoLog(B);E=s.getShaderInfoLog(v);z=s.getShaderInfoLog(C);A=y=!0;if(!1===s.getProgramParameter(B,s.LINK_STATUS))y=!1,console.error(\"THREE.WebGLProgram: shader error: \",s.getError(),\"gl.VALIDATE_STATUS\",s.getProgramParameter(B,s.VALIDATE_STATUS),\"gl.getProgramInfoLog\",r,E,z);else if(\"\"!==r)console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\",\nr);else if(\"\"===E||\"\"===z)A=!1;A&&(this.diagnostics={runnable:y,material:q,programLog:r,vertexShader:{log:E,prefix:u},fragmentShader:{log:z,prefix:w}});s.deleteShader(v);s.deleteShader(C);var F;this.getUniforms=function(){void 0===F&&(F=new THREE.WebGLUniforms(s,B,a));return F};var K;this.getAttributes=function(){if(void 0===K){for(var a={},b=s.getProgramParameter(B,s.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=s.getActiveAttrib(B,c).name;a[d]=s.getAttribLocation(B,d)}K=a}return K};this.destroy=function(){s.deleteProgram(B);\nthis.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\");return this.getUniforms()}},attributes:{get:function(){console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\");return this.getAttributes()}}});this.id=n++;this.code=m;this.usedTimes=1;this.program=B;this.vertexShader=v;this.fragmentShader=C;return this}}();\nTHREE.WebGLPrograms=function(a,b){function c(a,b){var c;a?a instanceof THREE.Texture?c=a.encoding:a instanceof THREE.WebGLRenderTarget&&(console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"),c=a.texture.encoding):c=THREE.LinearEncoding;c===THREE.LinearEncoding&&b&&(c=THREE.GammaEncoding);return c}var d=[],e={MeshDepthMaterial:\"depth\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",\nMeshPhongMaterial:\"phong\",MeshStandardMaterial:\"physical\",MeshPhysicalMaterial:\"physical\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointsMaterial:\"points\"},f=\"precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap displacementMap specularMap roughnessMap metalnessMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes depthPacking\".split(\" \");\nthis.getParameters=function(d,f,k,l,n){var p=e[d.type],m;b.floatVertexTextures&&n&&n.skeleton&&n.skeleton.useVertexTexture?m=1024:(m=Math.floor((b.maxVertexUniforms-20)/4),void 0!==n&&n instanceof THREE.SkinnedMesh&&(m=Math.min(n.skeleton.bones.length,m),m<n.skeleton.bones.length&&console.warn(\"WebGLRenderer: too many bones - \"+n.skeleton.bones.length+\", this GPU supports just \"+m+\" (try OpenGL instead of ANGLE)\")));var q=a.getPrecision();null!==d.precision&&(q=b.getMaxPrecision(d.precision),q!==\nd.precision&&console.warn(\"THREE.WebGLProgram.getParameters:\",d.precision,\"not supported, using\",q,\"instead.\"));var r=a.getCurrentRenderTarget();return{shaderID:p,precision:q,supportsVertexTextures:b.vertexTextures,outputEncoding:c(r?r.texture:null,a.gammaOutput),map:!!d.map,mapEncoding:c(d.map,a.gammaInput),envMap:!!d.envMap,envMapMode:d.envMap&&d.envMap.mapping,envMapEncoding:c(d.envMap,a.gammaInput),envMapCubeUV:!!d.envMap&&(d.envMap.mapping===THREE.CubeUVReflectionMapping||d.envMap.mapping===\nTHREE.CubeUVRefractionMapping),lightMap:!!d.lightMap,aoMap:!!d.aoMap,emissiveMap:!!d.emissiveMap,emissiveMapEncoding:c(d.emissiveMap,a.gammaInput),bumpMap:!!d.bumpMap,normalMap:!!d.normalMap,displacementMap:!!d.displacementMap,roughnessMap:!!d.roughnessMap,metalnessMap:!!d.metalnessMap,specularMap:!!d.specularMap,alphaMap:!!d.alphaMap,combine:d.combine,vertexColors:d.vertexColors,fog:k,useFog:d.fog,fogExp:k instanceof THREE.FogExp2,flatShading:d.shading===THREE.FlatShading,sizeAttenuation:d.sizeAttenuation,\nlogarithmicDepthBuffer:b.logarithmicDepthBuffer,skinning:d.skinning,maxBones:m,useVertexTexture:b.floatVertexTextures&&n&&n.skeleton&&n.skeleton.useVertexTexture,morphTargets:d.morphTargets,morphNormals:d.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:f.directional.length,numPointLights:f.point.length,numSpotLights:f.spot.length,numHemiLights:f.hemi.length,numClippingPlanes:l,shadowMapEnabled:a.shadowMap.enabled&&n.receiveShadow&&0<f.shadows.length,shadowMapType:a.shadowMap.type,\ntoneMapping:a.toneMapping,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:d.premultipliedAlpha,alphaTest:d.alphaTest,doubleSided:d.side===THREE.DoubleSide,flipSided:d.side===THREE.BackSide,depthPacking:void 0!==d.depthPacking?d.depthPacking:!1}};this.getProgramCode=function(a,b){var c=[];b.shaderID?c.push(b.shaderID):(c.push(a.fragmentShader),c.push(a.vertexShader));if(void 0!==a.defines)for(var d in a.defines)c.push(d),c.push(a.defines[d]);for(d=0;d<f.length;d++)c.push(b[f[d]]);\nreturn c.join()};this.acquireProgram=function(b,c,e){for(var f,n=0,p=d.length;n<p;n++){var m=d[n];if(m.code===e){f=m;++f.usedTimes;break}}void 0===f&&(f=new THREE.WebGLProgram(a,e,b,c),d.push(f));return f};this.releaseProgram=function(a){if(0===--a.usedTimes){var b=d.indexOf(a);d[b]=d[d.length-1];d.pop();a.destroy()}};this.programs=d};\nTHREE.WebGLProperties=function(){var a={};this.get=function(b){b=b.uuid;var c=a[b];void 0===c&&(c={},a[b]=c);return c};this.delete=function(b){delete a[b.uuid]};this.clear=function(){a={}}};\nTHREE.WebGLShader=function(){function a(a){a=a.split(\"\\n\");for(var c=0;c<a.length;c++)a[c]=c+1+\": \"+a[c];return a.join(\"\\n\")}return function(b,c,d){var e=b.createShader(c);b.shaderSource(e,d);b.compileShader(e);!1===b.getShaderParameter(e,b.COMPILE_STATUS)&&console.error(\"THREE.WebGLShader: Shader couldn't compile.\");\"\"!==b.getShaderInfoLog(e)&&console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",c===b.VERTEX_SHADER?\"vertex\":\"fragment\",b.getShaderInfoLog(e),a(d));return e}}();\nTHREE.WebGLShadowMap=function(a,b,c){function d(b,c,d,e){var f=b.geometry,g=null,g=r,h=b.customDepthMaterial;d&&(g=s,h=b.customDistanceMaterial);h?g=h:(b=b instanceof THREE.SkinnedMesh&&c.skinning,h=0,void 0!==f.morphTargets&&0<f.morphTargets.length&&c.morphTargets&&(h|=1),b&&(h|=2),g=g[h]);a.localClippingEnabled&&!0===c.clipShadows&&0!==c.clippingPlanes.length&&(h=g.uuid,f=c.uuid,b=t[h],void 0===b&&(b={},t[h]=b),h=b[f],void 0===h&&(h=g.clone(),b[f]=h),g=h);g.visible=c.visible;g.wireframe=c.wireframe;\nf=c.side;B.renderSingleSided&&f==THREE.DoubleSide&&(f=THREE.FrontSide);B.renderReverseSided&&(f===THREE.FrontSide?f=THREE.BackSide:f===THREE.BackSide&&(f=THREE.FrontSide));g.side=f;g.clipShadows=c.clipShadows;g.clippingPlanes=c.clippingPlanes;g.wireframeLinewidth=c.wireframeLinewidth;g.linewidth=c.linewidth;d&&void 0!==g.uniforms.lightPos&&g.uniforms.lightPos.value.copy(e);return g}function e(a,b,c){if(!1!==a.visible){a.layers.test(b.layers)&&(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof\nTHREE.Points)&&a.castShadow&&(!1===a.frustumCulled||!0===h.intersectsObject(a))&&!0===a.material.visible&&(a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),q.push(a));a=a.children;for(var d=0,f=a.length;d<f;d++)e(a[d],b,c)}}var f=a.context,g=a.state,h=new THREE.Frustum,k=new THREE.Matrix4,l=b.shadows,n=new THREE.Vector2,p=new THREE.Vector3,m=new THREE.Vector3,q=[],r=Array(4),s=Array(4),t={},u=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,\n0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)],v=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],C=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4];b=new THREE.MeshDepthMaterial;b.depthPacking=THREE.RGBADepthPacking;b.clipping=!0;for(var w=THREE.ShaderLib.distanceRGBA,E=THREE.UniformsUtils.clone(w.uniforms),z=0;4!==z;++z){var y=\n0!==(z&1),A=0!==(z&2),I=b.clone();I.morphTargets=y;I.skinning=A;r[z]=I;y=new THREE.ShaderMaterial({defines:{USE_SHADOWMAP:\"\"},uniforms:E,vertexShader:w.vertexShader,fragmentShader:w.fragmentShader,morphTargets:y,skinning:A,clipping:!0});s[z]=y}var B=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=THREE.PCFShadowMap;this.renderSingleSided=this.renderReverseSided=!0;this.render=function(b,r){if(!1!==B.enabled&&(!1!==B.autoUpdate||!1!==B.needsUpdate)&&0!==l.length){g.clearColor(1,\n1,1,1);g.disable(f.BLEND);g.setDepthTest(!0);g.setScissorTest(!1);for(var w,s,t=0,y=l.length;t<y;t++){var z=l[t],A=z.shadow;if(void 0===A)console.warn(\"THREE.WebGLShadowMap:\",z,\"has no shadow.\");else{var E=A.camera;n.copy(A.mapSize);if(z instanceof THREE.PointLight){w=6;s=!0;var J=n.x,D=n.y;C[0].set(2*J,D,J,D);C[1].set(0,D,J,D);C[2].set(3*J,D,J,D);C[3].set(J,D,J,D);C[4].set(3*J,0,J,D);C[5].set(J,0,J,D);n.x*=4;n.y*=2}else w=1,s=!1;null===A.map&&(A.map=new THREE.WebGLRenderTarget(n.x,n.y,{minFilter:THREE.NearestFilter,\nmagFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),E.updateProjectionMatrix());A instanceof THREE.SpotLightShadow&&A.update(z);J=A.map;A=A.matrix;m.setFromMatrixPosition(z.matrixWorld);E.position.copy(m);a.setRenderTarget(J);a.clear();for(J=0;J<w;J++){s?(p.copy(E.position),p.add(u[J]),E.up.copy(v[J]),E.lookAt(p),g.viewport(C[J])):(p.setFromMatrixPosition(z.target.matrixWorld),E.lookAt(p));E.updateMatrixWorld();E.matrixWorldInverse.getInverse(E.matrixWorld);A.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,\n0,0,0,1);A.multiply(E.projectionMatrix);A.multiply(E.matrixWorldInverse);k.multiplyMatrices(E.projectionMatrix,E.matrixWorldInverse);h.setFromMatrix(k);q.length=0;e(b,r,E);for(var D=0,G=q.length;D<G;D++){var I=q[D],T=c.update(I),X=I.material;if(X instanceof THREE.MultiMaterial)for(var ja=T.groups,X=X.materials,ba=0,ia=ja.length;ba<ia;ba++){var V=ja[ba],Y=X[V.materialIndex];!0===Y.visible&&(Y=d(I,Y,s,m),a.renderBufferDirect(E,null,T,Y,I,V))}else Y=d(I,X,s,m),a.renderBufferDirect(E,null,T,Y,I,null)}}}}w=\na.getClearColor();s=a.getClearAlpha();a.setClearColor(w,s);B.needsUpdate=!1}}};\nTHREE.WebGLState=function(a,b,c){function d(b,c,d){var e=new Uint8Array(4),f=a.createTexture();a.bindTexture(b,f);a.texParameteri(b,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texParameteri(b,a.TEXTURE_MAG_FILTER,a.NEAREST);for(b=0;b<d;b++)a.texImage2D(c+b,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,e);return f}var e=this;this.buffers={color:new THREE.WebGLColorBuffer(a,this),depth:new THREE.WebGLDepthBuffer(a,this),stencil:new THREE.WebGLStencilBuffer(a,this)};var f=a.getParameter(a.MAX_VERTEX_ATTRIBS),g=new Uint8Array(f),\nh=new Uint8Array(f),k=new Uint8Array(f),l={},n=null,p=null,m=null,q=null,r=null,s=null,t=null,u=null,v=!1,C=null,w=null,E=null,z=null,y=null,A=null,I=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),B=null,F={},K=new THREE.Vector4,P=new THREE.Vector4,M={};M[a.TEXTURE_2D]=d(a.TEXTURE_2D,a.TEXTURE_2D,1);M[a.TEXTURE_CUBE_MAP]=d(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);this.init=function(){this.clearColor(0,0,0,1);this.clearDepth(1);this.clearStencil(0);this.enable(a.DEPTH_TEST);this.setDepthFunc(THREE.LessEqualDepth);\nthis.setFlipSided(!1);this.setCullFace(THREE.CullFaceBack);this.enable(a.CULL_FACE);this.enable(a.BLEND);this.setBlending(THREE.NormalBlending)};this.initAttributes=function(){for(var a=0,b=g.length;a<b;a++)g[a]=0};this.enableAttribute=function(c){g[c]=1;0===h[c]&&(a.enableVertexAttribArray(c),h[c]=1);0!==k[c]&&(b.get(\"ANGLE_instanced_arrays\").vertexAttribDivisorANGLE(c,0),k[c]=0)};this.enableAttributeAndDivisor=function(b,c,d){g[b]=1;0===h[b]&&(a.enableVertexAttribArray(b),h[b]=1);k[b]!==c&&(d.vertexAttribDivisorANGLE(b,\nc),k[b]=c)};this.disableUnusedAttributes=function(){for(var b=0,c=h.length;b!==c;++b)h[b]!==g[b]&&(a.disableVertexAttribArray(b),h[b]=0)};this.enable=function(b){!0!==l[b]&&(a.enable(b),l[b]=!0)};this.disable=function(b){!1!==l[b]&&(a.disable(b),l[b]=!1)};this.getCompressedTextureFormats=function(){if(null===n&&(n=[],b.get(\"WEBGL_compressed_texture_pvrtc\")||b.get(\"WEBGL_compressed_texture_s3tc\")||b.get(\"WEBGL_compressed_texture_etc1\")))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<\nc.length;d++)n.push(c[d]);return n};this.setBlending=function(b,d,e,f,g,h,k,l){if(b!==THREE.NoBlending){this.enable(a.BLEND);if(b!==p||l!==v)b===THREE.AdditiveBlending?l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE,a.ONE,a.ONE)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):b===THREE.SubtractiveBlending?l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),\na.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):b===THREE.MultiplyBlending?l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):l?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),\np=b,v=l;if(b===THREE.CustomBlending){g=g||d;h=h||e;k=k||f;if(d!==m||g!==s)a.blendEquationSeparate(c(d),c(g)),m=d,s=g;if(e!==q||f!==r||h!==t||k!==u)a.blendFuncSeparate(c(e),c(f),c(h),c(k)),q=e,r=f,t=h,u=k}else u=t=s=r=q=m=null}else this.disable(a.BLEND),p=b};this.setColorWrite=function(a){this.buffers.color.setMask(a)};this.setDepthTest=function(a){this.buffers.depth.setTest(a)};this.setDepthWrite=function(a){this.buffers.depth.setMask(a)};this.setDepthFunc=function(a){this.buffers.depth.setFunc(a)};\nthis.setStencilTest=function(a){this.buffers.stencil.setTest(a)};this.setStencilWrite=function(a){this.buffers.stencil.setMask(a)};this.setStencilFunc=function(a,b,c){this.buffers.stencil.setFunc(a,b,c)};this.setStencilOp=function(a,b,c){this.buffers.stencil.setOp(a,b,c)};this.setFlipSided=function(b){C!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),C=b)};this.setCullFace=function(b){b!==THREE.CullFaceNone?(this.enable(a.CULL_FACE),b!==w&&(b===THREE.CullFaceBack?a.cullFace(a.BACK):b===THREE.CullFaceFront?\na.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):this.disable(a.CULL_FACE);w=b};this.setLineWidth=function(b){b!==E&&(a.lineWidth(b),E=b)};this.setPolygonOffset=function(b,c,d){if(b){if(this.enable(a.POLYGON_OFFSET_FILL),z!==c||y!==d)a.polygonOffset(c,d),z=c,y=d}else this.disable(a.POLYGON_OFFSET_FILL)};this.getScissorTest=function(){return A};this.setScissorTest=function(b){(A=b)?this.enable(a.SCISSOR_TEST):this.disable(a.SCISSOR_TEST)};this.activeTexture=function(b){void 0===b&&(b=a.TEXTURE0+\nI-1);B!==b&&(a.activeTexture(b),B=b)};this.bindTexture=function(b,c){null===B&&e.activeTexture();var d=F[B];void 0===d&&(d={type:void 0,texture:void 0},F[B]=d);if(d.type!==b||d.texture!==c)a.bindTexture(b,c||M[b]),d.type=b,d.texture=c};this.compressedTexImage2D=function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error(b)}};this.texImage2D=function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error(b)}};this.clearColor=function(a,b,c,d){this.buffers.color.setClear(a,\nb,c,d)};this.clearDepth=function(a){this.buffers.depth.setClear(a)};this.clearStencil=function(a){this.buffers.stencil.setClear(a)};this.scissor=function(b){!1===K.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),K.copy(b))};this.viewport=function(b){!1===P.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),P.copy(b))};this.reset=function(){for(var b=0;b<h.length;b++)1===h[b]&&(a.disableVertexAttribArray(b),h[b]=0);l={};B=n=null;F={};w=C=p=null;this.buffers.color.reset();this.buffers.depth.reset();this.buffers.stencil.reset()}};\nTHREE.WebGLColorBuffer=function(a,b){var c=!1,d=new THREE.Vector4,e=null,f=new THREE.Vector4;this.setMask=function(b){e===b||c||(a.colorMask(b,b,b,b),e=b)};this.setLocked=function(a){c=a};this.setClear=function(b,c,e,l){d.set(b,c,e,l);!1===f.equals(d)&&(a.clearColor(b,c,e,l),f.copy(d))};this.reset=function(){c=!1;e=null;f=new THREE.Vector4}};\nTHREE.WebGLDepthBuffer=function(a,b){var c=!1,d=null,e=null,f=null;this.setTest=function(c){c?b.enable(a.DEPTH_TEST):b.disable(a.DEPTH_TEST)};this.setMask=function(b){d===b||c||(a.depthMask(b),d=b)};this.setFunc=function(b){if(e!==b){if(b)switch(b){case THREE.NeverDepth:a.depthFunc(a.NEVER);break;case THREE.AlwaysDepth:a.depthFunc(a.ALWAYS);break;case THREE.LessDepth:a.depthFunc(a.LESS);break;case THREE.LessEqualDepth:a.depthFunc(a.LEQUAL);break;case THREE.EqualDepth:a.depthFunc(a.EQUAL);break;case THREE.GreaterEqualDepth:a.depthFunc(a.GEQUAL);\nbreak;case THREE.GreaterDepth:a.depthFunc(a.GREATER);break;case THREE.NotEqualDepth:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}else a.depthFunc(a.LEQUAL);e=b}};this.setLocked=function(a){c=a};this.setClear=function(b){f!==b&&(a.clearDepth(b),f=b)};this.reset=function(){c=!1;f=e=d=null}};\nTHREE.WebGLStencilBuffer=function(a,b){var c=!1,d=null,e=null,f=null,g=null,h=null,k=null,l=null,n=null;this.setTest=function(c){c?b.enable(a.STENCIL_TEST):b.disable(a.STENCIL_TEST)};this.setMask=function(b){d===b||c||(a.stencilMask(b),d=b)};this.setFunc=function(b,c,d){if(e!==b||f!==c||g!==d)a.stencilFunc(b,c,d),e=b,f=c,g=d};this.setOp=function(b,c,d){if(h!==b||k!==c||l!==d)a.stencilOp(b,c,d),h=b,k=c,l=d};this.setLocked=function(a){c=a};this.setClear=function(b){n!==b&&(a.clearStencil(b),n=b)};this.reset=\nfunction(){c=!1;n=l=k=h=g=f=e=d=null}};\nTHREE.WebGLTextures=function(a,b,c,d,e,f,g){function h(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext(\"2d\").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.warn(\"THREE.WebGLRenderer: image is too big (\"+a.width+\"x\"+a.height+\"). Resized to \"+d.width+\"x\"+d.height,a);return d}return a}function k(a){return THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height)}\nfunction l(b){return b===THREE.NearestFilter||b===THREE.NearestMipMapNearestFilter||b===THREE.NearestMipMapLinearFilter?a.NEAREST:a.LINEAR}function n(b){b=b.target;b.removeEventListener(\"dispose\",n);a:{var c=d.get(b);if(b.image&&c.__image__webglTextureCube)a.deleteTexture(c.__image__webglTextureCube);else{if(void 0===c.__webglInit)break a;a.deleteTexture(c.__webglTexture)}d.delete(b)}t.textures--}function p(b){b=b.target;b.removeEventListener(\"dispose\",p);var c=d.get(b),e=d.get(b.texture);if(b){void 0!==\ne.__webglTexture&&a.deleteTexture(e.__webglTexture);b.depthTexture&&b.depthTexture.dispose();if(b instanceof THREE.WebGLRenderTargetCube)for(e=0;6>e;e++)a.deleteFramebuffer(c.__webglFramebuffer[e]),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer[e]);else a.deleteFramebuffer(c.__webglFramebuffer),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer);d.delete(b.texture);d.delete(b)}t.textures--}function m(b,g){var m=d.get(b);if(0<b.version&&m.__version!==b.version){var l=\nb.image;if(void 0===l)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\",b);else if(!1===l.complete)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\",b);else{void 0===m.__webglInit&&(m.__webglInit=!0,b.addEventListener(\"dispose\",n),m.__webglTexture=a.createTexture(),t.textures++);c.activeTexture(a.TEXTURE0+g);c.bindTexture(a.TEXTURE_2D,m.__webglTexture);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,\nb.premultiplyAlpha);a.pixelStorei(a.UNPACK_ALIGNMENT,b.unpackAlignment);var p=h(b.image,e.maxTextureSize);if((b.wrapS!==THREE.ClampToEdgeWrapping||b.wrapT!==THREE.ClampToEdgeWrapping||b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter)&&!1===k(p))if(l=p,l instanceof HTMLImageElement||l instanceof HTMLCanvasElement){var r=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");r.width=THREE.Math.nearestPowerOfTwo(l.width);r.height=THREE.Math.nearestPowerOfTwo(l.height);r.getContext(\"2d\").drawImage(l,\n0,0,r.width,r.height);console.warn(\"THREE.WebGLRenderer: image is not power of two (\"+l.width+\"x\"+l.height+\"). Resized to \"+r.width+\"x\"+r.height,l);p=r}else p=l;var l=k(p),r=f(b.format),s=f(b.type);q(a.TEXTURE_2D,b,l);var I=b.mipmaps;if(b instanceof THREE.DepthTexture){I=a.DEPTH_COMPONENT;if(b.type===THREE.FloatType){if(!u)throw Error(\"Float Depth Texture only supported in WebGL2.0\");I=a.DEPTH_COMPONENT32F}else u&&(I=a.DEPTH_COMPONENT16);c.texImage2D(a.TEXTURE_2D,0,I,p.width,p.height,0,r,s,null)}else if(b instanceof\nTHREE.DataTexture)if(0<I.length&&l){for(var B=0,F=I.length;B<F;B++)p=I[B],c.texImage2D(a.TEXTURE_2D,B,r,p.width,p.height,0,r,s,p.data);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,r,p.width,p.height,0,r,s,p.data);else if(b instanceof THREE.CompressedTexture)for(B=0,F=I.length;B<F;B++)p=I[B],b.format!==THREE.RGBAFormat&&b.format!==THREE.RGBFormat?-1<c.getCompressedTextureFormats().indexOf(r)?c.compressedTexImage2D(a.TEXTURE_2D,B,r,p.width,p.height,0,p.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):\nc.texImage2D(a.TEXTURE_2D,B,r,p.width,p.height,0,r,s,p.data);else if(0<I.length&&l){B=0;for(F=I.length;B<F;B++)p=I[B],c.texImage2D(a.TEXTURE_2D,B,r,r,s,p);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,r,r,s,p);b.generateMipmaps&&l&&a.generateMipmap(a.TEXTURE_2D);m.__version=b.version;if(b.onUpdate)b.onUpdate(b);return}}c.activeTexture(a.TEXTURE0+g);c.bindTexture(a.TEXTURE_2D,m.__webglTexture)}function q(c,g,h){h?(a.texParameteri(c,a.TEXTURE_WRAP_S,f(g.wrapS)),a.texParameteri(c,a.TEXTURE_WRAP_T,\nf(g.wrapT)),a.texParameteri(c,a.TEXTURE_MAG_FILTER,f(g.magFilter)),a.texParameteri(c,a.TEXTURE_MIN_FILTER,f(g.minFilter))):(a.texParameteri(c,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(c,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),g.wrapS===THREE.ClampToEdgeWrapping&&g.wrapT===THREE.ClampToEdgeWrapping||console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\",g),a.texParameteri(c,a.TEXTURE_MAG_FILTER,l(g.magFilter)),\na.texParameteri(c,a.TEXTURE_MIN_FILTER,l(g.minFilter)),g.minFilter!==THREE.NearestFilter&&g.minFilter!==THREE.LinearFilter&&console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\",g));!(h=b.get(\"EXT_texture_filter_anisotropic\"))||g.type===THREE.FloatType&&null===b.get(\"OES_texture_float_linear\")||g.type===THREE.HalfFloatType&&null===b.get(\"OES_texture_half_float_linear\")||!(1<g.anisotropy||d.get(g).__currentAnisotropy)||\n(a.texParameterf(c,h.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(g.anisotropy,e.getMaxAnisotropy())),d.get(g).__currentAnisotropy=g.anisotropy)}function r(b,e,g,h){var k=f(e.texture.format),l=f(e.texture.type);c.texImage2D(h,0,k,e.width,e.height,0,k,l,null);a.bindFramebuffer(a.FRAMEBUFFER,b);a.framebufferTexture2D(a.FRAMEBUFFER,g,h,d.get(e.texture).__webglTexture,0);a.bindFramebuffer(a.FRAMEBUFFER,null)}function s(b,c){a.bindRenderbuffer(a.RENDERBUFFER,b);c.depthBuffer&&!c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,\na.DEPTH_COMPONENT16,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b)):c.depthBuffer&&c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,b)):a.renderbufferStorage(a.RENDERBUFFER,a.RGBA4,c.width,c.height);a.bindRenderbuffer(a.RENDERBUFFER,null)}var t=g.memory,u=\"undefined\"!==typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext;\nthis.setTexture2D=m;this.setTextureCube=function(b,g){var l=d.get(b);if(6===b.image.length)if(0<b.version&&l.__version!==b.version){l.__image__webglTextureCube||(b.addEventListener(\"dispose\",n),l.__image__webglTextureCube=a.createTexture(),t.textures++);c.activeTexture(a.TEXTURE0+g);c.bindTexture(a.TEXTURE_CUBE_MAP,l.__image__webglTextureCube);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);for(var m=b instanceof THREE.CompressedTexture,p=b.image[0]instanceof THREE.DataTexture,r=[],s=0;6>s;s++)r[s]=\nm||p?p?b.image[s].image:b.image[s]:h(b.image[s],e.maxCubemapSize);var u=k(r[0]),B=f(b.format),F=f(b.type);q(a.TEXTURE_CUBE_MAP,b,u);for(s=0;6>s;s++)if(m)for(var K,P=r[s].mipmaps,M=0,H=P.length;M<H;M++)K=P[M],b.format!==THREE.RGBAFormat&&b.format!==THREE.RGBFormat?-1<c.getCompressedTextureFormats().indexOf(B)?c.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,M,B,K.width,K.height,0,K.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\"):\nc.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,M,B,K.width,K.height,0,B,F,K.data);else p?c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,B,r[s].width,r[s].height,0,B,F,r[s].data):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,B,B,F,r[s]);b.generateMipmaps&&u&&a.generateMipmap(a.TEXTURE_CUBE_MAP);l.__version=b.version;if(b.onUpdate)b.onUpdate(b)}else c.activeTexture(a.TEXTURE0+g),c.bindTexture(a.TEXTURE_CUBE_MAP,l.__image__webglTextureCube)};this.setTextureCubeDynamic=function(b,e){c.activeTexture(a.TEXTURE0+\ne);c.bindTexture(a.TEXTURE_CUBE_MAP,d.get(b).__webglTexture)};this.setupRenderTarget=function(b){var e=d.get(b),f=d.get(b.texture);b.addEventListener(\"dispose\",p);f.__webglTexture=a.createTexture();t.textures++;var g=b instanceof THREE.WebGLRenderTargetCube,h=k(b);if(g){e.__webglFramebuffer=[];for(var l=0;6>l;l++)e.__webglFramebuffer[l]=a.createFramebuffer()}else e.__webglFramebuffer=a.createFramebuffer();if(g){c.bindTexture(a.TEXTURE_CUBE_MAP,f.__webglTexture);q(a.TEXTURE_CUBE_MAP,b.texture,h);for(l=\n0;6>l;l++)r(e.__webglFramebuffer[l],b,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+l);b.texture.generateMipmaps&&h&&a.generateMipmap(a.TEXTURE_CUBE_MAP);c.bindTexture(a.TEXTURE_CUBE_MAP,null)}else c.bindTexture(a.TEXTURE_2D,f.__webglTexture),q(a.TEXTURE_2D,b.texture,h),r(e.__webglFramebuffer,b,a.COLOR_ATTACHMENT0,a.TEXTURE_2D),b.texture.generateMipmaps&&h&&a.generateMipmap(a.TEXTURE_2D),c.bindTexture(a.TEXTURE_2D,null);if(b.depthBuffer){e=d.get(b);f=b instanceof THREE.WebGLRenderTargetCube;if(b.depthTexture){if(f)throw Error(\"target.depthTexture not supported in Cube render targets\");\nif(b instanceof THREE.WebGLRenderTargetCube)throw Error(\"Depth Texture with cube render targets is not supported!\");a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer);if(!(b.depthTexture instanceof THREE.DepthTexture))throw Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");d.get(b.depthTexture).__webglTexture&&b.depthTexture.image.width===b.width&&b.depthTexture.image.height===b.height||(b.depthTexture.image.width=b.width,b.depthTexture.image.height=b.height,b.depthTexture.needsUpdate=\n!0);m(b.depthTexture,0);b=d.get(b.depthTexture).__webglTexture;a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,b,0)}else if(f)for(e.__webglDepthbuffer=[],f=0;6>f;f++)a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer[f]),e.__webglDepthbuffer[f]=a.createRenderbuffer(),s(e.__webglDepthbuffer[f],b);else a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),s(e.__webglDepthbuffer,b);a.bindFramebuffer(a.FRAMEBUFFER,null)}};this.updateRenderTargetMipmap=\nfunction(b){var e=b.texture;e.generateMipmaps&&k(b)&&e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter&&(b=b instanceof THREE.WebGLRenderTargetCube?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D,e=d.get(e).__webglTexture,c.bindTexture(b,e),a.generateMipmap(b),c.bindTexture(b,null))}};\nTHREE.WebGLUniforms=function(){var a=new THREE.Texture,b=new THREE.CubeTexture,c=[],d=[],e=function(a,b,d){var e=a[0];if(0>=e||0<e)return a;var f=b*d,g=c[f];void 0===g&&(g=new Float32Array(f),c[f]=g);if(0!==b)for(e.toArray(g,0),e=1,f=0;e!==b;++e)f+=d,a[e].toArray(g,f);return g},f=function(a,b){var c=d[b];void 0===c&&(c=new Int32Array(b),d[b]=c);for(var e=0;e!==b;++e)c[e]=a.allocTextureUnit();return c},g=function(a,b){a.uniform1f(this.addr,b)},h=function(a,b){a.uniform1i(this.addr,b)},k=function(a,\nb){void 0===b.x?a.uniform2fv(this.addr,b):a.uniform2f(this.addr,b.x,b.y)},l=function(a,b){void 0!==b.x?a.uniform3f(this.addr,b.x,b.y,b.z):void 0!==b.r?a.uniform3f(this.addr,b.r,b.g,b.b):a.uniform3fv(this.addr,b)},n=function(a,b){void 0===b.x?a.uniform4fv(this.addr,b):a.uniform4f(this.addr,b.x,b.y,b.z,b.w)},p=function(a,b){a.uniformMatrix2fv(this.addr,!1,b.elements||b)},m=function(a,b){a.uniformMatrix3fv(this.addr,!1,b.elements||b)},q=function(a,b){a.uniformMatrix4fv(this.addr,!1,b.elements||b)},r=\nfunction(b,c,d){var e=d.allocTextureUnit();b.uniform1i(this.addr,e);d.setTexture2D(c||a,e)},s=function(a,c,d){var e=d.allocTextureUnit();a.uniform1i(this.addr,e);d.setTextureCube(c||b,e)},t=function(a,b){a.uniform2iv(this.addr,b)},u=function(a,b){a.uniform3iv(this.addr,b)},v=function(a,b){a.uniform4iv(this.addr,b)},C=function(a){switch(a){case 5126:return g;case 35664:return k;case 35665:return l;case 35666:return n;case 35674:return p;case 35675:return m;case 35676:return q;case 35678:return r;case 35680:return s;\ncase 5124:case 35670:return h;case 35667:case 35671:return t;case 35668:case 35672:return u;case 35669:case 35673:return v}},w=function(a,b){a.uniform1fv(this.addr,b)},E=function(a,b){a.uniform1iv(this.addr,b)},z=function(a,b){a.uniform2fv(this.addr,e(b,this.size,2))},y=function(a,b){a.uniform3fv(this.addr,e(b,this.size,3))},A=function(a,b){a.uniform4fv(this.addr,e(b,this.size,4))},I=function(a,b){a.uniformMatrix2fv(this.addr,!1,e(b,this.size,4))},B=function(a,b){a.uniformMatrix3fv(this.addr,!1,e(b,\nthis.size,9))},F=function(a,b){a.uniformMatrix4fv(this.addr,!1,e(b,this.size,16))},K=function(b,c,d){var e=c.length,g=f(d,e);b.uniform1iv(this.addr,g);for(b=0;b!==e;++b)d.setTexture2D(c[b]||a,g[b])},P=function(a,c,d){var e=c.length,g=f(d,e);a.uniform1iv(this.addr,g);for(a=0;a!==e;++a)d.setTextureCube(c[a]||b,g[a])},M=function(a){switch(a){case 5126:return w;case 35664:return z;case 35665:return y;case 35666:return A;case 35674:return I;case 35675:return B;case 35676:return F;case 35678:return K;case 35680:return P;\ncase 5124:case 35670:return E;case 35667:case 35671:return t;case 35668:case 35672:return u;case 35669:case 35673:return v}},H=function(a,b,c){this.id=a;this.addr=c;this.setValue=C(b.type)},L=function(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=M(b.type)},O=function(a){this.id=a;this.seq=[];this.map={}};O.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id])}};var N=/([\\w\\d_]+)(\\])?(\\[|\\.)?/g,Q=function(a,b,c){this.seq=[];this.map=\n{};this.renderer=c;c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var d=0;d!==c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,k=h.length;for(N.lastIndex=0;;){var l=N.exec(h),m=N.lastIndex,n=l[1],p=l[3];\"]\"===l[2]&&(n|=0);if(void 0===p||\"[\"===p&&m+2===k){h=g;e=void 0===p?new H(n,e,f):new L(n,e,f);h.seq.push(e);h.map[e.id]=e;break}else p=g.map[n],void 0===p&&(p=new O(n),n=g,g=p,n.seq.push(g),n.map[g.id]=g),g=p}}};Q.prototype.setValue=function(a,b,c){b=this.map[b];\nvoid 0!==b&&b.setValue(a,c,this.renderer)};Q.prototype.set=function(a,b,c){var d=this.map[c];void 0!==d&&d.setValue(a,b[c],this.renderer)};Q.prototype.setOptional=function(a,b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};Q.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}};Q.seqWithValue=function(a,b){for(var c=[],d=0,e=a.length;d!==e;++d){var f=a[d];f.id in b&&c.push(f)}return c};Q.splitDynamic=function(a,b){for(var c=null,\nd=a.length,e=0,f=0;f!==d;++f){var g=a[f],h=b[g.id];h&&!0===h.dynamic?(null===c&&(c=[]),c.push(g)):(e<f&&(a[e]=g),++e)}e<d&&(a.length=e);return c};Q.evalDynamic=function(a,b,c,d){for(var e=0,f=a.length;e!==f;++e){var g=b[a[e].id],h=g.onUpdateCallback;void 0!==h&&h.call(g,c,d)}};return Q}();\nTHREE.LensFlarePlugin=function(a,b){var c,d,e,f,g,h,k,l,n,p,m=a.context,q=a.state,r,s,t,u,v,C;this.render=function(w,E,z){if(0!==b.length){w=new THREE.Vector3;var y=z.w/z.z,A=.5*z.z,I=.5*z.w,B=16/z.w,F=new THREE.Vector2(B*y,B),K=new THREE.Vector3(1,1,0),P=new THREE.Vector2(1,1),M=new THREE.Box2;M.min.set(0,0);M.max.set(z.z-16,z.w-16);if(void 0===u){var B=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),H=new Uint16Array([0,1,2,0,2,3]);r=m.createBuffer();s=m.createBuffer();m.bindBuffer(m.ARRAY_BUFFER,\nr);m.bufferData(m.ARRAY_BUFFER,B,m.STATIC_DRAW);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,s);m.bufferData(m.ELEMENT_ARRAY_BUFFER,H,m.STATIC_DRAW);v=m.createTexture();C=m.createTexture();q.bindTexture(m.TEXTURE_2D,v);m.texImage2D(m.TEXTURE_2D,0,m.RGB,16,16,0,m.RGB,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,\nm.NEAREST);q.bindTexture(m.TEXTURE_2D,C);m.texImage2D(m.TEXTURE_2D,0,m.RGBA,16,16,0,m.RGBA,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST);var B=t={vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif ( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility =        visibility.r / 9.0;\\nvVisibility *= 1.0 - visibility.g / 9.0;\\nvVisibility *=       visibility.b / 9.0;\\nvVisibility *= 1.0 - visibility.a / 9.0;\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\nfragmentShader:\"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif ( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if ( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},H=m.createProgram(),L=m.createShader(m.FRAGMENT_SHADER),\nO=m.createShader(m.VERTEX_SHADER),N=\"precision \"+a.getPrecision()+\" float;\\n\";m.shaderSource(L,N+B.fragmentShader);m.shaderSource(O,N+B.vertexShader);m.compileShader(L);m.compileShader(O);m.attachShader(H,L);m.attachShader(H,O);m.linkProgram(H);u=H;n=m.getAttribLocation(u,\"position\");p=m.getAttribLocation(u,\"uv\");c=m.getUniformLocation(u,\"renderType\");d=m.getUniformLocation(u,\"map\");e=m.getUniformLocation(u,\"occlusionMap\");f=m.getUniformLocation(u,\"opacity\");g=m.getUniformLocation(u,\"color\");h=m.getUniformLocation(u,\n\"scale\");k=m.getUniformLocation(u,\"rotation\");l=m.getUniformLocation(u,\"screenPosition\")}m.useProgram(u);q.initAttributes();q.enableAttribute(n);q.enableAttribute(p);q.disableUnusedAttributes();m.uniform1i(e,0);m.uniform1i(d,1);m.bindBuffer(m.ARRAY_BUFFER,r);m.vertexAttribPointer(n,2,m.FLOAT,!1,16,0);m.vertexAttribPointer(p,2,m.FLOAT,!1,16,8);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,s);q.disable(m.CULL_FACE);q.setDepthWrite(!1);H=0;for(L=b.length;H<L;H++)if(B=16/z.w,F.set(B*y,B),O=b[H],w.set(O.matrixWorld.elements[12],\nO.matrixWorld.elements[13],O.matrixWorld.elements[14]),w.applyMatrix4(E.matrixWorldInverse),w.applyProjection(E.projectionMatrix),K.copy(w),P.x=z.x+K.x*A+A-8,P.y=z.y+K.y*I+I-8,!0===M.containsPoint(P)){q.activeTexture(m.TEXTURE0);q.bindTexture(m.TEXTURE_2D,null);q.activeTexture(m.TEXTURE1);q.bindTexture(m.TEXTURE_2D,v);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGB,P.x,P.y,16,16,0);m.uniform1i(c,0);m.uniform2f(h,F.x,F.y);m.uniform3f(l,K.x,K.y,K.z);q.disable(m.BLEND);q.enable(m.DEPTH_TEST);m.drawElements(m.TRIANGLES,\n6,m.UNSIGNED_SHORT,0);q.activeTexture(m.TEXTURE0);q.bindTexture(m.TEXTURE_2D,C);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGBA,P.x,P.y,16,16,0);m.uniform1i(c,1);q.disable(m.DEPTH_TEST);q.activeTexture(m.TEXTURE1);q.bindTexture(m.TEXTURE_2D,v);m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0);O.positionScreen.copy(K);O.customUpdateCallback?O.customUpdateCallback(O):O.updateLensFlares();m.uniform1i(c,2);q.enable(m.BLEND);for(var N=0,Q=O.lensFlares.length;N<Q;N++){var J=O.lensFlares[N];.001<J.opacity&&.001<J.scale&&\n(K.x=J.x,K.y=J.y,K.z=J.z,B=J.size*J.scale/z.w,F.x=B*y,F.y=B,m.uniform3f(l,K.x,K.y,K.z),m.uniform2f(h,F.x,F.y),m.uniform1f(k,J.rotation),m.uniform1f(f,J.opacity),m.uniform3f(g,J.color.r,J.color.g,J.color.b),q.setBlending(J.blending,J.blendEquation,J.blendSrc,J.blendDst),a.setTexture2D(J.texture,1),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0))}}q.enable(m.CULL_FACE);q.enable(m.DEPTH_TEST);q.setDepthWrite(!0);a.resetGLState()}}};\nTHREE.SpritePlugin=function(a,b){var c,d,e,f,g,h,k,l,n,p,m,q,r,s,t,u,v;function C(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:b.id-a.id}var w=a.context,E=a.state,z,y,A,I,B=new THREE.Vector3,F=new THREE.Quaternion,K=new THREE.Vector3;this.render=function(P,M){if(0!==b.length){if(void 0===A){var H=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),L=new Uint16Array([0,1,2,0,2,3]);z=w.createBuffer();y=w.createBuffer();w.bindBuffer(w.ARRAY_BUFFER,\nz);w.bufferData(w.ARRAY_BUFFER,H,w.STATIC_DRAW);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,y);w.bufferData(w.ELEMENT_ARRAY_BUFFER,L,w.STATIC_DRAW);var H=w.createProgram(),L=w.createShader(w.VERTEX_SHADER),O=w.createShader(w.FRAGMENT_SHADER);w.shaderSource(L,[\"precision \"+a.getPrecision()+\" float;\",\"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position * scale;\\nvec2 rotatedPosition;\\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\nvec4 finalPosition;\\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition;\\nfinalPosition = projectionMatrix * finalPosition;\\ngl_Position = finalPosition;\\n}\"].join(\"\\n\"));\nw.shaderSource(O,[\"precision \"+a.getPrecision()+\" float;\",\"uniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\nif ( texture.a < alphaTest ) discard;\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\nif ( fogType > 0 ) {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat fogFactor = 0.0;\\nif ( fogType == 1 ) {\\nfogFactor = smoothstep( fogNear, fogFar, depth );\\n} else {\\nconst float LOG2 = 1.442695;\\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n}\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\\n}\"].join(\"\\n\"));\nw.compileShader(L);w.compileShader(O);w.attachShader(H,L);w.attachShader(H,O);w.linkProgram(H);A=H;u=w.getAttribLocation(A,\"position\");v=w.getAttribLocation(A,\"uv\");c=w.getUniformLocation(A,\"uvOffset\");d=w.getUniformLocation(A,\"uvScale\");e=w.getUniformLocation(A,\"rotation\");f=w.getUniformLocation(A,\"scale\");g=w.getUniformLocation(A,\"color\");h=w.getUniformLocation(A,\"map\");k=w.getUniformLocation(A,\"opacity\");l=w.getUniformLocation(A,\"modelViewMatrix\");n=w.getUniformLocation(A,\"projectionMatrix\");p=\nw.getUniformLocation(A,\"fogType\");m=w.getUniformLocation(A,\"fogDensity\");q=w.getUniformLocation(A,\"fogNear\");r=w.getUniformLocation(A,\"fogFar\");s=w.getUniformLocation(A,\"fogColor\");t=w.getUniformLocation(A,\"alphaTest\");H=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");H.width=8;H.height=8;L=H.getContext(\"2d\");L.fillStyle=\"white\";L.fillRect(0,0,8,8);I=new THREE.Texture(H);I.needsUpdate=!0}w.useProgram(A);E.initAttributes();E.enableAttribute(u);E.enableAttribute(v);E.disableUnusedAttributes();\nE.disable(w.CULL_FACE);E.enable(w.BLEND);w.bindBuffer(w.ARRAY_BUFFER,z);w.vertexAttribPointer(u,2,w.FLOAT,!1,16,0);w.vertexAttribPointer(v,2,w.FLOAT,!1,16,8);w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,y);w.uniformMatrix4fv(n,!1,M.projectionMatrix.elements);E.activeTexture(w.TEXTURE0);w.uniform1i(h,0);L=H=0;(O=P.fog)?(w.uniform3f(s,O.color.r,O.color.g,O.color.b),O instanceof THREE.Fog?(w.uniform1f(q,O.near),w.uniform1f(r,O.far),w.uniform1i(p,1),L=H=1):O instanceof THREE.FogExp2&&(w.uniform1f(m,O.density),\nw.uniform1i(p,2),L=H=2)):(w.uniform1i(p,0),L=H=0);for(var O=0,N=b.length;O<N;O++){var Q=b[O];Q.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,Q.matrixWorld);Q.z=-Q.modelViewMatrix.elements[14]}b.sort(C);for(var J=[],O=0,N=b.length;O<N;O++){var Q=b[O],D=Q.material;w.uniform1f(t,D.alphaTest);w.uniformMatrix4fv(l,!1,Q.modelViewMatrix.elements);Q.matrixWorld.decompose(B,F,K);J[0]=K.x;J[1]=K.y;Q=0;P.fog&&D.fog&&(Q=L);H!==Q&&(w.uniform1i(p,Q),H=Q);null!==D.map?(w.uniform2f(c,D.map.offset.x,D.map.offset.y),\nw.uniform2f(d,D.map.repeat.x,D.map.repeat.y)):(w.uniform2f(c,0,0),w.uniform2f(d,1,1));w.uniform1f(k,D.opacity);w.uniform3f(g,D.color.r,D.color.g,D.color.b);w.uniform1f(e,D.rotation);w.uniform2fv(f,J);E.setBlending(D.blending,D.blendEquation,D.blendSrc,D.blendDst);E.setDepthTest(D.depthTest);E.setDepthWrite(D.depthWrite);D.map?a.setTexture2D(D.map,0):a.setTexture2D(I,0);w.drawElements(w.TRIANGLES,6,w.UNSIGNED_SHORT,0)}E.enable(w.CULL_FACE);a.resetGLState()}}};\nObject.assign(THREE,{Face4:function(a,b,c,d,e,f,g){console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\");return new THREE.Face3(a,b,c,e,f,g)},LineStrip:0,LinePieces:1,MeshFaceMaterial:THREE.MultiMaterial,PointCloud:function(a,b){console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\");return new THREE.Points(a,b)},Particle:THREE.Sprite,ParticleSystem:function(a,b){console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\");return new THREE.Points(a,\nb)},PointCloudMaterial:function(a){console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)},ParticleBasicMaterial:function(a){console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)},ParticleSystemMaterial:function(a){console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)},Vertex:function(a,b,c){console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\");\nreturn new THREE.Vector3(a,b,c)}});Object.assign(THREE.Box2.prototype,{empty:function(){console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\");return this.isEmpty()},isIntersectionBox:function(a){console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)}});\nObject.assign(THREE.Box3.prototype,{empty:function(){console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\");return this.isEmpty()},isIntersectionBox:function(a){console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)},isIntersectionSphere:function(a){console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\");return this.intersectsSphere(a)}});\nObject.assign(THREE.Matrix3.prototype,{multiplyVector3:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\");return a.applyMatrix3(this)},multiplyVector3Array:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");return this.applyToVector3Array(a)}});\nObject.assign(THREE.Matrix4.prototype,{extractPosition:function(a){console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\");return this.copyPosition(a)},setRotationFromQuaternion:function(a){console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\");return this.makeRotationFromQuaternion(a)},multiplyVector3:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\");\nreturn a.applyProjection(this)},multiplyVector4:function(a){console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},multiplyVector3Array:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");return this.applyToVector3Array(a)},rotateAxis:function(a){console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\");\na.transformDirection(this)},crossVector:function(a){console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},translate:function(a){console.error(\"THREE.Matrix4: .translate() has been removed.\")},rotateX:function(a){console.error(\"THREE.Matrix4: .rotateX() has been removed.\")},rotateY:function(a){console.error(\"THREE.Matrix4: .rotateY() has been removed.\")},rotateZ:function(a){console.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},\nrotateByAxis:function(a,b){console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")}});Object.assign(THREE.Plane.prototype,{isIntersectionLine:function(a){console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\");return this.intersectsLine(a)}});Object.assign(THREE.Quaternion.prototype,{multiplyVector3:function(a){console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\");return a.applyQuaternion(this)}});\nObject.assign(THREE.Ray.prototype,{isIntersectionBox:function(a){console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\");return this.intersectsBox(a)},isIntersectionPlane:function(a){console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\");return this.intersectsPlane(a)},isIntersectionSphere:function(a){console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\");return this.intersectsSphere(a)}});\nObject.assign(THREE.Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},setEulerFromQuaternion:function(){console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},getPositionFromMatrix:function(a){console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\");return this.setFromMatrixPosition(a)},\ngetScaleFromMatrix:function(a){console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\");return this.setFromMatrixColumn(b,a)}});\nObject.assign(THREE.Object3D.prototype,{getChildByName:function(a){console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\");return this.getObjectByName(a)},renderDepth:function(a){console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\")},translate:function(a,b){console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\");return this.translateOnAxis(b,a)}});\nObject.defineProperties(THREE.Object3D.prototype,{eulerOrder:{get:function(){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");return this.rotation.order},set:function(a){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\");this.rotation.order=a}},useQuaternion:{get:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set:function(a){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")}}});\nObject.defineProperties(THREE.LOD.prototype,{objects:{get:function(){console.warn(\"THREE.LOD: .objects has been renamed to .levels.\");return this.levels}}});THREE.PerspectiveCamera.prototype.setLens=function(a,b){console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\");void 0!==b&&(this.filmGauge=b);this.setFocalLength(a)};\nObject.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(a){console.warn(\"THREE.Light: .onlyShadow has been removed.\")}},shadowCameraFov:{set:function(a){console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\");this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\");this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\");\nthis.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\");this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\");this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\");this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\");\nthis.shadow.camera.far=a}},shadowCameraVisible:{set:function(a){console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\")}},shadowBias:{set:function(a){console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\");this.shadow.bias=a}},shadowDarkness:{set:function(a){console.warn(\"THREE.Light: .shadowDarkness has been removed.\")}},shadowMapWidth:{set:function(a){console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\");\nthis.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\");this.shadow.mapSize.height=a}}});Object.defineProperties(THREE.BufferAttribute.prototype,{length:{get:function(){console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");return this.array.length}}});\nObject.assign(THREE.BufferGeometry.prototype,{addIndex:function(a){console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\");this.setIndex(a)},addDrawCall:function(a,b,c){void 0!==c&&console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\");console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\");this.addGroup(a,b)},clearDrawCalls:function(){console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\");this.clearGroups()},\ncomputeTangents:function(){console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\")},computeOffsets:function(){console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\")}});Object.defineProperties(THREE.BufferGeometry.prototype,{drawcalls:{get:function(){console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\");return this.groups}},offsets:{get:function(){console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\");return this.groups}}});\nObject.defineProperties(THREE.Material.prototype,{wrapAround:{get:function(){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")},set:function(a){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")}},wrapRGB:{get:function(){console.warn(\"THREE.\"+this.type+\": .wrapRGB has been removed.\");return new THREE.Color}}});\nObject.defineProperties(THREE.MeshPhongMaterial.prototype,{metal:{get:function(){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.\");return!1},set:function(a){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead\")}}});\nObject.defineProperties(THREE.ShaderMaterial.prototype,{derivatives:{get:function(){console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");return this.extensions.derivatives},set:function(a){console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\");this.extensions.derivatives=a}}});\nTHREE.EventDispatcher.prototype=Object.assign(Object.create({constructor:THREE.EventDispatcher,apply:function(a){console.warn(\"THREE.EventDispatcher: .apply is deprecated, just inherit or Object.assign the prototype to mix-in.\");Object.assign(a,this)}}),THREE.EventDispatcher.prototype);\nObject.assign(THREE.WebGLRenderer.prototype,{supportsFloatTextures:function(){console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\");return this.extensions.get(\"OES_texture_float\")},supportsHalfFloatTextures:function(){console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\");return this.extensions.get(\"OES_texture_half_float\")},supportsStandardDerivatives:function(){console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\");\nreturn this.extensions.get(\"OES_standard_derivatives\")},supportsCompressedTextureS3TC:function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\");return this.extensions.get(\"WEBGL_compressed_texture_s3tc\")},supportsCompressedTexturePVRTC:function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\");return this.extensions.get(\"WEBGL_compressed_texture_pvrtc\")},\nsupportsBlendMinMax:function(){console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\");return this.extensions.get(\"EXT_blend_minmax\")},supportsVertexTextures:function(){return this.capabilities.vertexTextures},supportsInstancedArrays:function(){console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\");return this.extensions.get(\"ANGLE_instanced_arrays\")},enableScissorTest:function(a){console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\");\nthis.setScissorTest(a)},initMaterial:function(){console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")},addPrePlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")},addPostPlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")},updateShadowMap:function(){console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")}});\nObject.defineProperties(THREE.WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\");this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\");this.shadowMap.type=a}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.\");\nthis.shadowMap.cullFace=a}}});Object.defineProperties(THREE.WebGLShadowMap.prototype,{cullFace:{get:function(){return this.renderReverseSided?THREE.CullFaceFront:THREE.CullFaceBack},set:function(a){a=a!==THREE.CullFaceBack;console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \"+a+\".\");this.renderReverseSided=a}}});\nObject.defineProperties(THREE.WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");return this.texture.wrapS},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\");this.texture.wrapS=a}},wrapT:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");return this.texture.wrapT},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\");this.texture.wrapT=\na}},magFilter:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\");return this.texture.magFilter},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\");this.texture.magFilter=a}},minFilter:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\");return this.texture.minFilter},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\");this.texture.minFilter=\na}},anisotropy:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\");return this.texture.anisotropy},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\");this.texture.anisotropy=a}},offset:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");return this.texture.offset},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\");this.texture.offset=\na}},repeat:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");return this.texture.repeat},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\");this.texture.repeat=a}},format:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");return this.texture.format},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\");this.texture.format=a}},type:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");\nreturn this.texture.type},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\");this.texture.type=a}},generateMipmaps:{get:function(){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\");return this.texture.generateMipmaps},set:function(a){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\");this.texture.generateMipmaps=a}}});\nObject.assign(THREE.Audio.prototype,{load:function(a){console.warn(\"THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.\");var b=this;(new THREE.AudioLoader).load(a,function(a){b.setBuffer(a)});return this}});Object.assign(THREE.AudioAnalyser.prototype,{getData:function(a){console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\");return this.getFrequencyData()}});\nTHREE.GeometryUtils={merge:function(a,b,c){console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\");var d;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\");return a.center()}};\nTHREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");var e=new THREE.TextureLoader;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadTextureCube:function(a,b,c,d){console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");var e=new THREE.CubeTextureLoader;e.setCrossOrigin(this.crossOrigin);a=e.load(a,\nc,void 0,d);b&&(a.mapping=b);return a},loadCompressedTexture:function(){console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},loadCompressedTextureCube:function(){console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")}};\nTHREE.Projector=function(){console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\");this.projectVector=function(a,b){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");a.project(b)};this.unprojectVector=function(a,b){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");a.unproject(b)};this.pickingRay=function(a,b){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}};\nTHREE.CanvasRenderer=function(){console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\");this.domElement=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};\nTHREE.CurveUtils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};\nTHREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Group,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};\nTHREE.ShapeUtils={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g,h,k;if(0<THREE.ShapeUtils.area(a))for(h=0;h<c;h++)e[h]=h;else for(h=0;h<c;h++)e[h]=c-1-h;var l=2*c;for(h=c-1;2<c;){if(0>=l--){console.warn(\"THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()\");break}g=h;c<=g&&(g=0);h=g+1;c<=h&&(h=0);k=h+1;c<=k&&(k=0);var n;a:{var p=\nn=void 0,m=void 0,q=void 0,r=void 0,s=void 0,t=void 0,u=void 0,v=void 0,p=a[e[g]].x,m=a[e[g]].y,q=a[e[h]].x,r=a[e[h]].y,s=a[e[k]].x,t=a[e[k]].y;if(Number.EPSILON>(q-p)*(t-m)-(r-m)*(s-p))n=!1;else{var C=void 0,w=void 0,E=void 0,z=void 0,y=void 0,A=void 0,I=void 0,B=void 0,F=void 0,K=void 0,F=B=I=v=u=void 0,C=s-q,w=t-r,E=p-s,z=m-t,y=q-p,A=r-m;for(n=0;n<c;n++)if(u=a[e[n]].x,v=a[e[n]].y,!(u===p&&v===m||u===q&&v===r||u===s&&v===t)&&(I=u-p,B=v-m,F=u-q,K=v-r,u-=s,v-=t,F=C*K-w*F,I=y*B-A*I,B=E*v-z*u,F>=-Number.EPSILON&&\nB>=-Number.EPSILON&&I>=-Number.EPSILON)){n=!1;break a}n=!0}}if(n){d.push([a[e[g]],a[e[h]],a[e[k]]]);f.push([e[g],e[h],e[k]]);g=h;for(k=h+1;k<c;g++,k++)e[g]=e[k];c--;l=2*c}}return b?f:d}}(),triangulateShape:function(a,b){function c(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-d.x,l=e.y-d.y,n=a.x-d.x,p=a.y-d.y,y=h*k-g*l,A=h*n-g*p;if(Math.abs(y)>Number.EPSILON){if(0<y){if(0>A||A>\ny)return[];k=l*n-k*p;if(0>k||k>y)return[]}else{if(0<A||A<y)return[];k=l*n-k*p;if(0<k||k<y)return[]}if(0===k)return!f||0!==A&&A!==y?[a]:[];if(k===y)return!f||0!==A&&A!==y?[b]:[];if(0===A)return[d];if(A===y)return[e];f=k/y;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!==A||l*n!==k*p)return[];h=0===g&&0===h;k=0===k&&0===l;if(h&&k)return a.x!==d.x||a.y!==d.y?[]:[a];if(h)return c(d,e,a)?[a]:[];if(k)return c(a,b,d)?[d]:[];0!==g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),d.x<e.x?(b=d,y=d.x,l=e,d=e.x):(b=\ne,y=e.x,l=d,d=d.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),d.y<e.y?(b=d,y=d.y,l=e,d=e.y):(b=e,y=e.y,l=d,d=d.y));return k<=y?a<y?[]:a===y?f?[]:[b]:a<=d?[b,h]:[b,l]:k>d?[]:k===d?f?[]:[g]:a<=d?[g,h]:[g,l]}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return Math.abs(a)>Number.EPSILON?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var f,g,h,k,l,n={};h=a.concat();f=0;for(g=b.length;f<g;f++)Array.prototype.push.apply(h,b[f]);f=0;for(g=\nh.length;f<g;f++)l=h[f].x+\":\"+h[f].y,void 0!==n[l]&&console.warn(\"THREE.Shape: Duplicate point\",l),n[l]=f;f=function(a,b){function c(a,b){var d=h.length-1,f=a-1;0>f&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],k[b]);if(!d)return!1;d=k.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(k[b],k[f],k[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,h,k;for(e=0;e<l.length;e++)for(f=b[l[e]],\nh=0;h<f.length;h++)if(k=h+1,k%=f.length,k=d(a,c,f[h],f[k],!0),0<k.length)return!0;return!1}var h=a.concat(),k,l=[],n,p,z,y,A,I=[],B,F,K,P=0;for(n=b.length;P<n;P++)l.push(P);B=0;for(var M=2*l.length;0<l.length;){M--;if(0>M){console.log(\"Infinite Loop! Holes left:\"+l.length+\", Probably Hole outside Shape!\");break}for(p=B;p<h.length;p++){z=h[p];n=-1;for(P=0;P<l.length;P++)if(y=l[P],A=z.x+\":\"+z.y+\":\"+y,void 0===I[A]){k=b[y];for(F=0;F<k.length;F++)if(y=k[F],c(p,F)&&!f(z,y)&&!g(z,y)){n=F;l.splice(P,1);\nB=h.slice(0,p+1);y=h.slice(p);F=k.slice(n);K=k.slice(0,n+1);h=B.concat(F).concat(K).concat(y);B=p;break}if(0<=n)break;I[A]=!0}if(0<=n)break}}return h}(a,b);var p=THREE.ShapeUtils.triangulate(f,!1);f=0;for(g=p.length;f<g;f++)for(k=p[f],h=0;3>h;h++)l=k[h].x+\":\"+k[h].y,l=n[l],void 0!==l&&(k[h]=l);return p.concat()},isClockWise:function(a){return 0>THREE.ShapeUtils.area(a)},b2:function(){return function(a,b,c,d){var e=1-a;return e*e*b+2*(1-a)*a*c+a*a*d}}(),b3:function(){return function(a,b,c,d,e){var f=\n1-a,g=1-a;return f*f*f*b+3*g*g*a*c+3*(1-a)*a*a*d+a*a*a*e}}()};THREE.Curve=function(){};\nTHREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(a){console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");return null},getPointAt:function(a){a=this.getUtoTmapping(a);return this.getPoint(a)},getPoints:function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c},getSpacedPoints:function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){a||\n(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-\n1,k;g<=h;)if(d=Math.floor(g+(h-g)/2),k=c[d]-f,0>k)g=d+1;else if(0<k)h=d-1;else{h=d;break}d=h;if(c[d]===f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)},getTangent:function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()},getTangentAt:function(a){a=this.getUtoTmapping(a);return this.getTangent(a)}};\nTHREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.autoClose=!1};\nTHREE.CurvePath.prototype=Object.assign(Object.create(THREE.Curve.prototype),{constructor:THREE.CurvePath,add:function(a){this.curves.push(a)},closePath:function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))},getPoint:function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),d=0;d<c.length;){if(c[d]>=b)return a=this.curves[d],b=1-(c[d]-b)/a.getLength(),a.getPointAt(b);d++}return null},getLength:function(){var a=\nthis.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=!0;this.cacheLengths=null;this.getLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],b=0,c=0,d=this.curves.length;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a},createPointsGeometry:function(a){a=this.getPoints(a);return this.createGeometry(a)},createSpacedPointsGeometry:function(a){a=this.getSpacedPoints(a);\nreturn this.createGeometry(a)},createGeometry:function(a){for(var b=new THREE.Geometry,c=0,d=a.length;c<d;c++){var e=a[c];b.vertices.push(new THREE.Vector3(e.x,e.y,e.z||0))}return b}});THREE.Font=function(a){this.data=a};\nObject.assign(THREE.Font.prototype,{generateShapes:function(a,b,c){void 0===b&&(b=100);void 0===c&&(c=4);var d=this.data;a=String(a).split(\"\");var e=b/d.resolution,f=0;b=[];for(var g=0;g<a.length;g++){var h;h=e;var k=f,l=d.glyphs[a[g]]||d.glyphs[\"?\"];if(l){var n=new THREE.Path,p=[],m=THREE.ShapeUtils.b2,q=THREE.ShapeUtils.b3,r=void 0,s=void 0,t=s=r=void 0,u=void 0,v=void 0,C=void 0,w=void 0,E=void 0,u=void 0;if(l.o)for(var z=l._cachedOutline||(l._cachedOutline=l.o.split(\" \")),y=0,A=z.length;y<A;)switch(z[y++]){case \"m\":r=\nz[y++]*h+k;s=z[y++]*h;n.moveTo(r,s);break;case \"l\":r=z[y++]*h+k;s=z[y++]*h;n.lineTo(r,s);break;case \"q\":r=z[y++]*h+k;s=z[y++]*h;v=z[y++]*h+k;C=z[y++]*h;n.quadraticCurveTo(v,C,r,s);if(u=p[p.length-1])for(var t=u.x,u=u.y,I=1;I<=c;I++){var B=I/c;m(B,t,v,r);m(B,u,C,s)}break;case \"b\":if(r=z[y++]*h+k,s=z[y++]*h,v=z[y++]*h+k,C=z[y++]*h,w=z[y++]*h+k,E=z[y++]*h,n.bezierCurveTo(v,C,w,E,r,s),u=p[p.length-1])for(t=u.x,u=u.y,I=1;I<=c;I++)B=I/c,q(B,t,v,w,r),q(B,u,C,E,s)}h={offset:l.ha*h,path:n}}else h=void 0;f+=\nh.offset;b.push(h.path)}c=[];d=0;for(a=b.length;d<a;d++)Array.prototype.push.apply(c,b[d].toShapes());return c}});THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};\nTHREE.Path.prototype=Object.assign(Object.create(THREE.CurvePath.prototype),{constructor:THREE.Path,fromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},moveTo:function(a,b){this.actions.push({action:\"moveTo\",args:[a,b]})},lineTo:function(a,b){var c=this.actions[this.actions.length-1].args,c=new THREE.LineCurve(new THREE.Vector2(c[c.length-2],c[c.length-1]),new THREE.Vector2(a,b));this.curves.push(c);this.actions.push({action:\"lineTo\",args:[a,\nb]})},quadraticCurveTo:function(a,b,c,d){var e=this.actions[this.actions.length-1].args,e=new THREE.QuadraticBezierCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(e);this.actions.push({action:\"quadraticCurveTo\",args:[a,b,c,d]})},bezierCurveTo:function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args,g=new THREE.CubicBezierCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),\nnew THREE.Vector2(e,f));this.curves.push(g);this.actions.push({action:\"bezierCurveTo\",args:[a,b,c,d,e,f]})},splineThru:function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);c=a[a.length-1];b.push(c.x);b.push(c.y);this.actions.push({action:\"splineThru\",args:b})},arc:function(a,b,c,d,e,f){var g=this.actions[this.actions.length-\n1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)},absarc:function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},ellipse:function(a,b,c,d,e,f,g,h){var k=this.actions[this.actions.length-1].args;this.absellipse(a+k[k.length-2],b+k[k.length-1],c,d,e,f,g,h)},absellipse:function(a,b,c,d,e,f,g,h){var k=[a,b,c,d,e,f,g,h||0];a=new THREE.EllipseCurve(a,b,c,d,e,f,g,h);this.curves.push(a);a=a.getPoint(1);k.push(a.x);k.push(a.y);this.actions.push({action:\"ellipse\",args:k})},getSpacedPoints:function(a){a||\n(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));this.autoClose&&b.push(b[0]);return b},getPoints:function(a){a=a||12;for(var b=THREE.ShapeUtils.b2,c=THREE.ShapeUtils.b3,d=[],e,f,g,h,k,l,n,p,m,q,r=0,s=this.actions.length;r<s;r++){m=this.actions[r];var t=m.args;switch(m.action){case \"moveTo\":d.push(new THREE.Vector2(t[0],t[1]));break;case \"lineTo\":d.push(new THREE.Vector2(t[0],t[1]));break;case \"quadraticCurveTo\":e=t[2];f=t[3];k=t[0];l=t[1];0<d.length?(m=d[d.length-1],n=m.x,p=m.y):(m=this.actions[r-\n1].args,n=m[m.length-2],p=m[m.length-1]);for(t=1;t<=a;t++)q=t/a,m=b(q,n,k,e),q=b(q,p,l,f),d.push(new THREE.Vector2(m,q));break;case \"bezierCurveTo\":e=t[4];f=t[5];k=t[0];l=t[1];g=t[2];h=t[3];0<d.length?(m=d[d.length-1],n=m.x,p=m.y):(m=this.actions[r-1].args,n=m[m.length-2],p=m[m.length-1]);for(t=1;t<=a;t++)q=t/a,m=c(q,n,k,g,e),q=c(q,p,l,h,f),d.push(new THREE.Vector2(m,q));break;case \"splineThru\":m=this.actions[r-1].args;q=[new THREE.Vector2(m[m.length-2],m[m.length-1])];m=a*t[0].length;q=q.concat(t[0]);\nq=new THREE.SplineCurve(q);for(t=1;t<=m;t++)d.push(q.getPointAt(t/m));break;case \"arc\":e=t[0];f=t[1];l=t[2];g=t[3];m=t[4];k=!!t[5];n=m-g;p=2*a;for(t=1;t<=p;t++)q=t/p,k||(q=1-q),q=g+q*n,m=e+l*Math.cos(q),q=f+l*Math.sin(q),d.push(new THREE.Vector2(m,q));break;case \"ellipse\":e=t[0];f=t[1];l=t[2];h=t[3];g=t[4];m=t[5];k=!!t[6];var u=t[7];n=m-g;p=2*a;var v,C;0!==u&&(v=Math.cos(u),C=Math.sin(u));for(t=1;t<=p;t++){q=t/p;k||(q=1-q);q=g+q*n;m=e+l*Math.cos(q);q=f+h*Math.sin(q);if(0!==u){var w=m;m=(w-e)*v-(q-\nf)*C+e;q=(w-e)*C+(q-f)*v+f}d.push(new THREE.Vector2(m,q))}}}a=d[d.length-1];Math.abs(a.x-d[0].x)<Number.EPSILON&&Math.abs(a.y-d[0].y)<Number.EPSILON&&d.splice(d.length-1,1);this.autoClose&&d.push(d[0]);return d},toShapes:function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],k=h.x-g.x,l=h.y-g.y;if(Math.abs(l)>Number.EPSILON){if(0>\nl&&(g=b[f],k=-k,h=b[e],l=-l),!(a.y<g.y||a.y>h.y))if(a.y===g.y){if(a.x===g.x)return!0}else{e=l*(a.x-g.x)-k*(a.y-g.y);if(0===e)return!0;0>e||(d=!d)}}else if(a.y===g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=h.x))return!0}return d}var e=THREE.ShapeUtils.isClockWise,f=function(a){for(var b=[],c=new THREE.Path,d=0,e=a.length;d<e;d++){var f=a[d],g=f.args,f=f.action;\"moveTo\"===f&&0!==c.actions.length&&(b.push(c),c=new THREE.Path);c[f].apply(c,g)}0!==c.actions.length&&b.push(c);return b}(this.actions);if(0===\nf.length)return[];if(!0===b)return c(f);var g,h,k,l=[];if(1===f.length)return h=f[0],k=new THREE.Shape,k.actions=h.actions,k.curves=h.curves,l.push(k),l;var n=!e(f[0].getPoints()),n=a?!n:n;k=[];var p=[],m=[],q=0,r;p[q]=void 0;m[q]=[];for(var s=0,t=f.length;s<t;s++)h=f[s],r=h.getPoints(),g=e(r),(g=a?!g:g)?(!n&&p[q]&&q++,p[q]={s:new THREE.Shape,p:r},p[q].s.actions=h.actions,p[q].s.curves=h.curves,n&&q++,m[q]=[]):m[q].push({h:h,p:r[0]});if(!p[0])return c(f);if(1<p.length){s=!1;h=[];e=0;for(f=p.length;e<\nf;e++)k[e]=[];e=0;for(f=p.length;e<f;e++)for(g=m[e],n=0;n<g.length;n++){q=g[n];r=!0;for(t=0;t<p.length;t++)d(q.p,p[t].p)&&(e!==t&&h.push({froms:e,tos:t,hole:n}),r?(r=!1,k[t].push(q)):s=!0);r&&k[e].push(q)}0<h.length&&(s||(m=k))}s=0;for(e=p.length;s<e;s++)for(k=p[s].s,l.push(k),h=m[s],f=0,g=h.length;f<g;f++)k.holes.push(h[f].h);return l}});THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};\nTHREE.Shape.prototype=Object.assign(Object.create(THREE.Path.prototype),{constructor:THREE.Shape,extrude:function(a){return new THREE.ExtrudeGeometry(this,a)},makeGeometry:function(a){return new THREE.ShapeGeometry(this,a)},getPointsHoles:function(a){for(var b=[],c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b},extractAllPoints:function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}},extractPoints:function(a){return this.extractAllPoints(a)}});\nTHREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};\nTHREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=THREE.ShapeUtils.b2;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y))};\nTHREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentQuadraticBezier;return(new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y))).normalize()};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;\nTHREE.CubicBezierCurve.prototype.getPoint=function(a){var b=THREE.ShapeUtils.b3;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y))};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentCubicBezier;return(new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y))).normalize()};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};\nTHREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;THREE.SplineCurve.prototype.getPoint=function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0===c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector2(c(d.x,e.x,f.x,b.x,a),c(d.y,e.y,f.y,b.y,a))};\nTHREE.EllipseCurve=function(a,b,c,d,e,f,g,h){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g;this.aRotation=h||0};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;\nTHREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);b=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);var c=this.aY+this.yRadius*Math.sin(b);if(0!==this.aRotation){var b=Math.cos(this.aRotation),d=Math.sin(this.aRotation),e=a;a=(e-this.aX)*b-(c-this.aY)*d+this.aX;c=(e-this.aX)*d+(c-this.aY)*b+this.aY}return new THREE.Vector2(a,c)};\nTHREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});\nTHREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b=THREE.ShapeUtils.b2;return new THREE.Vector3(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y),b(a,this.v0.z,this.v1.z,this.v2.z))});\nTHREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b=THREE.ShapeUtils.b3;return new THREE.Vector3(b(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),b(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z))});\nTHREE.SplineCurve3=THREE.Curve.create(function(a){console.warn(\"THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3\");this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],f=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(d.x,e.x,f.x,b.x,a),c(d.y,e.y,f.y,b.y,a),c(d.z,e.z,f.z,b.z,a))});\nTHREE.CatmullRomCurve3=function(){function a(){}var b=new THREE.Vector3,c=new a,d=new a,e=new a;a.prototype.init=function(a,b,c,d){this.c0=a;this.c1=c;this.c2=-3*a+3*b-2*c-d;this.c3=2*a-2*b+c+d};a.prototype.initNonuniformCatmullRom=function(a,b,c,d,e,n,p){a=((b-a)/e-(c-a)/(e+n)+(c-b)/n)*n;d=((c-b)/n-(d-b)/(n+p)+(d-c)/p)*n;this.init(b,c,a,d)};a.prototype.initCatmullRom=function(a,b,c,d,e){this.init(b,c,e*(c-a),e*(d-b))};a.prototype.calc=function(a){var b=a*a;return this.c0+this.c1*a+this.c2*b+this.c3*\nb*a};return THREE.Curve.create(function(a){this.points=a||[];this.closed=!1},function(a){var g=this.points,h,k;k=g.length;2>k&&console.log(\"duh, you need at least 2 points\");a*=k-(this.closed?0:1);h=Math.floor(a);a-=h;this.closed?h+=0<h?0:(Math.floor(Math.abs(h)/g.length)+1)*g.length:0===a&&h===k-1&&(h=k-2,a=1);var l,n,p;this.closed||0<h?l=g[(h-1)%k]:(b.subVectors(g[0],g[1]).add(g[0]),l=b);n=g[h%k];p=g[(h+1)%k];this.closed||h+2<k?g=g[(h+2)%k]:(b.subVectors(g[k-1],g[k-2]).add(g[k-1]),g=b);if(void 0===\nthis.type||\"centripetal\"===this.type||\"chordal\"===this.type){var m=\"chordal\"===this.type?.5:.25;k=Math.pow(l.distanceToSquared(n),m);h=Math.pow(n.distanceToSquared(p),m);m=Math.pow(p.distanceToSquared(g),m);1E-4>h&&(h=1);1E-4>k&&(k=h);1E-4>m&&(m=h);c.initNonuniformCatmullRom(l.x,n.x,p.x,g.x,k,h,m);d.initNonuniformCatmullRom(l.y,n.y,p.y,g.y,k,h,m);e.initNonuniformCatmullRom(l.z,n.z,p.z,g.z,k,h,m)}else\"catmullrom\"===this.type&&(k=void 0!==this.tension?this.tension:.5,c.initCatmullRom(l.x,n.x,p.x,g.x,\nk),d.initCatmullRom(l.y,n.y,p.y,g.y,k),e.initCatmullRom(l.z,n.z,p.z,g.z,k));return new THREE.Vector3(c.calc(a),d.calc(a),e.calc(a))})}();THREE.ClosedSplineCurve3=function(a){console.warn(\"THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.\");THREE.CatmullRomCurve3.call(this,a);this.type=\"catmullrom\";this.closed=!0};THREE.ClosedSplineCurve3.prototype=Object.create(THREE.CatmullRomCurve3.prototype);\nTHREE.BoxGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"BoxGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new THREE.BoxBufferGeometry(a,b,c,d,e,f));this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.CubeGeometry=THREE.BoxGeometry;\nTHREE.BoxBufferGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,k,l,K,P){var M=f/l,H=g/K,L=f/2,O=g/2,N=k/2;g=l+1;for(var Q=K+1,J=f=0,D=new THREE.Vector3,G=0;G<Q;G++)for(var aa=G*H-O,T=0;T<g;T++)D[a]=(T*M-L)*d,D[b]=aa*e,D[c]=N,p[r]=D.x,p[r+1]=D.y,p[r+2]=D.z,D[a]=0,D[b]=0,D[c]=0<k?1:-1,m[r]=D.x,m[r+1]=D.y,m[r+2]=D.z,q[s]=T/l,q[s+1]=1-G/K,r+=3,s+=2,f+=1;for(G=0;G<K;G++)for(T=0;T<l;T++)a=u+T+g*(G+1),b=u+(T+1)+g*(G+1),c=u+(T+1)+g*G,n[t]=u+T+g*G,n[t+1]=a,n[t+2]=c,n[t+3]=a,n[t+4]=b,n[t+5]=c,t+=6,\nJ+=6;h.addGroup(v,J,P);v+=J;u+=f}THREE.BufferGeometry.call(this);this.type=\"BoxBufferGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};var h=this;d=Math.floor(d)||1;e=Math.floor(e)||1;f=Math.floor(f)||1;var k=function(a,b,c){a=0+(a+1)*(b+1)*2+(a+1)*(c+1)*2;return a+=(c+1)*(b+1)*2}(d,e,f),l=function(a,b,c){a=0+a*b*2+a*c*2;a+=c*b*2;return 6*a}(d,e,f),n=new (65535<l?Uint32Array:Uint16Array)(l),p=new Float32Array(3*k),m=new Float32Array(3*k),q=new Float32Array(2*\nk),r=0,s=0,t=0,u=0,v=0;g(\"z\",\"y\",\"x\",-1,-1,c,b,a,f,e,0);g(\"z\",\"y\",\"x\",1,-1,c,b,-a,f,e,1);g(\"x\",\"z\",\"y\",1,1,a,c,b,d,f,2);g(\"x\",\"z\",\"y\",1,-1,a,c,-b,d,f,3);g(\"x\",\"y\",\"z\",1,-1,a,b,c,d,e,4);g(\"x\",\"y\",\"z\",-1,-1,a,b,-c,d,e,5);this.setIndex(new THREE.BufferAttribute(n,1));this.addAttribute(\"position\",new THREE.BufferAttribute(p,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(m,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(q,2))};THREE.BoxBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);\nTHREE.BoxBufferGeometry.prototype.constructor=THREE.BoxBufferGeometry;THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"CircleGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new THREE.CircleBufferGeometry(a,b,c,d))};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;\nTHREE.CircleBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"CircleBufferGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=b+2,f=new Float32Array(3*e),g=new Float32Array(3*e),e=new Float32Array(2*e);g[2]=1;e[0]=.5;e[1]=.5;for(var h=0,k=3,l=2;h<=b;h++,k+=3,l+=2){var n=c+h/b*d;f[k]=a*Math.cos(n);f[k+1]=a*Math.sin(n);g[k+2]=1;e[l]=(f[k]/a+1)/2;e[l+1]=(f[k+1]/a+1)/2}c=\n[];for(k=1;k<=b;k++)c.push(k,k+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(c),1));this.addAttribute(\"position\",new THREE.BufferAttribute(f,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(g,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(e,2));this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry;\nTHREE.CylinderBufferGeometry=function(a,b,c,d,e,f,g,h){function k(c){var e,f,k,m=new THREE.Vector2,n=new THREE.Vector3,p=0,C=!0===c?a:b,M=!0===c?1:-1;f=u;for(e=1;e<=d;e++)r.setXYZ(u,0,w*M,0),s.setXYZ(u,0,M,0),m.x=.5,m.y=.5,t.setXY(u,m.x,m.y),u++;k=u;for(e=0;e<=d;e++){var H=e/d*h+g,L=Math.cos(H),H=Math.sin(H);n.x=C*H;n.y=w*M;n.z=C*L;r.setXYZ(u,n.x,n.y,n.z);s.setXYZ(u,0,M,0);m.x=.5*L+.5;m.y=.5*H*M+.5;t.setXY(u,m.x,m.y);u++}for(e=0;e<d;e++)m=f+e,n=k+e,!0===c?(q.setX(v,n),v++,q.setX(v,n+1)):(q.setX(v,\nn+1),v++,q.setX(v,n)),v++,q.setX(v,m),v++,p+=3;l.addGroup(E,p,!0===c?1:2);E+=p}THREE.BufferGeometry.call(this);this.type=\"CylinderBufferGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};var l=this;a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;d=Math.floor(d)||8;e=Math.floor(e)||1;f=void 0!==f?f:!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var n=0;!1===f&&(0<a&&n++,0<b&&n++);var p=function(){var a=(d+1)*\n(e+1);!1===f&&(a+=(d+1)*n+d*n);return a}(),m=function(){var a=d*e*6;!1===f&&(a+=d*n*3);return a}(),q=new THREE.BufferAttribute(new (65535<m?Uint32Array:Uint16Array)(m),1),r=new THREE.BufferAttribute(new Float32Array(3*p),3),s=new THREE.BufferAttribute(new Float32Array(3*p),3),t=new THREE.BufferAttribute(new Float32Array(2*p),2),u=0,v=0,C=[],w=c/2,E=0;(function(){var f,k,m=new THREE.Vector3,n=new THREE.Vector3,p=0,F=(b-a)/c;for(k=0;k<=e;k++){var K=[],P=k/e,M=P*(b-a)+a;for(f=0;f<=d;f++){var H=f/d;n.x=\nM*Math.sin(H*h+g);n.y=-P*c+w;n.z=M*Math.cos(H*h+g);r.setXYZ(u,n.x,n.y,n.z);m.copy(n);if(0===a&&0===k||0===b&&k===e)m.x=Math.sin(H*h+g),m.z=Math.cos(H*h+g);m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*F).normalize();s.setXYZ(u,m.x,m.y,m.z);t.setXY(u,H,1-P);K.push(u);u++}C.push(K)}for(f=0;f<d;f++)for(k=0;k<e;k++)m=C[k+1][f],n=C[k+1][f+1],F=C[k][f+1],q.setX(v,C[k][f]),v++,q.setX(v,m),v++,q.setX(v,F),v++,q.setX(v,m),v++,q.setX(v,n),v++,q.setX(v,F),v++,p+=6;l.addGroup(E,p,0);E+=p})();!1===f&&(0<a&&k(!0),0<b&&k(!1));\nthis.setIndex(q);this.addAttribute(\"position\",r);this.addAttribute(\"normal\",s);this.addAttribute(\"uv\",t)};THREE.CylinderBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CylinderBufferGeometry.prototype.constructor=THREE.CylinderBufferGeometry;\nTHREE.CylinderGeometry=function(a,b,c,d,e,f,g,h){THREE.Geometry.call(this);this.type=\"CylinderGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new THREE.CylinderBufferGeometry(a,b,c,d,e,f,g,h));this.mergeVertices()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;\nTHREE.ConeBufferGeometry=function(a,b,c,d,e,f,g){THREE.CylinderBufferGeometry.call(this,0,a,b,c,d,e,f,g);this.type=\"ConeBufferGeometry\";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,thetaStart:f,thetaLength:g}};THREE.ConeBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.ConeBufferGeometry.prototype.constructor=THREE.ConeBufferGeometry;\nTHREE.ConeGeometry=function(a,b,c,d,e,f,g){THREE.CylinderGeometry.call(this,0,a,b,c,d,e,f,g);this.type=\"ConeGeometry\";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}};THREE.ConeGeometry.prototype=Object.create(THREE.CylinderGeometry.prototype);THREE.ConeGeometry.prototype.constructor=THREE.ConeGeometry;\nTHREE.EdgesGeometry=function(a,b){function c(a,b){return a-b}THREE.BufferGeometry.call(this);var d=Math.cos(THREE.Math.DEG2RAD*(void 0!==b?b:1)),e=[0,0],f={},g=[\"a\",\"b\",\"c\"],h;a instanceof THREE.BufferGeometry?(h=new THREE.Geometry,h.fromBufferGeometry(a)):h=a.clone();h.mergeVertices();h.computeFaceNormals();var k=h.vertices;h=h.faces;for(var l=0,n=h.length;l<n;l++)for(var p=h[l],m=0;3>m;m++){e[0]=p[g[m]];e[1]=p[g[(m+1)%3]];e.sort(c);var q=e.toString();void 0===f[q]?f[q]={vert1:e[0],vert2:e[1],face1:l,\nface2:void 0}:f[q].face2=l}e=[];for(q in f)if(g=f[q],void 0===g.face2||h[g.face1].normal.dot(h[g.face2].normal)<=d)l=k[g.vert1],e.push(l.x),e.push(l.y),e.push(l.z),l=k[g.vert2],e.push(l.x),e.push(l.y),e.push(l.z);this.addAttribute(\"position\",new THREE.BufferAttribute(new Float32Array(e),3))};THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry;\nTHREE.ExtrudeGeometry=function(a,b){\"undefined\"!==typeof a&&(THREE.Geometry.call(this),this.type=\"ExtrudeGeometry\",a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};\nTHREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.error(\"THREE.ExtrudeGeometry: vec does not exist\");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=1,d=a.x-b.x,e=a.y-b.y,f=c.x-a.x,g=c.y-a.y,h=d*d+e*e;if(Math.abs(d*g-e*f)>Number.EPSILON){var k=Math.sqrt(h),l=Math.sqrt(f*f+g*g),h=b.x-e/k;b=b.y+d/k;f=((c.x-g/l-h)*g-(c.y+f/l-b)*f)/(d*g-e*f);c=h+d*f-a.x;a=b+e*f-a.y;d=c*c+a*a;if(2>=d)return new THREE.Vector2(c,a);d=Math.sqrt(d/2)}else a=!1,d>Number.EPSILON?\nf>Number.EPSILON&&(a=!0):d<-Number.EPSILON?f<-Number.EPSILON&&(a=!0):Math.sign(e)===Math.sign(g)&&(a=!0),a?(c=-e,a=d,d=Math.sqrt(h)):(c=d,a=e,d=Math.sqrt(h/2));return new THREE.Vector2(c/d,a/d)}function e(a,b){var c,d;for(G=a.length;0<=--G;){c=G;d=G-1;0>d&&(d=a.length-1);for(var e=0,f=q+2*n,e=0;e<f;e++){var g=Q*e,h=Q*(e+1),k=b+c+g,g=b+d+g,l=b+d+h,h=b+c+h,k=k+B,g=g+B,l=l+B,h=h+B;I.faces.push(new THREE.Face3(k,g,h,null,null,1));I.faces.push(new THREE.Face3(g,l,h,null,null,1));k=u.generateSideWallUV(I,\nk,g,l,h);I.faceVertexUvs[0].push([k[0],k[1],k[3]]);I.faceVertexUvs[0].push([k[1],k[2],k[3]])}}}function f(a,b,c){I.vertices.push(new THREE.Vector3(a,b,c))}function g(a,b,c){a+=B;b+=B;c+=B;I.faces.push(new THREE.Face3(a,b,c,null,null,0));a=u.generateTopUV(I,a,b,c);I.faceVertexUvs[0].push(a)}var h=void 0!==b.amount?b.amount:100,k=void 0!==b.bevelThickness?b.bevelThickness:6,l=void 0!==b.bevelSize?b.bevelSize:k-2,n=void 0!==b.bevelSegments?b.bevelSegments:3,p=void 0!==b.bevelEnabled?b.bevelEnabled:!0,\nm=void 0!==b.curveSegments?b.curveSegments:12,q=void 0!==b.steps?b.steps:1,r=b.extrudePath,s,t=!1,u=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,v,C,w,E;r&&(s=r.getSpacedPoints(q),t=!0,p=!1,v=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(r,q,!1),C=new THREE.Vector3,w=new THREE.Vector3,E=new THREE.Vector3);p||(l=k=n=0);var z,y,A,I=this,B=this.vertices.length,r=a.extractPoints(m),m=r.shape,F=r.holes;if(r=!THREE.ShapeUtils.isClockWise(m)){m=m.reverse();\ny=0;for(A=F.length;y<A;y++)z=F[y],THREE.ShapeUtils.isClockWise(z)&&(F[y]=z.reverse());r=!1}var K=THREE.ShapeUtils.triangulateShape(m,F),P=m;y=0;for(A=F.length;y<A;y++)z=F[y],m=m.concat(z);var M,H,L,O,N,Q=m.length,J,D=K.length,r=[],G=0;L=P.length;M=L-1;for(H=G+1;G<L;G++,M++,H++)M===L&&(M=0),H===L&&(H=0),r[G]=d(P[G],P[M],P[H]);var aa=[],T,X=r.concat();y=0;for(A=F.length;y<A;y++){z=F[y];T=[];G=0;L=z.length;M=L-1;for(H=G+1;G<L;G++,M++,H++)M===L&&(M=0),H===L&&(H=0),T[G]=d(z[G],z[M],z[H]);aa.push(T);X=\nX.concat(T)}for(M=0;M<n;M++){L=M/n;O=k*(1-L);H=l*Math.sin(L*Math.PI/2);G=0;for(L=P.length;G<L;G++)N=c(P[G],r[G],H),f(N.x,N.y,-O);y=0;for(A=F.length;y<A;y++)for(z=F[y],T=aa[y],G=0,L=z.length;G<L;G++)N=c(z[G],T[G],H),f(N.x,N.y,-O)}H=l;for(G=0;G<Q;G++)N=p?c(m[G],X[G],H):m[G],t?(w.copy(v.normals[0]).multiplyScalar(N.x),C.copy(v.binormals[0]).multiplyScalar(N.y),E.copy(s[0]).add(w).add(C),f(E.x,E.y,E.z)):f(N.x,N.y,0);for(L=1;L<=q;L++)for(G=0;G<Q;G++)N=p?c(m[G],X[G],H):m[G],t?(w.copy(v.normals[L]).multiplyScalar(N.x),\nC.copy(v.binormals[L]).multiplyScalar(N.y),E.copy(s[L]).add(w).add(C),f(E.x,E.y,E.z)):f(N.x,N.y,h/q*L);for(M=n-1;0<=M;M--){L=M/n;O=k*(1-L);H=l*Math.sin(L*Math.PI/2);G=0;for(L=P.length;G<L;G++)N=c(P[G],r[G],H),f(N.x,N.y,h+O);y=0;for(A=F.length;y<A;y++)for(z=F[y],T=aa[y],G=0,L=z.length;G<L;G++)N=c(z[G],T[G],H),t?f(N.x,N.y+s[q-1].y,s[q-1].x+O):f(N.x,N.y,h+O)}(function(){if(p){var a;a=0*Q;for(G=0;G<D;G++)J=K[G],g(J[2]+a,J[1]+a,J[0]+a);a=q+2*n;a*=Q;for(G=0;G<D;G++)J=K[G],g(J[0]+a,J[1]+a,J[2]+a)}else{for(G=\n0;G<D;G++)J=K[G],g(J[2],J[1],J[0]);for(G=0;G<D;G++)J=K[G],g(J[0]+Q*q,J[1]+Q*q,J[2]+Q*q)}})();(function(){var a=0;e(P,a);a+=P.length;y=0;for(A=F.length;y<A;y++)z=F[y],e(z,a),a+=z.length})()};\nTHREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d){a=a.vertices;b=a[b];c=a[c];d=a[d];return[new THREE.Vector2(b.x,b.y),new THREE.Vector2(c.x,c.y),new THREE.Vector2(d.x,d.y)]},generateSideWallUV:function(a,b,c,d,e){a=a.vertices;b=a[b];c=a[c];d=a[d];e=a[e];return.01>Math.abs(b.y-c.y)?[new THREE.Vector2(b.x,1-b.z),new THREE.Vector2(c.x,1-c.z),new THREE.Vector2(d.x,1-d.z),new THREE.Vector2(e.x,1-e.z)]:[new THREE.Vector2(b.y,1-b.z),new THREE.Vector2(c.y,1-c.z),new THREE.Vector2(d.y,\n1-d.z),new THREE.Vector2(e.y,1-e.z)]}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type=\"ShapeGeometry\";!1===Array.isArray(a)&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};\nTHREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var k=e.shape,l=e.holes;if(!THREE.ShapeUtils.isClockWise(k))for(k=k.reverse(),e=0,f=l.length;e<f;e++)g=l[e],THREE.ShapeUtils.isClockWise(g)&&(l[e]=g.reverse());var n=THREE.ShapeUtils.triangulateShape(k,l);e=0;for(f=l.length;e<f;e++)g=l[e],k=k.concat(g);\nl=k.length;f=n.length;for(e=0;e<l;e++)g=k[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)l=n[e],k=l[0]+h,g=l[1]+h,l=l[2]+h,this.faces.push(new THREE.Face3(k,g,l,null,null,c)),this.faceVertexUvs[0].push(d.generateTopUV(this,k,g,l))};\nTHREE.LatheBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"LatheBufferGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=THREE.Math.clamp(d,0,2*Math.PI);for(var e=(b+1)*a.length,f=b*a.length*6,g=new THREE.BufferAttribute(new (65535<f?Uint32Array:Uint16Array)(f),1),h=new THREE.BufferAttribute(new Float32Array(3*e),3),k=new THREE.BufferAttribute(new Float32Array(2*e),2),l=0,n=0,p=1/b,m=new THREE.Vector3,q=new THREE.Vector2,\ne=0;e<=b;e++)for(var f=c+e*p*d,r=Math.sin(f),s=Math.cos(f),f=0;f<=a.length-1;f++)m.x=a[f].x*r,m.y=a[f].y,m.z=a[f].x*s,h.setXYZ(l,m.x,m.y,m.z),q.x=e/b,q.y=f/(a.length-1),k.setXY(l,q.x,q.y),l++;for(e=0;e<b;e++)for(f=0;f<a.length-1;f++)c=f+e*a.length,l=c+a.length,p=c+a.length+1,m=c+1,g.setX(n,c),n++,g.setX(n,l),n++,g.setX(n,m),n++,g.setX(n,l),n++,g.setX(n,p),n++,g.setX(n,m),n++;this.setIndex(g);this.addAttribute(\"position\",h);this.addAttribute(\"uv\",k);this.computeVertexNormals();if(d===2*Math.PI)for(d=\nthis.attributes.normal.array,g=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,c=b*a.length*3,f=e=0;e<a.length;e++,f+=3)g.x=d[f+0],g.y=d[f+1],g.z=d[f+2],h.x=d[c+f+0],h.y=d[c+f+1],h.z=d[c+f+2],k.addVectors(g,h).normalize(),d[f+0]=d[c+f+0]=k.x,d[f+1]=d[c+f+1]=k.y,d[f+2]=d[c+f+2]=k.z};THREE.LatheBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.LatheBufferGeometry.prototype.constructor=THREE.LatheBufferGeometry;\nTHREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"LatheGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new THREE.LatheBufferGeometry(a,b,c,d));this.mergeVertices()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;\nTHREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"PlaneGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,c,d))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;\nTHREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"PlaneBufferGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2,f=b/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,k=a/c,l=b/d;b=new Float32Array(g*h*3);a=new Float32Array(g*h*3);for(var n=new Float32Array(g*h*2),p=0,m=0,q=0;q<h;q++)for(var r=q*l-f,s=0;s<g;s++)b[p]=s*k-e,b[p+1]=-r,a[p+2]=1,n[m]=s/c,n[m+1]=1-q/d,p+=3,m+=2;p=0;e=new (65535<b.length/3?Uint32Array:Uint16Array)(c*\nd*6);for(q=0;q<d;q++)for(s=0;s<c;s++)f=s+g*(q+1),h=s+1+g*(q+1),k=s+1+g*q,e[p]=s+g*q,e[p+1]=f,e[p+2]=k,e[p+3]=f,e[p+4]=h,e[p+5]=k,p+=6;this.setIndex(new THREE.BufferAttribute(e,1));this.addAttribute(\"position\",new THREE.BufferAttribute(b,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(a,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(n,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;\nTHREE.RingBufferGeometry=function(a,b,c,d,e,f){THREE.BufferGeometry.call(this);this.type=\"RingBufferGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||20;b=b||50;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):1;var g=(c+1)*(d+1),h=c*d*6,h=new THREE.BufferAttribute(new (65535<h?Uint32Array:Uint16Array)(h),1),k=new THREE.BufferAttribute(new Float32Array(3*g),3),l=new THREE.BufferAttribute(new Float32Array(3*\ng),3),g=new THREE.BufferAttribute(new Float32Array(2*g),2),n=0,p=0,m,q=a,r=(b-a)/d,s=new THREE.Vector3,t=new THREE.Vector2,u;for(a=0;a<=d;a++){for(u=0;u<=c;u++)m=e+u/c*f,s.x=q*Math.cos(m),s.y=q*Math.sin(m),k.setXYZ(n,s.x,s.y,s.z),l.setXYZ(n,0,0,1),t.x=(s.x/b+1)/2,t.y=(s.y/b+1)/2,g.setXY(n,t.x,t.y),n++;q+=r}for(a=0;a<d;a++)for(b=a*(c+1),u=0;u<c;u++)e=m=u+b,f=m+c+1,n=m+c+2,m+=1,h.setX(p,e),p++,h.setX(p,f),p++,h.setX(p,n),p++,h.setX(p,e),p++,h.setX(p,n),p++,h.setX(p,m),p++;this.setIndex(h);this.addAttribute(\"position\",\nk);this.addAttribute(\"normal\",l);this.addAttribute(\"uv\",g)};THREE.RingBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.RingBufferGeometry.prototype.constructor=THREE.RingBufferGeometry;THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"RingGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new THREE.RingBufferGeometry(a,b,c,d,e,f))};\nTHREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.type=\"SphereGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new THREE.SphereBufferGeometry(a,b,c,d,e,f,g))};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);\nTHREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;\nTHREE.SphereBufferGeometry=function(a,b,c,d,e,f,g){THREE.BufferGeometry.call(this);this.type=\"SphereBufferGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;for(var h=f+g,k=(b+1)*(c+1),l=new THREE.BufferAttribute(new Float32Array(3*k),3),n=new THREE.BufferAttribute(new Float32Array(3*\nk),3),k=new THREE.BufferAttribute(new Float32Array(2*k),2),p=0,m=[],q=new THREE.Vector3,r=0;r<=c;r++){for(var s=[],t=r/c,u=0;u<=b;u++){var v=u/b,C=-a*Math.cos(d+v*e)*Math.sin(f+t*g),w=a*Math.cos(f+t*g),E=a*Math.sin(d+v*e)*Math.sin(f+t*g);q.set(C,w,E).normalize();l.setXYZ(p,C,w,E);n.setXYZ(p,q.x,q.y,q.z);k.setXY(p,v,1-t);s.push(p);p++}m.push(s)}d=[];for(r=0;r<c;r++)for(u=0;u<b;u++)e=m[r][u+1],g=m[r][u],p=m[r+1][u],q=m[r+1][u+1],(0!==r||0<f)&&d.push(e,g,q),(r!==c-1||h<Math.PI)&&d.push(g,p,q);this.setIndex(new (65535<\nl.count?THREE.Uint32Attribute:THREE.Uint16Attribute)(d,1));this.addAttribute(\"position\",l);this.addAttribute(\"normal\",n);this.addAttribute(\"uv\",k);this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry;\nTHREE.TextGeometry=function(a,b){b=b||{};var c=b.font;if(!1===c instanceof THREE.Font)return console.error(\"THREE.TextGeometry: font parameter is not an instance of THREE.Font.\"),new THREE.Geometry;c=c.generateShapes(a,b.size,b.curveSegments);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b);this.type=\"TextGeometry\"};\nTHREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;\nTHREE.TorusBufferGeometry=function(a,b,c,d,e){THREE.BufferGeometry.call(this);this.type=\"TorusBufferGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=Math.floor(c)||8;d=Math.floor(d)||6;e=e||2*Math.PI;var f=(c+1)*(d+1),g=c*d*6,g=new (65535<g?Uint32Array:Uint16Array)(g),h=new Float32Array(3*f),k=new Float32Array(3*f),f=new Float32Array(2*f),l=0,n=0,p=0,m=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3,s,t;for(s=0;s<=c;s++)for(t=0;t<=d;t++){var u=\nt/d*e,v=s/c*Math.PI*2;q.x=(a+b*Math.cos(v))*Math.cos(u);q.y=(a+b*Math.cos(v))*Math.sin(u);q.z=b*Math.sin(v);h[l]=q.x;h[l+1]=q.y;h[l+2]=q.z;m.x=a*Math.cos(u);m.y=a*Math.sin(u);r.subVectors(q,m).normalize();k[l]=r.x;k[l+1]=r.y;k[l+2]=r.z;f[n]=t/d;f[n+1]=s/c;l+=3;n+=2}for(s=1;s<=c;s++)for(t=1;t<=d;t++)a=(d+1)*(s-1)+t-1,b=(d+1)*(s-1)+t,e=(d+1)*s+t,g[p]=(d+1)*s+t-1,g[p+1]=a,g[p+2]=e,g[p+3]=a,g[p+4]=b,g[p+5]=e,p+=6;this.setIndex(new THREE.BufferAttribute(g,1));this.addAttribute(\"position\",new THREE.BufferAttribute(h,\n3));this.addAttribute(\"normal\",new THREE.BufferAttribute(k,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(f,2))};THREE.TorusBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.TorusBufferGeometry.prototype.constructor=THREE.TorusBufferGeometry;\nTHREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.type=\"TorusGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new THREE.TorusBufferGeometry(a,b,c,d,e))};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;\nTHREE.TorusKnotBufferGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a);a*=c/b;b=Math.cos(a);e.x=d*(2+b)*.5*f;e.y=d*(2+b)*g*.5;e.z=d*Math.sin(a)*.5}THREE.BufferGeometry.call(this);this.type=\"TorusKnotBufferGeometry\";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||100;b=b||40;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=(d+1)*(c+1),k=d*c*6,k=new THREE.BufferAttribute(new (65535<k?Uint32Array:Uint16Array)(k),1),l=new THREE.BufferAttribute(new Float32Array(3*\nh),3),n=new THREE.BufferAttribute(new Float32Array(3*h),3),h=new THREE.BufferAttribute(new Float32Array(2*h),2),p,m,q=0,r=0,s=new THREE.Vector3,t=new THREE.Vector3,u=new THREE.Vector2,v=new THREE.Vector3,C=new THREE.Vector3,w=new THREE.Vector3,E=new THREE.Vector3,z=new THREE.Vector3;for(p=0;p<=c;++p)for(m=p/c*e*Math.PI*2,g(m,e,f,a,v),g(m+.01,e,f,a,C),E.subVectors(C,v),z.addVectors(C,v),w.crossVectors(E,z),z.crossVectors(w,E),w.normalize(),z.normalize(),m=0;m<=d;++m){var y=m/d*Math.PI*2,A=-b*Math.cos(y),\ny=b*Math.sin(y);s.x=v.x+(A*z.x+y*w.x);s.y=v.y+(A*z.y+y*w.y);s.z=v.z+(A*z.z+y*w.z);l.setXYZ(q,s.x,s.y,s.z);t.subVectors(s,v).normalize();n.setXYZ(q,t.x,t.y,t.z);u.x=p/c;u.y=m/d;h.setXY(q,u.x,u.y);q++}for(m=1;m<=c;m++)for(p=1;p<=d;p++)a=(d+1)*m+(p-1),b=(d+1)*m+p,e=(d+1)*(m-1)+p,k.setX(r,(d+1)*(m-1)+(p-1)),r++,k.setX(r,a),r++,k.setX(r,e),r++,k.setX(r,a),r++,k.setX(r,b),r++,k.setX(r,e),r++;this.setIndex(k);this.addAttribute(\"position\",l);this.addAttribute(\"normal\",n);this.addAttribute(\"uv\",h)};\nTHREE.TorusKnotBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.TorusKnotBufferGeometry.prototype.constructor=THREE.TorusKnotBufferGeometry;\nTHREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.type=\"TorusKnotGeometry\";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&&console.warn(\"THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.\");this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(a,b,c,d,e,f));this.mergeVertices()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);\nTHREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;\nTHREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.type=\"TubeGeometry\";this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e,taper:f};b=b||64;c=c||1;d=d||8;e=e||!1;f=f||THREE.TubeGeometry.NoTaper;var g=[],h,k,l=b+1,n,p,m,q,r,s=new THREE.Vector3,t,u,v;t=new THREE.TubeGeometry.FrenetFrames(a,b,e);u=t.normals;v=t.binormals;this.tangents=t.tangents;this.normals=u;this.binormals=v;for(t=0;t<l;t++)for(g[t]=[],n=t/(l-1),r=a.getPointAt(n),h=u[t],k=v[t],m=c*f(n),n=0;n<\nd;n++)p=n/d*2*Math.PI,q=-m*Math.cos(p),p=m*Math.sin(p),s.copy(r),s.x+=q*h.x+p*k.x,s.y+=q*h.y+p*k.y,s.z+=q*h.z+p*k.z,g[t][n]=this.vertices.push(new THREE.Vector3(s.x,s.y,s.z))-1;for(t=0;t<b;t++)for(n=0;n<d;n++)f=e?(t+1)%b:t+1,l=(n+1)%d,a=g[t][n],c=g[f][n],f=g[f][l],l=g[t][l],s=new THREE.Vector2(t/b,n/d),u=new THREE.Vector2((t+1)/b,n/d),v=new THREE.Vector2((t+1)/b,(n+1)/d),h=new THREE.Vector2(t/b,(n+1)/d),this.faces.push(new THREE.Face3(a,c,l)),this.faceVertexUvs[0].push([s,u,h]),this.faces.push(new THREE.Face3(c,\nf,l)),this.faceVertexUvs[0].push([u.clone(),v,h.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(a){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};\nTHREE.TubeGeometry.FrenetFrames=function(a,b,c){var d=new THREE.Vector3,e=[],f=[],g=[],h=new THREE.Vector3,k=new THREE.Matrix4;b+=1;var l,n,p;this.tangents=e;this.normals=f;this.binormals=g;for(l=0;l<b;l++)n=l/(b-1),e[l]=a.getTangentAt(n),e[l].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;l=Math.abs(e[0].x);n=Math.abs(e[0].y);p=Math.abs(e[0].z);l<=a&&(a=l,d.set(1,0,0));n<=a&&(a=n,d.set(0,1,0));p<=a&&d.set(0,0,1);h.crossVectors(e[0],d).normalize();f[0].crossVectors(e[0],\nh);g[0].crossVectors(e[0],f[0]);for(l=1;l<b;l++)f[l]=f[l-1].clone(),g[l]=g[l-1].clone(),h.crossVectors(e[l-1],e[l]),h.length()>Number.EPSILON&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[l-1].dot(e[l]),-1,1)),f[l].applyMatrix4(k.makeRotationAxis(h,d))),g[l].crossVectors(e[l],f[l]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),l=1;l<b;l++)f[l].applyMatrix4(k.makeRotationAxis(e[l],d*l)),g[l].crossVectors(e[l],f[l])};\nTHREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;b.uv=new THREE.Vector2(c,1-a);return b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);k.faces.push(d);t.copy(a).add(b).add(c).divideScalar(3);d=Math.atan2(t.z,-t.x);k.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function g(a,\nb){for(var c=Math.pow(2,b),d=e(k.vertices[a.a]),g=e(k.vertices[a.b]),h=e(k.vertices[a.c]),l=[],m=0;m<=c;m++){l[m]=[];for(var n=e(d.clone().lerp(h,m/c)),p=e(g.clone().lerp(h,m/c)),q=c-m,r=0;r<=q;r++)l[m][r]=0===r&&m===c?n:e(n.clone().lerp(p,r/q))}for(m=0;m<c;m++)for(r=0;r<2*(c-m)-1;r++)d=Math.floor(r/2),0===r%2?f(l[m][d+1],l[m+1][d],l[m][d]):f(l[m][d+1],l[m+1][d+1],l[m+1][d])}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,a.y));\nreturn a.clone()}THREE.Geometry.call(this);this.type=\"PolyhedronGeometry\";this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;for(var k=this,l=0,n=a.length;l<n;l+=3)e(new THREE.Vector3(a[l],a[l+1],a[l+2]));a=this.vertices;for(var p=[],m=l=0,n=b.length;l<n;l+=3,m++){var q=a[b[l]],r=a[b[l+1]],s=a[b[l+2]];p[m]=new THREE.Face3(q.index,r.index,s.index,[q.clone(),r.clone(),s.clone()])}for(var t=new THREE.Vector3,l=0,n=p.length;l<n;l++)g(p[l],d);l=0;for(n=this.faceVertexUvs[0].length;l<\nn;l++)b=this.faceVertexUvs[0][l],d=b[0].x,a=b[1].x,p=b[2].x,m=Math.max(d,a,p),q=Math.min(d,a,p),.9<m&&.1>q&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>p&&(b[2].x+=1));l=0;for(n=this.vertices.length;l<n;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;\nTHREE.DodecahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2,d=1/c;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,\n12,14,1,14,5,1,5,9],a,b);this.type=\"DodecahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;\nTHREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type=\"IcosahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type=\"OctahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;\nTHREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type=\"TetrahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;\nTHREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);this.type=\"ParametricGeometry\";this.parameters={func:a,slices:b,stacks:c};var d=this.vertices,e=this.faces,f=this.faceVertexUvs[0],g,h,k,l,n=b+1;for(g=0;g<=c;g++)for(l=g/c,h=0;h<=b;h++)k=h/b,k=a(k,l),d.push(k);var p,m,q,r;for(g=0;g<c;g++)for(h=0;h<b;h++)a=g*n+h,d=g*n+h+1,l=(g+1)*n+h+1,k=(g+1)*n+h,p=new THREE.Vector2(h/b,g/c),m=new THREE.Vector2((h+1)/b,g/c),q=new THREE.Vector2((h+1)/b,(g+1)/c),r=new THREE.Vector2(h/b,(g+1)/c),e.push(new THREE.Face3(a,\nd,k)),f.push([p,m,r]),e.push(new THREE.Face3(d,l,k)),f.push([m.clone(),q,r.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;\nTHREE.WireframeGeometry=function(a){function b(a,b){return a-b}THREE.BufferGeometry.call(this);var c=[0,0],d={},e=[\"a\",\"b\",\"c\"];if(a instanceof THREE.Geometry){var f=a.vertices,g=a.faces,h=0,k=new Uint32Array(6*g.length);a=0;for(var l=g.length;a<l;a++)for(var n=g[a],p=0;3>p;p++){c[0]=n[e[p]];c[1]=n[e[(p+1)%3]];c.sort(b);var m=c.toString();void 0===d[m]&&(k[2*h]=c[0],k[2*h+1]=c[1],d[m]=!0,h++)}c=new Float32Array(6*h);a=0;for(l=h;a<l;a++)for(p=0;2>p;p++)d=f[k[2*a+p]],h=6*a+3*p,c[h+0]=d.x,c[h+1]=d.y,\nc[h+2]=d.z;this.addAttribute(\"position\",new THREE.BufferAttribute(c,3))}else if(a instanceof THREE.BufferGeometry){if(null!==a.index){l=a.index.array;f=a.attributes.position;e=a.groups;h=0;0===e.length&&a.addGroup(0,l.length);k=new Uint32Array(2*l.length);g=0;for(n=e.length;g<n;++g){a=e[g];p=a.start;m=a.count;a=p;for(var q=p+m;a<q;a+=3)for(p=0;3>p;p++)c[0]=l[a+p],c[1]=l[a+(p+1)%3],c.sort(b),m=c.toString(),void 0===d[m]&&(k[2*h]=c[0],k[2*h+1]=c[1],d[m]=!0,h++)}c=new Float32Array(6*h);a=0;for(l=h;a<\nl;a++)for(p=0;2>p;p++)h=6*a+3*p,d=k[2*a+p],c[h+0]=f.getX(d),c[h+1]=f.getY(d),c[h+2]=f.getZ(d)}else for(f=a.attributes.position.array,h=f.length/3,k=h/3,c=new Float32Array(6*h),a=0,l=k;a<l;a++)for(p=0;3>p;p++)h=18*a+6*p,k=9*a+3*p,c[h+0]=f[k],c[h+1]=f[k+1],c[h+2]=f[k+2],d=9*a+(p+1)%3*3,c[h+3]=f[d],c[h+4]=f[d+1],c[h+5]=f[d+2];this.addAttribute(\"position\",new THREE.BufferAttribute(c,3))}};THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);\nTHREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry;THREE.AxisHelper=function(a){a=a||1;var b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.BufferAttribute(b,3));a.addAttribute(\"color\",new THREE.BufferAttribute(c,3));b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,a,b)};THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype);\nTHREE.AxisHelper.prototype.constructor=THREE.AxisHelper;\nTHREE.ArrowHelper=function(){var a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.Float32Attribute([0,0,0,0,1,0],3));var b=new THREE.CylinderBufferGeometry(0,.5,1,5,1);b.translate(0,-.5,0);return function(c,d,e,f,g,h){THREE.Object3D.call(this);void 0===f&&(f=16776960);void 0===e&&(e=1);void 0===g&&(g=.2*e);void 0===h&&(h=.2*g);this.position.copy(d);this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:f}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new THREE.Mesh(b,\nnew THREE.MeshBasicMaterial({color:f}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(c);this.setLength(e,g,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;\nTHREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,Math.max(0,a-b),1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};\nTHREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.copy(a);this.cone.material.color.copy(a)};THREE.BoxHelper=function(a,b){void 0===b&&(b=16776960);var c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),d=new Float32Array(24),e=new THREE.BufferGeometry;e.setIndex(new THREE.BufferAttribute(c,1));e.addAttribute(\"position\",new THREE.BufferAttribute(d,3));THREE.LineSegments.call(this,e,new THREE.LineBasicMaterial({color:b}));void 0!==a&&this.update(a)};\nTHREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;\nTHREE.BoxHelper.prototype.update=function(){var a=new THREE.Box3;return function(b){b instanceof THREE.Box3?a.copy(b):a.setFromObject(b);if(!a.isEmpty()){b=a.min;var c=a.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x;e[1]=c.y;e[2]=c.z;e[3]=b.x;e[4]=c.y;e[5]=c.z;e[6]=b.x;e[7]=b.y;e[8]=c.z;e[9]=c.x;e[10]=b.y;e[11]=c.z;e[12]=c.x;e[13]=c.y;e[14]=b.z;e[15]=b.x;e[16]=c.y;e[17]=b.z;e[18]=b.x;e[19]=b.y;e[20]=b.z;e[21]=c.x;e[22]=b.y;e[23]=b.z;d.needsUpdate=!0;this.geometry.computeBoundingSphere()}}}();\nTHREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};\nTHREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b(\"n1\",\"n2\",16755200);b(\"n2\",\"n4\",16755200);b(\"n4\",\"n3\",16755200);b(\"n3\",\"n1\",16755200);b(\"f1\",\"f2\",16755200);b(\"f2\",\"f4\",16755200);b(\"f4\",\"f3\",16755200);b(\"f3\",\"f1\",16755200);b(\"n1\",\"f1\",16755200);\nb(\"n2\",\"f2\",16755200);b(\"n3\",\"f3\",16755200);b(\"n4\",\"f4\",16755200);b(\"p\",\"n1\",16711680);b(\"p\",\"n2\",16711680);b(\"p\",\"n3\",16711680);b(\"p\",\"n4\",16711680);b(\"u1\",\"u2\",43775);b(\"u2\",\"u3\",43775);b(\"u3\",\"u1\",43775);b(\"c\",\"t\",16777215);b(\"p\",\"c\",3355443);b(\"cn1\",\"cn2\",3355443);b(\"cn3\",\"cn4\",3355443);b(\"cf1\",\"cf2\",3355443);b(\"cf3\",\"cf4\",3355443);THREE.LineSegments.call(this,d,e);this.camera=a;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=\n!1;this.pointMap=f;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;\nTHREE.CameraHelper.prototype.update=function(){function a(a,g,h,k){d.set(g,h,k).unproject(e);a=c[a];if(void 0!==a)for(g=0,h=a.length;g<h;g++)b.vertices[a[g]].copy(d)}var b,c,d=new THREE.Vector3,e=new THREE.Camera;return function(){b=this.geometry;c=this.pointMap;e.projectionMatrix.copy(this.camera.projectionMatrix);a(\"c\",0,0,-1);a(\"t\",0,0,1);a(\"n1\",-1,-1,-1);a(\"n2\",1,-1,-1);a(\"n3\",-1,1,-1);a(\"n4\",1,1,-1);a(\"f1\",-1,-1,1);a(\"f2\",1,-1,1);a(\"f3\",-1,1,1);a(\"f4\",1,1,1);a(\"u1\",.7,1.1,-1);a(\"u2\",-.7,1.1,\n-1);a(\"u3\",0,2,-1);a(\"cf1\",-1,0,1);a(\"cf2\",1,0,1);a(\"cf3\",0,-1,1);a(\"cf4\",0,1,1);a(\"cn1\",-1,0,-1);a(\"cn2\",1,0,-1);a(\"cn3\",0,-1,-1);a(\"cn4\",0,1,-1);b.verticesNeedUpdate=!0}}();\nTHREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;void 0===b&&(b=1);var c=new THREE.BufferGeometry;c.addAttribute(\"position\",new THREE.Float32Attribute([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));var d=new THREE.LineBasicMaterial({fog:!1});this.add(new THREE.Line(c,d));c=new THREE.BufferGeometry;c.addAttribute(\"position\",new THREE.Float32Attribute([0,0,0,0,0,1],3));this.add(new THREE.Line(c,\nd));this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;THREE.DirectionalLightHelper.prototype.dispose=function(){var a=this.children[0],b=this.children[1];a.geometry.dispose();a.material.dispose();b.geometry.dispose();b.material.dispose()};\nTHREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);var d=this.children[0],e=this.children[1];d.lookAt(c);d.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);e.lookAt(c);e.scale.z=c.length()}}();\nTHREE.EdgesHelper=function(a,b,c){b=void 0!==b?b:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(a.geometry,c),new THREE.LineBasicMaterial({color:b}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;\nTHREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=0;c=this.object.geometry;c instanceof THREE.Geometry?b=c.faces.length:console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(6*b,3);c.addAttribute(\"position\",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=\n!1;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;\nTHREE.FaceNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,f=this.object.geometry,g=f.vertices,f=f.faces,h=0,k=0,l=f.length;k<l;k++){var n=f[k],p=n.normal;a.copy(g[n.a]).add(g[n.b]).add(g[n.c]).divideScalar(3).applyMatrix4(d);b.copy(p).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);\ne.setXYZ(h,a.x,a.y,a.z);h+=1;e.setXYZ(h,b.x,b.y,b.z);h+=1}e.needsUpdate=!0;return this}}();\nTHREE.GridHelper=function(a,b,c,d){c=new THREE.Color(void 0!==c?c:4473924);d=new THREE.Color(void 0!==d?d:8947848);for(var e=[],f=[],g=-a,h=0;g<=a;g+=b){e.push(-a,0,g,a,0,g);e.push(g,0,-a,g,0,a);var k=0===g?c:d;k.toArray(f,h);h+=3;k.toArray(f,h);h+=3;k.toArray(f,h);h+=3;k.toArray(f,h);h+=3}a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.Float32Attribute(e,3));a.addAttribute(\"color\",new THREE.Float32Attribute(f,3));e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,\na,e)};THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(){console.error(\"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\")};\nTHREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.rotateX(-Math.PI/2);for(var d=0;8>d;d++)c.faces[d].color=this.colors[4>d?0:1];d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(c,d);this.add(this.lightSphere);this.update()};\nTHREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};\nTHREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();\nTHREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereBufferGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;\nTHREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};\nTHREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)this.bones[c].parent instanceof THREE.Bone&&(b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(0,0,1)),b.colors.push(new THREE.Color(0,1,0)));b.dynamic=!0;c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.LineSegments.call(this,b,c);this.root=a;this.matrix=a.matrixWorld;\nthis.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return b};\nTHREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),c=new THREE.Matrix4,d=0,e=0;e<this.bones.length;e++){var f=this.bones[e];f.parent instanceof THREE.Bone&&(c.multiplyMatrices(b,f.matrixWorld),a.vertices[d].setFromMatrixPosition(c),c.multiplyMatrices(b,f.parent.matrixWorld),a.vertices[d+1].setFromMatrixPosition(c),d+=2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};\nTHREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.BufferGeometry;for(var b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],c=0,d=1;32>c;c++,d++){var e=c/32*Math.PI*2,f=d/32*Math.PI*2;b.push(Math.cos(e),Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute(\"position\",new THREE.Float32Attribute(b,3));b=new THREE.LineBasicMaterial({fog:!1});this.cone=new THREE.LineSegments(a,\nb);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};\nTHREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E3,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();\nTHREE.VertexNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;c=this.object.geometry;c instanceof THREE.Geometry?b=3*c.faces.length:c instanceof THREE.BufferGeometry&&(b=c.attributes.normal.count);c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(6*b,3);c.addAttribute(\"position\",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()};\nTHREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;\nTHREE.VertexNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){var d=[\"a\",\"b\",\"c\"];this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld,f=this.geometry.attributes.position,g=this.object.geometry;if(g instanceof THREE.Geometry)for(var h=g.vertices,k=g.faces,l=g=0,n=k.length;l<n;l++)for(var p=k[l],m=0,q=p.vertexNormals.length;m<q;m++){var r=p.vertexNormals[m];a.copy(h[p[d[m]]]).applyMatrix4(e);\nb.copy(r).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);f.setXYZ(g,a.x,a.y,a.z);g+=1;f.setXYZ(g,b.x,b.y,b.z);g+=1}else if(g instanceof THREE.BufferGeometry)for(d=g.attributes.position,h=g.attributes.normal,m=g=0,q=d.count;m<q;m++)a.set(d.getX(m),d.getY(m),d.getZ(m)).applyMatrix4(e),b.set(h.getX(m),h.getY(m),h.getZ(m)),b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),f.setXYZ(g,a.x,a.y,a.z),g+=1,f.setXYZ(g,b.x,b.y,b.z),g+=1;f.needsUpdate=!0;return this}}();\nTHREE.WireframeHelper=function(a,b){var c=void 0!==b?b:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(a.geometry),new THREE.LineBasicMaterial({color:c}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(a){THREE.Object3D.call(this);this.material=a;this.render=function(a){}};\nTHREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation(\"__default\",0,c-1,c/1);this.setAnimationWeight(\"__default\",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;\nTHREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={start:b,end:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\\d+)/i,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var k=h[1];d[k]||(d[k]={start:Infinity,end:-Infinity});h=d[k];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=k)}}for(k in d)h=d[k],this.createAnimation(k,h.start,h.end,a);this.firstAnimation=c};\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};\nTHREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};\nTHREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn(\"THREE.MorphBlendMesh: animation[\"+a+\"] undefined in .playAnimation()\")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};\nTHREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.start+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&\n(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);d.currentFrame!==d.lastFrame?(this.morphTargetInfluences[d.currentFrame]=e*g,this.morphTargetInfluences[d.lastFrame]=(1-e)*g):this.morphTargetInfluences[d.currentFrame]=g}}};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/three.min.js\n ** module id = 18\n ** module chunks = 0 1\n **/","/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\n\nvar TWEEN = TWEEN || (function () {\n\n\tvar _tweens = [];\n\n\treturn {\n\n\t\tgetAll: function () {\n\n\t\t\treturn _tweens;\n\n\t\t},\n\n\t\tremoveAll: function () {\n\n\t\t\t_tweens = [];\n\n\t\t},\n\n\t\tadd: function (tween) {\n\n\t\t\t_tweens.push(tween);\n\n\t\t},\n\n\t\tremove: function (tween) {\n\n\t\t\tvar i = _tweens.indexOf(tween);\n\n\t\t\tif (i !== -1) {\n\t\t\t\t_tweens.splice(i, 1);\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function (time, preserve) {\n\n\t\t\tif (_tweens.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\n\t\t\ttime = time !== undefined ? time : TWEEN.now();\n\n\t\t\twhile (i < _tweens.length) {\n\n\t\t\t\tif (_tweens[i].update(time) || preserve) {\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\t_tweens.splice(i, 1);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\t};\n\n})();\n\n\n// Include a performance.now polyfill\n(function () {\n\t// In node.js, use process.hrtime.\n\tif (this.window === undefined && this.process !== undefined) {\n\t\tTWEEN.now = function () {\n\t\t\tvar time = process.hrtime();\n\n\t\t\t// Convert [seconds, microseconds] to milliseconds.\n\t\t\treturn time[0] * 1000 + time[1] / 1000;\n\t\t};\n\t}\n\t// In a browser, use window.performance.now if it is available.\n\telse if (this.window !== undefined &&\n\t         window.performance !== undefined &&\n\t\t window.performance.now !== undefined) {\n\n\t\t// This must be bound, because directly assigning this function\n\t\t// leads to an invocation exception in Chrome.\n\t\tTWEEN.now = window.performance.now.bind(window.performance);\n\t}\n\t// Use Date.now if it is available.\n\telse if (Date.now !== undefined) {\n\t\tTWEEN.now = Date.now;\n\t}\n\t// Otherwise, use 'new Date().getTime()'.\n\telse {\n\t\tTWEEN.now = function () {\n\t\t\treturn new Date().getTime();\n\t\t};\n\t}\n})();\n\n\nTWEEN.Tween = function (object) {\n\n\tvar _object = object;\n\tvar _valuesStart = {};\n\tvar _valuesEnd = {};\n\tvar _valuesStartRepeat = {};\n\tvar _duration = 1000;\n\tvar _repeat = 0;\n\tvar _yoyo = false;\n\tvar _isPlaying = false;\n\tvar _reversed = false;\n\tvar _delayTime = 0;\n\tvar _startTime = null;\n\tvar _easingFunction = TWEEN.Easing.Linear.None;\n\tvar _interpolationFunction = TWEEN.Interpolation.Linear;\n\tvar _chainedTweens = [];\n\tvar _onStartCallback = null;\n\tvar _onStartCallbackFired = false;\n\tvar _onUpdateCallback = null;\n\tvar _onCompleteCallback = null;\n\tvar _onStopCallback = null;\n\n\t// Set all starting values present on the target object\n\tfor (var field in object) {\n\t\t_valuesStart[field] = parseFloat(object[field], 10);\n\t}\n\n\tthis.to = function (properties, duration) {\n\n\t\tif (duration !== undefined) {\n\t\t\t_duration = duration;\n\t\t}\n\n\t\t_valuesEnd = properties;\n\n\t\treturn this;\n\n\t};\n\n\tthis.start = function (time) {\n\n\t\tTWEEN.add(this);\n\n\t\t_isPlaying = true;\n\n\t\t_onStartCallbackFired = false;\n\n\t\t_startTime = time !== undefined ? time : TWEEN.now();\n\t\t_startTime += _delayTime;\n\n\t\tfor (var property in _valuesEnd) {\n\n\t\t\t// Check if an Array was provided as property value\n\t\t\tif (_valuesEnd[property] instanceof Array) {\n\n\t\t\t\tif (_valuesEnd[property].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\t_valuesEnd[property] = [_object[property]].concat(_valuesEnd[property]);\n\n\t\t\t}\n\n\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t// we should not set that property in the object\n\t\t\tif (_valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t_valuesStart[property] = _object[property];\n\n\t\t\tif ((_valuesStart[property] instanceof Array) === false) {\n\t\t\t\t_valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t}\n\n\t\t\t_valuesStartRepeat[property] = _valuesStart[property] || 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.stop = function () {\n\n\t\tif (!_isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tTWEEN.remove(this);\n\t\t_isPlaying = false;\n\n\t\tif (_onStopCallback !== null) {\n\t\t\t_onStopCallback.call(_object);\n\t\t}\n\n\t\tthis.stopChainedTweens();\n\t\treturn this;\n\n\t};\n\n\tthis.stopChainedTweens = function () {\n\n\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t_chainedTweens[i].stop();\n\t\t}\n\n\t};\n\n\tthis.delay = function (amount) {\n\n\t\t_delayTime = amount;\n\t\treturn this;\n\n\t};\n\n\tthis.repeat = function (times) {\n\n\t\t_repeat = times;\n\t\treturn this;\n\n\t};\n\n\tthis.yoyo = function (yoyo) {\n\n\t\t_yoyo = yoyo;\n\t\treturn this;\n\n\t};\n\n\n\tthis.easing = function (easing) {\n\n\t\t_easingFunction = easing;\n\t\treturn this;\n\n\t};\n\n\tthis.interpolation = function (interpolation) {\n\n\t\t_interpolationFunction = interpolation;\n\t\treturn this;\n\n\t};\n\n\tthis.chain = function () {\n\n\t\t_chainedTweens = arguments;\n\t\treturn this;\n\n\t};\n\n\tthis.onStart = function (callback) {\n\n\t\t_onStartCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.onUpdate = function (callback) {\n\n\t\t_onUpdateCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.onComplete = function (callback) {\n\n\t\t_onCompleteCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.onStop = function (callback) {\n\n\t\t_onStopCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.update = function (time) {\n\n\t\tvar property;\n\t\tvar elapsed;\n\t\tvar value;\n\n\t\tif (time < _startTime) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (_onStartCallbackFired === false) {\n\n\t\t\tif (_onStartCallback !== null) {\n\t\t\t\t_onStartCallback.call(_object);\n\t\t\t}\n\n\t\t\t_onStartCallbackFired = true;\n\n\t\t}\n\n\t\telapsed = (time - _startTime) / _duration;\n\t\telapsed = elapsed > 1 ? 1 : elapsed;\n\n\t\tvalue = _easingFunction(elapsed);\n\n\t\tfor (property in _valuesEnd) {\n\n\t\t\t// Don't update properties that do not exist in the source object\n\t\t\tif (_valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar start = _valuesStart[property] || 0;\n\t\t\tvar end = _valuesEnd[property];\n\n\t\t\tif (end instanceof Array) {\n\n\t\t\t\t_object[property] = _interpolationFunction(end, value);\n\n\t\t\t} else {\n\n\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\tif (typeof (end) === 'string') {\n\n\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\tend = start + parseFloat(end, 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tend = parseFloat(end, 10);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Protect against non numeric properties.\n\t\t\t\tif (typeof (end) === 'number') {\n\t\t\t\t\t_object[property] = start + (end - start) * value;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (_onUpdateCallback !== null) {\n\t\t\t_onUpdateCallback.call(_object, value);\n\t\t}\n\n\t\tif (elapsed === 1) {\n\n\t\t\tif (_repeat > 0) {\n\n\t\t\t\tif (isFinite(_repeat)) {\n\t\t\t\t\t_repeat--;\n\t\t\t\t}\n\n\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\tfor (property in _valuesStartRepeat) {\n\n\t\t\t\t\tif (typeof (_valuesEnd[property]) === 'string') {\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesStartRepeat[property] + parseFloat(_valuesEnd[property], 10);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_yoyo) {\n\t\t\t\t\t\tvar tmp = _valuesStartRepeat[property];\n\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesEnd[property];\n\t\t\t\t\t\t_valuesEnd[property] = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\t_valuesStart[property] = _valuesStartRepeat[property];\n\n\t\t\t\t}\n\n\t\t\t\tif (_yoyo) {\n\t\t\t\t\t_reversed = !_reversed;\n\t\t\t\t}\n\n\t\t\t\t_startTime = time + _delayTime;\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\tif (_onCompleteCallback !== null) {\n\t\t\t\t\t_onCompleteCallback.call(_object);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\t\t_chainedTweens[i].start(_startTime + _duration);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n};\n\n\nTWEEN.Easing = {\n\n\tLinear: {\n\n\t\tNone: function (k) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - TWEEN.Easing.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\nTWEEN.Interpolation = {\n\n\tLinear: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.Linear;\n\n\t\tif (k < 0) {\n\t\t\treturn fn(v[0], v[1], f);\n\t\t}\n\n\t\tif (k > 1) {\n\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t}\n\n\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\n\t},\n\n\tBezier: function (v, k) {\n\n\t\tvar b = 0;\n\t\tvar n = v.length - 1;\n\t\tvar pw = Math.pow;\n\t\tvar bn = TWEEN.Interpolation.Utils.Bernstein;\n\n\t\tfor (var i = 0; i <= n; i++) {\n\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t}\n\n\t\treturn b;\n\n\t},\n\n\tCatmullRom: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n\t\tif (v[0] === v[m]) {\n\n\t\t\tif (k < 0) {\n\t\t\t\ti = Math.floor(f = m * (1 + k));\n\t\t\t}\n\n\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\n\t\t} else {\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t}\n\n\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\n\t\t}\n\n\t},\n\n\tUtils: {\n\n\t\tLinear: function (p0, p1, t) {\n\n\t\t\treturn (p1 - p0) * t + p0;\n\n\t\t},\n\n\t\tBernstein: function (n, i) {\n\n\t\t\tvar fc = TWEEN.Interpolation.Utils.Factorial;\n\n\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\n\t\t},\n\n\t\tFactorial: (function () {\n\n\t\t\tvar a = [1];\n\n\t\t\treturn function (n) {\n\n\t\t\t\tvar s = 1;\n\n\t\t\t\tif (a[n]) {\n\t\t\t\t\treturn a[n];\n\t\t\t\t}\n\n\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\ts *= i;\n\t\t\t\t}\n\n\t\t\t\ta[n] = s;\n\t\t\t\treturn s;\n\n\t\t\t};\n\n\t\t})(),\n\n\t\tCatmullRom: function (p0, p1, p2, p3, t) {\n\n\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\n\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (- 3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n};\n\n// UMD (Universal Module Definition)\n(function (root) {\n\n\tif (typeof define === 'function' && define.amd) {\n\n\t\t// AMD\n\t\tdefine([], function () {\n\t\t\treturn TWEEN;\n\t\t});\n\n\t} else if (typeof module !== 'undefined' && typeof exports === 'object') {\n\n\t\t// Node.js\n\t\tmodule.exports = TWEEN;\n\n\t} else if (root !== undefined) {\n\n\t\t// Global variable\n\t\troot.TWEEN = TWEEN;\n\n\t}\n\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tween.js/src/Tween.js\n ** module id = 19\n ** module chunks = 0 1\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\n(function () {\n    try {\n        cachedSetTimeout = setTimeout;\n    } catch (e) {\n        cachedSetTimeout = function () {\n            throw new Error('setTimeout is not defined');\n        }\n    }\n    try {\n        cachedClearTimeout = clearTimeout;\n    } catch (e) {\n        cachedClearTimeout = function () {\n            throw new Error('clearTimeout is not defined');\n        }\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 20\n ** module chunks = 0 1\n **/","var THREE = require('./three.min.js');\n\nmodule.exports = function(maps, mapObjects, $){ // $ is used for loading svg (creating ghost canvas)\n    //usedForLoad는 IMC.load()에서 사용하고 있는지 아닌지를 나타내는 boolean load에서 사용하는 중이라면 scaleFactor를 적용X\n    //image를 불러오는것이 asynchronous이기 때문에 maps와 mapObjects를 따로 필요하다.\n    //TODO spray를 추가했다가 바로즉시 삭제하려는 경우 에러가 날 수 있다.\n    return function(position, userOpts, currentFloor, usedForLoad){\n        var self = {};\n\n        //====================== options verification ====================\n        var defaultOpts = {\n            image: \"./brand-images/zara.png\",\n            size:null,\n            anchor:null,\n            floor:currentFloor\n        };\n        var optionCheckMap = {\n            image:[String,'string'],\n            size:[Array,'array'],\n            anchor:[Array,'array'],\n            floor:[String,'string']\n        };\n        var opts = defaultOpts;\n        if(userOpts){\n            for(var key in userOpts){\n                if(optionCheckMap[key]){\n                    if(userOpts[key].constructor != optionCheckMap[key][0]){\n                        console.error('옵션 값(key:'+key+')의 타입이 잘못돼었습니다.'+\n                            (typeof userOpts[key])+' => '+optionCheckMap[key][1]+'로 바꾸어주세요');\n                    }\n                }else{\n                    printErrType('OPTION');\n                    console.error('사용할 수 없는 옵션 키 값('+key+')이 포함되어 있습니다.');\n                }\n            }\n            $.extend(opts,userOpts);\n        }\n\n        //==================== create threeJS object ====================\n        if(opts.image.match(/.svg$/g)){\n            //svg\n            var $ghostCanvas = $(\"<canvas></canvas>\");\n            var ghostCanvas = $ghostCanvas[0];\n            var ctx = ghostCanvas.getContext('2d');\n            var img = new Image();\n            img.onload = function(){\n                ghostCanvas.width = img.width;\n                ghostCanvas.height = img.height;\n                ctx.drawImage(img, 0, 0);\n                new THREE.TextureLoader().load(ghostCanvas.toDataURL(), applyTexture);\n            };\n            img.src = opts.image;\n        }else{\n            //image\n            new THREE.TextureLoader().load(opts.image, applyTexture);\n        }\n        function applyTexture(texture){\n            texture.minFilter = THREE.LinearFilter;\n            var iw = texture.image.width;\n            var ih = texture.image.height;\n            var ir = ih/iw;\n\n            //adjustment of size, anchor, position\n            var scaleFactor = (usedForLoad)? 1 : maps[opts.floor].scaleFactor; //load에서 사용중이라면 scaleFactor가 이미 적용돼있다.\n            var size = [0,0];\n            if(opts.size){\n                if(opts.size[1]){\n                    size = [opts.size[0]/scaleFactor, opts.size[1]/scaleFactor];\n                }else{\n                    //세로 길이가 없다면 알아서 이미지 비율대로 맞춰준다.\n                    size = [opts.size[0]/scaleFactor, opts.size[0]*ir/scaleFactor];\n                }\n            }else{\n                size = [iw/scaleFactor, ih/scaleFactor];\n            }\n\n            var anchor = (opts.anchor)? [opts.anchor[0]/scaleFactor, opts.anchor[1]/scaleFactor]\n                :[size[0]/2, size[1]/2];\n            for(var i=0; i<position.length; i++){\n                position[i] = position[i]/scaleFactor + 0.05;\n            }\n            if(!position[2]) position[2] = 0.05;\n\n            //create spray object\n            var sprayGeom = new THREE.PlaneGeometry(size[0],size[1]);\n            var sprayMaterial = new THREE.MeshBasicMaterial({\n                map:texture,\n                transparent:true\n            });\n            var sprayMesh = new THREE.Mesh(sprayGeom, sprayMaterial);\n            sprayMesh.rotation.x = -Math.PI/2;\n            sprayMesh.position.x = position[0] + size[0]/2 - anchor[0];\n            sprayMesh.position.z = position[1] + size[1]/2 - anchor[1];\n            sprayMesh.position.y = position[2];\n\n            self.sprayMesh = sprayMesh;\n            mapObjects[opts.floor].getObjectByName('sprays').add(sprayMesh);\n        }\n\n        return self;\n\n        //==================== helpers ======================\n        function printErrType(type){\n            switch(type){\n                case 'OPTION':\n                    console.error('--- IndoorMap.setSpray() 옵션 에러 ---');\n                    break;\n                case 'LOAD':\n                    break;\n            }\n        }\n    };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IndoorMap_spray.js\n ** module id = 21\n ** module chunks = 0 1\n **/","var THREE = require('./three.min.js');\nmodule.exports = function(maps, mapObjects, TWEEN){\n    //required blockProps : id, height, color, parentFloor, points\n    //optional blockProps : spray\n    //created blockProps : blockMesh\n    return function(blockIdx, blockData, floorId, floorData){\n        var self = {};\n        //required props\n        self.id = (blockData.id)? blockData.id : floorId+'_'+blockIdx;\n        self.originalHeight = (blockData.height)?blockData.height:floorData.defaultBlockHeight;\n        self.height = self.originalHeight;\n        self.originalColor = (blockData.color)?parseInt(blockData.color):parseInt(floorData.defaultBlockColor);\n        self.color = self.originalColor;\n        self.originalOpacity = (blockData.opacity)?blockData.opacity:\n            (floorData.defaultOpacity)?floorData.defaultBlockOpacity:1;\n        self.opacity = self.originalOpacity;\n        self.parentFloor = floorData.floor;\n        self.parentObject = mapObjects[self.parentFloor].getObjectByName('blocks');\n        self.points = blockData.points;\n        //optional props\n        self.spray = null;\n        //creating props\n        self.boundary = {\n            minX:9999999999,minZ:9999999999,maxX:0,maxZ:0\n        };\n        self.blockMesh = createBlockMesh(blockData.points, self.originalHeight, self.originalColor, self.originalOpacity, blockData.data, true);\n        self.heightTween = new TWEEN.Tween();\n        self.colorTween = new TWEEN.Tween();\n        self.opacityTween = new TWEEN.Tween();\n\n        self.parentObject.add(self.blockMesh);\n\n        //methods for internal\n        self.setSpray = function(newSpray){\n            self.spray = newSpray;\n        };\n\n        //methods for consumer\n        self.setData = function(data){\n            blockData.data = data;\n            self.blockMesh.data = data;\n        };\n        self.setOpacity = function(opacity, duration){\n            self.opacityTween.stop();\n            if(!duration){\n                self.opacity = opacity;\n                rerenderBlock();\n            }else{\n                self.opacityTween = new TWEEN\n                    .Tween({opacity:self.opacity})\n                    .to({opacity:opacity}, duration)\n                    .onUpdate(function(){\n                        self.opacity = this.opacity;\n                        rerenderBlock();\n                    });\n                self.opacityTween.start();\n            }\n        };\n        self.restoreOpacity = function(duration){\n            if(!duration){\n                self.opacityTween.stop();\n                rerenderBlock();\n            }else{\n                self.opacityTween = new TWEEN\n                    .Tween({opacity:self.opacity})\n                    .to({opacity:self.originalOpacity}, duration)\n                    .onUpdate(function(){\n                        self.opacity = this.opacity;\n                        rerenderBlock();\n                    });\n                self.opacityTween.start();\n            }\n        };\n        self.setColor = function(color,duration){\n            color = parseInt(color);\n            self.colorTween.stop();\n            if(!duration){\n                self.color = color;\n                rerenderBlock();\n            }else{\n                self.colorTween = new TWEEN\n                    .Tween(sliceColorCode(self.color))\n                    .to(sliceColorCode(color),duration)\n                    .onUpdate(function(){\n                        self.color = mergeColorCode(this);\n                        rerenderBlock();\n                    });\n                self.colorTween.start();\n            }\n        };\n        self.restoreColor = function(duration){\n            self.colorTween.stop();\n            if(!duration){\n                self.color = self.originalColor;\n                rerenderBlock();\n            }else{\n                self.colorTween = new TWEEN\n                    .Tween(sliceColorCode(self.color))\n                    .to(sliceColorCode(self.originalColor),duration)\n                    .onUpdate(function(){\n                        self.color = mergeColorCode(this);\n                        rerenderBlock();\n                    });\n                self.colorTween.start();\n            }\n        };\n        self.setHeight = function(height,duration){\n            self.heightTween.stop();\n            if(!duration){\n                self.height = height/floorData.scaleFactor;\n                rerenderBlock();\n            }else{\n                self.heightTween = new TWEEN\n                    .Tween({ blockHeight: self.height })\n                    .to({ blockHeight: height/floorData.scaleFactor }, duration)\n                    .onUpdate(function(){\n                        self.height = this.blockHeight;\n                        rerenderBlock();\n                    });\n                self.heightTween.start();\n            }\n        };\n        self.restoreHeight = function(duration){\n            self.heightTween.stop();\n            if(!duration){\n                self.height = self.originalHeight;\n                rerenderBlock();\n            }else{\n                self.heightTween = new TWEEN\n                    .Tween({ blockHeight: self.height })\n                    .to({ blockHeight: self.originalHeight }, duration)\n                    .onUpdate(function(){\n                        self.height = this.blockHeight;\n                        rerenderBlock();\n                    });\n                self.heightTween.start();\n            }\n        };\n        self.on = function(eventName, handler){\n            switch(eventName){\n                case 'mouseover':\n                    setMouseOverHandler(handler);\n                    break;\n                case 'mouseout':\n                    setMouseOutHandler(handler);\n                    break;\n                case 'click':\n                    setClickHandler(handler);\n                    break;\n            }\n        };\n\n\n        function setMouseOverHandler(handler){\n            self.onMouseOver = function(){\n                handler.apply(self,[blockData.data]);\n            };\n        }\n        function setMouseOutHandler(handler){\n            self.onMouseOut = function(){\n                handler.apply(self,[blockData.data]);\n            };\n        }\n        function setClickHandler(handler){\n            self.onClick = function(){\n                handler.apply(self,[blockData.data]);\n            };\n        }\n\n        //---------- helpers ----------\n        function rerenderBlock(){\n            self.parentObject.remove(self.blockMesh);\n            self.blockMesh = createBlockMesh(blockData.points, self.height, self.color, self.opacity, blockData.data, false);\n            self.parentObject.add(self.blockMesh);\n            if(self.spray) self.spray.sprayMesh.position.y = self.height+0.05;\n        }\n        function createBlockMesh(points, height, color, opacity, data, shouldResetBoundary){\n            var blockShape = new THREE.Shape();\n            var extrudeSettings = {\n                amount:height,\n                bevelEnabled:false\n            };\n            //draw a block\n            var x0 = points[0][0];\n            var z0 = points[0][1];\n            if(shouldResetBoundary) resetBoundary(self.boundary,x0,z0);\n            blockShape.moveTo(x0,z0);\n            for(var k=1;k<points.length;k++){\n                var x = points[k][0];\n                var z = points[k][1];\n                if(shouldResetBoundary) resetBoundary(self.boundary,x,z);\n                blockShape.lineTo(x,z);\n            }\n            if(shouldResetBoundary){\n                resetBoundary(floorData.boundary,self.boundary.minX,self.boundary.minZ);\n                resetBoundary(floorData.boundary,self.boundary.maxX,self.boundary.maxZ);\n            }\n            blockShape.lineTo(x0,z0);\n\n            var blockGeom = new THREE.ExtrudeGeometry(blockShape,extrudeSettings);\n            if(opacity && opacity < 1){\n                var blockMaterial = new THREE.MeshLambertMaterial({\n                    color:color,\n                    transparent:true,\n                    opacity:opacity\n                });\n            }else{\n                var blockMaterial = new THREE.MeshLambertMaterial({\n                    color:color\n                });\n            }\n            var blockMesh = new THREE.Mesh(blockGeom, blockMaterial);\n            if(data) blockMesh.data = data;\n            blockMesh.blockObject = self;\n\n            blockMesh.rotation.x = Math.PI/2;\n            blockMesh.position.y = height;\n\n            return blockMesh;\n        }\n        function sliceColorCode(hexNum){\n            //separate to R, G, B\n            var result = {};\n            result.b = hexNum % 0x100;\n            result.g = ((hexNum % 0x10000) - result.b)/0x100;\n            result.r = (hexNum - (result.b + result.g))/0x10000;\n            return result;\n        }\n        function mergeColorCode(sliced){\n            var result = Math.round(sliced.r) * 0x10000 + Math.round(sliced.g) * 0x100 + Math.round(sliced.b);\n            if(result > 0xFFFFFF) result = 0xFFFFFF;\n            return result;\n        }\n        function resetBoundary(b,x,z){\n            b.minX=(x<b.minX)?x:b.minX;\n            b.minZ=(z<b.minZ)?z:b.minZ;\n            b.maxX=(x>b.maxX)?x:b.maxX;\n            b.maxZ=(z>b.maxZ)?z:b.maxZ;\n        }\n        return self;\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IndoorMap_block.js\n ** module id = 22\n ** module chunks = 0 1\n **/","/**\n *  implement scaleFactor (prevents z-buffer quirks), polygon offset (blockPadding)\n */\nvar Offset = require('polygon-offset');\nmodule.exports = function(mapData,$){\n    var floors = mapData.floors;\n    for(var i=0; i<floors.length; i++){\n        var scaleFactor = 1;\n        var floor = floors[i];\n        var blocks = floor.blocks;\n        var floorBoundary = {\n            minX:9999999999,minZ:9999999999,maxX:0,maxZ:0\n        };\n        //boundary산출 및 중복 포인트 제거\n        for(var j=0; j<blocks.length; j++){\n            var block = blocks[j];\n            var points = block.points;\n            var indexesToBeRemoved = [];\n            for(var k=0; k<points.length; k++){\n                var point = points[k];\n                var nextPoint = (k==points.length-1)?points[0]:points[k+1];\n                if(point[0] == nextPoint[0] && point[1] == nextPoint[1]){\n                    indexesToBeRemoved.push(k);\n                }\n                resetBoundary(floorBoundary,point[0], point[1]);\n            }\n            while(indexesToBeRemoved.length != 0){\n                console.log('inWhile');\n                var idx = indexesToBeRemoved.pop();\n                points.splice(idx,1);\n            }\n        }\n\n        var maxBoundaryDist = Math.max(floorBoundary.maxX-floorBoundary.minX, floorBoundary.maxZ-floorBoundary.minZ);\n        if(maxBoundaryDist > 100){\n            //boundary의 최장변의 길이가 100이 되도록한다.\n            scaleFactor = maxBoundaryDist / 100;\n            floor.basePlateHeight /= scaleFactor;\n            floor.basePlateOffset /= scaleFactor;\n            floor.defaultBlockHeight /= scaleFactor;\n            if(floor.defaultBlockPadding) floor.defaultBlockPadding /= scaleFactor;\n            for(var j=0; j<blocks.length; j++){\n                var block = blocks[j];\n                if(block.height) block.height /= scaleFactor;\n                if(block.padding) block.padding /= scaleFactor;\n                if(block.sprayOffset) {\n                    block.sprayOffset[0]/=scaleFactor; block.sprayOffset[1]/=scaleFactor;\n                }\n                var points = block.points;\n                for(var k=0; k<points.length; k++){\n                    var point = points[k];\n                    point[0] /= scaleFactor;\n                    point[1] /= scaleFactor;\n                }\n            }\n        }\n        floor.scaleFactor = scaleFactor;\n\n        //set blockPadding\n        var toBeRemovedBlocks = [];\n        var toBeAddedBlocks = [];\n        for(var j=0; j<blocks.length; j++){\n            var block = blocks[j];\n            var padding = null;\n            if(floor.defaultBlockPadding) padding = floor.defaultBlockPadding;\n            if(block.padding) padding = block.padding;\n            var points = block.points;\n            if(padding){\n                var pointsClone = [];\n                //deep copy of Array\n                for(var k=0;k<points.length;k++){\n                    pointsClone.push([points[k][0],points[k][1]]);\n                }\n                pointsClone.push([pointsClone[0][0],pointsClone[0][1]]); //for Offset compatibility\n                //apply padding\n                var paddedPoints = null;\n                try{\n                    var offset = new Offset();\n                    paddedPoints = offset.data(pointsClone).padding(padding);\n                }catch(e){\n                    console.error('mapData에러 : blockPadding이 너무커서 사라지는 블록이 있습니다.\\n'\n                        +\"        위치 : Floor(floor='\"+floor.floor+\"').blocks[\"+j+\"]\");\n                }\n\n                if(paddedPoints){\n                    if(paddedPoints.length == 0){\n                        console.error('mapData에러 : blockPadding이 너무커서 사라지는 블록이 있습니다.\\n'\n                            +\"        위치 : Floor(floor='\"+floor.floor+\"').blocks[\"+j+\"]\");\n                        toBeRemovedBlocks.push(j);\n                    }else if(paddedPoints.length > 1){\n                        console.error('mapData에러 : blockPadding이 너무커서 '+paddedPoints.length+'개로 쪼개지는 블록이 있습니다.\\n'\n                            +\"        위치 : Floor(floor='\"+floor.floor+\"').blocks[\"+j+\"]\");\n                        toBeRemovedBlocks.push(j);\n                        for(var k=0; k<paddedPoints.length; k++){\n                            var toBeAddedBlock = $.extend({},block);\n                            toBeAddedBlock.points = paddedPoints[k];\n                            toBeAddedBlock.points.pop();\n                            toBeAddedBlocks.push(toBeAddedBlock);\n                        }\n                    }else{\n                        block.points = paddedPoints[0];\n                        block.points.pop();\n                    }\n                }\n            }\n        }\n        while(toBeRemovedBlocks.length!=0){\n            var idx = toBeRemovedBlocks.pop();\n            block.points.splice(idx,1);\n        }\n        while(toBeAddedBlocks.length!=0){\n            var toBeAddedBlock = toBeAddedBlocks.shift();\n            blocks.push(toBeAddedBlock);\n        }\n    }\n    //=================helpers==================\n    function resetBoundary(boundary,x,z){\n        boundary.minX=(x<boundary.minX)?x:boundary.minX;\n        boundary.minZ=(z<boundary.minZ)?z:boundary.minZ;\n        boundary.maxX=(x>boundary.maxX)?x:boundary.maxX;\n        boundary.maxZ=(z>boundary.maxZ)?z:boundary.maxZ;\n    }\n    return mapData;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IndoorMap_preprocessor.js\n ** module id = 23\n ** module chunks = 0 1\n **/","var Edge     = require('./edge');\nvar martinez = require('martinez-polygon-clipping');\nvar utils    = require('./utils');\n\n\nvar isArray     = utils.isArray;\nvar equals      = utils.equals;\nvar orientRings = utils.orientRings;\n\n\n/**\n * Offset builder\n *\n * @param {Array.<Object>=} vertices\n * @param {Number=}        arcSegments\n * @constructor\n */\nfunction Offset(vertices, arcSegments) {\n\n  /**\n   * @type {Array.<Object>}\n   */\n  this.vertices = null;\n\n  /**\n   * @type {Array.<Edge>}\n   */\n  this.edges = null;\n\n  /**\n   * @type {Boolean}\n   */\n  this._closed = false;\n\n\n  /**\n   * @type {Number}\n   */\n  this._distance = 0;\n\n  if (vertices) {\n    this.data(vertices);\n  }\n\n  /**\n   * Segments in edge bounding arches\n   * @type {Number}\n   */\n  this._arcSegments = arcSegments !== undefined ? arcSegments : 5;\n}\n\n/**\n * Change data set\n * @param  {Array.<Array>} vertices\n * @return {Offset}\n */\nOffset.prototype.data = function(vertices) {\n  this._edges = [];\n  if (!isArray (vertices)) {\n    throw new Error('Offset requires at least one coodinate to work with');\n  }\n\n  if (isArray(vertices) && typeof vertices[0] === 'number') {\n    this.vertices = vertices;\n  } else {\n    this.vertices = orientRings(vertices);\n    this._processContour(this.vertices, this._edges);\n  }\n\n  return this;\n};\n\n\n/**\n * Recursively process contour to create normals\n * @param  {*} contour\n * @param  {Array} edges\n */\nOffset.prototype._processContour = function(contour, edges) {\n  var i, len;\n  if (isArray(contour[0]) && typeof contour[0][0] === 'number') {\n    len = contour.length;\n    if (equals(contour[0], contour[len - 1])) {\n      len -= 1; // otherwise we get division by zero in normals\n    }\n    for (i = 0; i < len; i++) {\n      edges.push(new Edge(contour[i], contour[(i + 1) % len]));\n    }\n  } else {\n    for (i = 0, len = contour.length; i < len; i++) {\n      edges.push([]);\n      this._processContour(contour[i], edges[edges.length - 1]);\n    }\n  }\n};\n\n\n/**\n * @param  {Number} arcSegments\n * @return {Offset}\n */\nOffset.prototype.arcSegments = function(arcSegments) {\n  this._arcSegments = arcSegments;\n  return this;\n};\n\n\n/**\n * Validates if the first and last points repeat\n * TODO: check CCW\n *\n * @param  {Array.<Object>} vertices\n */\nOffset.prototype.validate = function(vertices) {\n  var len = vertices.length;\n  if (typeof vertices[0] === 'number') return [vertices];\n  if (vertices[0][0] === vertices[len - 1][0] &&\n    vertices[0][1] === vertices[len - 1][1]) {\n    if (len > 1) {\n      vertices = vertices.slice(0, len - 1);\n      this._closed = true;\n    }\n  }\n  return vertices;\n};\n\n\n/**\n * Creates arch between two edges\n *\n * @param  {Array.<Object>} vertices\n * @param  {Object}         center\n * @param  {Number}         radius\n * @param  {Object}         startVertex\n * @param  {Object}         endVertex\n * @param  {Number}         segments\n * @param  {Boolean}        outwards\n */\nOffset.prototype.createArc = function(vertices, center, radius, startVertex,\n    endVertex, segments, outwards) {\n\n  var PI2 = Math.PI * 2,\n      startAngle = Math.atan2(startVertex[1] - center[1], startVertex[0] - center[0]),\n      endAngle   = Math.atan2(endVertex[1] - center[1], endVertex[0] - center[0]);\n\n  // odd number please\n  if (segments % 2 === 0) {\n    segments -= 1;\n  }\n\n  if (startAngle < 0) {\n    startAngle += PI2;\n  }\n\n  if (endAngle < 0) {\n    endAngle += PI2;\n  }\n\n  var angle = ((startAngle > endAngle) ?\n               (startAngle - endAngle) :\n               (startAngle + PI2 - endAngle)),\n      segmentAngle = ((outwards) ? -angle : PI2 - angle) / segments;\n\n  vertices.push(startVertex);\n  for (var i = 1; i < segments; ++i) {\n    angle = startAngle + segmentAngle * i;\n    vertices.push([\n      center[0] + Math.cos(angle) * radius,\n      center[1] + Math.sin(angle) * radius\n    ]);\n  }\n  vertices.push(endVertex);\n  return vertices;\n};\n\n\n/**\n * @param  {Number}  dist\n * @param  {String=} units\n * @return {Offset}\n */\nOffset.prototype.distance = function(dist, units) {\n  this._distance = dist || 0;\n  return this;\n};\n\n\n/**\n * @static\n * @param  {Number}  degrees\n * @param  {String=} units\n * @return {Number}\n */\nOffset.degreesToUnits = function(degrees, units) {\n  switch (units) {\n    case 'miles':\n      degrees = degrees / 69.047;\n    break;\n    case 'feet':\n      degrees = degrees / 364568.0;\n      break;\n    case 'kilometers':\n      degrees = degrees / 111.12;\n      break;\n    case 'meters':\n    case 'metres':\n      degrees = degrees / 111120.0;\n      break;\n    case 'degrees':\n    case 'pixels':\n    default:\n      break;\n  }\n  return degrees;\n};\n\n\n/**\n * @param  {Array.<Object>} vertices\n * @return {Array.<Object>}\n */\nOffset.prototype.ensureLastPoint = function(vertices) {\n  if (!equals(vertices[0], vertices[vertices.length - 1])) {\n    vertices.push([\n      vertices[0][0],\n      vertices[0][1]\n    ]);\n  }\n  return vertices;\n};\n\n\n/**\n * Decides by the sign if it's a padding or a margin\n *\n * @param  {Number} dist\n * @return {Array.<Object>}\n */\nOffset.prototype.offset = function(dist) {\n  this.distance(dist);\n  return this._distance === 0 ? this.vertices :\n      (this._distance > 0 ? this.margin(this._distance) :\n        this.padding(-this._distance));\n};\n\n\n/**\n * @param  {Array.<Array.<Number>>} vertices\n * @param  {Array.<Number>}         pt1\n * @param  {Array.<Number>}         pt2\n * @param  {Number}                 dist\n * @return {Array.<Array.<Number>>}\n */\nOffset.prototype._offsetSegment = function(v1, v2, e1, dist) {\n  var vertices = [];\n  var offsets = [\n    e1.offset(e1._inNormal[0] * dist, e1._inNormal[1] * dist),\n    e1.inverseOffset(e1._outNormal[0] * dist, e1._outNormal[1] * dist)\n  ];\n\n  for (var i = 0, len = 2; i < len; i++) {\n    var thisEdge = offsets[i],\n        prevEdge = offsets[(i + len - 1) % len];\n    this.createArc(\n              vertices,\n              i === 0 ? v1 : v2, // edges[i].current, // p1 or p2\n              dist,\n              prevEdge.next,\n              thisEdge.current,\n              this._arcSegments,\n              true\n            );\n  }\n\n  return vertices;\n};\n\n\n/**\n * @param  {Number} dist\n * @return {Array.<Number>}\n */\nOffset.prototype.margin = function(dist) {\n  this.distance(dist);\n\n  if (typeof this.vertices[0] === 'number') { // point\n    return this.offsetPoint(this._distance);\n  }\n\n  if (dist === 0) return this.vertices;\n\n  var union = this.offsetLines(this._distance);\n  //return union;\n  union = martinez.union(this.vertices, union);\n  return orientRings(union);\n};\n\n\n/**\n * @param  {Number} dist\n * @return {Array.<Number>}\n */\nOffset.prototype.padding = function(dist) {\n  this.distance(dist);\n\n  if (this._distance === 0) return this.ensureLastPoint(this.vertices);\n  if (this.vertices.length === 2 && typeof this.vertices[0] === 'number') {\n    return this.vertices;\n  }\n\n  var union = this.offsetLines(this._distance);\n  var diff = martinez.diff(this.vertices, union);\n  return orientRings(diff);\n};\n\n\n/**\n * Creates margin polygon\n * @param  {Number} dist\n * @return {Array.<Object>}\n */\nOffset.prototype.offsetLine = function(dist) {\n  if (dist === 0) return this.vertices;\n  return orientRings(this.offsetLines(dist));\n};\n\n\n/**\n * Just offsets lines, no fill\n * @param  {Number} dist\n * @return {Array.<Array.<Array.<Number>>>}\n */\nOffset.prototype.offsetLines = function(dist) {\n  if (dist < 0) throw new Error('Cannot apply negative margin to the line');\n  var union;\n  this.distance(dist);\n  if (isArray(this.vertices[0]) && typeof this.vertices[0][0] !== 'number') {\n    for (var i = 0, len = this._edges.length; i < len; i++) {\n      union = (i === 0) ?\n        this.offsetContour(this.vertices[i], this._edges[i]):\n        martinez.union(union, this.offsetContour(this.vertices[i], this._edges[i]));\n    }\n  } else {\n    union = (this.vertices.length === 1) ?\n      this.offsetPoint() :\n      this.offsetContour(this.vertices, this._edges);\n  }\n\n  return union;\n};\n\n\n/**\n * @param  {Array.<Array.<Number>>|Array.<Array.<...>>} curve\n * @param  {Array.<Edge>|Array.<Array.<...>>} edges\n * @return {Polygon}\n */\nOffset.prototype.offsetContour = function(curve, edges) {\n  var union, i, len;\n  if (isArray(curve[0]) && typeof curve[0][0] === 'number') {\n    // we have 1 less edge than vertices\n    for (i = 0, len = curve.length - 1; i < len; i++) {\n      var segment = this.ensureLastPoint(\n        this._offsetSegment(curve[i], curve[i + 1], edges[i], this._distance)\n      );\n      union = (i === 0) ?\n                [this.ensureLastPoint(segment)] :\n                martinez.union(union, this.ensureLastPoint(segment));\n    }\n  } else {\n    for (i = 0, len = edges.length; i < len; i++) {\n      union = (i === 0) ?\n        this.offsetContour(curve[i], edges[i]) :\n        martinez.union(union, this.offsetContour(curve[i], edges[i]));\n    }\n  }\n  return union;\n};\n\n\n/**\n * @param  {Number} distance\n * @return {Array.<Array.<Number>}\n */\nOffset.prototype.offsetPoint = function(distance) {\n  this.distance(distance);\n  var vertices = this._arcSegments * 2;\n  var points   = [];\n  var center   = this.vertices;\n  var radius   = this._distance;\n  var angle    = 0;\n\n  if (vertices % 2 === 0) vertices++;\n\n  for (var i = 0; i < vertices; i++) {\n    angle += (2 * Math.PI / vertices); // counter-clockwise\n    points.push([\n      center[0] + (radius * Math.cos(angle)),\n      center[1] + (radius * Math.sin(angle))\n    ]);\n  }\n\n  return orientRings([this.ensureLastPoint(points)]);\n};\n\n\nOffset.orientRings = orientRings;\n\nmodule.exports = Offset;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/polygon-offset/src/offset.js\n ** module id = 24\n ** module chunks = 0 1\n **/","/**\n * Offset edge of the polygon\n *\n * @param  {Object} current\n * @param  {Object} next\n * @constructor\n */\nfunction Edge(current, next) {\n\n  /**\n   * @type {Object}\n   */\n  this.current = current;\n\n  /**\n   * @type {Object}\n   */\n  this.next = next;\n\n  /**\n   * @type {Object}\n   */\n  this._inNormal  = this.inwardsNormal();\n\n  /**\n   * @type {Object}\n   */\n  this._outNormal = this.outwardsNormal();\n}\n\n/**\n * Creates outwards normal\n * @return {Object}\n */\nEdge.prototype.outwardsNormal = function() {\n  var inwards = this.inwardsNormal();\n  return [\n    -inwards[0],\n    -inwards[1]\n  ];\n};\n\n/**\n * Creates inwards normal\n * @return {Object}\n */\nEdge.prototype.inwardsNormal = function() {\n  var dx = this.next[0] - this.current[0],\n      dy = this.next[1] - this.current[1],\n      edgeLength = Math.sqrt(dx * dx + dy * dy);\n\n  if (edgeLength === 0) throw new Error('Vertices overlap');\n\n  return [\n    -dy / edgeLength,\n     dx / edgeLength\n  ];\n};\n\n/**\n * Offsets the edge by dx, dy\n * @param  {Number} dx\n * @param  {Number} dy\n * @return {Edge}\n */\nEdge.prototype.offset = function(dx, dy) {\n  return Edge.offsetEdge(this.current, this.next, dx, dy);\n};\n\n\n/**\n * @param  {Number} dx\n * @param  {Number} dy\n * @return {Edge}\n */\nEdge.prototype.inverseOffset = function(dx, dy) {\n  return Edge.offsetEdge(this.next, this.current, dx, dy);\n};\n\n\n/**\n * @static\n * @param  {Array.<Number>} current\n * @param  {Array.<Number>} next\n * @param  {Number}         dx\n * @param  {Number}         dy\n * @return {Edge}\n */\nEdge.offsetEdge = function(current, next, dx, dy) {\n  return new Edge([\n    current[0] + dx,\n    current[1] + dy\n  ], [\n    next[0] + dx,\n    next[1] + dy\n  ]);\n};\n\n\n/**\n *\n * @return {Edge}\n */\nEdge.prototype.inverse = function () {\n  return new Edge(this.next, this.current);\n};\n\n\nmodule.exports = Edge;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/polygon-offset/src/edge.js\n ** module id = 25\n ** module chunks = 0 1\n **/","module.exports = require('./src/index');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/martinez-polygon-clipping/index.js\n ** module id = 26\n ** module chunks = 0 1\n **/","var INTERSECTION    = 0;\nvar UNION           = 1;\nvar DIFFERENCE      = 2;\nvar XOR             = 3;\n\nvar EMPTY           = [];\n\nvar edgeType        = require('./edge_type');\n\nvar Queue           = require('tinyqueue');\nvar Tree            = require('bintrees').RBTree;\nvar SweepEvent      = require('./sweep_event');\n\nvar compareEvents   = require('./compare_events');\nvar compareSegments = require('./compare_segments');\nvar intersection    = require('./segment_intersection');\nvar equals          = require('./equals');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// global.Tree = Tree;\n// global.compareSegments = compareSegments;\n// global.SweepEvent = SweepEvent;\n// global.signedArea = require('./signed_area');\n\n/**\n * @param  {<Array.<Number>} s1\n * @param  {<Array.<Number>} s2\n * @param  {Boolean}         isSubject\n * @param  {Queue}           eventQueue\n * @param  {Array.<Number>}  bbox\n */\nfunction processSegment(s1, s2, isSubject, depth, eventQueue, bbox) {\n  // Possible degenerate condition.\n  // if (equals(s1, s2)) return;\n\n  var e1 = new SweepEvent(s1, false, undefined, isSubject);\n  var e2 = new SweepEvent(s2, false, e1,        isSubject);\n  e1.otherEvent = e2;\n\n  e1.contourId = e2.contourId = depth;\n\n  if (compareEvents(e1, e2) > 0) {\n    e2.left = true;\n  } else {\n    e1.left = true;\n  }\n\n  bbox[0] = min(bbox[0], s1[0]);\n  bbox[1] = min(bbox[1], s1[1]);\n  bbox[2] = max(bbox[2], s1[0]);\n  bbox[3] = max(bbox[3], s1[1]);\n\n  // Pushing it so the queue is sorted from left to right,\n  // with object on the left having the highest priority.\n  eventQueue.push(e1);\n  eventQueue.push(e2);\n}\n\nvar contourId = 0;\n\nfunction processPolygon(polygon, isSubject, depth, queue, bbox) {\n  var i, len;\n  if (typeof polygon[0][0] === 'number') {\n    for (i = 0, len = polygon.length - 1; i < len; i++) {\n      processSegment(polygon[i], polygon[i + 1], isSubject, depth + 1, queue, bbox);\n    }\n  } else {\n    for (i = 0, len = polygon.length; i < len; i++) {\n      contourId++;\n      processPolygon(polygon[i], isSubject, contourId, queue, bbox);\n    }\n  }\n}\n\n\nfunction fillQueue(subject, clipping, sbbox, cbbox) {\n  var eventQueue = new Queue(null, compareEvents);\n  contourId = 0;\n\n  processPolygon(subject,  true,  0, eventQueue, sbbox);\n  processPolygon(clipping, false, 0, eventQueue, cbbox);\n\n  return eventQueue;\n}\n\n\nfunction computeFields(event, prev, sweepLine, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else if (event.isSubject === prev.isSubject) {\n    event.inOut      = !prev.inOut;\n    event.otherInOut = prev.otherInOut;\n\n  // previous line segment in sweepline belongs to the clipping polygon\n  } else {\n    event.inOut      = !prev.otherInOut;\n    event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n  }\n\n  // compute prevInResult field\n  if (prev) {\n    event.prevInResult = (!inResult(prev, operation) || prev.isVertical()) ?\n       prev.prevInResult : prev;\n  }\n  // check if the line segment belongs to the Boolean operation\n  event.inResult = inResult(event, operation);\n}\n\n\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case edgeType.NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          return (event.isSubject && event.otherInOut) ||\n                 (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n    case edgeType.SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case edgeType.DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case edgeType.NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nfunction possibleIntersection(se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n\n  var inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  var nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject){\n    if(se1.contourId === se2.contourId){\n    console.warn('Edges of the same polygon overlap',\n      se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  var events        = [];\n  var leftCoincide  = false;\n  var rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se1.type = edgeType.NON_CONTRIBUTING;\n    se2.type = (se1.inOut === se2.inOut) ?\n      edgeType.SAME_TRANSITION :\n      edgeType.DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[0].otherEvent, events[1].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nfunction divideSegment(se, p, queue)  {\n  var r = new SweepEvent(p, false, se,            se.isSubject);\n  var l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  if (equals(se.point, se.otherEvent.point)) {\n    console.warn('what is that?', se);\n  }\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n\n\n/* eslint-disable no-unused-vars, no-debugger */\nfunction iteratorEquals(it1, it2) {\n  return it1._cursor === it2._cursor;\n}\n\n\nfunction _renderSweepLine(sweepLine, pos, event) {\n  var map = window.map;\n  if (!map) return;\n  if (window.sws) window.sws.forEach(function(p) {\n    map.removeLayer(p);\n  });\n  window.sws = [];\n  sweepLine.each(function(e) {\n    var poly = L.polyline([e.point.slice().reverse(), e.otherEvent.point.slice().reverse()], { color: 'green' }).addTo(map);\n    window.sws.push(poly);\n  });\n\n  if (window.vt) map.removeLayer(window.vt);\n  var v = pos.slice();\n  var b = map.getBounds();\n  window.vt = L.polyline([[b.getNorth(), v[0]], [b.getSouth(), v[0]]], {color: 'green', weight: 1}).addTo(map);\n\n  if (window.ps) map.removeLayer(window.ps);\n  window.ps = L.polyline([event.point.slice().reverse(), event.otherEvent.point.slice().reverse()], {color: 'black', weight: 9, opacity: 0.4}).addTo(map);\n  debugger;\n}\n/* eslint-enable no-unused-vars, no-debugger */\n\n\nfunction subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  var sortedEvents = [];\n  var prev, next;\n\n  var sweepLine = new Tree(compareSegments);\n  var sortedEvents = [];\n\n  var rightbound = min(sbbox[2], cbbox[2]);\n\n  var prev, next;\n\n  while (eventQueue.length) {\n    var event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      sweepLine.insert(event);\n      // _renderSweepLine(sweepLine, event.point, event);\n\n      next = sweepLine.findIter(event);\n      prev = sweepLine.findIter(event);\n      event.iterator = sweepLine.findIter(event);\n\n      // Cannot get out of the tree what we just put there\n      if (!prev || !next) {\n        console.log('brute');\n        var iterators = findIterBrute(sweepLine);\n        prev = iterators[0];\n        next = iterators[1];\n      }\n\n      if (prev.data() !== sweepLine.min()) {\n        prev.prev();\n      } else {\n        prev = sweepLine.iterator(); //findIter(sweepLine.max());\n        prev.prev();\n        prev.next();\n      }\n      next.next();\n\n      computeFields(event, prev.data(), sweepLine, operation);\n\n      if (next.data()) {\n        if (possibleIntersection(event, next.data(), eventQueue) === 2) {\n          computeFields(event, prev.data(), sweepLine, operation);\n          computeFields(event, next.data(), sweepLine, operation);\n        }\n      }\n\n      if (prev.data()) {\n        if (possibleIntersection(prev.data(), event, eventQueue) === 2) {\n          var prevprev = sweepLine.findIter(prev.data());\n          if (prevprev.data() !== sweepLine.min()) {\n            prevprev.prev();\n          } else {\n            prevprev = sweepLine.findIter(sweepLine.max());\n            prevprev.next();\n          }\n          computeFields(prev.data(), prevprev.data(), sweepLine, operation);\n          computeFields(event, prev.data(), sweepLine, operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = sweepLine.findIter(event);\n      prev = sweepLine.findIter(event);\n\n      // _renderSweepLine(sweepLine, event.otherEvent.point, event);\n\n      if (!(prev && next)) continue;\n\n      if (prev.data() !== sweepLine.min()) {\n        prev.prev();\n      } else {\n        prev = sweepLine.iterator();\n        prev.prev(); // sweepLine.findIter(sweepLine.max());\n        prev.next();\n      }\n      next.next();\n      sweepLine.remove(event);\n\n      //_renderSweepLine(sweepLine, event.otherEvent.point, event);\n\n      if (next.data() && prev.data()) {\n        possibleIntersection(prev.data(), next.data(), eventQueue);\n      }\n    }\n  }\n  return sortedEvents;\n}\n\nfunction findIterBrute(sweepLine, q) {\n  var prev = sweepLine.iterator();\n  var next = sweepLine.iterator();\n  var it   = sweepLine.iterator(), data;\n  while((data = it.next()) !== null) {\n    prev.next();\n    next.next();\n    if (data === event) {\n      break;\n    }\n  }\n  return [prev, next];\n}\n\n\nfunction swap (arr, i, n) {\n  var temp = arr[i];\n  arr[i] = arr[n];\n  arr[n] = temp;\n}\n\n\nfunction changeOrientation(contour) {\n  return contour.reverse();\n}\n\n\nfunction isArray (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]';\n}\n\n\nfunction addHole(contour, idx) {\n  if (isArray(contour[0]) && !isArray(contour[0][0])) {\n    contour = [contour];\n  }\n  contour[idx] = [];\n  return contour;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  var event, i, len;\n  var resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  var sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        swap(resultEvents, i, i + 1);\n        sorted = false;\n      }\n    }\n  }\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    resultEvents[i].pos = i;\n  }\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (!resultEvents[i].left) {\n      var temp = resultEvents[i].pos;\n      resultEvents[i].pos = resultEvents[i].otherEvent.pos;\n      resultEvents[i].otherEvent.pos = temp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nfunction connectEdges(sortedEvents) {\n  var i, len;\n  var resultEvents = orderEvents(sortedEvents);\n\n\n  // \"false\"-filled array\n  var processed = Array(resultEvents.length);\n  var result = [];\n\n  var depth  = [];\n  var holeOf = [];\n  var isHole = {};\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (processed[i]) continue;\n\n    var contour = [];\n    result.push(contour);\n\n    var ringId = result.length - 1;\n    depth.push(0);\n    holeOf.push(-1);\n\n\n    if (resultEvents[i].prevInResult) {\n      var lowerContourId = resultEvents[i].prevInResult.contourId;\n      if (!resultEvents[i].prevInResult.resultInOut) {\n        addHole(result[lowerContourId], ringId);\n        holeOf[ringId] = lowerContourId;\n        depth[ringId]  = depth[lowerContourId] + 1;\n        isHole[ringId] = true;\n      } else if (isHole[lowerContourId]) {\n        addHole(result[holeOf[lowerContourId]], ringId);\n        holeOf[ringId] = holeOf[lowerContourId];\n        depth[ringId]  = depth[lowerContourId];\n        isHole[ringId] = true;\n      }\n    }\n\n    var pos = i;\n    var initial = resultEvents[i].point;\n    contour.push(initial);\n\n    while (pos >= i) {\n      processed[pos] = true;\n\n      if (resultEvents[pos].left) {\n        resultEvents[pos].resultInOut = false;\n        resultEvents[pos].contourId   = ringId;\n      } else {\n        resultEvents[pos].otherEvent.resultInOut = true;\n        resultEvents[pos].otherEvent.contourId   = ringId;\n      }\n\n      pos = resultEvents[pos].pos;\n      processed[pos] = true;\n\n      contour.push(resultEvents[pos].point);\n      pos = nextPos(pos, resultEvents, processed);\n    }\n\n    pos = pos === -1 ? i : pos;\n\n    processed[pos] = processed[resultEvents[pos].pos] = true;\n    resultEvents[pos].otherEvent.resultInOut = true;\n    resultEvents[pos].otherEvent.contourId   = ringId;\n\n\n    // depth is even\n    /* eslint-disable no-bitwise */\n    if (depth[ringId] & 1) {\n      changeOrientation(contour);\n    }\n    /* eslint-enable no-bitwise */\n  }\n\n  return result;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Array.<Boolean>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed) {\n  var newPos = pos + 1;\n  var length = resultEvents.length;\n  while (newPos < length &&\n         equals(resultEvents[newPos].point, resultEvents[pos].point)) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else {\n      newPos = newPos + 1;\n    }\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos]) {\n    newPos = newPos - 1;\n  }\n  return newPos;\n}\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  var result = null;\n  if (subject.length * clipping.length === 0) {\n    if (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION || operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  var result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION || operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nfunction boolean(subject, clipping, operation) {\n  var trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  var sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  var cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  var eventQueue = fillQueue(subject, clipping, sbbox, cbbox);\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  var sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  return connectEdges(sortedEvents);\n}\n\n\nmodule.exports = boolean;\n\n\nmodule.exports.union = function(subject, clipping) {\n  return boolean(subject, clipping, UNION);\n};\n\n\nmodule.exports.diff = function(subject, clipping) {\n  return boolean(subject, clipping, DIFFERENCE);\n};\n\n\nmodule.exports.xor = function(subject, clipping) {\n  return boolean(subject, clipping, XOR);\n};\n\n\nmodule.exports.intersection = function(subject, clipping) {\n  return boolean(subject, clipping, INTERSECTION);\n};\n\n\n/**\n * @enum {Number}\n */\nmodule.exports.operations = {\n  INTERSECTION: INTERSECTION,\n  DIFFERENCE:   DIFFERENCE,\n  UNION:        UNION,\n  XOR:          XOR\n};\n\n\n// for testing\nmodule.exports.fillQueue            = fillQueue;\nmodule.exports.computeFields        = computeFields;\nmodule.exports.subdivideSegments    = subdivideSegments;\nmodule.exports.divideSegment        = divideSegment;\nmodule.exports.possibleIntersection = possibleIntersection;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/martinez-polygon-clipping/src/index.js\n ** module id = 27\n ** module chunks = 0 1\n **/","module.exports = { \n  NORMAL:               0, \n  NON_CONTRIBUTING:     1, \n  SAME_TRANSITION:      2, \n  DIFFERENT_TRANSITION: 3\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/martinez-polygon-clipping/src/edge_type.js\n ** module id = 28\n ** module chunks = 0 1\n **/","'use strict';\n\nmodule.exports = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (data) for (var i = Math.floor(this.length / 2); i >= 0; i--) this._down(i);\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        var top = this.data[0];\n        this.data[0] = this.data[this.length - 1];\n        this.length--;\n        this.data.pop();\n        this._down(0);\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data,\n            compare = this.compare;\n\n        while (pos > 0) {\n            var parent = Math.floor((pos - 1) / 2);\n            if (compare(data[pos], data[parent]) < 0) {\n                swap(data, parent, pos);\n                pos = parent;\n\n            } else break;\n        }\n    },\n\n    _down: function (pos) {\n        var data = this.data,\n            compare = this.compare,\n            len = this.length;\n\n        while (true) {\n            var left = 2 * pos + 1,\n                right = left + 1,\n                min = pos;\n\n            if (left < len && compare(data[left], data[min]) < 0) min = left;\n            if (right < len && compare(data[right], data[min]) < 0) min = right;\n\n            if (min === pos) return;\n\n            swap(data, min, pos);\n            pos = min;\n        }\n    }\n};\n\nfunction swap(data, i, j) {\n    var tmp = data[i];\n    data[i] = data[j];\n    data[j] = tmp;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tinyqueue/index.js\n ** module id = 29\n ** module chunks = 0 1\n **/","module.exports = {\n    RBTree: require('./lib/rbtree'),\n    BinTree: require('./lib/bintree')\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bintrees/index.js\n ** module id = 30\n ** module chunks = 0 1\n **/","\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n    this.red = true;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction RBTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nRBTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nRBTree.prototype.insert = function(data) {\n    var ret = false;\n\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        ret = true;\n        this.size++;\n    }\n    else {\n        var head = new Node(undefined); // fake tree root\n\n        var dir = 0;\n        var last = 0;\n\n        // setup\n        var gp = null; // grandparent\n        var ggp = head; // grand-grand-parent\n        var p = null; // parent\n        var node = this._root;\n        ggp.right = this._root;\n\n        // search down\n        while(true) {\n            if(node === null) {\n                // insert new node at the bottom\n                node = new Node(data);\n                p.set_child(dir, node);\n                ret = true;\n                this.size++;\n            }\n            else if(is_red(node.left) && is_red(node.right)) {\n                // color flip\n                node.red = true;\n                node.left.red = false;\n                node.right.red = false;\n            }\n\n            // fix red violation\n            if(is_red(node) && is_red(p)) {\n                var dir2 = ggp.right === gp;\n\n                if(node === p.get_child(last)) {\n                    ggp.set_child(dir2, single_rotate(gp, !last));\n                }\n                else {\n                    ggp.set_child(dir2, double_rotate(gp, !last));\n                }\n            }\n\n            var cmp = this._comparator(node.data, data);\n\n            // stop if found\n            if(cmp === 0) {\n                break;\n            }\n\n            last = dir;\n            dir = cmp < 0;\n\n            // update helpers\n            if(gp !== null) {\n                ggp = gp;\n            }\n            gp = p;\n            p = node;\n            node = node.get_child(dir);\n        }\n\n        // update root\n        this._root = head.right;\n    }\n\n    // make root black\n    this._root.red = false;\n\n    return ret;\n};\n\n// returns true if removed, false if not found\nRBTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var gp = null; // grand parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        var last = dir;\n\n        // update helpers\n        gp = p;\n        p = node;\n        node = node.get_child(dir);\n\n        var cmp = this._comparator(data, node.data);\n\n        dir = cmp > 0;\n\n        // save found node\n        if(cmp === 0) {\n            found = node;\n        }\n\n        // push the red node down\n        if(!is_red(node) && !is_red(node.get_child(dir))) {\n            if(is_red(node.get_child(!dir))) {\n                var sr = single_rotate(node, dir);\n                p.set_child(last, sr);\n                p = sr;\n            }\n            else if(!is_red(node.get_child(!dir))) {\n                var sibling = p.get_child(!last);\n                if(sibling !== null) {\n                    if(!is_red(sibling.get_child(!last)) && !is_red(sibling.get_child(last))) {\n                        // color flip\n                        p.red = false;\n                        sibling.red = true;\n                        node.red = true;\n                    }\n                    else {\n                        var dir2 = gp.right === p;\n\n                        if(is_red(sibling.get_child(last))) {\n                            gp.set_child(dir2, double_rotate(p, last));\n                        }\n                        else if(is_red(sibling.get_child(!last))) {\n                            gp.set_child(dir2, single_rotate(p, last));\n                        }\n\n                        // ensure correct coloring\n                        var gpc = gp.get_child(dir2);\n                        gpc.red = true;\n                        node.red = true;\n                        gpc.left.red = false;\n                        gpc.right.red = false;\n                    }\n                }\n            }\n        }\n    }\n\n    // replace and remove if found\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n        this.size--;\n    }\n\n    // update root and make it black\n    this._root = head.right;\n    if(this._root !== null) {\n        this._root.red = false;\n    }\n\n    return found !== null;\n};\n\nfunction is_red(node) {\n    return node !== null && node.red;\n}\n\nfunction single_rotate(root, dir) {\n    var save = root.get_child(!dir);\n\n    root.set_child(!dir, save.get_child(dir));\n    save.set_child(dir, root);\n\n    root.red = true;\n    save.red = false;\n\n    return save;\n}\n\nfunction double_rotate(root, dir) {\n    root.set_child(!dir, single_rotate(root.get_child(!dir), !dir));\n    return single_rotate(root, dir);\n}\n\nmodule.exports = RBTree;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bintrees/lib/rbtree.js\n ** module id = 31\n ** module chunks = 0 1\n **/","\nfunction TreeBase() {}\n\n// removes all nodes from the tree\nTreeBase.prototype.clear = function() {\n    this._root = null;\n    this.size = 0;\n};\n\n// returns node data if found, null otherwise\nTreeBase.prototype.find = function(data) {\n    var res = this._root;\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            return res.data;\n        }\n        else {\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// returns iterator to node if found, null otherwise\nTreeBase.prototype.findIter = function(data) {\n    var res = this._root;\n    var iter = this.iterator();\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            iter._cursor = res;\n            return iter;\n        }\n        else {\n            iter._ancestors.push(res);\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// Returns an iterator to the tree node at or immediately after the item\nTreeBase.prototype.lowerBound = function(item) {\n    var cur = this._root;\n    var iter = this.iterator();\n    var cmp = this._comparator;\n\n    while(cur !== null) {\n        var c = cmp(item, cur.data);\n        if(c === 0) {\n            iter._cursor = cur;\n            return iter;\n        }\n        iter._ancestors.push(cur);\n        cur = cur.get_child(c > 0);\n    }\n\n    for(var i=iter._ancestors.length - 1; i >= 0; --i) {\n        cur = iter._ancestors[i];\n        if(cmp(item, cur.data) < 0) {\n            iter._cursor = cur;\n            iter._ancestors.length = i;\n            return iter;\n        }\n    }\n\n    iter._ancestors.length = 0;\n    return iter;\n};\n\n// Returns an iterator to the tree node immediately after the item\nTreeBase.prototype.upperBound = function(item) {\n    var iter = this.lowerBound(item);\n    var cmp = this._comparator;\n\n    while(iter.data() !== null && cmp(iter.data(), item) === 0) {\n        iter.next();\n    }\n\n    return iter;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.min = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.left !== null) {\n        res = res.left;\n    }\n\n    return res.data;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.max = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.right !== null) {\n        res = res.right;\n    }\n\n    return res.data;\n};\n\n// returns a null iterator\n// call next() or prev() to point to an element\nTreeBase.prototype.iterator = function() {\n    return new Iterator(this);\n};\n\n// calls cb on each node's data, in order\nTreeBase.prototype.each = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.next()) !== null) {\n        cb(data);\n    }\n};\n\n// calls cb on each node's data, in reverse order\nTreeBase.prototype.reach = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.prev()) !== null) {\n        cb(data);\n    }\n};\n\n\nfunction Iterator(tree) {\n    this._tree = tree;\n    this._ancestors = [];\n    this._cursor = null;\n}\n\nIterator.prototype.data = function() {\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns first node\n// otherwise, returns next node\nIterator.prototype.next = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._minNode(root);\n        }\n    }\n    else {\n        if(this._cursor.right === null) {\n            // no greater node in subtree, go up to parent\n            // if coming from a right child, continue up the stack\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.right === save);\n        }\n        else {\n            // get the next node from the subtree\n            this._ancestors.push(this._cursor);\n            this._minNode(this._cursor.right);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns last node\n// otherwise, returns previous node\nIterator.prototype.prev = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._maxNode(root);\n        }\n    }\n    else {\n        if(this._cursor.left === null) {\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.left === save);\n        }\n        else {\n            this._ancestors.push(this._cursor);\n            this._maxNode(this._cursor.left);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\nIterator.prototype._minNode = function(start) {\n    while(start.left !== null) {\n        this._ancestors.push(start);\n        start = start.left;\n    }\n    this._cursor = start;\n};\n\nIterator.prototype._maxNode = function(start) {\n    while(start.right !== null) {\n        this._ancestors.push(start);\n        start = start.right;\n    }\n    this._cursor = start;\n};\n\nmodule.exports = TreeBase;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bintrees/lib/treebase.js\n ** module id = 32\n ** module chunks = 0 1\n **/","\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction BinTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nBinTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nBinTree.prototype.insert = function(data) {\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        this.size++;\n        return true;\n    }\n\n    var dir = 0;\n\n    // setup\n    var p = null; // parent\n    var node = this._root;\n\n    // search down\n    while(true) {\n        if(node === null) {\n            // insert new node at the bottom\n            node = new Node(data);\n            p.set_child(dir, node);\n            ret = true;\n            this.size++;\n            return true;\n        }\n\n        // stop if found\n        if(this._comparator(node.data, data) === 0) {\n            return false;\n        }\n\n        dir = this._comparator(node.data, data) < 0;\n\n        // update helpers\n        p = node;\n        node = node.get_child(dir);\n    }\n};\n\n// returns true if removed, false if not found\nBinTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        p = node;\n        node = node.get_child(dir);\n        var cmp = this._comparator(data, node.data);\n        dir = cmp > 0;\n\n        if(cmp === 0) {\n            found = node;\n        }\n    }\n\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n\n        this._root = head.right;\n        this.size--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\nmodule.exports = BinTree;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bintrees/lib/bintree.js\n ** module id = 33\n ** module chunks = 0 1\n **/","var signedArea = require('./signed_area');\nvar EdgeType   = require('./edge_type');\n\n\n/**\n * Sweepline event\n *\n * @param {Array.<Number>}  point\n * @param {Boolean}         left\n * @param {SweepEvent=}     otherEvent\n * @param {Boolean}         isSubject\n * @param {Number}          edgeType\n */\nfunction SweepEvent(point, left, otherEvent, isSubject, edgeType) {\n\n  /**\n   * Is left endpoint?\n   * @type {Boolean}\n   */\n  this.left = left;\n\n  /**\n   * @type {Array.<Number>}\n   */\n  this.point = point;\n\n  /**\n   * Other edge reference\n   * @type {SweepEvent}\n   */\n  this.otherEvent = otherEvent;\n\n  /**\n   * Belongs to source or clipping polygon\n   * @type {Boolean}\n   */\n  this.isSubject = isSubject;\n\n  /**\n   * Edge contribution type\n   * @type {Number}\n   */\n  this.type = edgeType || EdgeType.NORMAL;\n\n\n  /**\n   * In-out transition for the sweepline crossing polygon\n   * @type {Boolean}\n   */\n  this.inOut = false;\n\n\n  /**\n   * @type {Boolean}\n   */\n  this.otherInOut = false;\n\n  /**\n   * Previous event in result?\n   * @type {SweepEvent}\n   */\n  this.prevInResult = null;\n\n  /**\n   * Does event belong to result?\n   * @type {Boolean}\n   */\n  this.inResult = false;\n\n\n  // connection step\n\n  /**\n   * @type {Boolean}\n   */\n  this.resultInOut = false;\n}\n\n\nSweepEvent.prototype = {\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow: function(p) {\n    return this.left ?\n      signedArea (this.point, this.otherEvent.point, p) > 0 :\n      signedArea (this.otherEvent.point, this.point, p) > 0;\n  },\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove: function(p) {\n    return !this.isBelow(p);\n  },\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical: function() {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n};\n\nmodule.exports = SweepEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/martinez-polygon-clipping/src/sweep_event.js\n ** module id = 34\n ** module chunks = 0 1\n **/","/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nmodule.exports = function signedArea(p0, p1, p2) {\n  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/martinez-polygon-clipping/src/signed_area.js\n ** module id = 35\n ** module chunks = 0 1\n **/","var signedArea = require('./signed_area');\n// var equals = require('./equals');\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nmodule.exports = function sweepEventsComp(e1, e2) {\n  var p1 = e1.point;\n  var p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n};\n\n\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea (p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  // uncomment this if you want to play with multipolygons\n  // if (e1.isSubject === e2.isSubject) {\n  //   if(equals(e1.point, e2.point) && e1.contourId === e2.contourId) {\n  //     return 0;\n  //   } else {\n  //     return e1.contourId > e2.contourId ? 1 : -1;\n  //   }\n  // }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/martinez-polygon-clipping/src/compare_events.js\n ** module id = 36\n ** module chunks = 0 1\n **/","var signedArea    = require('./signed_area');\nvar compareEvents = require('./compare_events');\nvar equals        = require('./equals');\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nmodule.exports = function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    if (equals(le1.point, le2.point)) {\n      if (equals(le1.otherEvent.point, le2.otherEvent.point)) {\n        return 0;\n      } else {\n        return le1.contourId > le2.contourId ? 1 : -1;\n      }\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/martinez-polygon-clipping/src/compare_segments.js\n ** module id = 37\n ** module chunks = 0 1\n **/","module.exports = function equals(p1, p2) {\n  return p1[0] === p2[0] && p1[1] === p2[1];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/martinez-polygon-clipping/src/equals.js\n ** module id = 38\n ** module chunks = 0 1\n **/","var EPSILON = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction krossProduct(a, b) {\n  return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nmodule.exports = function(a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  var va = [a2[0] - a1[0], a2[1] - a1[1]];\n  var vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  var e = [b1[0] - a1[0], b1[1] - a1[1]];\n  var kross = krossProduct(va, vb);\n  var sqrKross = kross * kross;\n  var sqrLenA = dotProduct(va, va);\n  var sqrLenB = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > EPSILON * sqrLenA * sqrLenB) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    var s = krossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    var t = krossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    return noEndpointTouch ? null : [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  var sqrLenE = dotProduct(e, e);\n  kross = krossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > EPSILON * sqrLenA * sqrLenE) {\n    // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  var sa = dotProduct(va, e) / sqrLenA;\n  var sb = sa + dotProduct(va, vb) / sqrLenA;\n  var smin = Math.min(sa, sb);\n  var smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va),\n    ];\n  }\n\n  return null;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/martinez-polygon-clipping/src/segment_intersection.js\n ** module id = 39\n ** module chunks = 0 1\n **/","/**\n * @param  {*} arr\n * @return {Boolean}\n */\nvar isArray = module.exports.isArray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]';\n};\n\n\n/**\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Boolean}\n */\nmodule.exports.equals = function equals(p1, p2) {\n  return p1[0] === p2[0] && p1[1] === p2[1];\n};\n\n\n/**\n * @param  {*}       coordinates\n * @param  {Number=} depth\n * @return {*}\n */\nmodule.exports.orientRings = function orientRings(coordinates, depth, isHole) {\n  depth = depth || 0;\n  var i, len;\n  if (isArray(coordinates) && typeof coordinates[0][0] === 'number') {\n    var area = 0;\n    var ring = coordinates;\n\n    for (i = 0, len = ring.length; i < len; i++) {\n      var pt1 = ring[i];\n      var pt2 = ring[(i + 1) % len];\n      area += pt1[0] * pt2[1];\n      area -= pt2[0] * pt1[1];\n    }\n    if ((!isHole && area > 0) || (isHole && area < 0)) {\n      ring.reverse();\n    }\n  } else {\n    for (i = 0, len = coordinates.length; i < len; i++) {\n      orientRings(coordinates[i], depth + 1, i > 0);\n    }\n  }\n\n  return coordinates;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/polygon-offset/src/utils.js\n ** module id = 40\n ** module chunks = 0 1\n **/","module.exports = function($,window){\n    return function(userOpts){\n        //====================== options verification ====================\n        var defaultOpts = {\n            image:\"./images/defaultPin.png\",\n            size:[30,30],\n            anchor:[15,30]\n        };\n        var optionCheckMap = {\n            image:[String,'string'],\n            size:[Array,'array'],\n            anchor:[Array,'array']\n        };\n        var opts = defaultOpts;\n        if(userOpts){\n            for(var key in userOpts){\n                if(optionCheckMap[key]){\n                    if(userOpts[key].constructor != optionCheckMap[key][0]){\n                        console.error('옵션 값(key:'+key+')의 타입이 잘못돼었습니다.'+\n                            (typeof userOpts[key])+' => '+optionCheckMap[key][1]+'로 바꾸어주세요');\n                    }\n                }else{\n                    printErrType('OPTION');\n                    console.error('사용할 수 없는 옵션 키 값('+key+')이 포함되어 있습니다.');\n                }\n            }\n            $.extend(opts,userOpts);\n        }\n\n        var self = {};\n        self.elem = $(\"<div></div>\").css({\n            \"position\":'absolute',\n            \"left\":-opts.anchor[0]+'px',\n            \"top\":-opts.anchor[1]+'px',\n            \"width\":opts.size[0]+'px',\n            \"height\":opts.size[1]+'px',\n            \"background-image\":\"url(\"+opts.image+\")\",\n            \"background-repeat\":\"no-repeat\",\n            \"background-size\":opts.size[0]+'px '+opts.size[1]+'px'\n        });\n        self.anchor = opts.anchor;\n        self.size = opts.size;\n        return self;\n\n        //==================== helpers ======================\n        function printErrType(type){\n            switch(type){\n                case 'OPTION':\n                    console.error('--- IndoorMap.icon() 옵션 에러 ---');\n                    break;\n                case 'LOAD':\n                    break;\n            }\n        }\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IndoorMap_icon.js\n ** module id = 41\n ** module chunks = 0 1\n **/","\nmodule.exports = function($,window,defaultIcon){\n    return function(position,userOpts){\n        var self = {};\n        //====================== options verification ====================\n        var defaultOpts = {\n            type: \"both\",\n            priority: 1,\n            icon:defaultIcon,\n            //floor: currentFloor (IndoorMap_core에서 정해준다)\n            html:\"<div style='color:#ff0000;'>테스트 마커</div>\",\n            align:\"center bottom\",\n            padding: 5\n        };\n        var optionCheckMap = {\n            id:[String,'string'],\n            type:[String,'string'],\n            priority:[Number,'number'],\n            floor:[String,'string'],\n            icon:[Object,'object'],\n            html:[String,'string'],\n            align:[String,'string'],\n            padding:[Number,'number'],\n            className:[String,'string'],\n            mouseover:[Function,'function'],\n            mouseout:[Function,'function'],\n            click:[Function,'function']\n        };\n\n        var opts = defaultOpts;\n\n        //==================== validate userOpts ====================\n        if(userOpts){\n            for(var key in userOpts){\n                if(optionCheckMap[key]){\n                    if(userOpts[key].constructor != optionCheckMap[key][0]){\n                        console.error('옵션 값(key:'+key+')의 타입이 잘못돼었습니다.'+\n                            (typeof userOpts[key])+'=>'+optionCheckMap[key][1]+'로 바꾸어주세요');\n                    }\n                }else{\n                    printErrType('OPTION');\n                    console.error('사용할 수 없는 옵션 키 값('+key+')이 포함되어 있습니다.');\n                }\n            }\n        }\n        $.extend(opts, userOpts);\n\n        //==================== vars ====================\n        self.position = position;\n        self.hidden = false; //used for reclustering\n        self.priority = opts.priority;\n        self.forceToShow = false; //for disable reclustering\n\n        var elemPosition = [0,0];\n        var $htmlElem = null;\n        var $iconElem = null;\n\n        //==================== create marker elem ====================\n        var elem = $(\"<div></div>\");\n        self.elem = elem;\n        elem.css({\n            position:'absolute',\n            whiteSpace:'nowrap'\n        });\n        if(opts.id){\n            elem.attr('id',opts.id);\n        }\n        if(opts.className){\n            elem.addClass(opts.className);\n        }\n        if(opts.mouseover){\n            elem.on('mouseover',function(){\n                opts.mouseover.apply(self,[self]);\n            });\n        }\n        if(opts.mouseout){\n            elem.on('mouseout', function(){\n                opts.mouseout.apply(self,[self]);\n            });\n        }\n        if(opts.click){\n            elem.on('click', function(){\n                opts.click.apply(self,[self]);\n            });\n        }\n\n        //==================== append html|icon to marker elem ====================\n        switch(opts.type){\n            case 'both':\n                appendIcon(elem,opts.icon.elem.clone(),opts.icon.anchor);\n                appendHTML(elem,opts.html,opts.align);\n                break;\n            case 'icon':\n                appendIcon(elem,opts.icon.elem.clone(),opts.icon.anchor);\n                break;\n            case 'html':\n                appendHTML(elem,opts.html,opts.align);\n                break;\n        }\n        function appendIcon($marker,$icon){\n            $iconElem = $icon;\n            $icon.hide();\n            $marker.append($icon);\n            $icon.show();\n        }\n\n        function appendHTML($marker,htmlStr){\n            if(htmlStr.match(/<([A-Z][A-Z0-9]*)\\b[^>]*>(.*?)<\\1>/i)){\n                //html tag\n                $htmlElem = $(htmlStr);\n            }else{\n                //plain text\n                $htmlElem = $(\"<div>\"+htmlStr+\"</div>\");\n            }\n            $htmlElem.css({\n                position:'relative',\n                'user-select':'none',\n                '-moz-user-select':'none',\n                'webkit-user-select':'none',\n                '-ms-user-select':'none',\n                'cursor':'default'\n            });\n            $marker.append($htmlElem);\n        }\n\n        //==================== alignment & reset boundary ====================\n        var relativeBoundary = {\n            x1:0,\n            x2:0,\n            y1:0,\n            y2:0\n        };\n        function resetRelativeBoundary(){\n            relativeBoundary = {x1:0,x2:0,y1:0,y2:0}\n        }\n        function recalculateRelativeBoundary(x1,x2,y1,y2){\n            var rb = relativeBoundary;\n            if(x1 && x1<rb.x1) rb.x1 = x1;\n            if(x2 && x2>rb.x2) rb.x2 = x2;\n            if(y1 && y1<rb.y1) rb.y1 = y1;\n            if(y2 && y2>rb.y2) rb.y2 = y2;\n        }\n        var horizontalAlign = null;\n        var verticalAlign = null;\n        self.resetAlign = function(){\n            if($htmlElem){\n                var htmlElemW = $htmlElem.width();\n                var htmlElemH = $htmlElem.height();\n                var iconSize = (opts.icon)? opts.icon.size:[0,0];\n                var iconAnchor = (opts.icon)? opts.icon.anchor:[0,0];\n\n                if(!(horizontalAlign && verticalAlign)){\n                    horizontalAlign = 'center';\n                    verticalAlign = 'bottom';\n                    if(opts.align){\n                        var splittedAlign = opts.align.split(' ');\n                        horizontalAlign = splittedAlign[0];\n                        verticalAlign = splittedAlign[1];\n                    }\n                    resetRelativeBoundary();\n                    recalculateRelativeBoundary(-iconAnchor[0],iconSize[0]-iconAnchor[0],-iconAnchor[1],iconSize[1]-iconAnchor[1]);\n                    switch(horizontalAlign){\n                        case 'left':\n                            $htmlElem.css({left:-htmlElemW+'px'});\n                            recalculateRelativeBoundary(-htmlElemW,0);\n                            break;\n                        case 'center':\n                            $htmlElem.css({left:-htmlElemW/2+'px'});\n                            recalculateRelativeBoundary(-htmlElemW/2,htmlElemW/2);\n                            break;\n                        case 'right':\n                            $htmlElem.css({left:0});\n                            recalculateRelativeBoundary(0,htmlElemW);\n                            break;\n                    }\n                    switch(verticalAlign){\n                        case 'top':\n                            $htmlElem.css({top:-iconAnchor[1]-opts.padding-htmlElemH+'px'});\n                            recalculateRelativeBoundary(null,null,-iconAnchor[1]-opts.padding-htmlElemH,null);\n                            break;\n                        case 'middle':\n                            $htmlElem.css({top:-htmlElemH/2+'px'});\n                            recalculateRelativeBoundary(null,null,-htmlElemH/2,htmlElemH/2);\n                            break;\n                        case 'bottom':\n                            $htmlElem.css({top:iconSize[1]-iconAnchor[1]+opts.padding+'px'});\n                            recalculateRelativeBoundary(null,null,iconSize[1]-iconAnchor[1]+opts.padding,iconSize[1]-iconAnchor[1]+opts.padding+htmlElemH);\n                            break;\n                    }\n                }\n            }\n        };\n        self.setClustering = function(enable){\n            if(enable){\n                self.forceToShow = false;\n            }else{\n                self.elem.show();\n                self.forceToShow = true;\n            }\n        };\n        self.getBoundary = function(){\n            return {\n                x1:elemPosition[0] + relativeBoundary.x1,\n                x2:elemPosition[0] + relativeBoundary.x2,\n                y1:elemPosition[1] + relativeBoundary.y1,\n                y2:elemPosition[1] + relativeBoundary.y2\n            };\n        };\n\n        self.$htmlElem = $htmlElem;\n        self.$iconElem = $iconElem;\n        \n        \n        \n        //==================== helpers ======================\n        function printErrType(type){\n            switch(type){\n                case 'OPTION':\n                    console.error('--- IndoorMap.setMarker() 옵션 에러 ---');\n                    break;\n                case 'LOAD':\n                    break;\n            }\n        }\n        self.repositionElem = function(point){\n            elemPosition[0] = point[0];\n            elemPosition[1] = point[1];\n            elem.css({\n                top:point[1]+'px',\n                left:point[0]+'px'\n            });\n        };\n\n        return self;\n    }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/IndoorMap_marker.js\n ** module id = 42\n ** module chunks = 0 1\n **/"],"sourceRoot":""}